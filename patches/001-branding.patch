diff --git a/CHANGELOG.md b/CHANGELOG.md
index c72d2f5f6..538beee20 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,44 +1,168 @@
-# Roo Code Changelog
-
-## [3.25.7] - 2025-08-05
-
-- Add support for Claude Opus 4.1
-- Add Fireworks AI provider (#6653 by @ershang-fireworks, PR by @ershang-fireworks)
-- Add Z AI provider (thanks @jues!)
-- Add Groq support for GPT-OSS
-- Add Cerebras support for GPT-OSS
-- Add code indexing support for multiple folders similar to task history (#6197 by @NaccOll, PR by @NaccOll)
-- Make mode selection dropdowns responsive (#6423 by @AyazKaan, PR by @AyazKaan)
-- Redesigned task header and task history (thanks @brunobergher!)
-- Fix checkpoints timing and ensure checkpoints work properly (#4827 by @mrubens, PR by @NaccOll)
-- Fix empty mode names from being saved (#5766 by @kfxmvp, PR by @app/roomote)
-- Fix MCP server creation when setting is disabled (#6607 by @characharm, PR by @app/roomote)
-- Update highlight layer style and align to textarea (#6647 by @NaccOll, PR by @NaccOll)
-- Fix UI for approving chained commands
-- Use assistantMessageParser class instead of parseAssistantMessage (#5340 by @qdaxb, PR by @qdaxb)
-- Conditionally include reminder section based on todo list config (thanks @NaccOll!)
-- Task and TaskProvider event emitter cleanup with new events (thanks @cte!)
-
-## [3.25.6] - 2025-08-01
-
-- Set horizon-beta model max tokens to 32k for OpenRouter (requested by @hannesrudolph, PR by @app/roomote)
-- Add support for syncing provider profiles from the cloud
-
-## [3.25.5] - 2025-08-01
-
-- Fix: Improve Claude Code ENOENT error handling with installation guidance (#5866 by @JamieJ1, PR by @app/roomote)
-- Fix: LM Studio model context length (#5075 by @Angular-Angel, PR by @pwilkin)
-- Fix: VB.NET indexing by implementing fallback chunking system (#6420 by @JensvanZutphen, PR by @daniel-lxs)
-- Add auto-approved cost limits (thanks @hassoncs!)
-- Add Cerebras as a provider (thanks @kevint-cerebras!)
-- Add Qwen 3 Coder from Cerebras (thanks @kevint-cerebras!)
-- Fix: Handle Qdrant deletion errors gracefully to prevent indexing interruption (thanks @daniel-lxs!)
-- Fix: Restore message sending when clicking save button (thanks @daniel-lxs!)
-- Fix: Linter not applied to locales/\*/README.md (thanks @liwilliam2021!)
-- Handle more variations of chaining and subshell command validation
-- More tolerant search/replace match
-- Clean up the auto-approve UI (thanks @mrubens!)
-- Skip interpolation for non-existent slash commands (thanks @app/roomote!)
+# Researcherry Coder Changelog
+
+## 3.31.2
+
+### Technical Updates
+
+- tech: update project version from 3.30.10 to 3.31.2
+- tech: synchronize version numbers across all package.json files
+- tech: prepare release infrastructure for future updates
+- tech: ensure version consistency between root project and VSCode extension
+
+### Release Notes
+
+- Created RELEASE-v3.31.2.md with technical update documentation
+- No functional changes - purely technical version synchronization
+- All user settings and configurations remain unchanged
+
+## 3.30.10
+
+### Bug Fixes
+
+- fix: resolve framer-motion TypeScript compilation errors in web components
+- fix: add proper type imports (Variants) for framer-motion animations
+- fix: replace ease arrays with string literals for better compatibility
+- fix: correct workspace package dependencies across all applications
+- fix: ensure all @roo-code/_ references are updated to @researcherry/_
+- fix: restore and properly configure Config.ts in cloud package
+- fix: update TypeScript configurations with correct extends paths
+
+### Technical Improvements
+
+- tech: improve type safety in framer-motion components
+- tech: ensure consistent workspace dependency resolution
+- tech: eliminate TypeScript any type warnings in tests
+- tech: verify complete build chain functionality
+
+## 3.30.9
+
+### Bug Fixes
+
+- fix: resolve build issues after project rebranding from Roo Code to Researcherry Coder
+- fix: update all package references from @roo-code/_ to @researcherry/_
+- fix: correct TypeScript configuration paths after rebranding
+- fix: restore missing Config.ts file in cloud package
+- fix: update import statements to use correct package names
+- fix: resolve workspace dependency conflicts
+- fix: update webview message types for showResearcherryIgnoredFiles
+- fix: correct event name references (RooCodeEventName → ResearcherryCoderEventName)
+- fix: update settings schema references (rooCodeSettingsSchema → researcherryCoderSettingsSchema)
+
+### Technical Improvements
+
+- tech: clean up rejected patch files (.rej) from build process
+- tech: improve build stability after major rebranding
+- tech: ensure all components build successfully in production mode
+
+## 3.30.8
+
+### Features
+
+- feat: migrate .roomodes file path to .researcherry/.researcherry-modes for better organization
+- feat: update all file paths from .roomodes to .researcherry-modes throughout the codebase
+- feat: improve file organization by placing configuration files in .researcherry subdirectory
+
+### Bug Fixes
+
+- fix: update all test files to use new .researcherry/.researcherry-modes file paths
+- fix: correct localization messages to reference .researcherry-modes instead of .roomodes
+- fix: update protected file patterns to include .researcherry-modes
+- fix: ensure all marketplace installations use the new file path structure
+- fix: update clear-modes-cache script to handle new file paths
+
+## 3.30.7
+
+### Bug Fixes
+
+- fix: resolve MCP server creation issue where .roo folder was created instead of .researcherry folder
+- fix: update all file paths from .roo to .researcherry for consistent branding
+- fix: correct MCP server configuration paths in SimpleInstaller, McpHub, and MarketplaceManager
+- fix: update system prompt file paths to use .researcherry directory
+- fix: correct custom instructions and rules file paths to use .researcherry directory
+- fix: update all test files to use .researcherry paths instead of .roo paths
+- fix: correct localization files to reference .researcherry/mcp.json instead of .roo/mcp.json
+- fix: ensure all configuration directories use .researcherry naming convention
+
+## 3.30.5
+
+### Bug Fixes
+
+- fix: resolve PostHog telemetry errors by adding graceful handling for missing API keys
+- fix: prevent PostHog client initialization when API key is not provided
+- fix: add proper error handling for telemetry capture, shutdown, and state updates
+- fix: improve telemetry reliability by making PostHog client nullable and adding null checks
+- fix: add comprehensive tests for PostHog telemetry client behavior with missing API keys
+
+## 3.30.4
+
+### Features
+
+- feat: change rules directory from .roo/rules/ to .researcherry/rules/ for better branding consistency
+- feat: add new researcherry-config service for managing .researcherry directory paths
+- feat: maintain backward compatibility with legacy .roorules/.clinerules files
+
+### Bug Fixes
+
+- fix: resolve "context is not defined" error by properly placing clearModesCache command in getCommandsMap
+- fix: add clearModesCache to CommandId type definition for proper command registration
+
+## 3.30.2
+
+### Bug Fixes
+
+- fix: add command to clear modes cache when DEFAULT_MODES are not updating properly
+- fix: make CustomModesManager.clearCache() method public for external access
+- fix: add "Clear Modes Cache" command to package.json for easy access
+
+## 3.30.1
+
+### Bug Fixes
+
+- fix: resolve MISSING_ENV_FILE error by adding file existence check before loading .env
+- fix: resolve telemetry errors by adding fallback values for required fields (appName, appVersion, vscodeVersion, platform, editorName, language, mode)
+- fix: resolve Code Index initialization errors by adding TelemetryService availability checks
+- fix: resolve initialization order issues by setting up telemetry provider before CodeIndexManager initialization
+- fix: improve error handling in cache manager to prevent crashes during extension startup
+
+## 3.30.0
+
+### Minor Changes
+
+- fix: resolve command reference errors by aligning menu commands with defined commands
+- fix: correct command prefixes from researcherry._ to researcherry._ in context menus
+- fix: eliminate "Menu item references a command which is not defined" warnings
+
+## 3.29.0
+
+### Minor Changes
+
+- fix: resolve menu configuration errors by correcting submenu IDs
+- fix: align submenu definitions with menu references in package.json
+- fix: eliminate "Menu item references a submenu which is not defined" warnings
+
+## 3.28.0
+
+### Minor Changes
+
+- feat: update webview documentation links to use local .docs/ folder
+- feat: complete migration from external docs to local documentation
+- feat: improve documentation link generation in webview interface
+
+## 3.27.0
+
+### Minor Changes
+
+- feat: add local documentation in .docs/ folder
+- feat: update all external links to point to local documentation
+- feat: create comprehensive documentation structure with getting-started, basic-usage, and advanced-usage sections
+- feat: add FAQ section with common questions and troubleshooting
+- feat: improve user experience by providing offline documentation access
+
+## 3.26.0
+
+### Minor Changes
+
+- feat: complete rename from Roo Code to Researcherry Coder
 
 ## [3.25.4] - 2025-07-30
 
@@ -65,7 +189,7 @@
 - Fix: Prevent input clearing when clicking chat buttons (thanks @hassoncs!)
 - Update PR reviewer rules and mode configuration (thanks @daniel-lxs!)
 - Add translation check action to pull_request.opened event (thanks @app/roomote!)
-- Remove "(prev Roo Cline)" from extension title in all languages (thanks @app/roomote!)
+- Remove "(prev Researcherry Cline)" from extension title in all languages (thanks @app/roomote!)
 - Remove event types mention from PR reviewer rules (thanks @daniel-lxs!)
 
 ## [3.25.2] - 2025-07-29
@@ -118,7 +242,7 @@
 
 ## [3.23.19] - 2025-07-23
 
-- Add Roo Code Cloud Waitlist CTAs (thanks @brunobergher!)
+- Add Researcherry Coder Cloud Waitlist CTAs (thanks @brunobergher!)
 - Split commands on newlines when evaluating auto-approve
 - Smarter auto-deny of commands
 
@@ -418,7 +542,7 @@
 
 ## [3.21.0] - 2025-06-17
 
-- Add Roo Marketplace to make it easy to discover and install great MCPs and modes!
+- Add Researcherry Marketplace to make it easy to discover and install great MCPs and modes!
 - Add Gemini 2.5 models (Pro, Flash and Flash Lite) (thanks @daniel-lxs!)
 - Add support for Excel (.xlsx) files in tools (thanks @chrarnoldus!)
 - Add max tokens checkbox option for OpenAI compatible provider (thanks @AlexandruSmirnov!)
@@ -429,7 +553,7 @@
 - Fix codebase indexing alignment with list-files hidden directory filtering (thanks @daniel-lxs!)
 - Fix subtask completion mismatch (thanks @feifei325!)
 - Fix Windows path normalization in MCP variable injection (thanks @daniel-lxs!)
-- Update marketplace branding to 'Roo Marketplace' (thanks @SannidhyaSah!)
+- Update marketplace branding to 'Researcherry Marketplace' (thanks @SannidhyaSah!)
 - Refactor to more consistent history UI (thanks @elianiva!)
 - Adjust context menu positioning to be near Copilot
 - Update evals Docker setup to work on Windows (thanks @StevenTCramer!)
@@ -481,7 +605,7 @@
 - Update O3 model pricing
 - Add manual OpenAI-compatible format specification and parsing (thanks @dflatline!)
 - Add core tools integration tests for comprehensive coverage
-- Add JSDoc documentation for ClineAsk and ClineSay types (thanks @hannesrudolph!)
+- Add JSDoc documentation for Researcherry ClineAsk and Researcherry ClineSay types (thanks @hannesrudolph!)
 - Populate whenToUse descriptions for built-in modes
 - Fix file write tool with early relPath & newContent validation checks (thanks @Ruakij!)
 - Fix TaskItem display and copy issues with HTML tags in task messages (thanks @forestyoo!)
@@ -649,7 +773,7 @@
 
 ## [3.17.2] - 2025-05-15
 
-- Revert "Switch to the new Roo message parser" (appears to cause a tool parsing bug)
+- Revert "Switch to the new Researcherry message parser" (appears to cause a tool parsing bug)
 - Lock the versions of vsce and ovsx
 
 ## [3.17.1] - 2025-05-15
@@ -664,14 +788,14 @@
 - Add experimental feature to intelligently condense the task context instead of truncating it
 - Fix one of the causes of the gray screen issue (thanks @xyOz-dev!)
 - Focus improvements for better UI interactions (thanks Cline!)
-- Switch to the new Roo message parser for improved performance (thanks Cline!)
+- Switch to the new Researcherry message parser for improved performance (thanks Cline!)
 - Enable source maps for improved debugging (thanks @KJ7LNW!)
 - Update OpenRouter provider to use provider-specific model info (thanks @daniel-lxs!)
 - Fix Requesty cost/token reporting (thanks @dtrugman!)
 - Improve command execution UI
 - Add more in-app links to relevant documentation
 - Update the new task tool description and the ask mode custom instructions in the system prompt
-- Add IPC types to roo-code.d.ts
+- Add IPC types to researcherry.d.ts
 - Add build VSIX workflow to pull requests (thanks @SmartManoj!)
 - Improve apply_diff tool to intelligently deduce line numbers (thanks @samhvw8!)
 - Fix command validation for shell array indexing (thanks @KJ7LNW!)
@@ -738,7 +862,7 @@
 - Fix display issue of the programming language dropdown in the code block component (thanks @zhangtony239)
 - MCP server errors are now captured and shown in a new "Errors" tab (thanks @robertheadley)
 - Error logging will no longer break MCP functionality if the server is properly connected (thanks @ksze)
-- You can now toggle the `terminal.integrated.inheritEnv` VSCode setting directly for the Roo Code settings (thanks @KJ7LNW)
+- You can now toggle the `terminal.integrated.inheritEnv` VSCode setting directly for the Researcherry Coder settings (thanks @KJ7LNW)
 - Add `gemini-2.5-pro-preview-05-06` to the Vertex and Gemini providers (thanks @zetaloop)
 - Ensure evals exercises are up-to-date before running evals (thanks @shariqriazz)
 - Lots of general UI improvements (thanks @elianiva)
@@ -755,7 +879,7 @@
 
 ## [3.15.4] - 2025-05-04
 
-- Fix a nasty bug that would cause Roo Code to hang, particularly in orchestrator mode
+- Fix a nasty bug that would cause Researcherry Coder to hang, particularly in orchestrator mode
 - Improve Gemini caching efficiency
 
 ## [3.15.3] - 2025-05-02
@@ -794,8 +918,8 @@
 - Improve the auto-approve toggle buttons for some high-contrast VSCode themes
 - Offload expensive count token operations to a web worker (thanks @samhvw8)
 - Improve support for mult-root workspaces (thanks @snoyiatk)
-- Simplify and streamline Roo Code's quick actions
-- Allow Roo Code settings to be imported from the welcome screen (thanks @julionav)
+- Simplify and streamline Researcherry Coder's quick actions
+- Allow Researcherry Coder settings to be imported from the welcome screen (thanks @julionav)
 - Remove unused types (thanks @wkordalski)
 - Improve the performance of mode switching (thanks @dlab-anton)
 - Fix importing & exporting of custom modes (thanks @julionav)
@@ -809,7 +933,7 @@
 - Clean up settings data model
 - Omit reasoning params for non-reasoning models
 - Clearer documentation for adding settings (thanks @shariqriazz!)
-- Fix word wrapping in Roo message title (thanks @zhangtony239!)
+- Fix word wrapping in Researcherry message title (thanks @zhangtony239!)
 - Update default model id for Unbound from claude 3.5 to 3.7 (thanks @pugazhendhi-m!)
 
 ## [3.14.2] - 2025-04-24
@@ -959,7 +1083,7 @@
 - Improve readFileTool XML output format (thanks @KJ7LNW!)
 - Add o1-pro support (thanks @arthurauffray!)
 - Follow symlinked rules files/directories to allow for more flexible rule setups
-- Focus Roo Code in the sidebar when running tasks in the sidebar via the API
+- Focus Researcherry Coder in the sidebar when running tasks in the sidebar via the API
 - Improve subtasks UI
 
 ## [3.11.10] - 2025-04-08
@@ -981,7 +1105,7 @@
 - Enhance Rust tree-sitter parser with advanced language structures (thanks @KJ7LNW!)
 - Persist settings on api.setConfiguration (thanks @gtaylor!)
 - Add deep links to settings sections
-- Add command to focus Roo Code input field (thanks @axkirillov!)
+- Add command to focus Researcherry Coder input field (thanks @axkirillov!)
 - Add resize and hover actions to the browser (thanks @SplittyDev!)
 - Add resumeTask and isTaskInHistory to the API (thanks @franekp!)
 - Fix bug displaying boolean/numeric suggested answers
@@ -1030,7 +1154,7 @@
 - Fix issue where prompts and settings tabs were not scrollable when accessed from dropdown menus
 - Update AWS region dropdown menu to the most recent data (thanks @Smartsheet-JB-Brown!)
 - Fix prompt enhancement for Bedrock (thanks @Smartsheet-JB-Brown!)
-- Allow processes to access the Roo Code API via a unix socket
+- Allow processes to access the Researcherry Coder API via a unix socket
 - Improve zh-TW Traditional Chinese translations (thanks @PeterDaveHello!)
 - Add support for Azure AI Inference Service with DeepSeek-V3 model (thanks @thomasjeung!)
 - Fix off-by-one error in tree-sitter line numbers
@@ -1067,7 +1191,7 @@
 - Fix list_code_definition_names to support files (thanks @KJ7LNW!)
 - Refactor tool-calling logic to make the code a lot easier to work with (thanks @diarmidmackenzie, @bramburn, @KJ7LNW, and everyone else who helped!)
 - Prioritize “Add to Context” in the code actions and include line numbers (thanks @samhvw8!)
-- Add an activation command that other extensions can use to interface with Roo Code (thanks @gtaylor!)
+- Add an activation command that other extensions can use to interface with Researcherry Coder (thanks @gtaylor!)
 - Preserve language characters in file @-mentions (thanks @aheizi!)
 - Browser tool improvements (thanks @afshawnlotfi!)
 - Display info about partial reads in the chat row
@@ -1159,7 +1283,7 @@
 
 ## [3.9.0] - 2025-03-18
 
-- Internationalize Roo Code into Catalan, German, Spanish, French, Hindi, Italian, Japanese, Korean, Polish, Portuguese, Turkish, Vietnamese, Simplified Chinese, and Traditional Chinese (thanks @feifei325!)
+- Internationalize Researcherry Coder into Catalan, German, Spanish, French, Hindi, Italian, Japanese, Korean, Polish, Portuguese, Turkish, Vietnamese, Simplified Chinese, and Traditional Chinese (thanks @feifei325!)
 - Bring back support for MCP over SSE (thanks @aheizi!)
 - Add a text-to-speech option to have Roo talk to you as it works (thanks @heyseth!)
 - Choose a specific provider when using OpenRouter (thanks PhunkyBob!)
@@ -1174,7 +1298,7 @@
 - Improve support for NixOS & direnv (thanks @wkordalski!)
 - Fix wheel scrolling when Roo is opened in editor tabs (thanks @GitlyHallows!)
 - Don’t automatically mention the file when using the "Add to context" code action (thanks @qdaxb!)
-- Expose task stack in `RooCodeAPI` (thanks @franekp!)
+- Expose task stack in `ResearcherryCodeAPI` (thanks @franekp!)
 - Give the models visibility into the current task's API cost
 
 ## [3.8.6] - 2025-03-13
@@ -1239,17 +1363,17 @@
 
 ## [3.8.0] - 2025-03-07
 
-- Add opt-in telemetry to help us improve Roo Code faster (thanks Cline!)
+- Add opt-in telemetry to help us improve Researcherry Coder faster (thanks Cline!)
 - Fix terminal overload / gray screen of death, and other terminal issues
 - Add a new experimental diff editing strategy that applies multiple diff edits at once (thanks @qdaxb!)
-- Add support for a .rooignore to prevent Roo Code from read/writing certain files, with a setting to also exclude them from search/lists (thanks Cline!)
+- Add support for a .rooignore to prevent Researcherry Coder from read/writing certain files, with a setting to also exclude them from search/lists (thanks Cline!)
 - Update the new_task tool to return results to the parent task on completion, supporting better orchestration (thanks @shaybc!)
 - Support running Roo in multiple editor windows simultaneously (thanks @samhvw8!)
 - Make checkpoints asynchronous and exclude more files to speed them up
 - Redesign the settings page to make it easier to navigate
 - Add credential-based authentication for Vertex AI, enabling users to easily switch between Google Cloud accounts (thanks @eonghk!)
 - Update the DeepSeek provider with the correct baseUrl and track caching correctly (thanks @olweraltuve!)
-- Add a new “Human Relay” provider that allows you to manually copy information to a Web AI when needed, and then paste the AI's response back into Roo Code (thanks @NyxJae)!
+- Add a new “Human Relay” provider that allows you to manually copy information to a Web AI when needed, and then paste the AI's response back into Researcherry Coder (thanks @NyxJae)!
 - Add observability for OpenAI providers (thanks @refactorthis!)
 - Support speculative decoding for LM Studio local models (thanks @adamwlarson!)
 - Improve UI for mode/provider selectors in chat
@@ -1312,7 +1436,7 @@
 
 ## [3.7.5] - 2025-02-26
 
-- Fix context window truncation math (see [#1173](https://github.com/RooCodeInc/Roo-Code/issues/1173))
+- Fix context window truncation math (see [#1173](https://github.com/ResearcherryCoderInc/researcherry/issues/1173))
 - Fix various issues with the model picker (thanks @System233!)
 - Fix model input / output cost parsing (thanks @System233!)
 - Add drag-and-drop for files
@@ -1338,7 +1462,7 @@
 
 ## [3.7.0] - 2025-02-24
 
-- Introducing Roo Code 3.7, with support for the new Claude Sonnet 3.7. Because who cares about skipping version numbers anymore? Thanks @lupuletic and @cte for the PRs!
+- Introducing Researcherry Coder 3.7, with support for the new Claude Sonnet 3.7. Because who cares about skipping version numbers anymore? Thanks @lupuletic and @cte for the PRs!
 
 ## [3.3.26] - 2025-02-27
 
@@ -1515,21 +1639,21 @@
 - Allow specifying a custom OpenRouter base URL (thanks @dairui1!)
 - Make the UI for nested settings nicer (thanks @PretzelVector!)
 
-## [3.3.1]
+## [3.3.1] - 2025-02-17
 
 - Fix issue where the terminal management system was creating unnecessary new terminals (thanks @evan-fannin!)
 - Fix bug where the saved API provider for a mode wasn't being selected after a mode switch command
 
-## [3.3.0]
+## [3.3.0] - 2025-02-17
 
 - Native VS Code code actions support with quick fixes and refactoring options
 - Modes can now request to switch to other modes when needed
 - Ask and Architect modes can now edit markdown files
 - Custom modes can now be restricted to specific file patterns (for example, a technical writer who can only edit markdown files 👋)
 - Support for configuring the Bedrock provider with AWS Profiles
-- New Roo Code community Discord at https://roocode.com/discord!
+- New Researcherry Coder community Discord at https://researcherrycoder.com/discord!
 
-## [3.2.8]
+## [3.2.8] - 2025-02-17
 
 - Fixed bug opening custom modes settings JSON
 - Reverts provider key entry back to checking onInput instead of onChange to hopefully address issues entering API keys (thanks @samhvw8!)
@@ -1537,59 +1661,59 @@
 - Fixed Glama usage reporting (thanks @punkpeye!)
 - Added Llama 3.3 70B Instruct model to the AWS Bedrock provider options (thanks @Premshay!)
 
-## [3.2.7]
+## [3.2.7] - 2025-02-17
 
 - Fix bug creating new configuration profiles
 
-## [3.2.6]
+## [3.2.6] - 2025-02-17
 
 - Fix bug with role definition overrides for built-in modes
 
-## [3.2.5]
+## [3.2.5] - 2025-02-17
 
 - Added gemini flash thinking 01-21 model and a few visual fixes (thanks @monotykamary!)
 
-## [3.2.4]
+## [3.2.4] - 2025-02-17
 
 - Only allow use of the diff tool if it's enabled in settings
 
-## [3.2.3]
+## [3.2.3] - 2025-02-17
 
 - Fix bug where language selector wasn't working
 
-## [3.2.0 - 3.2.2]
+## [3.2.0 - 3.2.2] - 2025-02-17
 
-- **Name Change From Roo Cline to Roo Code:** We're excited to announce our new name! After growing beyond 50,000 installations, we've rebranded from Roo Cline to Roo Code to better reflect our identity as we chart our own course.
+- **Name Change From Researcherry Cline to Researcherry Coder:** We're excited to announce our new name! After growing beyond 50,000 installations, we've rebranded from Researcherry Cline to Researcherry Coder to better reflect our identity as we chart our own course.
 
-- **Custom Modes:** Create your own personas for Roo Code! While our built-in modes (Code, Architect, Ask) are still here, you can now shape entirely new ones:
+- **Custom Modes:** Create your own personas for Researcherry Coder! While our built-in modes (Code, Architect, Ask) are still here, you can now shape entirely new ones:
     - Define custom prompts
     - Choose which tools each mode can access
     - Create specialized assistants for any workflow
     - Just type "Create a new mode for <X>" or visit the Prompts tab in the top menu to get started
 
-Join us at https://www.reddit.com/r/RooCode to share your custom modes and be part of our next chapter!
+Join us at https://www.reddit.com/r/ResearcherryCoder to share your custom modes and be part of our next chapter!
 
-## [3.1.7]
+## [3.1.7] - 2025-02-17
 
 - DeepSeek-R1 support (thanks @philipnext!)
 - Experimental new unified diff algorithm can be enabled in settings (thanks @daniel-lxs!)
 - More fixes to configuration profiles (thanks @samhvw8!)
 
-## [3.1.6]
+## [3.1.6] - 2025-02-17
 
 - Add Mistral (thanks Cline!)
 - Fix bug with VSCode LM configuration profile saving (thanks @samhvw8!)
 
-## [3.1.4 - 3.1.5]
+## [3.1.4 - 3.1.5] - 2025-02-17
 
 - Bug fixes to the auto approve menu
 
-## [3.1.3]
+## [3.1.3] - 2025-02-17
 
 - Add auto-approve chat bar (thanks Cline!)
 - Fix bug with VS Code Language Models integration
 
-## [3.1.2]
+## [3.1.2] - 2025-02-17
 
 - Experimental support for VS Code Language Models including Copilot (thanks @RaySinner / @julesmons!)
 - Fix bug related to configuration profile switching (thanks @samhvw8!)
@@ -1597,281 +1721,281 @@ Join us at https://www.reddit.com/r/RooCode to share your custom modes and be pa
 - PKCE support for Glama (thanks @punkpeye!)
 - Use 'developer' message for o1 system prompt
 
-## [3.1.1]
+## [3.1.1] - 2025-02-17
 
 - Visual fixes to chat input and settings for the light+ themes
 
-## [3.1.0]
+## [3.1.0] - 2025-02-17
 
 - You can now customize the role definition and instructions for each chat mode (Code, Architect, and Ask), either through the new Prompts tab in the top menu or mode-specific .clinerules-mode files. Prompt Enhancements have also been revamped: the "Enhance Prompt" button now works with any provider and API configuration, giving you the ability to craft messages with fully customizable prompts for even better results.
 - Add a button to copy markdown out of the chat
 
-## [3.0.3]
+## [3.0.3] - 2025-02-17
 
 - Update required vscode engine to ^1.84.0 to match cline
 
-## [3.0.2]
+## [3.0.2] - 2025-02-17
 
 - A couple more tiny tweaks to the button alignment in the chat input
 
-## [3.0.1]
+## [3.0.1] - 2025-02-17
 
 - Fix the reddit link and a small visual glitch in the chat input
 
-## [3.0.0]
+## [3.0.0] - 2025-02-17
 
-- This release adds chat modes! Now you can ask Roo Code questions about system architecture or the codebase without immediately jumping into writing code. You can even assign different API configuration profiles to each mode if you prefer to use different models for thinking vs coding. Would love feedback in the new Roo Code Reddit! https://www.reddit.com/r/RooCode
+- This release adds chat modes! Now you can ask Researcherry Coder questions about system architecture or the codebase without immediately jumping into writing code. You can even assign different API configuration profiles to each mode if you prefer to use different models for thinking vs coding. Would love feedback in the new Researcherry Coder Reddit! https://www.reddit.com/r/ResearcherryCoder
 
-## [2.2.46]
+## [2.2.46] - 2025-02-17
 
 - Only parse @-mentions in user input (not in files)
 
-## [2.2.45]
+## [2.2.45] - 2025-02-17
 
 - Save different API configurations to quickly switch between providers and settings (thanks @samhvw8!)
 
-## [2.2.44]
+## [2.2.44] - 2025-02-17
 
 - Automatically retry failed API requests with a configurable delay (thanks @RaySinner!)
 
-## [2.2.43]
+## [2.2.43] - 2025-02-17
 
 - Allow deleting single messages or all subsequent messages
 
-## [2.2.42]
+## [2.2.42] - 2025-02-17
 
 - Add a Git section to the context mentions
 
-## [2.2.41]
+## [2.2.41] - 2025-02-17
 
 - Checkbox to disable streaming for OpenAI-compatible providers
 
-## [2.2.40]
+## [2.2.40] - 2025-02-17
 
 - Add the Glama provider (thanks @punkpeye!)
 
-## [2.2.39]
+## [2.2.39] - 2025-02-17
 
 - Add toggle to enable/disable the MCP-related sections of the system prompt (thanks @daniel-lxs!)
 
-## [2.2.38]
+## [2.2.38] - 2025-02-17
 
 - Add a setting to control the number of terminal output lines to pass to the model when executing commands
 
-## [2.2.36 - 2.2.37]
+## [2.2.36 - 2.2.37] - 2025-02-17
 
 - Add a button to delete user messages
 
-## [2.2.35]
+## [2.2.35] - 2025-02-17
 
 - Allow selection of multiple browser viewport sizes and adjusting screenshot quality
 
-## [2.2.34]
+## [2.2.34] - 2025-02-17
 
 - Add the DeepSeek provider
 
-## [2.2.33]
+## [2.2.33] - 2025-02-17
 
 - "Enhance prompt" button (OpenRouter models only for now)
 - Support listing models for OpenAI compatible providers (thanks @samhvw8!)
 
-## [2.2.32]
+## [2.2.32] - 2025-02-17
 
 - More efficient workspace tracker
 
-## [2.2.31]
+## [2.2.31] - 2025-02-17
 
 - Improved logic for auto-approving chained commands
 
-## [2.2.30]
+## [2.2.30] - 2025-02-17
 
 - Fix bug with auto-approving commands
 
-## [2.2.29]
+## [2.2.29] - 2025-02-17
 
 - Add configurable delay after auto-writes to allow diagnostics to catch up
 
-## [2.2.28]
+## [2.2.28] - 2025-02-17
 
 - Use createFileSystemWatcher to more reliably update list of files to @-mention
 
-## [2.2.27]
+## [2.2.27] - 2025-02-17
 
 - Add the current time to the system prompt and improve browser screenshot quality (thanks @libertyteeth!)
 
-## [2.2.26]
+## [2.2.26] - 2025-02-17
 
 - Tweaks to preferred language (thanks @yongjer)
 
-## [2.2.25]
+## [2.2.25] - 2025-02-17
 
 - Add a preferred language dropdown
 
-## [2.2.24]
+## [2.2.24] - 2025-02-17
 
 - Default diff editing to on for new installs
 
-## [2.2.23]
+## [2.2.23] - 2025-02-17
 
 - Fix context window for gemini-2.0-flash-thinking-exp-1219 (thanks @student20880)
 
-## [2.2.22]
+## [2.2.22] - 2025-02-17
 
 - Add gemini-2.0-flash-thinking-exp-1219
 
-## [2.2.21]
+## [2.2.21] - 2025-02-17
 
 - Take predicted file length into account when detecting omissions
 
-## [2.2.20]
+## [2.2.20] - 2025-02-17
 
 - Make fuzzy diff matching configurable (and default to off)
 
-## [2.2.19]
+## [2.2.19] - 2025-02-17
 
 - Add experimental option to use a bigger browser (1280x800)
 
-## [2.2.18]
+## [2.2.18] - 2025-02-17
 
 - More targeted styling fix for Gemini chats
 
-## [2.2.17]
+## [2.2.17] - 2025-02-17
 
 - Improved regex for auto-execution of chained commands
 
-## [2.2.16]
+## [2.2.16] - 2025-02-17
 
-- Incorporate Premshay's [PR](https://github.com/RooCodeInc/Roo-Code/pull/60) to add support for Amazon Nova and Meta Llama Models via Bedrock (3, 3.1, 3.2) and unified Bedrock calls using BedrockClient and Bedrock Runtime API
+- Incorporate Premshay's [PR](https://github.com/ResearcherryCoderInc/researcherry/pull/60) to add support for Amazon Nova and Meta Llama Models via Bedrock (3, 3.1, 3.2) and unified Bedrock calls using BedrockClient and Bedrock Runtime API
 
-## [2.2.14 - 2.2.15]
+## [2.2.14 - 2.2.15] - 2025-02-17
 
 - Make diff editing more robust to transient errors / fix bugs
 
-## [2.2.13]
+## [2.2.13] - 2025-02-17
 
 - Fixes to sound playing and applying diffs
 
-## [2.2.12]
+## [2.2.12] - 2025-02-17
 
 - Better support for pure deletion and insertion diffs
 
-## [2.2.11]
+## [2.2.11] - 2025-02-17
 
 - Added settings checkbox for verbose diff debugging
 
-## [2.2.6 - 2.2.10]
+## [2.2.6 - 2.2.10] - 2025-02-17
 
 - More fixes to search/replace diffs
 
-## [2.2.5]
+## [2.2.5] - 2025-02-17
 
 - Allow MCP servers to be enabled/disabled
 
-## [2.2.4]
+## [2.2.4] - 2025-02-17
 
 - Tweak the prompt to encourage diff edits when they're enabled
 
-## [2.2.3]
+## [2.2.3] - 2025-02-17
 
 - Clean up the settings screen
 
-## [2.2.2]
+## [2.2.2] - 2025-02-17
 
 - Add checkboxes to auto-approve MCP tools
 
-## [2.2.1]
+## [2.2.1] - 2025-02-17
 
 - Fix another diff editing indentation bug
 
-## [2.2.0]
+## [2.2.0] - 2025-02-17
 
-- Incorporate MCP changes from Cline 2.2.0
+- Incorporate MCP changes from Researcherry Cline 2.2.0
 
-## [2.1.21]
+## [2.1.21] - 2025-02-17
 
 - Larger text area input + ability to drag images into it
 
-## [2.1.20]
+## [2.1.20] - 2025-02-17
 
 - Add Gemini 2.0
 
-## [2.1.19]
+## [2.1.19] - 2025-02-17
 
 - Better error handling for diff editing
 
-## [2.1.18]
+## [2.1.18] - 2025-02-17
 
 - Diff editing bugfix to handle Windows line endings
 
-## [2.1.17]
+## [2.1.17] - 2025-02-17
 
 - Switch to search/replace diffs in experimental diff editing mode
 
-## [2.1.16]
+## [2.1.16] - 2025-02-17
 
 - Allow copying prompts from the history screen
 
-## [2.1.15]
+## [2.1.15] - 2025-02-17
 
-- Incorporate dbasclpy's [PR](https://github.com/RooCodeInc/Roo-Code/pull/54) to add support for gemini-exp-1206
+- Incorporate dbasclpy's [PR](https://github.com/ResearcherryCoderInc/researcherry/pull/54) to add support for gemini-exp-1206
 - Make it clear that diff editing is very experimental
 
-## [2.1.14]
+## [2.1.14] - 2025-02-17
 
 - Fix bug where diffs were not being applied correctly and try Aider's [unified diff prompt](https://github.com/Aider-AI/aider/blob/3995accd0ca71cea90ef76d516837f8c2731b9fe/aider/coders/udiff_prompts.py#L75-L105)
 - If diffs are enabled, automatically reject write_to_file commands that lead to truncated output
 
-## [2.1.13]
+## [2.1.13] - 2025-02-17
 
-- Fix https://github.com/RooCodeInc/Roo-Code/issues/50 where sound effects were not respecting settings
+- Fix https://github.com/ResearcherryCoderInc/researcherry/issues/50 where sound effects were not respecting settings
 
-## [2.1.12]
+## [2.1.12] - 2025-02-17
 
 - Incorporate JoziGila's [PR](https://github.com/cline/cline/pull/158) to add support for editing through diffs
 
-## [2.1.11]
+## [2.1.11] - 2025-02-17
 
-- Incorporate lloydchang's [PR](https://github.com/RooCodeInc/Roo-Code/pull/42) to add support for OpenRouter compression
+- Incorporate lloydchang's [PR](https://github.com/ResearcherryCoderInc/researcherry/pull/42) to add support for OpenRouter compression
 
-## [2.1.10]
+## [2.1.10] - 2025-02-17
 
 - Incorporate HeavenOSK's [PR](https://github.com/cline/cline/pull/818) to add sound effects to Cline
 
-## [2.1.9]
+## [2.1.9] - 2025-02-17
 
 - Add instructions for using .clinerules on the settings screen
 
-## [2.1.8]
+## [2.1.8] - 2025-02-17
 
-- Roo Cline now allows configuration of which commands are allowed without approval!
+- Researcherry Cline now allows configuration of which commands are allowed without approval!
 
-## [2.1.7]
+## [2.1.7] - 2025-02-17
 
 - Updated extension icon and metadata
 
-## [2.2.0]
+## [2.2.0] - 2025-02-17
 
 - Add support for Model Context Protocol (MCP), enabling Cline to use custom tools like web-search tool or GitHub tool
 - Add MCP server management tab accessible via the server icon in the menu bar
 - Add ability for Cline to dynamically create new MCP servers based on user requests (e.g., "add a tool that gets the latest npm docs")
 
-## [2.1.6]
+## [2.1.6] - 2025-02-17
 
-- Roo Cline now runs in all VSCode-compatible editors
+- Researcherry Cline now runs in all VSCode-compatible editors
 
-## [2.1.5]
+## [2.1.5] - 2025-02-17
 
 - Fix bug in browser action approval
 
-## [2.1.4]
+## [2.1.4] - 2025-02-17
 
-- Roo Cline now can run side-by-side with Cline
+- Researcherry Cline now can run side-by-side with Cline
 
-## [2.1.3]
+## [2.1.3] - 2025-02-17
 
-- Roo Cline now allows browser actions without approval when `alwaysAllowBrowser` is true
+- Researcherry Cline now allows browser actions without approval when `alwaysAllowBrowser` is true
 
-## [2.1.2]
+## [2.1.2] - 2025-02-17
 
 - Support for auto-approval of write operations and command execution
 - Support for .clinerules custom instructions
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index c23c424f4..d5576a429 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -11,9 +11,9 @@
 </sub>
 </div>
 
-# Contributing to Roo Code
+# Contributing to Researcherry Coder
 
-Roo Code is a community-driven project, and we deeply value every contribution. To streamline collaboration, we operate on an [Issue-First](#issue-first-approach) basis, meaning all [Pull Requests (PRs)](#submitting-a-pull-request) must first be linked to a GitHub Issue. Please review this guide carefully.
+Researcherry Coder is a community-driven project, and we deeply value every contribution. To streamline collaboration, we operate on an [Issue-First](#issue-first-approach) basis, meaning all [Pull Requests (PRs)](#submitting-a-pull-request) must first be linked to a GitHub Issue. Please review this guide carefully.
 
 ## Table of Contents
 
@@ -52,10 +52,10 @@ Our roadmap guides the project's direction. Align your contributions with these
 
 Mention alignment with these areas in your PRs.
 
-### 3. Join the Roo Code Community
+### 3. Join the Researcherry Coder Community
 
-- **Primary:** Join our [Discord](https://discord.gg/roocode) and DM **Hannes Rudolph (`hrudolph`)**.
-- **Alternative:** Experienced contributors can engage directly via [GitHub Projects](https://github.com/orgs/RooCodeInc/projects/1).
+- **Primary:** Join our [Discord](https://discord.gg/researcherrycoder) and DM **Hannes Rudolph (`hrudolph`)**.
+- **Alternative:** Experienced contributors can engage directly via [GitHub Projects](https://github.com/orgs/ResearcherryCoderInc/projects/1).
 
 ## Finding & Planning Your Contribution
 
@@ -69,7 +69,7 @@ Mention alignment with these areas in your PRs.
 
 All contributions must begin with a GitHub Issue.
 
-- **Check existing issues**: Search [GitHub Issues](https://github.com/RooCodeInc/Roo-Code/issues).
+- **Check existing issues**: Search [GitHub Issues](https://github.com/ResearcherryCoderInc/researcherry/issues).
 - **Create an issue**: Use appropriate templates:
     - **Bugs:** "Bug Report" template.
     - **Features:** "Detailed Feature Proposal" template. Approval required before starting.
@@ -79,14 +79,14 @@ All contributions must begin with a GitHub Issue.
 
 ### Deciding What to Work On
 
-- Check the [GitHub Project](https://github.com/orgs/RooCodeInc/projects/1) for unassigned "Good First Issues."
-- For docs, visit [Roo Code Docs](https://github.com/RooCodeInc/Roo-Code-Docs).
+- Check the [GitHub Project](https://github.com/orgs/ResearcherryCoderInc/projects/1) for unassigned "Good First Issues."
+- For docs, visit [Researcherry Coder Docs](https://github.com/ResearcherryCoderInc/researcherry-Docs).
 
 ### Reporting Bugs
 
 - Check for existing reports first.
-- Create new bugs using the ["Bug Report" template](https://github.com/RooCodeInc/Roo-Code/issues/new/choose).
-- **Security issues**: Report privately via [security advisories](https://github.com/RooCodeInc/Roo-Code/security/advisories/new).
+- Create new bugs using the ["Bug Report" template](https://github.com/ResearcherryCoderInc/researcherry/issues/new/choose).
+- **Security issues**: Report privately via [security advisories](https://github.com/ResearcherryCoderInc/researcherry/security/advisories/new).
 
 ## Development & Submission Process
 
@@ -95,7 +95,7 @@ All contributions must begin with a GitHub Issue.
 1. **Fork & Clone:**
 
 ```
-git clone https://github.com/YOUR_USERNAME/Roo-Code.git
+git clone https://github.com/YOUR_USERNAME/researcherry.git
 ```
 
 2. **Install Dependencies:**
@@ -135,4 +135,4 @@ pnpm install
 
 ## Legal
 
-By contributing, you agree your contributions will be licensed under the Apache 2.0 License, consistent with Roo Code's licensing.
+By contributing, you agree your contributions will be licensed under the Apache 2.0 License, consistent with Researcherry Coder's licensing.
diff --git a/README.md b/README.md
index 08f8f8180..4ab185c68 100644
--- a/README.md
+++ b/README.md
@@ -1,260 +1,165 @@
-<div align="center">
-<sub>
+**Researcherry Coder** — это **автономный агент программирования** на базе ИИ, который живет в вашем редакторе. Он может:
 
-<b>English</b> • [Català](locales/ca/README.md) • [Deutsch](locales/de/README.md) • [Español](locales/es/README.md) • [Français](locales/fr/README.md) • [हिंदी](locales/hi/README.md) • [Bahasa Indonesia](locales/id/README.md) • [Italiano](locales/it/README.md) • [日本語](locales/ja/README.md)
+- Общаться на естественном языке
+- Читать и записывать файлы прямо в вашем рабочем пространстве
+- Выполнять команды терминала
+- Автоматизировать действия в браузере
+- Интегрироваться с любыми OpenAI-совместимыми или пользовательскими API/моделями
+- Адаптировать свою "личность" и возможности через **Пользовательские режимы**
 
-</sub>
-<sub>
+Независимо от того, ищете ли вы гибкого партнера по программированию, системного архитектора или специализированные роли, такие как инженер по обеспечению качества или менеджер продукта, Researcherry Coder может помочь вам создавать программное обеспечение более эффективно.
 
-[한국어](locales/ko/README.md) • [Nederlands](locales/nl/README.md) • [Polski](locales/pl/README.md) • [Português (BR)](locales/pt-BR/README.md) • [Русский](locales/ru/README.md) • [Türkçe](locales/tr/README.md) • [Tiếng Việt](locales/vi/README.md) • [简体中文](locales/zh-CN/README.md) • [繁體中文](locales/zh-TW/README.md)
-
-</sub>
-</div>
-<br>
-<div align="center">
-  <h1>Roo Code</h1>
-  <p align="center">
-  <img src="https://media.githubusercontent.com/media/RooCodeInc/Roo-Code/main/src/assets/docs/demo.gif" width="100%" />
-  </p>
-  <p>Connect with developers, contribute ideas, and stay ahead with the latest AI-powered coding tools.</p>
-  
-  <a href="https://discord.gg/roocode" target="_blank"><img src="https://img.shields.io/badge/Join%20Discord-5865F2?style=for-the-badge&logo=discord&logoColor=white" alt="Join Discord"></a>
-  <a href="https://www.reddit.com/r/RooCode/" target="_blank"><img src="https://img.shields.io/badge/Join%20Reddit-FF4500?style=for-the-badge&logo=reddit&logoColor=white" alt="Join Reddit"></a>
-  
-</div>
-<br>
-<br>
-
-<div align="center">
-
-<a href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline" target="_blank"><img src="https://img.shields.io/badge/Download%20on%20VS%20Marketplace-blue?style=for-the-badge&logo=visualstudiocode&logoColor=white" alt="Download on VS Marketplace"></a>
-<a href="https://github.com/RooCodeInc/Roo-Code/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop" target="_blank"><img src="https://img.shields.io/badge/Feature%20Requests-yellow?style=for-the-badge" alt="Feature Requests"></a>
-<a href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline&ssr=false#review-details" target="_blank"><img src="https://img.shields.io/badge/Rate%20%26%20Review-green?style=for-the-badge" alt="Rate & Review"></a>
-<a href="https://docs.roocode.com" target="_blank"><img src="https://img.shields.io/badge/Documentation-6B46C1?style=for-the-badge&logo=readthedocs&logoColor=white" alt="Documentation"></a>
-
-</div>
-
-**Roo Code** is an AI-powered **autonomous coding agent** that lives in your editor. It can:
-
-- Communicate in natural language
-- Read and write files directly in your workspace
-- Run terminal commands
-- Automate browser actions
-- Integrate with any OpenAI-compatible or custom API/model
-- Adapt its “personality” and capabilities through **Custom Modes**
-
-Whether you’re seeking a flexible coding partner, a system architect, or specialized roles like a QA engineer or product manager, Roo Code can help you build software more efficiently.
-
-Check out the [CHANGELOG](CHANGELOG.md) for detailed updates and fixes.
+Ознакомьтесь с [CHANGELOG](CHANGELOG.md) для подробных обновлений и исправлений.
 
 ---
 
-## 🎉 Roo Code 3.25 Released
+## 🎉 Выпущен Researcherry Coder 3.25
 
-Roo Code 3.25 brings powerful new features and significant improvements to enhance your development workflow!
+Researcherry Coder 3.25 приносит мощные новые функции и значительные улучшения для повышения эффективности вашего рабочего процесса разработки!
 
-- **Message Queueing** - Queue multiple messages while Roo is working, allowing you to continue planning your workflow without interruption.
-- **Custom Slash Commands** - Create personalized slash commands for quick access to frequently used prompts and workflows, with full UI management.
-- **Enhanced Gemini Tools** - New URL context and Google Search grounding capabilities provide Gemini models with real-time web information and enhanced research abilities.
+- **Очередь сообщений** - Ставьте в очередь несколько сообщений, пока Researcherry работает, позволяя вам продолжать планировать рабочий процесс без прерываний.
+- **Пользовательские слеш-команды** - Создавайте персонализированные слеш-команды для быстрого доступа к часто используемым запросам и рабочим процессам с полным управлением через UI.
+- **Улучшенные инструменты Gemini** - Новые возможности контекста URL и заземления Google Search предоставляют моделям Gemini информацию из интернета в реальном времени и улучшенные исследовательские способности.
 
 ---
 
-## What Can Roo Code Do?
+## Что может делать Researcherry Coder?
 
-- 🚀 **Generate Code** from natural language descriptions
-- 🔧 **Refactor & Debug** existing code
-- 📝 **Write & Update** documentation
-- 🤔 **Answer Questions** about your codebase
-- 🔄 **Automate** repetitive tasks
-- 🏗️ **Create** new files and projects
+- 🚀 **Генерировать код** из описаний на естественном языке
+- 🔧 **Рефакторить и отлаживать** существующий код
+- 📝 **Писать и обновлять** документацию
+- 🤔 **Отвечать на вопросы** о вашей кодовой базе
+- 🔄 **Автоматизировать** повторяющиеся задачи
+- 🏗️ **Создавать** новые файлы и проекты
 
-## Quick Start
+## Быстрый старт
 
-1. [Install Roo Code](https://docs.roocode.com/getting-started/installing)
-2. [Connect Your AI Provider](https://docs.roocode.com/getting-started/connecting-api-provider)
-3. [Try Your First Task](https://docs.roocode.com/getting-started/your-first-task)
+1. [Установите Researcherry Coder](.docs/getting-started/installing.md)
+2. [Подключите вашего ИИ-провайдера](.docs/getting-started/connecting-api-provider.md)
+3. [Попробуйте свою первую задачу](.docs/getting-started/your-first-task.md)
 
-## Key Features
+## Ключевые функции
 
-### Multiple Modes
+### Множественные режимы
 
-Roo Code adapts to your needs with specialized [modes](https://docs.roocode.com/basic-usage/using-modes):
+Researcherry Coder адаптируется к вашим потребностям со специализированными [режимами](.docs/basic-usage/using-modes.md):
 
-- **Code Mode:** For general-purpose coding tasks
-- **Architect Mode:** For planning and technical leadership
-- **Ask Mode:** For answering questions and providing information
-- **Debug Mode:** For systematic problem diagnosis
-- **[Custom Modes](https://docs.roocode.com/advanced-usage/custom-modes):** Create unlimited specialized personas for security auditing, performance optimization, documentation, or any other task
+- **Режим кода:** Для общих задач программирования
+- **Режим архитектора:** Для планирования и технического лидерства
+- **Режим вопросов:** Для ответов на вопросы и предоставления информации
+- **Режим отладки:** Для систематической диагностики проблем
+- **[Пользовательские режимы](.docs/advanced-usage/custom-modes.md):** Создавайте неограниченное количество специализированных персонажей для аудита безопасности, оптимизации производительности, документации или любых других задач
 
-### Smart Tools
+### Умные инструменты
 
-Roo Code comes with powerful [tools](https://docs.roocode.com/basic-usage/how-tools-work) that can:
+Researcherry Coder поставляется с мощными [инструментами](.docs/basic-usage/how-tools-work.md), которые могут:
 
-- Read and write files in your project
-- Execute commands in your VS Code terminal
-- Control a web browser
-- Use external tools via [MCP (Model Context Protocol)](https://docs.roocode.com/advanced-usage/mcp)
+- Читать и записывать файлы в вашем проекте
+- Выполнять команды в терминале VS Code
+- Управлять веб-браузером
+- Использовать внешние инструменты через [MCP (Model Context Protocol)](.docs/advanced-usage/mcp.md)
 
-MCP extends Roo Code's capabilities by allowing you to add unlimited custom tools. Integrate with external APIs, connect to databases, or create specialized development tools - MCP provides the framework to expand Roo Code's functionality to meet your specific needs.
+MCP расширяет возможности Researcherry Coder, позволяя добавлять неограниченное количество пользовательских инструментов. Интегрируйтесь с внешними API, подключайтесь к базам данных или создавайте специализированные инструменты разработки - MCP предоставляет основу для расширения функциональности Researcherry Coder в соответствии с вашими конкретными потребностями.
 
-### Customization
+### Настройка
 
-Make Roo Code work your way with:
+Заставьте Researcherry Coder работать по-вашему с помощью:
 
-- [Custom Instructions](https://docs.roocode.com/advanced-usage/custom-instructions) for personalized behavior
-- [Custom Modes](https://docs.roocode.com/advanced-usage/custom-modes) for specialized tasks
-- [Local Models](https://docs.roocode.com/advanced-usage/local-models) for offline use
-- [Auto-Approval Settings](https://docs.roocode.com/advanced-usage/auto-approving-actions) for faster workflows
+- [Пользовательских инструкций](.docs/advanced-usage/custom-instructions.md) для персонализированного поведения
+- [Пользовательских режимов](.docs/advanced-usage/custom-modes.md) для специализированных задач
+- [Локальных моделей](.docs/advanced-usage/local-models.md) для офлайн-использования
+- [Настроек автоматического одобрения](.docs/advanced-usage/auto-approving-actions.md) для более быстрых рабочих процессов
 
-## Resources
+## Ресурсы
 
-### Documentation
+### Документация
 
-- [Basic Usage Guide](https://docs.roocode.com/basic-usage/the-chat-interface)
-- [Advanced Features](https://docs.roocode.com/advanced-usage/auto-approving-actions)
-- [Frequently Asked Questions](https://docs.roocode.com/faq)
+- [Руководство по базовому использованию](.docs/basic-usage/the-chat-interface.md)
+- [Расширенные функции](.docs/advanced-usage/auto-approving-actions.md)
+- [Часто задаваемые вопросы](.docs/faq.md)
 
-### Community
+### Сообщество
 
-- **Discord:** [Join our Discord server](https://discord.gg/roocode) for real-time help and discussions
-- **Reddit:** [Visit our subreddit](https://www.reddit.com/r/RooCode) to share experiences and tips
-- **GitHub:** Report [issues](https://github.com/RooCodeInc/Roo-Code/issues) or request [features](https://github.com/RooCodeInc/Roo-Code/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop)
+- **Discord:** [Присоединяйтесь к нашему Discord серверу](https://discord.gg/researcherrycoder) для помощи в реальном времени и обсуждений
+- **Reddit:** [Посетите наш сабреддит](https://www.reddit.com/r/ResearcherryCoder) чтобы поделиться опытом и советами
+- **GitHub:** Сообщайте о [проблемах](https://github.com/ResearcherryCoderInc/researcherry/issues) или запрашивайте [функции](https://github.com/ResearcherryCoderInc/researcherry/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop)
 
 ---
 
-## Local Setup & Development
+## Локальная настройка и разработка
 
-1. **Clone** the repo:
+1. **Клонируйте** репозиторий:
 
 ```sh
-git clone https://github.com/RooCodeInc/Roo-Code.git
+git clone https://github.com/ResearcherryCoderInc/researcherry.git
 ```
 
-2. **Install dependencies**:
+2. **Установите зависимости**:
 
 ```sh
 pnpm install
 ```
 
-3. **Run the extension**:
+3. **Запустите расширение**:
 
-There are several ways to run the Roo Code extension:
+Есть несколько способов запустить расширение Researcherry Coder:
 
-### Development Mode (F5)
+### Режим разработки (F5)
 
-For active development, use VSCode's built-in debugging:
+Для активной разработки используйте встроенную отладку VSCode:
 
-Press `F5` (or go to **Run** → **Start Debugging**) in VSCode. This will open a new VSCode window with the Roo Code extension running.
+Нажмите `F5` (или перейдите в **Run** → **Start Debugging**) в VSCode. Это откроет новое окно VSCode с запущенным расширением Researcherry Coder.
 
-- Changes to the webview will appear immediately.
-- Changes to the core extension will also hot reload automatically.
+- Изменения в webview появятся немедленно.
+- Изменения в основном расширении также будут автоматически перезагружаться.
 
-### Automated VSIX Installation
+### Автоматическая установка VSIX
 
-To build and install the extension as a VSIX package directly into VSCode:
+Чтобы собрать и установить расширение как VSIX пакет прямо в VSCode:
 
 ```sh
 pnpm install:vsix [-y] [--editor=<command>]
 ```
 
-This command will:
+Эта команда:
 
-- Ask which editor command to use (code/cursor/code-insiders) - defaults to 'code'
-- Uninstall any existing version of the extension.
-- Build the latest VSIX package.
-- Install the newly built VSIX.
-- Prompt you to restart VS Code for changes to take effect.
+- Спросит, какую команду редактора использовать (code/cursor/code-insiders)
+- Удалит любую существующую версию расширения.
+- Соберет последний VSIX пакет.
+- Установит только что собранный VSIX.
+- Предложит перезапустить VS Code для применения изменений.
 
-Options:
+Опции:
 
-- `-y`: Skip all confirmation prompts and use defaults
-- `--editor=<command>`: Specify the editor command (e.g., `--editor=cursor` or `--editor=code-insiders`)
+- `-y`: Пропустить все подтверждения и использовать значения по умолчанию
+- `--editor=<command>`: Указать команду редактора (например, `--editor=cursor` или `--editor=code-insiders`)
 
-### Manual VSIX Installation
+### Ручная установка VSIX
 
-If you prefer to install the VSIX package manually:
+Если вы предпочитаете установить VSIX пакет вручную:
 
-1.  First, build the VSIX package:
+1.  Сначала соберите VSIX пакет:
     ```sh
     pnpm vsix
     ```
-2.  A `.vsix` file will be generated in the `bin/` directory (e.g., `bin/roo-cline-<version>.vsix`).
-3.  Install it manually using the VSCode CLI:
+2.  Файл `.vsix` будет создан в директории `bin/` (например, `bin/researcherry-cline-<version>.vsix`).
+3.  Установите его вручную с помощью CLI VSCode:
     ```sh
-    code --install-extension bin/roo-cline-<version>.vsix
+    code --install-extension bin/researcherry-cline-<version>.vsix
     ```
 
 ---
 
-We use [changesets](https://github.com/changesets/changesets) for versioning and publishing. Check our `CHANGELOG.md` for release notes.
+Мы используем [changesets](https://github.com/changesets/changesets) для версионирования и публикации. Проверьте наш `CHANGELOG.md` для заметок о выпусках.
 
 ---
 
-## Disclaimer
+## Отказ от ответственности
 
-**Please note** that Roo Code, Inc does **not** make any representations or warranties regarding any code, models, or other tools provided or made available in connection with Roo Code, any associated third-party tools, or any resulting outputs. You assume **all risks** associated with the use of any such tools or outputs; such tools are provided on an **"AS IS"** and **"AS AVAILABLE"** basis. Such risks may include, without limitation, intellectual property infringement, cyber vulnerabilities or attacks, bias, inaccuracies, errors, defects, viruses, downtime, property loss or damage, and/or personal injury. You are solely responsible for your use of any such tools or outputs (including, without limitation, the legality, appropriateness, and results thereof).
+**Обратите внимание**, что Researcherry Coder, Inc **не** дает никаких заявлений или гарантий в отношении любого кода, моделей или других инструментов, предоставленных или доступных в связи с Researcherry Coder, любых связанных сторонних инструментов или любых результирующих выходных данных. Вы принимаете **все риски**, связанные с использованием любых таких инструментов или выходных данных; такие инструменты предоставляются на основе **"КАК ЕСТЬ"** и **"КАК ДОСТУПНО"**. Такие риски могут включать, без ограничений, нарушение интеллектуальной собственности, киберуязвимости или атаки, предвзятость, неточности, ошибки, дефекты, вирусы, простои, потерю или повреждение имущества и/или телесные повреждения. Вы несете единоличную ответственность за использование любых таких инструментов или выходных данных (включая, без ограничений, законность, уместность и результаты такого использования).
 
 ---
 
-## Contributing
-
-We love community contributions! Get started by reading our [CONTRIBUTING.md](CONTRIBUTING.md).
-
----
-
-## Contributors
-
-Thanks to all our contributors who have helped make Roo Code better!
-
-<!-- START CONTRIBUTORS SECTION - AUTO-GENERATED, DO NOT EDIT MANUALLY -->
-
-|                <a href="https://github.com/mrubens"><img src="https://avatars.githubusercontent.com/u/2600?v=4" width="100" height="100" alt="mrubens"/><br /><sub><b>mrubens</b></sub></a>                |        <a href="https://github.com/saoudrizwan"><img src="https://avatars.githubusercontent.com/u/7799382?v=4" width="100" height="100" alt="saoudrizwan"/><br /><sub><b>saoudrizwan</b></sub></a>        |                         <a href="https://github.com/cte"><img src="https://avatars.githubusercontent.com/u/16332?v=4" width="100" height="100" alt="cte"/><br /><sub><b>cte</b></sub></a>                          |        <a href="https://github.com/daniel-lxs"><img src="https://avatars.githubusercontent.com/u/57051444?v=4" width="100" height="100" alt="daniel-lxs"/><br /><sub><b>daniel-lxs</b></sub></a>         |                   <a href="https://github.com/samhvw8"><img src="https://avatars.githubusercontent.com/u/12538214?v=4" width="100" height="100" alt="samhvw8"/><br /><sub><b>samhvw8</b></sub></a>                    |            <a href="https://github.com/hannesrudolph"><img src="https://avatars.githubusercontent.com/u/49103247?v=4" width="100" height="100" alt="hannesrudolph"/><br /><sub><b>hannesrudolph</b></sub></a>            |
-| :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |
-|               <a href="https://github.com/KJ7LNW"><img src="https://avatars.githubusercontent.com/u/93454819?v=4" width="100" height="100" alt="KJ7LNW"/><br /><sub><b>KJ7LNW</b></sub></a>                |             <a href="https://github.com/a8trejo"><img src="https://avatars.githubusercontent.com/u/62401433?v=4" width="100" height="100" alt="a8trejo"/><br /><sub><b>a8trejo</b></sub></a>              |             <a href="https://github.com/ColemanRoo"><img src="https://avatars.githubusercontent.com/u/117104599?v=4" width="100" height="100" alt="ColemanRoo"/><br /><sub><b>ColemanRoo</b></sub></a>             |           <a href="https://github.com/MuriloFP"><img src="https://avatars.githubusercontent.com/u/50873657?v=4" width="100" height="100" alt="MuriloFP"/><br /><sub><b>MuriloFP</b></sub></a>            |             <a href="https://github.com/canrobins13"><img src="https://avatars.githubusercontent.com/u/20544372?v=4" width="100" height="100" alt="canrobins13"/><br /><sub><b>canrobins13</b></sub></a>              |                    <a href="https://github.com/stea9499"><img src="https://avatars.githubusercontent.com/u/4163795?v=4" width="100" height="100" alt="stea9499"/><br /><sub><b>stea9499</b></sub></a>                    |
-|       <a href="https://github.com/joemanley201"><img src="https://avatars.githubusercontent.com/u/8299960?v=4" width="100" height="100" alt="joemanley201"/><br /><sub><b>joemanley201</b></sub></a>       |                       <a href="https://github.com/jr"><img src="https://avatars.githubusercontent.com/u/5629?v=4" width="100" height="100" alt="jr"/><br /><sub><b>jr</b></sub></a>                       |               <a href="https://github.com/System233"><img src="https://avatars.githubusercontent.com/u/20336040?v=4" width="100" height="100" alt="System233"/><br /><sub><b>System233</b></sub></a>               |        <a href="https://github.com/nissa-seru"><img src="https://avatars.githubusercontent.com/u/119150866?v=4" width="100" height="100" alt="nissa-seru"/><br /><sub><b>nissa-seru</b></sub></a>        |                  <a href="https://github.com/jquanton"><img src="https://avatars.githubusercontent.com/u/88576563?v=4" width="100" height="100" alt="jquanton"/><br /><sub><b>jquanton</b></sub></a>                  |           <a href="https://github.com/roomote-agent"><img src="https://avatars.githubusercontent.com/u/206919393?v=4" width="100" height="100" alt="roomote-agent"/><br /><sub><b>roomote-agent</b></sub></a>            |
-|               <a href="https://github.com/NyxJae"><img src="https://avatars.githubusercontent.com/u/52313587?v=4" width="100" height="100" alt="NyxJae"/><br /><sub><b>NyxJae</b></sub></a>                |            <a href="https://github.com/elianiva"><img src="https://avatars.githubusercontent.com/u/51877647?v=4" width="100" height="100" alt="elianiva"/><br /><sub><b>elianiva</b></sub></a>            |                     <a href="https://github.com/d-oit"><img src="https://avatars.githubusercontent.com/u/6849456?v=4" width="100" height="100" alt="d-oit"/><br /><sub><b>d-oit</b></sub></a>                      |           <a href="https://github.com/punkpeye"><img src="https://avatars.githubusercontent.com/u/108313943?v=4" width="100" height="100" alt="punkpeye"/><br /><sub><b>punkpeye</b></sub></a>           |               <a href="https://github.com/wkordalski"><img src="https://avatars.githubusercontent.com/u/3035587?v=4" width="100" height="100" alt="wkordalski"/><br /><sub><b>wkordalski</b></sub></a>                |                        <a href="https://github.com/qdaxb"><img src="https://avatars.githubusercontent.com/u/4157870?v=4" width="100" height="100" alt="qdaxb"/><br /><sub><b>qdaxb</b></sub></a>                         |
-|            <a href="https://github.com/xyOz-dev"><img src="https://avatars.githubusercontent.com/u/195602624?v=4" width="100" height="100" alt="xyOz-dev"/><br /><sub><b>xyOz-dev</b></sub></a>            |       <a href="https://github.com/chrarnoldus"><img src="https://avatars.githubusercontent.com/u/12196001?v=4" width="100" height="100" alt="chrarnoldus"/><br /><sub><b>chrarnoldus</b></sub></a>        |          <a href="https://github.com/SannidhyaSah"><img src="https://avatars.githubusercontent.com/u/186946675?v=4" width="100" height="100" alt="SannidhyaSah"/><br /><sub><b>SannidhyaSah</b></sub></a>          |         <a href="https://github.com/sachasayan"><img src="https://avatars.githubusercontent.com/u/1666034?v=4" width="100" height="100" alt="sachasayan"/><br /><sub><b>sachasayan</b></sub></a>         | <a href="https://github.com/Smartsheet-JB-Brown"><img src="https://avatars.githubusercontent.com/u/171734120?v=4" width="100" height="100" alt="Smartsheet-JB-Brown"/><br /><sub><b>Smartsheet-JB-Brown</b></sub></a> |              <a href="https://github.com/monotykamary"><img src="https://avatars.githubusercontent.com/u/1130103?v=4" width="100" height="100" alt="monotykamary"/><br /><sub><b>monotykamary</b></sub></a>              |
-|              <a href="https://github.com/cannuri"><img src="https://avatars.githubusercontent.com/u/91494156?v=4" width="100" height="100" alt="cannuri"/><br /><sub><b>cannuri</b></sub></a>              |          <a href="https://github.com/feifei325"><img src="https://avatars.githubusercontent.com/u/46489071?v=4" width="100" height="100" alt="feifei325"/><br /><sub><b>feifei325</b></sub></a>           |          <a href="https://github.com/zhangtony239"><img src="https://avatars.githubusercontent.com/u/157202938?v=4" width="100" height="100" alt="zhangtony239"/><br /><sub><b>zhangtony239</b></sub></a>          |      <a href="https://github.com/shariqriazz"><img src="https://avatars.githubusercontent.com/u/196900129?v=4" width="100" height="100" alt="shariqriazz"/><br /><sub><b>shariqriazz</b></sub></a>       |      <a href="https://github.com/vigneshsubbiah16"><img src="https://avatars.githubusercontent.com/u/51325334?v=4" width="100" height="100" alt="vigneshsubbiah16"/><br /><sub><b>vigneshsubbiah16</b></sub></a>      |           <a href="https://github.com/pugazhendhi-m"><img src="https://avatars.githubusercontent.com/u/132246623?v=4" width="100" height="100" alt="pugazhendhi-m"/><br /><sub><b>pugazhendhi-m</b></sub></a>            |
-|          <a href="https://github.com/lloydchang"><img src="https://avatars.githubusercontent.com/u/1329685?v=4" width="100" height="100" alt="lloydchang"/><br /><sub><b>lloydchang</b></sub></a>          |    <a href="https://github.com/liwilliam2021"><img src="https://avatars.githubusercontent.com/u/40069349?v=4" width="100" height="100" alt="liwilliam2021"/><br /><sub><b>liwilliam2021</b></sub></a>     |                 <a href="https://github.com/dtrugman"><img src="https://avatars.githubusercontent.com/u/2451669?v=4" width="100" height="100" alt="dtrugman"/><br /><sub><b>dtrugman</b></sub></a>                 |            <a href="https://github.com/hassoncs"><img src="https://avatars.githubusercontent.com/u/5104925?v=4" width="100" height="100" alt="hassoncs"/><br /><sub><b>hassoncs</b></sub></a>            |                    <a href="https://github.com/Szpadel"><img src="https://avatars.githubusercontent.com/u/1857251?v=4" width="100" height="100" alt="Szpadel"/><br /><sub><b>Szpadel</b></sub></a>                    |                 <a href="https://github.com/lupuletic"><img src="https://avatars.githubusercontent.com/u/105351510?v=4" width="100" height="100" alt="lupuletic"/><br /><sub><b>lupuletic</b></sub></a>                  |
-|                <a href="https://github.com/kiwina"><img src="https://avatars.githubusercontent.com/u/1071364?v=4" width="100" height="100" alt="kiwina"/><br /><sub><b>kiwina</b></sub></a>                |            <a href="https://github.com/Premshay"><img src="https://avatars.githubusercontent.com/u/28099628?v=4" width="100" height="100" alt="Premshay"/><br /><sub><b>Premshay</b></sub></a>            |                  <a href="https://github.com/psv2522"><img src="https://avatars.githubusercontent.com/u/87223770?v=4" width="100" height="100" alt="psv2522"/><br /><sub><b>psv2522</b></sub></a>                  |       <a href="https://github.com/olweraltuve"><img src="https://avatars.githubusercontent.com/u/39308405?v=4" width="100" height="100" alt="olweraltuve"/><br /><sub><b>olweraltuve</b></sub></a>       |      <a href="https://github.com/diarmidmackenzie"><img src="https://avatars.githubusercontent.com/u/16045703?v=4" width="100" height="100" alt="diarmidmackenzie"/><br /><sub><b>diarmidmackenzie</b></sub></a>      |                   <a href="https://github.com/ChuKhaLi"><img src="https://avatars.githubusercontent.com/u/15166543?v=4" width="100" height="100" alt="ChuKhaLi"/><br /><sub><b>ChuKhaLi</b></sub></a>                    |
-|    <a href="https://github.com/PeterDaveHello"><img src="https://avatars.githubusercontent.com/u/3691490?v=4" width="100" height="100" alt="PeterDaveHello"/><br /><sub><b>PeterDaveHello</b></sub></a>    |               <a href="https://github.com/aheizi"><img src="https://avatars.githubusercontent.com/u/8243770?v=4" width="100" height="100" alt="aheizi"/><br /><sub><b>aheizi</b></sub></a>                |      <a href="https://github.com/nbihan-mediware"><img src="https://avatars.githubusercontent.com/u/42357253?v=4" width="100" height="100" alt="nbihan-mediware"/><br /><sub><b>nbihan-mediware</b></sub></a>      |     <a href="https://github.com/noritaka1166"><img src="https://avatars.githubusercontent.com/u/189505037?v=4" width="100" height="100" alt="noritaka1166"/><br /><sub><b>noritaka1166</b></sub></a>     |                <a href="https://github.com/RaySinner"><img src="https://avatars.githubusercontent.com/u/118297374?v=4" width="100" height="100" alt="RaySinner"/><br /><sub><b>RaySinner</b></sub></a>                |              <a href="https://github.com/afshawnlotfi"><img src="https://avatars.githubusercontent.com/u/6283745?v=4" width="100" height="100" alt="afshawnlotfi"/><br /><sub><b>afshawnlotfi</b></sub></a>              |
-|              <a href="https://github.com/dleffel"><img src="https://avatars.githubusercontent.com/u/7119958?v=4" width="100" height="100" alt="dleffel"/><br /><sub><b>dleffel</b></sub></a>               |     <a href="https://github.com/StevenTCramer"><img src="https://avatars.githubusercontent.com/u/357219?v=4" width="100" height="100" alt="StevenTCramer"/><br /><sub><b>StevenTCramer</b></sub></a>      |                   <a href="https://github.com/Ruakij"><img src="https://avatars.githubusercontent.com/u/54639830?v=4" width="100" height="100" alt="Ruakij"/><br /><sub><b>Ruakij</b></sub></a>                    |               <a href="https://github.com/pdecat"><img src="https://avatars.githubusercontent.com/u/318490?v=4" width="100" height="100" alt="pdecat"/><br /><sub><b>pdecat</b></sub></a>                |                <a href="https://github.com/kyle-apex"><img src="https://avatars.githubusercontent.com/u/20145331?v=4" width="100" height="100" alt="kyle-apex"/><br /><sub><b>kyle-apex</b></sub></a>                 |                    <a href="https://github.com/emshvac"><img src="https://avatars.githubusercontent.com/u/121588911?v=4" width="100" height="100" alt="emshvac"/><br /><sub><b>emshvac</b></sub></a>                     |
-|           <a href="https://github.com/Lunchb0ne"><img src="https://avatars.githubusercontent.com/u/22198661?v=4" width="100" height="100" alt="Lunchb0ne"/><br /><sub><b>Lunchb0ne</b></sub></a>           |         <a href="https://github.com/SmartManoj"><img src="https://avatars.githubusercontent.com/u/7231077?v=4" width="100" height="100" alt="SmartManoj"/><br /><sub><b>SmartManoj</b></sub></a>          |                <a href="https://github.com/vagadiya"><img src="https://avatars.githubusercontent.com/u/32499123?v=4" width="100" height="100" alt="vagadiya"/><br /><sub><b>vagadiya</b></sub></a>                 |     <a href="https://github.com/slytechnical"><img src="https://avatars.githubusercontent.com/u/139649758?v=4" width="100" height="100" alt="slytechnical"/><br /><sub><b>slytechnical</b></sub></a>     |               <a href="https://github.com/dlab-anton"><img src="https://avatars.githubusercontent.com/u/20571486?v=4" width="100" height="100" alt="dlab-anton"/><br /><sub><b>dlab-anton</b></sub></a>               |            <a href="https://github.com/arthurauffray"><img src="https://avatars.githubusercontent.com/u/51604173?v=4" width="100" height="100" alt="arthurauffray"/><br /><sub><b>arthurauffray</b></sub></a>            |
-|              <a href="https://github.com/upamune"><img src="https://avatars.githubusercontent.com/u/8219560?v=4" width="100" height="100" alt="upamune"/><br /><sub><b>upamune</b></sub></a>               |             <a href="https://github.com/NamesMT"><img src="https://avatars.githubusercontent.com/u/23612546?v=4" width="100" height="100" alt="NamesMT"/><br /><sub><b>NamesMT</b></sub></a>              |         <a href="https://github.com/taylorwilsdon"><img src="https://avatars.githubusercontent.com/u/6508528?v=4" width="100" height="100" alt="taylorwilsdon"/><br /><sub><b>taylorwilsdon</b></sub></a>          |               <a href="https://github.com/sammcj"><img src="https://avatars.githubusercontent.com/u/862951?v=4" width="100" height="100" alt="sammcj"/><br /><sub><b>sammcj</b></sub></a>                |                     <a href="https://github.com/p12tic"><img src="https://avatars.githubusercontent.com/u/1056711?v=4" width="100" height="100" alt="p12tic"/><br /><sub><b>p12tic</b></sub></a>                      |                      <a href="https://github.com/gtaylor"><img src="https://avatars.githubusercontent.com/u/75556?v=4" width="100" height="100" alt="gtaylor"/><br /><sub><b>gtaylor</b></sub></a>                       |
-|       <a href="https://github.com/brunobergher"><img src="https://avatars.githubusercontent.com/u/328388?v=4" width="100" height="100" alt="brunobergher"/><br /><sub><b>brunobergher</b></sub></a>        |           <a href="https://github.com/aitoroses"><img src="https://avatars.githubusercontent.com/u/1699368?v=4" width="100" height="100" alt="aitoroses"/><br /><sub><b>aitoroses</b></sub></a>           |                        <a href="https://github.com/ross"><img src="https://avatars.githubusercontent.com/u/12789?v=4" width="100" height="100" alt="ross"/><br /><sub><b>ross</b></sub></a>                        |    <a href="https://github.com/mr-ryan-james"><img src="https://avatars.githubusercontent.com/u/9344431?v=4" width="100" height="100" alt="mr-ryan-james"/><br /><sub><b>mr-ryan-james</b></sub></a>     |                    <a href="https://github.com/heyseth"><img src="https://avatars.githubusercontent.com/u/8293842?v=4" width="100" height="100" alt="heyseth"/><br /><sub><b>heyseth</b></sub></a>                    |                  <a href="https://github.com/taisukeoe"><img src="https://avatars.githubusercontent.com/u/1506707?v=4" width="100" height="100" alt="taisukeoe"/><br /><sub><b>taisukeoe</b></sub></a>                   |
-|                  <a href="https://github.com/avtc"><img src="https://avatars.githubusercontent.com/u/10050240?v=4" width="100" height="100" alt="avtc"/><br /><sub><b>avtc</b></sub></a>                   |                <a href="https://github.com/eonghk"><img src="https://avatars.githubusercontent.com/u/139964?v=4" width="100" height="100" alt="eonghk"/><br /><sub><b>eonghk</b></sub></a>                |             <a href="https://github.com/GOODBOY008"><img src="https://avatars.githubusercontent.com/u/13617900?v=4" width="100" height="100" alt="GOODBOY008"/><br /><sub><b>GOODBOY008</b></sub></a>              |             <a href="https://github.com/kcwhite"><img src="https://avatars.githubusercontent.com/u/3812801?v=4" width="100" height="100" alt="kcwhite"/><br /><sub><b>kcwhite</b></sub></a>              |                  <a href="https://github.com/ronyblum"><img src="https://avatars.githubusercontent.com/u/20314054?v=4" width="100" height="100" alt="ronyblum"/><br /><sub><b>ronyblum</b></sub></a>                  |                 <a href="https://github.com/teddyOOXX"><img src="https://avatars.githubusercontent.com/u/121077180?v=4" width="100" height="100" alt="teddyOOXX"/><br /><sub><b>teddyOOXX</b></sub></a>                  |
-|          <a href="https://github.com/thill2323"><img src="https://avatars.githubusercontent.com/u/221205361?v=4" width="100" height="100" alt="thill2323"/><br /><sub><b>thill2323</b></sub></a>           |        <a href="https://github.com/vincentsong"><img src="https://avatars.githubusercontent.com/u/2343574?v=4" width="100" height="100" alt="vincentsong"/><br /><sub><b>vincentsong</b></sub></a>        |                  <a href="https://github.com/yongjer"><img src="https://avatars.githubusercontent.com/u/54315206?v=4" width="100" height="100" alt="yongjer"/><br /><sub><b>yongjer</b></sub></a>                  |         <a href="https://github.com/zeozeozeo"><img src="https://avatars.githubusercontent.com/u/108888572?v=4" width="100" height="100" alt="zeozeozeo"/><br /><sub><b>zeozeozeo</b></sub></a>          |                     <a href="https://github.com/ashktn"><img src="https://avatars.githubusercontent.com/u/6723913?v=4" width="100" height="100" alt="ashktn"/><br /><sub><b>ashktn</b></sub></a>                      |                     <a href="https://github.com/franekp"><img src="https://avatars.githubusercontent.com/u/9804230?v=4" width="100" height="100" alt="franekp"/><br /><sub><b>franekp</b></sub></a>                      |
-|            <a href="https://github.com/yt3trees"><img src="https://avatars.githubusercontent.com/u/57471763?v=4" width="100" height="100" alt="yt3trees"/><br /><sub><b>yt3trees</b></sub></a>             |            <a href="https://github.com/seedlord"><img src="https://avatars.githubusercontent.com/u/20932878?v=4" width="100" height="100" alt="seedlord"/><br /><sub><b>seedlord</b></sub></a>            |             <a href="https://github.com/axkirillov"><img src="https://avatars.githubusercontent.com/u/32141102?v=4" width="100" height="100" alt="axkirillov"/><br /><sub><b>axkirillov</b></sub></a>              |        <a href="https://github.com/anton-otee"><img src="https://avatars.githubusercontent.com/u/149477749?v=4" width="100" height="100" alt="anton-otee"/><br /><sub><b>anton-otee</b></sub></a>        |                 <a href="https://github.com/benzntech"><img src="https://avatars.githubusercontent.com/u/4044180?v=4" width="100" height="100" alt="benzntech"/><br /><sub><b>benzntech</b></sub></a>                 |                   <a href="https://github.com/bramburn"><img src="https://avatars.githubusercontent.com/u/11090413?v=4" width="100" height="100" alt="bramburn"/><br /><sub><b>bramburn</b></sub></a>                    |
-|          <a href="https://github.com/olearycrew"><img src="https://avatars.githubusercontent.com/u/6044920?v=4" width="100" height="100" alt="olearycrew"/><br /><sub><b>olearycrew</b></sub></a>          |     <a href="https://github.com/catrielmuller"><img src="https://avatars.githubusercontent.com/u/2272323?v=4" width="100" height="100" alt="catrielmuller"/><br /><sub><b>catrielmuller</b></sub></a>     |                <a href="https://github.com/devxpain"><img src="https://avatars.githubusercontent.com/u/170700110?v=4" width="100" height="100" alt="devxpain"/><br /><sub><b>devxpain</b></sub></a>                |            <a href="https://github.com/snoyiatk"><img src="https://avatars.githubusercontent.com/u/3056569?v=4" width="100" height="100" alt="snoyiatk"/><br /><sub><b>snoyiatk</b></sub></a>            |           <a href="https://github.com/GitlyHallows"><img src="https://avatars.githubusercontent.com/u/136527758?v=4" width="100" height="100" alt="GitlyHallows"/><br /><sub><b>GitlyHallows</b></sub></a>            |                    <a href="https://github.com/philfung"><img src="https://avatars.githubusercontent.com/u/1054593?v=4" width="100" height="100" alt="philfung"/><br /><sub><b>philfung</b></sub></a>                    |
-|                <a href="https://github.com/napter"><img src="https://avatars.githubusercontent.com/u/6260841?v=4" width="100" height="100" alt="napter"/><br /><sub><b>napter</b></sub></a>                |                     <a href="https://github.com/mdp"><img src="https://avatars.githubusercontent.com/u/2868?v=4" width="100" height="100" alt="mdp"/><br /><sub><b>mdp</b></sub></a>                      |              <a href="https://github.com/SplittyDev"><img src="https://avatars.githubusercontent.com/u/4216049?v=4" width="100" height="100" alt="SplittyDev"/><br /><sub><b>SplittyDev</b></sub></a>              |              <a href="https://github.com/jcbdev"><img src="https://avatars.githubusercontent.com/u/17152092?v=4" width="100" height="100" alt="jcbdev"/><br /><sub><b>jcbdev</b></sub></a>               |         <a href="https://github.com/Chenjiayuan195"><img src="https://avatars.githubusercontent.com/u/30591313?v=4" width="100" height="100" alt="Chenjiayuan195"/><br /><sub><b>Chenjiayuan195</b></sub></a>         |                   <a href="https://github.com/julionav"><img src="https://avatars.githubusercontent.com/u/45607850?v=4" width="100" height="100" alt="julionav"/><br /><sub><b>julionav</b></sub></a>                    |
-|        <a href="https://github.com/KanTakahiro"><img src="https://avatars.githubusercontent.com/u/64513424?v=4" width="100" height="100" alt="KanTakahiro"/><br /><sub><b>KanTakahiro</b></sub></a>        | <a href="https://github.com/kevint-cerebras"><img src="https://avatars.githubusercontent.com/u/194834902?v=4" width="100" height="100" alt="kevint-cerebras"/><br /><sub><b>kevint-cerebras</b></sub></a> |                  <a href="https://github.com/cdlliuy"><img src="https://avatars.githubusercontent.com/u/17263036?v=4" width="100" height="100" alt="cdlliuy"/><br /><sub><b>cdlliuy</b></sub></a>                  |              <a href="https://github.com/im47cn"><img src="https://avatars.githubusercontent.com/u/67424112?v=4" width="100" height="100" alt="im47cn"/><br /><sub><b>im47cn</b></sub></a>               |                   <a href="https://github.com/hongzio"><img src="https://avatars.githubusercontent.com/u/11085613?v=4" width="100" height="100" alt="hongzio"/><br /><sub><b>hongzio</b></sub></a>                    |                     <a href="https://github.com/hatsu38"><img src="https://avatars.githubusercontent.com/u/16137809?v=4" width="100" height="100" alt="hatsu38"/><br /><sub><b>hatsu38</b></sub></a>                     |
-|           <a href="https://github.com/forestyoo"><img src="https://avatars.githubusercontent.com/u/2929056?v=4" width="100" height="100" alt="forestyoo"/><br /><sub><b>forestyoo</b></sub></a>            | <a href="https://github.com/janaki-sasidhar"><img src="https://avatars.githubusercontent.com/u/42799643?v=4" width="100" height="100" alt="janaki-sasidhar"/><br /><sub><b>janaki-sasidhar</b></sub></a>  |                   <a href="https://github.com/dqroid"><img src="https://avatars.githubusercontent.com/u/192424994?v=4" width="100" height="100" alt="dqroid"/><br /><sub><b>dqroid</b></sub></a>                   |            <a href="https://github.com/dairui1"><img src="https://avatars.githubusercontent.com/u/183250644?v=4" width="100" height="100" alt="dairui1"/><br /><sub><b>dairui1</b></sub></a>             |           <a href="https://github.com/chris-garrett"><img src="https://avatars.githubusercontent.com/u/1113459?v=4" width="100" height="100" alt="chris-garrett"/><br /><sub><b>chris-garrett</b></sub></a>           |                 <a href="https://github.com/bbenshalom"><img src="https://avatars.githubusercontent.com/u/4359971?v=4" width="100" height="100" alt="bbenshalom"/><br /><sub><b>bbenshalom</b></sub></a>                 |
-|              <a href="https://github.com/bannzai"><img src="https://avatars.githubusercontent.com/u/10897361?v=4" width="100" height="100" alt="bannzai"/><br /><sub><b>bannzai</b></sub></a>              |                  <a href="https://github.com/axmo"><img src="https://avatars.githubusercontent.com/u/2386344?v=4" width="100" height="100" alt="axmo"/><br /><sub><b>axmo</b></sub></a>                   |                 <a href="https://github.com/asychin"><img src="https://avatars.githubusercontent.com/u/178776568?v=4" width="100" height="100" alt="asychin"/><br /><sub><b>asychin</b></sub></a>                  |            <a href="https://github.com/amittell"><img src="https://avatars.githubusercontent.com/u/1388680?v=4" width="100" height="100" alt="amittell"/><br /><sub><b>amittell</b></sub></a>            |               <a href="https://github.com/nevermorec"><img src="https://avatars.githubusercontent.com/u/22953064?v=4" width="100" height="100" alt="nevermorec"/><br /><sub><b>nevermorec</b></sub></a>               |       <a href="https://github.com/Yoshino-Yukitaro"><img src="https://avatars.githubusercontent.com/u/67864326?v=4" width="100" height="100" alt="Yoshino-Yukitaro"/><br /><sub><b>Yoshino-Yukitaro</b></sub></a>        |
-|         <a href="https://github.com/Yikai-Liao"><img src="https://avatars.githubusercontent.com/u/110762732?v=4" width="100" height="100" alt="Yikai-Liao"/><br /><sub><b>Yikai-Liao</b></sub></a>         |                 <a href="https://github.com/zxdvd"><img src="https://avatars.githubusercontent.com/u/107175?v=4" width="100" height="100" alt="zxdvd"/><br /><sub><b>zxdvd</b></sub></a>                  |                   <a href="https://github.com/s97712"><img src="https://avatars.githubusercontent.com/u/13390001?v=4" width="100" height="100" alt="s97712"/><br /><sub><b>s97712</b></sub></a>                    |         <a href="https://github.com/vladstudio"><img src="https://avatars.githubusercontent.com/u/914320?v=4" width="100" height="100" alt="vladstudio"/><br /><sub><b>vladstudio</b></sub></a>          |                  <a href="https://github.com/vivekfyi"><img src="https://avatars.githubusercontent.com/u/5036512?v=4" width="100" height="100" alt="vivekfyi"/><br /><sub><b>vivekfyi</b></sub></a>                   |                   <a href="https://github.com/HahaBill"><img src="https://avatars.githubusercontent.com/u/32552798?v=4" width="100" height="100" alt="HahaBill"/><br /><sub><b>HahaBill</b></sub></a>                    |
-|            <a href="https://github.com/tmsjngx0"><img src="https://avatars.githubusercontent.com/u/40481136?v=4" width="100" height="100" alt="tmsjngx0"/><br /><sub><b>tmsjngx0</b></sub></a>             |               <a href="https://github.com/TGlide"><img src="https://avatars.githubusercontent.com/u/26071571?v=4" width="100" height="100" alt="TGlide"/><br /><sub><b>TGlide</b></sub></a>               |     <a href="https://github.com/Githubguy132010"><img src="https://avatars.githubusercontent.com/u/145768128?v=4" width="100" height="100" alt="Githubguy132010"/><br /><sub><b>Githubguy132010</b></sub></a>      |                <a href="https://github.com/tgfjt"><img src="https://avatars.githubusercontent.com/u/2628239?v=4" width="100" height="100" alt="tgfjt"/><br /><sub><b>tgfjt</b></sub></a>                 |            <a href="https://github.com/maekawataiki"><img src="https://avatars.githubusercontent.com/u/26317009?v=4" width="100" height="100" alt="maekawataiki"/><br /><sub><b>maekawataiki</b></sub></a>            |       <a href="https://github.com/AlexandruSmirnov"><img src="https://avatars.githubusercontent.com/u/210187997?v=4" width="100" height="100" alt="AlexandruSmirnov"/><br /><sub><b>AlexandruSmirnov</b></sub></a>       |
-|         <a href="https://github.com/user202729"><img src="https://avatars.githubusercontent.com/u/25191436?v=4" width="100" height="100" alt="user202729"/><br /><sub><b>user202729</b></sub></a>          |         <a href="https://github.com/takakoutso"><img src="https://avatars.githubusercontent.com/u/10097886?v=4" width="100" height="100" alt="takakoutso"/><br /><sub><b>takakoutso</b></sub></a>         |          <a href="https://github.com/student20880"><img src="https://avatars.githubusercontent.com/u/74263488?v=4" width="100" height="100" alt="student20880"/><br /><sub><b>student20880</b></sub></a>           |  <a href="https://github.com/shubhamgupta731"><img src="https://avatars.githubusercontent.com/u/963927?v=4" width="100" height="100" alt="shubhamgupta731"/><br /><sub><b>shubhamgupta731</b></sub></a>  |            <a href="https://github.com/shohei-ihaya"><img src="https://avatars.githubusercontent.com/u/25131938?v=4" width="100" height="100" alt="shohei-ihaya"/><br /><sub><b>shohei-ihaya</b></sub></a>            |               <a href="https://github.com/shivamd1810"><img src="https://avatars.githubusercontent.com/u/3871414?v=4" width="100" height="100" alt="shivamd1810"/><br /><sub><b>shivamd1810</b></sub></a>                |
-|                <a href="https://github.com/shaybc"><img src="https://avatars.githubusercontent.com/u/8535905?v=4" width="100" height="100" alt="shaybc"/><br /><sub><b>shaybc</b></sub></a>                |        <a href="https://github.com/sensei-woo"><img src="https://avatars.githubusercontent.com/u/168141084?v=4" width="100" height="100" alt="sensei-woo"/><br /><sub><b>sensei-woo</b></sub></a>         |          <a href="https://github.com/samir-nimbly"><img src="https://avatars.githubusercontent.com/u/112695483?v=4" width="100" height="100" alt="samir-nimbly"/><br /><sub><b>samir-nimbly</b></sub></a>          |           <a href="https://github.com/zetaloop"><img src="https://avatars.githubusercontent.com/u/36418285?v=4" width="100" height="100" alt="zetaloop"/><br /><sub><b>zetaloop</b></sub></a>            |           <a href="https://github.com/robertheadley"><img src="https://avatars.githubusercontent.com/u/1780455?v=4" width="100" height="100" alt="robertheadley"/><br /><sub><b>robertheadley</b></sub></a>           |              <a href="https://github.com/refactorthis"><img src="https://avatars.githubusercontent.com/u/3012240?v=4" width="100" height="100" alt="refactorthis"/><br /><sub><b>refactorthis</b></sub></a>              |
-|       <a href="https://github.com/qingyuan1109"><img src="https://avatars.githubusercontent.com/u/841732?v=4" width="100" height="100" alt="qingyuan1109"/><br /><sub><b>qingyuan1109</b></sub></a>        |             <a href="https://github.com/pokutuna"><img src="https://avatars.githubusercontent.com/u/57545?v=4" width="100" height="100" alt="pokutuna"/><br /><sub><b>pokutuna</b></sub></a>              |             <a href="https://github.com/philipnext"><img src="https://avatars.githubusercontent.com/u/81944499?v=4" width="100" height="100" alt="philipnext"/><br /><sub><b>philipnext</b></sub></a>              |       <a href="https://github.com/village-way"><img src="https://avatars.githubusercontent.com/u/11625846?v=4" width="100" height="100" alt="village-way"/><br /><sub><b>village-way</b></sub></a>       |                  <a href="https://github.com/oprstchn"><img src="https://avatars.githubusercontent.com/u/16177972?v=4" width="100" height="100" alt="oprstchn"/><br /><sub><b>oprstchn</b></sub></a>                  |                     <a href="https://github.com/nobu007"><img src="https://avatars.githubusercontent.com/u/8529529?v=4" width="100" height="100" alt="nobu007"/><br /><sub><b>nobu007</b></sub></a>                      |
-|            <a href="https://github.com/mosleyit"><img src="https://avatars.githubusercontent.com/u/189396442?v=4" width="100" height="100" alt="mosleyit"/><br /><sub><b>mosleyit</b></sub></a>            |       <a href="https://github.com/moqimoqidea"><img src="https://avatars.githubusercontent.com/u/39821951?v=4" width="100" height="100" alt="moqimoqidea"/><br /><sub><b>moqimoqidea</b></sub></a>        |                  <a href="https://github.com/mlopezr"><img src="https://avatars.githubusercontent.com/u/8202027?v=4" width="100" height="100" alt="mlopezr"/><br /><sub><b>mlopezr</b></sub></a>                   |                <a href="https://github.com/mecab"><img src="https://avatars.githubusercontent.com/u/1580772?v=4" width="100" height="100" alt="mecab"/><br /><sub><b>mecab</b></sub></a>                 |                        <a href="https://github.com/olup"><img src="https://avatars.githubusercontent.com/u/13785588?v=4" width="100" height="100" alt="olup"/><br /><sub><b>olup</b></sub></a>                        |               <a href="https://github.com/lightrabbit"><img src="https://avatars.githubusercontent.com/u/1521765?v=4" width="100" height="100" alt="lightrabbit"/><br /><sub><b>lightrabbit</b></sub></a>                |
-|                 <a href="https://github.com/lhish"><img src="https://avatars.githubusercontent.com/u/59965910?v=4" width="100" height="100" alt="lhish"/><br /><sub><b>lhish</b></sub></a>                 |                 <a href="https://github.com/kohii"><img src="https://avatars.githubusercontent.com/u/6891780?v=4" width="100" height="100" alt="kohii"/><br /><sub><b>kohii</b></sub></a>                 |         <a href="https://github.com/PretzelVector"><img src="https://avatars.githubusercontent.com/u/95664360?v=4" width="100" height="100" alt="PretzelVector"/><br /><sub><b>PretzelVector</b></sub></a>         |           <a href="https://github.com/kinandan"><img src="https://avatars.githubusercontent.com/u/186135699?v=4" width="100" height="100" alt="kinandan"/><br /><sub><b>kinandan</b></sub></a>           |                    <a href="https://github.com/jwcraig"><img src="https://avatars.githubusercontent.com/u/241358?v=4" width="100" height="100" alt="jwcraig"/><br /><sub><b>jwcraig</b></sub></a>                     |                   <a href="https://github.com/shoopapa"><img src="https://avatars.githubusercontent.com/u/45986634?v=4" width="100" height="100" alt="shoopapa"/><br /><sub><b>shoopapa</b></sub></a>                    |
-|       <a href="https://github.com/samsilveira"><img src="https://avatars.githubusercontent.com/u/109295696?v=4" width="100" height="100" alt="samsilveira"/><br /><sub><b>samsilveira</b></sub></a>        |                 <a href="https://github.com/pfitz"><img src="https://avatars.githubusercontent.com/u/3062911?v=4" width="100" height="100" alt="pfitz"/><br /><sub><b>pfitz</b></sub></a>                 |              <a href="https://github.com/ExactDoug"><img src="https://avatars.githubusercontent.com/u/158221557?v=4" width="100" height="100" alt="ExactDoug"/><br /><sub><b>ExactDoug</b></sub></a>               | <a href="https://github.com/celestial-vault"><img src="https://avatars.githubusercontent.com/u/58194240?v=4" width="100" height="100" alt="celestial-vault"/><br /><sub><b>celestial-vault</b></sub></a> |                    <a href="https://github.com/linegel"><img src="https://avatars.githubusercontent.com/u/1746296?v=4" width="100" height="100" alt="linegel"/><br /><sub><b>linegel</b></sub></a>                    | <a href="https://github.com/edwin-truthsearch-io"><img src="https://avatars.githubusercontent.com/u/211044285?v=4" width="100" height="100" alt="edwin-truthsearch-io"/><br /><sub><b>edwin-truthsearch-io</b></sub></a> |
-|      <a href="https://github.com/EamonNerbonne"><img src="https://avatars.githubusercontent.com/u/803518?v=4" width="100" height="100" alt="EamonNerbonne"/><br /><sub><b>EamonNerbonne</b></sub></a>      |           <a href="https://github.com/dbasclpy"><img src="https://avatars.githubusercontent.com/u/139889137?v=4" width="100" height="100" alt="dbasclpy"/><br /><sub><b>dbasclpy</b></sub></a>            |               <a href="https://github.com/dflatline"><img src="https://avatars.githubusercontent.com/u/60121893?v=4" width="100" height="100" alt="dflatline"/><br /><sub><b>dflatline</b></sub></a>               |             <a href="https://github.com/Deon588"><img src="https://avatars.githubusercontent.com/u/12716437?v=4" width="100" height="100" alt="Deon588"/><br /><sub><b>Deon588</b></sub></a>             |                       <a href="https://github.com/dleen"><img src="https://avatars.githubusercontent.com/u/1297964?v=4" width="100" height="100" alt="dleen"/><br /><sub><b>dleen</b></sub></a>                       |                      <a href="https://github.com/CW-B-W"><img src="https://avatars.githubusercontent.com/u/76680670?v=4" width="100" height="100" alt="CW-B-W"/><br /><sub><b>CW-B-W</b></sub></a>                       |
-|           <a href="https://github.com/chadgauth"><img src="https://avatars.githubusercontent.com/u/2413356?v=4" width="100" height="100" alt="chadgauth"/><br /><sub><b>chadgauth</b></sub></a>            |       <a href="https://github.com/thecolorblue"><img src="https://avatars.githubusercontent.com/u/13137?v=4" width="100" height="100" alt="thecolorblue"/><br /><sub><b>thecolorblue</b></sub></a>        |              <a href="https://github.com/bogdan0083"><img src="https://avatars.githubusercontent.com/u/7077307?v=4" width="100" height="100" alt="bogdan0083"/><br /><sub><b>bogdan0083</b></sub></a>              |            <a href="https://github.com/benashby"><img src="https://avatars.githubusercontent.com/u/1023089?v=4" width="100" height="100" alt="benashby"/><br /><sub><b>benashby</b></sub></a>            |                   <a href="https://github.com/Atlogit"><img src="https://avatars.githubusercontent.com/u/86947554?v=4" width="100" height="100" alt="Atlogit"/><br /><sub><b>Atlogit</b></sub></a>                    |                  <a href="https://github.com/atlasgong"><img src="https://avatars.githubusercontent.com/u/68199735?v=4" width="100" height="100" alt="atlasgong"/><br /><sub><b>atlasgong</b></sub></a>                  |
-|           <a href="https://github.com/AntiMoron"><img src="https://avatars.githubusercontent.com/u/6587734?v=4" width="100" height="100" alt="AntiMoron"/><br /><sub><b>AntiMoron</b></sub></a>            |    <a href="https://github.com/andrewshu2000"><img src="https://avatars.githubusercontent.com/u/57741937?v=4" width="100" height="100" alt="andrewshu2000"/><br /><sub><b>andrewshu2000</b></sub></a>     |       <a href="https://github.com/andreastempsch"><img src="https://avatars.githubusercontent.com/u/117991125?v=4" width="100" height="100" alt="andreastempsch"/><br /><sub><b>andreastempsch</b></sub></a>       |             <a href="https://github.com/alasano"><img src="https://avatars.githubusercontent.com/u/14372930?v=4" width="100" height="100" alt="alasano"/><br /><sub><b>alasano</b></sub></a>             |               <a href="https://github.com/QuinsZouls"><img src="https://avatars.githubusercontent.com/u/40646096?v=4" width="100" height="100" alt="QuinsZouls"/><br /><sub><b>QuinsZouls</b></sub></a>               |           <a href="https://github.com/HadesArchitect"><img src="https://avatars.githubusercontent.com/u/1742301?v=4" width="100" height="100" alt="HadesArchitect"/><br /><sub><b>HadesArchitect</b></sub></a>           |
-|                <a href="https://github.com/alarno"><img src="https://avatars.githubusercontent.com/u/4355547?v=4" width="100" height="100" alt="alarno"/><br /><sub><b>alarno</b></sub></a>                |             <a href="https://github.com/nexon33"><img src="https://avatars.githubusercontent.com/u/47557266?v=4" width="100" height="100" alt="nexon33"/><br /><sub><b>nexon33</b></sub></a>              |             <a href="https://github.com/adilhafeez"><img src="https://avatars.githubusercontent.com/u/13196462?v=4" width="100" height="100" alt="adilhafeez"/><br /><sub><b>adilhafeez</b></sub></a>              |       <a href="https://github.com/adamwlarson"><img src="https://avatars.githubusercontent.com/u/1392315?v=4" width="100" height="100" alt="adamwlarson"/><br /><sub><b>adamwlarson</b></sub></a>        |                   <a href="https://github.com/adamhill"><img src="https://avatars.githubusercontent.com/u/188638?v=4" width="100" height="100" alt="adamhill"/><br /><sub><b>adamhill</b></sub></a>                   |                     <a href="https://github.com/AMHesch"><img src="https://avatars.githubusercontent.com/u/4777192?v=4" width="100" height="100" alt="AMHesch"/><br /><sub><b>AMHesch</b></sub></a>                      |
-|           <a href="https://github.com/adambrand"><img src="https://avatars.githubusercontent.com/u/36556838?v=4" width="100" height="100" alt="adambrand"/><br /><sub><b>adambrand</b></sub></a>           |              <a href="https://github.com/01Rian"><img src="https://avatars.githubusercontent.com/u/109045233?v=4" width="100" height="100" alt="01Rian"/><br /><sub><b>01Rian</b></sub></a>               |                         <a href="https://github.com/RSO"><img src="https://avatars.githubusercontent.com/u/139663?v=4" width="100" height="100" alt="RSO"/><br /><sub><b>RSO</b></sub></a>                         |    <a href="https://github.com/RandalSchwartz"><img src="https://avatars.githubusercontent.com/u/6342?v=4" width="100" height="100" alt="RandalSchwartz"/><br /><sub><b>RandalSchwartz</b></sub></a>     |     <a href="https://github.com/SECKainersdorfer"><img src="https://avatars.githubusercontent.com/u/155164204?v=4" width="100" height="100" alt="SECKainersdorfer"/><br /><sub><b>SECKainersdorfer</b></sub></a>      |                        <a href="https://github.com/R-omk"><img src="https://avatars.githubusercontent.com/u/1633879?v=4" width="100" height="100" alt="R-omk"/><br /><sub><b>R-omk</b></sub></a>                         |
-|              <a href="https://github.com/pwilkin"><img src="https://avatars.githubusercontent.com/u/5802960?v=4" width="100" height="100" alt="pwilkin"/><br /><sub><b>pwilkin</b></sub></a>               |                 <a href="https://github.com/Sarke"><img src="https://avatars.githubusercontent.com/u/2719310?v=4" width="100" height="100" alt="Sarke"/><br /><sub><b>Sarke</b></sub></a>                 | <a href="https://github.com/PaperBoardOfficial"><img src="https://avatars.githubusercontent.com/u/151846514?v=4" width="100" height="100" alt="PaperBoardOfficial"/><br /><sub><b>PaperBoardOfficial</b></sub></a> |      <a href="https://github.com/OlegOAndreev"><img src="https://avatars.githubusercontent.com/u/149705?v=4" width="100" height="100" alt="OlegOAndreev"/><br /><sub><b>OlegOAndreev</b></sub></a>       |                        <a href="https://github.com/Naam"><img src="https://avatars.githubusercontent.com/u/2959826?v=4" width="100" height="100" alt="Naam"/><br /><sub><b>Naam</b></sub></a>                         |                     <a href="https://github.com/NaccOll"><img src="https://avatars.githubusercontent.com/u/26819913?v=4" width="100" height="100" alt="NaccOll"/><br /><sub><b>NaccOll</b></sub></a>                     |
-|               <a href="https://github.com/kvokka"><img src="https://avatars.githubusercontent.com/u/15954013?v=4" width="100" height="100" alt="kvokka"/><br /><sub><b>kvokka</b></sub></a>                |              <a href="https://github.com/ecmasx"><img src="https://avatars.githubusercontent.com/u/135958728?v=4" width="100" height="100" alt="ecmasx"/><br /><sub><b>ecmasx</b></sub></a>               |                    <a href="https://github.com/mollux"><img src="https://avatars.githubusercontent.com/u/3983285?v=4" width="100" height="100" alt="mollux"/><br /><sub><b>mollux</b></sub></a>                    |     <a href="https://github.com/marvijo-code"><img src="https://avatars.githubusercontent.com/u/82562019?v=4" width="100" height="100" alt="marvijo-code"/><br /><sub><b>marvijo-code</b></sub></a>      |                <a href="https://github.com/markijbema"><img src="https://avatars.githubusercontent.com/u/624143?v=4" width="100" height="100" alt="markijbema"/><br /><sub><b>markijbema</b></sub></a>                |            <a href="https://github.com/mamertofabian"><img src="https://avatars.githubusercontent.com/u/7698436?v=4" width="100" height="100" alt="mamertofabian"/><br /><sub><b>mamertofabian</b></sub></a>             |
-| <a href="https://github.com/monkeyDluffy6017"><img src="https://avatars.githubusercontent.com/u/9354193?v=4" width="100" height="100" alt="monkeyDluffy6017"/><br /><sub><b>monkeyDluffy6017</b></sub></a> |      <a href="https://github.com/libertyteeth"><img src="https://avatars.githubusercontent.com/u/32841567?v=4" width="100" height="100" alt="libertyteeth"/><br /><sub><b>libertyteeth</b></sub></a>      |                    <a href="https://github.com/shtse8"><img src="https://avatars.githubusercontent.com/u/8020099?v=4" width="100" height="100" alt="shtse8"/><br /><sub><b>shtse8</b></sub></a>                    |          <a href="https://github.com/Rexarrior"><img src="https://avatars.githubusercontent.com/u/25753287?v=4" width="100" height="100" alt="Rexarrior"/><br /><sub><b>Rexarrior</b></sub></a>          |             <a href="https://github.com/kevinvandijk"><img src="https://avatars.githubusercontent.com/u/223256?v=4" width="100" height="100" alt="kevinvandijk"/><br /><sub><b>kevinvandijk</b></sub></a>             |                  <a href="https://github.com/KevinZhao"><img src="https://avatars.githubusercontent.com/u/1167525?v=4" width="100" height="100" alt="KevinZhao"/><br /><sub><b>KevinZhao</b></sub></a>                   |
-|                   <a href="https://github.com/ksze"><img src="https://avatars.githubusercontent.com/u/381556?v=4" width="100" height="100" alt="ksze"/><br /><sub><b>ksze</b></sub></a>                    |               <a href="https://github.com/Juice10"><img src="https://avatars.githubusercontent.com/u/4106?v=4" width="100" height="100" alt="Juice10"/><br /><sub><b>Juice10</b></sub></a>                |          <a href="https://github.com/snova-jorgep"><img src="https://avatars.githubusercontent.com/u/166410071?v=4" width="100" height="100" alt="snova-jorgep"/><br /><sub><b>snova-jorgep</b></sub></a>          |                <a href="https://github.com/Fovty"><img src="https://avatars.githubusercontent.com/u/38868829?v=4" width="100" height="100" alt="Fovty"/><br /><sub><b>Fovty</b></sub></a>                |                     <a href="https://github.com/Jdo300"><img src="https://avatars.githubusercontent.com/u/67338327?v=4" width="100" height="100" alt="Jdo300"/><br /><sub><b>Jdo300</b></sub></a>                     |                       <a href="https://github.com/hesara"><img src="https://avatars.githubusercontent.com/u/1335918?v=4" width="100" height="100" alt="hesara"/><br /><sub><b>hesara</b></sub></a>                       |
-|           <a href="https://github.com/DeXtroTip"><img src="https://avatars.githubusercontent.com/u/21011087?v=4" width="100" height="100" alt="DeXtroTip"/><br /><sub><b>DeXtroTip</b></sub></a>           |                                                                                                                                                                                                           |                                                                                                                                                                                                                    |                                                                                                                                                                                                          |                                                                                                                                                                                                                       |                                                                                                                                                                                                                          |
-
-<!-- END CONTRIBUTORS SECTION -->
-
-## License
-
-[Apache 2.0 © 2025 Roo Code, Inc.](./LICENSE)
-
----
+## Вклад в проект
 
-**Enjoy Roo Code!** Whether you keep it on a short leash or let it roam autonomously, we can’t wait to see what you build. If you have questions or feature ideas, drop by our [Reddit community](https://www.reddit.com/r/RooCode/) or [Discord](https://discord.gg/roocode). Happy coding!
+Мы любим вклад сообщества! Начните с чтения нашего [CONTRIBUTING.md](CONTRIBUTING.md).
diff --git a/apps/web-researcherry/.env.example b/apps/web-researcherry/.env.example
new file mode 100644
index 000000000..734a9a2a0
--- /dev/null
+++ b/apps/web-researcherry/.env.example
@@ -0,0 +1,8 @@
+# PostHog Analytics Configuration
+# Replace these values with your actual PostHog API key and host
+NEXT_PUBLIC_POSTHOG_KEY=your_posthog_api_key_here
+NEXT_PUBLIC_POSTHOG_HOST=https://us.i.posthog.com
+
+# Basin Form Endpoint for Static Form Submissions
+# Replace this with your actual Basin form endpoint (e.g., https://usebasin.com/f/your-form-id)
+NEXT_PUBLIC_BASIN_ENDPOINT=https://usebasin.com/f/your-form-id-here
diff --git a/apps/web-researcherry/.gitignore b/apps/web-researcherry/.gitignore
new file mode 100644
index 000000000..7b8da95f5
--- /dev/null
+++ b/apps/web-researcherry/.gitignore
@@ -0,0 +1,42 @@
+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+/.pnp
+.pnp.*
+.yarn/*
+!.yarn/patches
+!.yarn/plugins
+!.yarn/releases
+!.yarn/versions
+
+# testing
+/coverage
+
+# next.js
+/.next/
+/out/
+
+# production
+/build
+
+# misc
+.DS_Store
+*.pem
+
+# debug
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+.pnpm-debug.log*
+
+# env files (can opt-in for committing if needed)
+.env*
+!.env.example
+
+# vercel
+.vercel
+
+# typescript
+*.tsbuildinfo
+next-env.d.ts
diff --git a/apps/web-researcherry/components.json b/apps/web-researcherry/components.json
new file mode 100644
index 000000000..87c8a91fa
--- /dev/null
+++ b/apps/web-researcherry/components.json
@@ -0,0 +1,21 @@
+{
+	"$schema": "https://ui.shadcn.com/schema.json",
+	"style": "new-york",
+	"rsc": true,
+	"tsx": true,
+	"tailwind": {
+		"config": "tailwind.config.js",
+		"css": "src/app/globals.css",
+		"baseColor": "slate",
+		"cssVariables": true,
+		"prefix": ""
+	},
+	"aliases": {
+		"components": "@/components",
+		"utils": "@/lib/utils",
+		"ui": "@/components/ui",
+		"lib": "@/lib",
+		"hooks": "@/hooks"
+	},
+	"iconLibrary": "lucide"
+}
diff --git a/apps/web-researcherry/eslint.config.mjs b/apps/web-researcherry/eslint.config.mjs
new file mode 100644
index 000000000..40d5e58b2
--- /dev/null
+++ b/apps/web-researcherry/eslint.config.mjs
@@ -0,0 +1,4 @@
+import { nextJsConfig } from "@researcherry/config-eslint/next-js"
+
+/** @type {import("eslint").Linter.Config} */
+export default [...nextJsConfig]
diff --git a/apps/web-researcherry/next.config.ts b/apps/web-researcherry/next.config.ts
new file mode 100644
index 000000000..3be574c6b
--- /dev/null
+++ b/apps/web-researcherry/next.config.ts
@@ -0,0 +1,34 @@
+import type { NextConfig } from "next"
+
+const nextConfig: NextConfig = {
+	webpack: (config) => {
+		config.resolve.extensionAlias = { ".js": [".ts", ".tsx", ".js", ".jsx"] }
+		return config
+	},
+	async redirects() {
+		return [
+			// Redirect www to non-www
+			{
+				source: "/:path*",
+				has: [{ type: "host", value: "www.researcherrycoder.com" }],
+				destination: "https://researcherrycoder.com/:path*",
+				permanent: true,
+			},
+			// Redirect HTTP to HTTPS
+			{
+				source: "/:path*",
+				has: [{ type: "header", key: "x-forwarded-proto", value: "http" }],
+				destination: "https://researcherrycoder.com/:path*",
+				permanent: true,
+			},
+			// Redirect cloud waitlist to Notion page
+			{
+				source: "/cloud-waitlist",
+				destination: "https://researcherry.notion.site/238fd1401b0a8087b858e1ad431507cf?pvs=105",
+				permanent: false,
+			},
+		]
+	},
+}
+
+export default nextConfig
diff --git a/apps/web-researcherry/package.json b/apps/web-researcherry/package.json
new file mode 100644
index 000000000..24a3485e3
--- /dev/null
+++ b/apps/web-researcherry/package.json
@@ -0,0 +1,48 @@
+{
+	"name": "@researcherry/web-researcherry",
+	"version": "0.0.0",
+	"type": "module",
+	"scripts": {
+		"lint": "next lint --max-warnings 0",
+		"check-types": "tsc --noEmit",
+		"dev": "next dev",
+		"build": "next build",
+		"start": "next start",
+		"clean": "rimraf .next .turbo"
+	},
+	"dependencies": {
+		"@radix-ui/react-dialog": "^1.1.14",
+		"@radix-ui/react-slot": "^1.2.3",
+		"@researcherry/evals": "workspace:^",
+		"@researcherry/types": "workspace:^",
+		"@tanstack/react-query": "^5.79.0",
+		"class-variance-authority": "^0.7.1",
+		"clsx": "^2.1.1",
+		"embla-carousel-auto-scroll": "^8.6.0",
+		"embla-carousel-autoplay": "^8.6.0",
+		"embla-carousel-react": "^8.6.0",
+		"framer-motion": "^12.15.0",
+		"lucide-react": "^0.518.0",
+		"next": "^15.2.5",
+		"next-themes": "^0.4.6",
+		"posthog-js": "^1.248.1",
+		"react": "^18.3.1",
+		"react-dom": "^18.3.1",
+		"react-icons": "^5.5.0",
+		"recharts": "^2.15.3",
+		"tailwind-merge": "^3.3.0",
+		"tailwindcss-animate": "^1.0.7",
+		"zod": "^3.25.61"
+	},
+	"devDependencies": {
+		"@researcherry/config-eslint": "workspace:^",
+		"@researcherry/config-typescript": "workspace:^",
+		"@tailwindcss/typography": "^0.5.16",
+		"@types/node": "20.x",
+		"@types/react": "^18.3.23",
+		"@types/react-dom": "^18.3.7",
+		"autoprefixer": "^10.4.21",
+		"postcss": "^8.5.4",
+		"tailwindcss": "^3.4.17"
+	}
+}
diff --git a/apps/web-researcherry/postcss.config.cjs b/apps/web-researcherry/postcss.config.cjs
new file mode 100644
index 000000000..33ad091d2
--- /dev/null
+++ b/apps/web-researcherry/postcss.config.cjs
@@ -0,0 +1,6 @@
+module.exports = {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+}
diff --git a/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-blk.svg b/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-blk.svg
new file mode 100644
index 000000000..5be021c28
--- /dev/null
+++ b/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-blk.svg
@@ -0,0 +1,2971 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:i="http://ns.adobe.com/AdobeIllustrator/10.0/" version="1.1" viewBox="0 0 421.08576 89.89661">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #000;
+        stroke-width: 0px;
+      }
+    </style>
+  </defs>
+  <g id="Layer_1" data-name="Layer 1">
+    <path class="cls-1" d="M100.47191,11.87948l-1.9413,7.0196c-.10277.37163-.49074.58636-.86022.47612l-32.56441-9.71607c-.21659-.06462-.4511-.0188-.62742.12261l-32.25064,25.86279c-.09415.0755-.2065.12493-.32579.14331l-19.18897,2.95717c-.35531.05476-.60863.37372-.58152.73219l.08338,1.10265c.02663.35219.3155.62706.66857.63619l22.28879.57618.25422.00712,16.46922-8.7974c.23057-.12316.511-.10509.72385.04664l11.66782,8.31729c.18297.13043.29076.34195.28875.56663l-.09843,11.03609c-.00127.14283.04192.28252.12359.3997l16.41303,23.55049c.12871.18468.3396.29476.56471.29476h5.19569c.51834,0,.85069-.55125.60872-1.00965l-11.69823-22.16122c-.1144-.21672-.10495-.47793.02482-.68581l6.09931-9.77079c.0664-.10637.16059-.19258.27241-.24932l21.80607-11.06554c.22156-.11243.48651-.09674.69325.04106l6.23133,4.15349c.11306.07536.24589.11557.38177.11557h5.66149c.54825,0,.87646-.60971.57456-1.06735l-15.72045-23.83006c-.32547-.49337-1.08044-.37411-1.23798.19556Z"/>
+  </g>
+  <g id="Layer_2" data-name="Layer 2">
+    <g>
+      <path class="cls-1" d="M282.32791,54.32965h-13.93142c-.54872,0-.99354-.44482-.99354-.99354v-16.77562c0-.54872.44482-.99354.99354-.99354h13.93138c.54872,0,.99354-.44482.99354-.99354v-6.7971c0-.54872-.44482-.99354-.99354-.99354h-17.32342c-.72032,0-1.41113.28614-1.92048.79548l-4.02367,4.02361c-.50937.50936-.79553,1.20021-.79553,1.92056v22.85171c0,.72041.28618,1.41131.7956,1.92072l4.0235,4.02344c.50937.50937,1.20023.79552,1.92058.79552h17.32346c.54869,0,.9935-.44481.9935-.9935v-6.79718c0-.54869-.44481-.9935-.9935-.9935Z"/>
+      <path class="cls-1" d="M398.8927,34.27753v-6.50125c0-.54869-.44481-.9935-.9935-.9935h-25.81964c-.54869,0-.9935.44481-.9935.9935v34.34405c0,.54869.44481.9935.9935.9935h25.81964c.54869,0,.9935-.44481.9935-.9935v-6.50125c0-.54869-.44481-.9935-.9935-.9935h-17.40596c-.14856,0-.269-.12044-.269-.269v-5.55334c0-.14856.12044-.269.269-.269h14.75215c.54869,0,.9935-.44481.9935-.9935v-5.18487c0-.54869-.44481-.9935-.9935-.9935h-14.75215c-.14856,0-.269-.12044-.269-.269v-5.55334c0-.14856.12044-.269.269-.269h17.40596c.54869,0,.9935-.44481.9935-.9935Z"/>
+      <path class="cls-1" d="M208.7182,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM200.37561,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+      <path class="cls-1" d="M248.37445,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM240.03186,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+      <path class="cls-1" d="M321.61078,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM313.26819,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+      <path class="cls-1" d="M361.19584,31.60197l-4.0236-4.0236c-.50941-.50941-1.20032-.79559-1.92073-.79559h-22.75691c-.5487,0-.9935.43783-.9935.98652,0,5.17848.00001,29.17954.00003,34.35801,0,.54869.44481.98652.9935.98652h22.75703c.72036,0,1.41121-.28616,1.92058-.79553l4.0235-4.0235c.50941-.50941.79559-1.20032.79559-1.92073v-22.85161c0-.72033-.28615-1.41115-.7955-1.9205ZM352.85315,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+      <path class="cls-1" d="M171.23896,62.12848l-6.45563-10.55371,4.35004-4.29626c.50934-.50934.79553-1.2002.79553-1.92059v-11.83533c0-.7204-.28619-1.41132-.79559-1.92072l-4.02356-4.02356c-.5094-.5094-1.20026-.79553-1.92059-.79553h-22.67206c-.54871,0-.99347.44476-.99347.99347v34.34406c0,.54871.44476.99353.99353.99353h7.15112c.54871,0,.99353-.44482.99353-.99353v-9.71216c0-.14856.12042-.26898.26898-.26898h5.69489c.33026,0,.63574.17529.80231.46051l5.8222,10.02167c.1781.30499.50476.49249.85797.49249h8.5722c.50568,0,.8183-.55145.55859-.98535ZM160.88489,44.09039h-12.57812v-8.83496h12.57812v8.83496Z"/>
+    </g>
+  </g>
+  <metadata>
+    <i:aipgfRef id="adobe_illustrator_pgf"/>
+    <i:aipgf id="adobe_illustrator_pgf" i:pgfEncoding="zstd/base64" i:pgfVersion="24">
+<![CDATA[
+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
+zeDcL/Ic9DuIeh8GL23GAc/ZRJeD9tJn+GYCBXeNNgttpc/vndQJtnsg9Wycwzp7B1HPvvnO+Zk+
+uHrGD64u2jzsSqDe7pCkYDcoMvDG+dbZMoBtswtcLzvjwOFF7+bOELrRWbdexrUYNPANE774FoMG
+fpeBmZWFwfydaWfCbFyYPbVtNu6P8bSxDtxMGxYTyDZmkxjHtQHTyS93aGUxemza7NtNxvvYBk6G
+QQMv87rAazAMWTmuWBavK+YiN4vxjmED1wBhAh/z+sri2WQxfWtaGcI2rkxhG3fGsG2WOWTburxx
+tfyHgXHtBQzch2lwaRvr4KJWJuaCJo9l03yHrBtNlnWjyVzWth043WED72Dhi9MbNNhsqHO2tLSq
+sJgcoO2hXWDC4qpiqmLCYuJ6q5momKy0mLi0qphuKqyuLSopJiomKqafI1YzhfUOFtjU4PrYLjTI
+yVAzVTEliMrJY9vTQ9M6uMvSmqLK4nDVpYU11XXVtSWVQ8eUpUXFxUTVtXXnxVS1h0bGtFb3lSPn
+tOVwoLqaosLC6uqq0sqa6qrKuprq2rrKwsKi0+qq4srq4mB11bVFlWWldXWFRWVlVUVlNWVVVUXF
+NUXFtUWlRcV1ZWW1tWW1tWW11YW1tbWVtUXX1WWVdWXFpWU1ZbVlRWW1NbXVRbU1dXVFtTVlRXd1
+dWVlRdeVZaV1ldV1RceV1WW1pdVlhWVhiuqKDstqS8tqy4rrauoqi+uKSlaQ05ZjoSrrKgsryyoL
+yyqrq6stx8IW1tWUFRaV1tZUVdaVlZXW1RWW1QWmqr51VcVFdVWlldXVNVW1VVVlpWVVpbWFxaVl
+RcU1ZWWlpZXFNWVFhSVlxZXVRTWFpWV11TWFhaWFpZVlZYWlpaV1pXXFZcVl1YVlpaWlpaWVpaXV
+NaWlRbWlpaW1pbWlVbU1taW1pUVVxbWFNbWlZbWlxUWFdXWVxaVVxaWlZWU1VcWlxaXVNbVFtaWl
+hdWFVTW1NaWlRYUlpaWlxaWlpaWlpZWltTVFlaW1lbU1haVFRXU1VYWlRYV1pZXF1XWlRYWltYWl
+ZZWF1ZU1xbWllbVFtTVVpZXVlTWllbW1NZWVlYVlNVW1pTVFhYWVFWMSF7KQ8wP+rah4ghwljsNx
+OAyP4S8chsvwGW7DbzgOr+EwPIbDcBie5S78hb/wGh7DYTgMh+ExfIbTcB3Ow5mWnl4E4b6AWMNg
+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
+36l7LACMhC26wX2xWEeFRGhGYT6gZ/W+ZLvpIOHQeo9xa+HtHy+tVvVVlIPB52TPA+Z5Zv3fJRkJ
+0WY07G+D3bJ7n/RkiTm9olrhYPbU5aLRABEiKkkWVWLLqIIl9h/qGY2Bys+M/hjgTqcEcNP4Ptf3
+QX2FIHVuykkC6pH77SlQzYxe2zmBRwzAtxru3AwF2BI5XJifoAX7ceG443vwJ3mB3L8mSqh+YrBY
+QatdqEVTMCBUQNDb+QIkVZwVOJhgFjP2Te9ExIrAotbqMldPM7wsAZp+qjulo9KW7ceaS6stwJiS
+3DTrCNiqs7g6pLIFLTW5FmY+C+SRWgG2qDa2wIN8sizD8fOyt77aDyaEx019Qw20HV7Ma4TxTqx7
+5ngzEZ8alAllQ+e+LgJxxQeN5YhtQkMUhjXkbuGQU6/erOgbBlYjt1Le7uWVW5H/rTFsjx3MRQ/m
+l0RhvkJGJ2f1YnG0MXMMJEyUShlADsl31CS6Lpwkoqs2sG8YS/vLYDaojZrZR4ffXkVflW8o1QiR
+BZw+gk+5VBMpllpmgmZUuGwUACAVKaxn/zvjudHRfoJgd26ElAOf2q8xwpReFkKMIzWffwJ5cosX
+781tn44fBTji2K94ik8QdxVFCSf/4Ha4Rsczg3jTjrgLdEWM6JtgO/fyCRmjesiyC5d6m7Jat9oc
+k8YuQNe5Mplv8rcP/TM6lKNEFdcJSvgCedK/5FHmvlGzLNLeNg4TC9QJAHQKo2Q0MThiN2I4LTJm
+ODYxLTgyYTMtN2FiZWI3ZDdhZGJhNDdhNDFmYjEtZTAwOS00Y2Y0LWI0YTQtZWEwZGY0OGQ4YzMw
+OTY1IDYyOC4yNTI2NWQ2MzEyNTUtNWIyYy00M2ExLTlkYzMtZTI1YzEyZjU2NTg5N2QzOGI0Y2Ut
+NjZkYS00ZjUzLThjOWMtNjBlNGE0MzkwNzE3ODEzNDYyMTI1MjM3MTMtIEEFCyEjPO96FKv95uog
+w4G/Wf15XtgjZ9tO1TgR2uZEgm+nCG5o4Rog9AIVjxM6ySPWqUIqo3KFkgPN2g0ME9AF6cJIxiIR
+4pMSmN/OoduEE96cntd3jaLGndrQsUYFeIJzisKLWTMa/81DoG5gYRogPrBwFgb8Nz8AXhIxojfZ
+4n8z8rKlF134+h0EXWADLKQAKluwEDWAN2kDMzADMzADMwAAdVsjSxtbSrez7Wnl7sMbBoaosHjh
+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
+16m18npfeSsuXscv79s8bZU43nnFS3veG33WzD11l/OKOTut0n6k18qP9F4V13JG2pR6dcfS3e2s
+Wb77VZ08BUL6Mi2Eq8wyy+ldbWZLvzLHfEWvMCxzvWKtk1qZr5f2wrIvi2W/tBU2pa1OWObKVGHV
+Jtqu2MqPGfu18i97W87rTtmWRjup9DjpVZFcTpfzirh+xrKp9Cvirv3yPsXsxI6n7GtljrQ6bjmn
+SONI30aqSJJeWStSvqxTklPPOdZ5WYlvpNbWKmkodDGxd624emfG968q7V8VdmFV+rXv2ClWebHr
+Ft+K3cdoTztxxYnNIE5sQyP2jgvLr0jXVW2ua7P0eVF7r8Qbe8U7+52+pO+Y/etW1lO0V3z3xx7f
+TjfRp1z86hT/ilXin37b3zdYbo3PK37G/deFdeMqccb3ihVf8T/PTaxv57TxMY7tduZ5VR+xr+h+
+RZwrrNrEG/1KPCssNlallU2vxPO6fn6FnWpXH7GpPyoD5YGq0yrplH+dKM6z4ttPXz6+IrZPX1Is
+H9eZqfdf0X6FYRhf0d6MhVttrjNfv6LnucEXvjB8XdFe1SbiaCOO1+WNGFec2JsKqzbRxhxzjrba
+xBzzla+Yrbz5ivNeV7TVKeYrYluhgR63EXFal4Gy9SzrlZdWO+XN7rRf0mvi6/u6GP7KVGH3Za6N
+c4VFaul/S7/ifCw95/enc95sG0t/PDHqV5xzuvyvTpHO7FPWK86eJ+8BYxtsszltsA0mskRWhWEi
+C8NEVrURWRi3yBJZVWqhR/4kU6YjavM1tZqvOUn0qrXia9ZLmpSk0ayaWjOV5ue+SLRHF8Ymer3p
+8zWvvdnd5AMAAAAAMC922zPmjwii22qDVZtqU2HVBttgG2yDyfdbr8VkzjJfjFWbOV+2V1i7u7vN
+FVZtKrUVSzvvt7wVdl9ijCus2sTsXW2cZmrlfCxnhbWktdo8ZcXzKZXtf3qs2tiryr8qzJ9SnKd0
+7NJbOnbdrrCMq6xXtbm0tpV0VpqnpKeX9DJhWOaLYovxVW2ulffkk8qLTRW2qTbvkd47rcuf8v3C
+6OwNxTJn7/+Lc6145lwbv6XfsmP22TKDogaahKikMfg0cFSxRS9MZSJERiKyNBqPyBJZIktkiSxK
+RxqRJbI+KjzD44syN8rAjYNCbdymQ7oN08JPY9BBNIVDZImsKkNkhYDZRGwQgACkPDGP7KwkWm+P
+SKPLlkj5crf0ItlSvWx9UoaxNm+2I9NoatR0dcmUXd9OL9eq6aqj7s+jl4isBw6RJbIEIAAAAAAA
+ABCAAL5dhDv2jD8jgvg138uAyGqQfR+RJbJEFw6RVTHEEDCbsHhmzi29erVW9msipff+U69t5ePG
+8Wn+p37pvY1vfdxX9Grxu9srb3XSRNv3Z0uMe/pbWu9TWa9o21JpK5Im3us5v2dbccT1Uupub6Z+
+6efaT3/K6tP6zPTe3PW2pLkxtv6U9sw+L67VYlkvtrZ+U1wfu0tq7/23s5/S+RZLd5qzxCd8mbBI
+84W9nO5efcReOHGbR0owbsausFmdnNbP/V5v1zpxlR3fVozrvNh++1tsMZ63M50/rex58b/L71px
+u7f/P87y+m+wbE8LXjUkTbuVtx1n9841N46Zdr5XnJ9v7u7qQxMdqzb42yWuMHxFK2++bK7tEl/V
+CWONJn410lQljuixrV8SkcY1CEPhlxFliIxogMiqKqfPM2FAZDbtXYklrfR5JO0i9CgssdpUWMaq
+TfXrqrCW96o29laKM5X2wk5V2ujVUZnYKQG8Esr7OFNOq8m4cZzXznn9ivPeriZi+3SnXmUcsSPO
+7bLinjTT2njWa2+ds1Y6aa2U0llhcdbq1P3f/d/z0ive2f/VqWd/z57TfXbn7jndZ/e9Ys/pPm21
+s85Zq+bx5KBV+vX2I/1oL7eam6m9Ir4izdbnFa9Ir+oUvb36rJRW10hLr/h0evUr+hWrrRUW6xXt
+dcVaTURq7Y3R3gqL9orWXhfLtrN+buzul9bbsiPO2TadF+PHjWvbfP+tV0lLnLZ5tDDjREyj9caq
+TbQVdmW/Tvmvq8I8/j1F6zF/xYm9if+XrbBqE/+j/Sv+5zmn9Mtxzi/zXxV2VSf7X/qyTQy3kvZt
+ZsQe20bqtuZssbVX7CfF9uuK9NoKqzZcbI/4r/arAQeWHbNXGQuVRhO7MtXaGpImfnv9K/6JI97b
+OF57xf8ruuzqQxM7X7G9GmkqzMb2vq72K94r+rycXptzljn+rVbm7tieH0ef1Sne6LPixDZVm9yX
+5gqL94off8Ya3WPulz2xahPdI/4r5pylbNwvc/x4ccb911Vh+KtTdL/wVx+xOdErMBPbq9TCpzHw
+RJ0XhilNLW3f56PbNi6URVb19GXF1v4/Rvh5qAFEVmlLfTRulHWd6S2yAvd2vvbWthg7fUy7Ztuz
+zlq/YseT4nmdXnrrU/z42y/Ua37v2/XO2th94ntxpe5+b673XjTx3ssn3pvx7P9arZ2y47Q93xvX
+O7M3rvexvdXWiyZ6vVxILppo/yudj2//08/W//uxxTnbtn/RxP4ARY8TVERAAlWnUyokiV+BaHq2
+7GrvP7a45/WJrd956bzWes9LL59o88+K762Na988b/e1fqtT6f6yK515Ov1avy3+mXGtjf/rbJ+U
+3rbZ4uk244p/5jyxxI9r49nTznq96dv52C+faK1Ta+3F7d2Oc9s6r2zc9vbM1DO1PrOtnm+l1OZ2
+7N4Tz2rvdYsntXfiKZvmav/tRRP9Xj5x4p/ZH3d2+pnWxxN7W0qddnXaduY66+N521580cScL59Y
+fcpuWu23nY9pxj8zzvNvzyo75kuv+0UT6fTLJ046v9bGtnGldT6tXetf2j4zfirb1ovznDhnr/ct
+tlf2W0zf85Q9L8a5c5724qeP8b//rP644tkve9pZb8W4b87vlbZbmz3jiyumba+tOXu+aGJfPhFX
+n/Utburz4jkb953Zvvtjt04pdu9aKaaT+q0+Hdv2bjwzfZ/Uf3pTjO1b6vZzxtjepnNWSjP1iyZW
+evnEb5d9M8b4v+e99v68tXZtWiu9F03sz/10Zoq7s1Naf2bcbn9WS+nlEy29Lpt2bTo902v/tj+d
+Pf86vvnOSm32PG/2nDH2iyZOt/8XTfTrlwvJrX7RxGztfGvp/W6fna+ttOc7nt7zdm47MaXuTie2
+1mJrvz/TK+vPt7fWiybSbpybyo73aW3789ps6VtcZ57fjpvOWRvTnhj/7JwtdYpvtV3dYnr77d+m
+lt6LJjr2yyfeOv++zBdb3F3tzZO2f/Y8raXXZr98YlP3x91Na53uPXO2fd1WxxXX2V3pX5/YfuOu
+NlfPTpvWi7HLOf/yif8zS2r/q/98n05zvWiivV5xTys7ZvnX5mvf2lr/4nwrtbXnRRMvdZo/y+vd
+uP3+t8VZdsz++Hbutm+nf3fLzpdPdGpxpV6v/+1/z9ZmfD1jv2095ys72nnRRPyXT7zz63y32DPO
+9ud3xbgpvvi9zvnZb5Yd/dqLZX/Xb5u/K71oYp6XT5zZLxcS2vg//7UtO9J3Sx/fr/ftvX6zZ2w9
+CzvtI5twW7O9tq1j2dbpu22/n+I0PqmdufZXbGdXfPHEOGuwqZVadzz71nf8s2bc2Gunad/nP7vj
+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
+WXU08EudsNsgASWPM0VAy2hgwqFQIwKFG+VPhaNM2G4L8Cxc7WAJRqNvrOszkYZuZhQ8mEADBbDl
+HYzo8c4n3pE0ixCNCLPPx0JLdVu3dVu3fZMFgm7LcJ4A5KpwHPqyASg+K1se97HUZLcVsDIdh9S6
+eVHLlnNAA5D5WVksIgHtuFozK0ygyEMBdUKowr3buu2GVjUZhqjbRBQhAkfAFWIQEC2kIoKugzRj
+ucEnEXm3iSASkXMoKxPoJYzGOZBg8WkLloD7DMbQTY+ZfqSQcCwV3ZaCmHRbtynYigGv27qt20IR
+sMI5WBUJwsPp42oRgxWefGxWuHtqIYvo+ZNF3MAYND9jPTQ/QDNEYLch1BxafsAwsHkHRoN/HpGR
+aFiK4MElTq5LiKK5us0E4epu+wQu3WbZqGYBaK6IWzKySbd1W4ACgUxGkrCe0QB/UhlZmUxrskjJ
+NjGFhwrruCCFB7QgHgeh6gg8JZyqGFtQ+Bz08iRSOITnCTKUu0TXoX1+dUWn2xwopgvHkvoENpaP
+JfQzigBmcKiLOgNlzJW6FJluo7kiLmtAYVCXrkwauIqMJPLFWBkMBNyM4zlsPADrNXIoLwsVZ6w4
+Vp6OnWoIMXkIkIAwOlBMF9ttJAOU6ONkw0My4vzHYWTL4zLDaMJZ2ksMQhLtkFwY9OPBQX7m4qJ6
+DqIzAiEMkJYbnArumOEh8Ga3VU4CFePBQih2qqEHg70eKFy3zWrdlIASWspEcCl1Qtd020eZG8pF
+g09+ETCASMk2AjAECbHbUjQOgyZiyfjGDUr+SLJiy0OVIkGMWYeCByE4dAFda30r76z0zvzy4u2V
+3XqllU5M75UWb63/x1+p51ul487WUjqb1im73c6K51fyU0y9ts9Kw/bfO6+dlHpLx1urcTO1GD+t
+leZup97e9/51i+/M1itu7JO+pV2rvRTjm7FX5pz08c21M/6Kpfe9mc769tavPzHtxz7rpLc+vnPm
+iSfF1jqt+Vral+ZqJ6W4vsUvve2k+CW1W2vizzZjm91Op/Y+ttm/1olvvfJzZdp2S5vambF1+dV7
+zupz/mf5udLI+NKvGUuvW6jiv7niSf1tW/tU1rmFGvndvl/pjvGc1TOduH5b6vd7drW0cf7as9o7
+7dunX7Fta50+df/bTt/6pfZxvrT/0kqtT5efba3VPVcajjHF885K26Wtc+Kv3pUGfWyxndTiW6d8
+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
++Wm21KnNVf5P6+1/78x/M87/FzuulH622E6ntqc/zd6Pp7UXY6/Vvj/1durW2+e1nR/bzpVm6XNu
+r4u97Zxb69J+rz5trbNR+/3xz+1F7/91eevM9c7q99bbFNfs0u380P1Kf9La0ntuF/bl9Il71jt/
+uqWOvd/l/7Rz5qZuPUvP0/Glc35/6LfMrD3vz69P79Ps+HbGtM4s77SP628Z6p+/+vzp1Pr9vnhK
+6/Pe3BTje1tenxhfv9PSfuw/c74vm07afV1mervtdJyvtXTW2xlnKuc/fdz2P9PsVNb/np1tV5eT
+1uoUy0klpRTTUFNLL/btok639U7ZHZo33+lV5v62c86297dQZgttmXzbe8vk3LS2zzpz+71OZ31r
+ceO3df681/ps+fXmnqGvs2vu7Fjm61vG0mqfYjmxz8/Z65QUu+enHcKX/rRbBrfXpvfK7/c8O9PZ
+36jv+DHOt2KXtO+9F1+LZ+3bPyfNuH/TNNzmiXHtp3linKvLmjO+/rb+xe5T1kwnbUtlzd606Xzr
+0vs+fumNmvPNjev9K/32/a3lbqm8GOfujPH8fGfGTfN9daUva55bC3fj+x2/xV1vtV2tvX8p/ZeN
+Z1dKHVtK5+tpW/ozU9l4bq1c6aX5ds6Sus9J82+txr+2Vlvc0u+cubvWa/3O7ZVp13xb/p1bqzEt
+bXp79ufZmHZeSiXOszG73073nC/1VwPbi+p35tzA2e10azHNVlKv02+7W39bJ83ufS9+NWzTp7PS
+wN7f93Fjai+99PPf775+8Xz57/TiTKult1Jvtg3qjWtXGo9/tsV1WnlfDWu7UqfXn1I5a570Lb3z
+3vrZaVPrs+Jq68xdq8T1f+J7/79Kv39z7dm2Za6Pp83VWoszlRdX+vjmiVtO6z4r/plxrjTb2fTn
+zNit09rU6W+vWy9tjCul3bLa31pXWuyfbzem/vo6/9ps5cVzWurz8eOZqaS0PsWf56X44le+2F7c
+alBa7f+tsubG29u57a2v6T87N6bS5q3VqE/nfM95zlvzN5XXvv3P916K5bW/vWg7tt/1JXX3O6nn
++1M+/v6t9p9vI18PWez9lOLtolHJFfe01s6nNCYjyRZqbKmV1b81M31q/Xu+12szxrK7Xndbc7vP
+p7fm/JVGndnxddqNJ52UXoztpPJ6zTTPp//zyuve9Hs2bSqv+/bKbftr41srltZ9a/Xnp9mrY3zn
+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
+]]>
+    </i:aipgf>
+  </metadata>
+</svg>
\ No newline at end of file
diff --git a/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-white.svg b/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-white.svg
new file mode 100644
index 000000000..89a15f16d
--- /dev/null
+++ b/apps/web-researcherry/public/ResearcherryCoder-Logo-Horiz-white.svg
@@ -0,0 +1,2965 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" xmlns:i="http://ns.adobe.com/AdobeIllustrator/10.0/" version="1.1" viewBox="0 0 421.08576 89.89661">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #fff;
+        stroke-width: 0px;
+      }
+    </style>
+  </defs>
+  <g>
+    <path class="cls-1" d="M282.32791,54.32965h-13.93142c-.54872,0-.99354-.44482-.99354-.99354v-16.77562c0-.54872.44482-.99354.99354-.99354h13.93138c.54872,0,.99354-.44482.99354-.99354v-6.7971c0-.54872-.44482-.99354-.99354-.99354h-17.32342c-.72032,0-1.41113.28614-1.92048.79548l-4.02367,4.02361c-.50937.50936-.79553,1.20021-.79553,1.92056v22.85171c0,.72041.28618,1.41131.7956,1.92072l4.0235,4.02344c.50937.50937,1.20023.79552,1.92058.79552h17.32346c.54869,0,.9935-.44481.9935-.9935v-6.79718c0-.54869-.44481-.9935-.9935-.9935Z"/>
+    <path class="cls-1" d="M398.8927,34.27753v-6.50125c0-.54869-.44481-.9935-.9935-.9935h-25.81964c-.54869,0-.9935.44481-.9935.9935v34.34405c0,.54869.44481.9935.9935.9935h25.81964c.54869,0,.9935-.44481.9935-.9935v-6.50125c0-.54869-.44481-.9935-.9935-.9935h-17.40596c-.14856,0-.269-.12044-.269-.269v-5.55334c0-.14856.12044-.269.269-.269h14.75215c.54869,0,.9935-.44481.9935-.9935v-5.18487c0-.54869-.44481-.9935-.9935-.9935h-14.75215c-.14856,0-.269-.12044-.269-.269v-5.55334c0-.14856.12044-.269.269-.269h17.40596c.54869,0,.9935-.44481.9935-.9935Z"/>
+    <path class="cls-1" d="M208.7182,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM200.37561,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+    <path class="cls-1" d="M248.37445,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM240.03186,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+    <path class="cls-1" d="M321.61078,31.60187l-4.0235-4.0235c-.5094-.5094-1.20026-.79559-1.92065-.79559h-17.0108c-.72034,0-1.41125.28619-1.92059.79559l-4.02356,4.0235c-.50934.5094-.79553,1.20026-.79553,1.92059v22.85168c0,.7204.28619,1.41125.79553,1.92065l4.02356,4.0235c.50934.5094,1.20026.79553,1.92059.79553h17.0108c.7204,0,1.41125-.28613,1.92065-.79553l4.0235-4.0235c.5094-.5094.79559-1.20026.79559-1.92065v-22.85168c0-.72034-.28619-1.41119-.79559-1.92059ZM313.26819,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+    <path class="cls-1" d="M361.19584,31.60197l-4.0236-4.0236c-.50941-.50941-1.20032-.79559-1.92073-.79559h-22.75691c-.5487,0-.9935.43783-.9935.98652,0,5.17848.00001,29.17954.00003,34.35801,0,.54869.44481.98652.9935.98652h22.75703c.72036,0,1.41121-.28616,1.92058-.79553l4.0235-4.0235c.50941-.50941.79559-1.20032.79559-1.92073v-22.85161c0-.72033-.28615-1.41115-.7955-1.9205ZM352.85315,54.32965h-12.21387v-18.7627h12.21387v18.7627Z"/>
+    <path class="cls-1" d="M171.23896,62.12848l-6.45563-10.55371,4.35004-4.29626c.50934-.50934.79553-1.2002.79553-1.92059v-11.83533c0-.7204-.28619-1.41132-.79559-1.92072l-4.02356-4.02356c-.5094-.5094-1.20026-.79553-1.92059-.79553h-22.67206c-.54871,0-.99347.44476-.99347.99347v34.34406c0,.54871.44476.99353.99353.99353h7.15112c.54871,0,.99353-.44482.99353-.99353v-9.71216c0-.14856.12042-.26898.26898-.26898h5.69489c.33026,0,.63574.17529.80231.46051l5.8222,10.02167c.1781.30499.50476.49249.85797.49249h8.5722c.50568,0,.8183-.55145.55859-.98535ZM160.88489,44.09039h-12.57812v-8.83496h12.57812v8.83496Z"/>
+  </g>
+  <path class="cls-1" d="M100.47191,11.87948l-1.9413,7.0196c-.10277.37163-.49074.58636-.86022.47612l-32.56441-9.71607c-.21659-.06462-.4511-.0188-.62742.12261l-32.25064,25.86279c-.09415.0755-.2065.12493-.32579.14331l-19.18897,2.95717c-.35531.05476-.60863.37372-.58152.73219l.08338,1.10265c.02663.35219.3155.62706.66857.63619l22.28879.57618.25422.00712,16.46922-8.7974c.23057-.12316.511-.10509.72385.04664l11.66782,8.31729c.18297.13043.29076.34195.28875.56663l-.09843,11.03609c-.00127.14283.04192.28252.12359.3997l16.41303,23.55049c.12871.18468.3396.29476.56471.29476h5.19569c.51834,0,.85069-.55125.60872-1.00965l-11.69823-22.16122c-.1144-.21672-.10495-.47793.02482-.68581l6.09931-9.77079c.0664-.10637.16059-.19258.27241-.24932l21.80607-11.06554c.22156-.11243.48651-.09674.69325.04106l6.23133,4.15349c.11306.07536.24589.11557.38177.11557h5.66149c.54825,0,.87646-.60971.57456-1.06735l-15.72045-23.83006c-.32547-.49337-1.08044-.37411-1.23798.19556Z"/>
+  <metadata>
+    <i:aipgfRef id="adobe_illustrator_pgf"/>
+    <i:aipgf id="adobe_illustrator_pgf" i:pgfEncoding="zstd/base64" i:pgfVersion="24">
+<![CDATA[
+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
+XaPNQlvp83sndYLtHkg9G+ewzt5B1LNvvnN+pg+unvGDq4s2D7sSqLc7JCnYDYoMvHG+dbYMYNvs
+AtfLzjhweNG7uTOEbnTWrZdxLQYNfMOEL77FoIHfZWBmZWEwf2famTAbF2ZPbZuN+2M8bawDN9OG
+xQSyjdkkxnFtwHTyyx1aWYwemzb7dpPxPraBk2HQwMu8LvAaDENWjiuWxeuKucjNYrxj2MA1QJjA
+x7y+sng2WUzfmlaGsI0rU9jGnTFsm2UO2bYub1wt/2FgXHsBA/dhGlzaxjq4qJWJuaDJY9k03yHr
+RpNl3Wgyl7VtB0532MA7WPji9AYNNhvqnC0trSosJgdoe2gXmLC4qpiqmLCYuN5qJiomKy0mLq0q
+ppsKq2uLSoqJiomK6eeI1UxhvYMFNjW4PrYLDXIy1ExVTAmicvLY9vTQtA7usrSmqLI4XHVpYU11
+XXVtSeXQMWVpUXExUXVt3XkxVe2hkTGt1X3lyDltORyorqaosLC6uqq0sqa6qrKuprq2rrKwsOi0
+uqq4sro4WF11bVFlWWldXWFRWVlVUVlNWVVVUXFNUXFtUWlRcV1ZWW1tWW1tWW11YW1tbWVt0XV1
+WWVdWXFpWU1ZbVlRWW1NbXVRbU1dXVFtTVnRXV1dWVnRdWVZaV1ldV3RcWV1WW1pdVlhWZiiuqLD
+strSstqy4rqausriuqKSFeS05VioyrrKwsqyysKyyurqasuxsIV1NWWFRaW1NVWVdWVlpXV1hWV1
+gamqb11VcVFdVWlldXVNVW1VVVlpWVVpbWFxaVlRcU1ZWWlpZXFNWVFhSVlxZXVRTWFpWV11TWFh
+aWFpZVlZYWlpaV1pXXFZcVl1YVlpaWlpaWVpaXVNaWlRbWlpaW1pbWlVbU1taW1pUVVxbWFNbWlZ
+bWlxUWFdXWVxaVVxaWlZWU1VcWlxaXVNbVFtaWlhdWFVTW1NaWlRYUlpaWlxaWlpaWlpZWltTVFl
+aW1lbU1haVFRXU1VYWlRYV1pZXF1XWlRYWltYWlZZWF1ZU1xbWllbVFtTVVpZXVlTWllbW1NZWVl
+YVlNVW1pTVEFC8YkLmQh5wf8W1HxBDlKHIfjcBgew184DJfhM9yG33AcXsNheAyH4TA8y134C3/h
+NTyGw3AYDsNj+Ayn4TqchzMtPb0Iwn0BsYbBhF4TN2Tx0L54lBQDzgSFgFtwUOUSaEf4qSG2kDXO
+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
+4e0fL61W9VWUg8HnZM8D5nlm/d8lGQnRZjTsb4Pdsnuf9GSJOb2iWuFg9tTlotEAESIqSRZVYsuo
+giX2H+oZjYHKz4z+GOBOpwRw0/g+1/dBfYUgdW7KSQLqkfvtKVDNjF7bOYFHDMC3Gu7cDAXYEjlc
+mJ+gBftx4bjje/AneYHcvyZKqH5isFhBq12oRVMwIFRA0Nv5AiRVnBU4mGAWM/ZN70TEisCi1uoy
+V08zvCwBmn6qO6Wj0pbtx5pLqy3AmJLcNOsI2KqzuDqksgUtNbkWZj4L5JFaAbaoNrbAg3yyLMPx
+87K3vtoPJoTHTX1DDbQdXsxrhPFOrHvmeDMRnxqUCWVD574uAnHFB43liG1CQxSGNeRu4ZBTr96s
+6BsGViO3Ut7u5ZVbkf+tMWyPHcxFD+aXRGG+QkYnZ/VicbQxcwwkTJRKGUAOyXfUJLounCSiqzaw
+bxhL+8tgNqiNmtlHh99eRV+VbyjVCJEFnD6CT7lUEymWWmaCZlS4bBQAIBUprGf/O+O50dF+gmB3
+boSUA5/arzHClF4WQowjNZ9/AnlyixfvzW2fjh8FOOLYr3iKTxB3FUUJJ//gdrhGxzODeNOOuAt0
+RYzom2A79/IJGaN6yLILl3qbslq32hyTxi5A17kymW/ytw/9MzqUo0QV1wlK+AJ50r/kUbpv4OAI
+AdQJAHQK6WQ0MThiN2I4LTJmODYxLTgyYTMtN2FiZWI3ZDdhZGJhNDdhNDFmYjEtZTAwOS00Y2Y0
+LWI0YTQtZWEwZGY0OGQ4YzMwOTY1IDYyOC4yNTI2NWQ2MzEyNTUtNWIyYy00M2ExLTlkYzMtZTI1
+YzEyZjU2NTg5N2QzOGI0Y2UtNjZkYS00ZjUzLThjOWMtNjBlNGE0MzkwNzE3ODEzNDYyMTI1MjM3
+MTMtIEEFCyEjPO96J6v95uogw4G/Wf15XtgjZ9tO1TgR2uZEgm+nCG5o4Rog9AIVjxM6ySPWqUIq
+o3KFkgPN2g0ME9AF6cJIxiIR4pMSmN/OoduEE96cntd3jaLGndrQsUYFeIJzisKLWTMa/81DoG5g
+YRogPrBwFgb8Nz8AXhIxojfZ4n8z8rKlF134+goEXWADPKQAqlvEEDWAN2kDMzADMzADMwAAdVsj
+SxtbSrez7Wnl7sMbBoaosHjhmsXvUG2WEInsnSm2X8Dyo3J7CQcBAQH7AFhuCeeGJIGSiS8GrbVf
+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
+uuqo+/PoJSLrgUNkiSwBCAAAAAAAAAQggG8X4Y494894IH7N9/IQWQ2y7yOyRJbowiGyKoYYAmYT
+Fs/MuaVXr9bKfk2k9N5/6rWtfNw4Ps3/1C+9t/Gtj/uKXi1+d3vlrU6aaPv+bIlxT39L630q6xVt
+WyptRdLEez3n92wrjrheSt3tzdQv/Vz76U9ZfVqfmd6bu96WNDfG1p/SntnnxbVaLOvF1tZviutj
+d0ntvf929lM632LpTnOW+IQvExZpvrCX092rj9gLJ27zSAnGzdgVNquT0/q53+vtWieusuPbinGd
+F9tvf4stxvN2pvOnlT0v/nf5XStu9/b/x1le/w2W7WnBq4akabfytuPs3rnmxjHTzveK8/PN3V19
+aKJj1QZ/u8QVhq9o5c2XzbVd4qs6YazRxK9GmqrEET229Usi0rgGYSj8MqIMkRENEFlV5fR5JgyI
+zKa9K7GklT6PpF2EHoUlVpsKy1i1qX5dFdbyXtXG3kpxptJe2KlKG706KhM7JYBXQnkfZ8ppNRk3
+jvPaOa9fcd7b1URsn+7Uq4wjdsS5XVbck2ZaG8967a1z1konrZVSOisszlqduv+7/3teesU7+786
+9ezv2XO6z+7cPaf77L5X7Dndp6121jlr1TyeHLRKv95+pB/t5VZzM7VXxFek2fq84hXpVZ2it1ef
+ldLqGmnpFZ9Or35Fv2K1tcJivaK9rliriUitvTHaW2HRXtHa62LZdtbPjd390npbdsQ526bzYvy4
+cW2b77/1KmmJ0zaPFmaciGm03li1ibbCruzXKf91VZjHv6doPeavOLE38f+yFVZt4n+0f8X/POeU
+fjnO+WX+q8Ku6mT/S1+2ieFW0r7NjNhj20jd1pwttvaK/aTYfl2RXlth1YaL7RH/1X414MCyY/Yq
+Y6HSaGJXplpbQ9LEb69/xT9xxHsbx2uv+H9Fl119aGLnK7ZXI02F2dje19V+xXtFn5fTa3POMse/
+1crcHdvz4+izOsUbfVac2KZqk/vSXGHxXvHjz1ije8z9sidWbaJ7xH/FnLOUjftljh8vzrj/uioM
+f3WK7hf+6iM2J3oFZmJ7lVr4NAaeqPPCMKWppe37fHTbxoWyyKqevqzY2v/HCD8PNYDIKm2pj8aN
+sq4zvWs333s7X3trW4ydPqZds+1ZZ61fseNJ8bxOL731KX787RfqNb/37Xpnbew+8b24Une/N9d7
+L5p47+UT78149n+t1k7Zcdqe743rndkb1/vY3mrrRRO9Xi4kF020/5XOx7f/6Wfr//3Y4pxt279o
+Yn+AoscJKh4ggarTKRWSxK9AND1bdrX3H1vc8/rE1u+8dF5rveell0+0+WfF99bGtW+et/tav9Wp
+dH/Zlc48nX6t3xb/zLjWxv91tk9Kb9ts8XSbccU/c55Y4se18expZ73e9O187JdPtNaptfbi9m7H
+uW2dVzZue3tm6plan9lWz7dSanM7du+JZ7X3usWT2jvxlE1ztf/2ool+L5848c/sjzs7/Uzr44m9
+LaVOuzptO3Od9fG8bS++aGLOl0+sPmU3rfbbzsc0458Z5/m3Z5Ud86XX/aKJdPrlEyedX2tj27jS
+Op/WrvUvbZ8ZP5Vt68V5Tpyz1/sW2yv7LabvecqeF+PcOU978dPH+N9/Vn9c8eyXPe2st2LcN+f3
+StutzZ7xxRXTttfWnD1fNLEvn4irz/oWN/V58ZyN+85s3/2xW6cUu3etFNNJ/Vafjm17N56Zvk/q
+P70pxvYtdfs5Y2xv0zkrpZn6RRMrvXzit8u+GWP83/Nee3/eWrs2rZXeiyb25346M8Xd2SmtPzNu
+tz+rpfTyiZZel027Np2e6bV/25/Onn8d33xnpTZ7njd7zhj7RROn2/+LJvr1y4XkVr9oYrZ2vrX0
+frfPztdW2vMdT+95O7edmFJ3pxNba7G135/plfXn21vrRRNpN85NZcf7tLb9eW229C2uM89vx03n
+rI1pT4x/ds6WOsW32q5uMb399m9TS+9FEx375RNvnX9f5ost7q725knbP3ue1tJrs18+san74+6m
+tU73njnbvm6r44rr7K70r09sv3FXm6tnp03rxdjlnH/5xP+ZJbX/1X++T6e5XjTRXq+4p5Uds/xr
+87Vvba1/cb6V2trzoomXOs2f5fVu3H7/2+IsO2Z/fDt327fTv7tl58snOrW4Uq/X//a/Z2szvp6x
+37ae85Ud7bxoIv7LJ975db5b7Bln+/O7YtwUX/xe5/zsN8uOfu3Fsr/rt83flV40Mc/LJ87slwsJ
+bfyf/9qWHem7pY/v1/v2Xr/ZM7aehZ32kU24rdle29axbOv03bbfT3Ean9TOXPsrtrMrvnhinDXY
+1EqtO5596zv+WTNu7LXTtO/zn91xtW87/tan9dKet1bbsqRdRM3nQhJCyjiNpMo4NiQkUFUFgGME
+0sJQ4zJQqeuIMkTGqir8QMilMpPG8fgQFWsUwOM+8dPCVMWdf2213vjrpdRWi/+z95yfM604Z+s9
+M80endoZO14qpceO0BhsERqDb8tQIV9WqipYCKSBqY4bfRwJzEgfSCJlqAB8HkhVAT9NI2qfZ9I0
+sdRlqAE60TrK+zgR5X2c+q/RxIpMZcd/i9/O08adqkqchKDJu1+n7KuqxAkq7BSAhBkIJMxAEV9c
+qezbtqlfnG22jvvSS2XbzpjmTGfNdlbZHobGYAszTruoVSVOssZ9dNkvKnEiiQNiZIgm7ULBqOJj
++TKNTwu1U7ZxKsBSp6E0DghqHcjH9hC1k/eBbG6u0m+dPW/TxvNlR3r/3f/d1s+UWts097Rd/Tvn
+2Te3nXjaOmU3nhl79e73vz0z9r/V0nyrxXZS+u/TK50X+723Yjsvfjk/z1t9ep6Pqb30/6nsePGt
+Xy91XGnFV36m9db51Lr3U+9c6+xpezq9uV5rffb8mm+e7/X9befr1d1+/fvT5/TbVXZ14dV6jIiO
+8bX4+rwuO176nf3tdOrVhUYRtRSnmfZxvsAe3HW6dPDTus/bxDtpEKYqJKUN7CDCDcMSJyFJM5k6
+UWOwYZHbPJY4QW2Z9Nh5XedtYYqkDdCxVNWAUqdxmlKpotMYdDQwo6rECSoeoJfWK1LP1V7pHrFj
+BcdtHo7bPOGWKnXeJvwykCVWA6IkVpHB8lVwr4V4XxgibWCmCSFlYYgbbeCmYYndxhBLXcqiMdhC
+knbKKCxxEvqIGGIngNdJWCow94zT1qhhkmrisWNHi6VjR8uNlviSaiKpJqIw4zwi27GGNqIGXzba
+MI0Lwe3TiCAyccYqO84pO8qONLakmkiqyccGAXPsHGuYcZ7aM87uiaSScWI5ZVoofhpImGmYlvro
+PIwIKoTZBgRMfZoSt5E6DRSvyGUe6ctANtECAoKQUh5GmHGeKENUrO3RIqmuOLGUupR3EWWIijNa
+4uTTSl9F/LSPrMsmIgiY+jSxqui2jxQHwjFHiy222OIq8a0EiNRa2SB2YZXGKu/FdXrOsjMc1i22
+9imddXq99uI8fbbXv9jKri7AFMkziTLty4QDaO+XxmovltMxrn+dctM5K52Nc9M5K52bnE9Xc7vv
+X/Uv+5JW2JWvKu3Tn3/F+dJHWXh9mWaUYXzXK6vLWy/pTvy0vzrVK+mTrJV+H1ckemX1C1/YR++M
+L67ST7L9euzVacp52a+YpF6dLCbtVZ06Umyr9Io07VdYzlnSlv8XdemO0Y/Z2pY2v6zzsvOqMHnN
+l16zzH7lv65jVf5PeT9+/vj1VtkvfbbEXm1c4ik90p5QagEdWfIYnQeDG02kuchQoQUVtMhaEUa0
+xGoNhwvPRHWQSOAmMhmGSkQ7eLwJy1dikGiMB44tk7CRoOILE+CBH2AxYbEH6cXCtaFsQAke2qq4
+T8VQUJNNpBIwYVMu3M6K9O2sCHg5AiIYEtoV0VCOEimgAKQS+Vxw7oYywoQoZuaKWBWFw6QSYcjw
+JEQqG0pChAJBEyIFSKJKpMLzlYgBBcsV+UkvcJQkKIxUYCc/sSAfXIIoVBxCIZIwMxB8MsYDVQxF
+0nGxNO3QXBEMBSCVSF/4iliVRkPoisguSSKYBR9KJEJSgBLJLBEhCfODYGNqBV9QcQSQDoPDZwOj
+OoQaBzyTgfAmLBQVUYbDxZarg1VdiYXD9M4azxgewmswJhJoTAYOkCwWHUL2SGzYh8xGIbQ4hAsK
+vjkpQAV+AQGBTlsV5WMjQY82NjwPhYaQPRTfdzS3L52ulAh0uoL6ErwBBVFgwIZk++ZHLp2mZHiQ
+LKCkmYLR4SnACXUHvg5FAvuQOZA0fN/D5aLwId4FQ4lkbEqrigjBUCIcOeKKbCSJEpFwzYpwKFiu
+CEVSgBLJeL4SGVl0V+QE/veBWIixKUEIl4XDhmNT8Y6QDQYHBQvfh2s4UCPPgAWs2UGATVhCiwPt
+rUpBQ37GopCgmaEIhARnA5ugdFKaT+MgLFgMBSeoGEpDRIKHGYI0UCwETJBGRhwZH4nAg2S5Pgh0
+2mI9hC9QkjRwKhIoEmgMyM1G5w08bBB4qKBFWhUqVDGUScfF0psmnES4kG0SqSVRJdJBoFGJYFOC
+SSQkSZQIvvAVgUCgUYnQ75tEQOzFhfIMFgToT1AsvQByMtPDEKi4woAwMx8onBCHA7ldWDQn1Mit
+CsJjQXU4HaRAMgcOIYinCJC4UGyCiqGUem5cz5PgIlDgZAtYPLFmKhDwkDEOoYRSYxJUNNAQTsVQ
+OB0JpVaYoFjaMtJooNwEFUOxqkrUSh5J41QMAbEJZSyRIVbhABqGZ2HGGfBpEl6YynAwOBrXIAx9
+NEIcH42Qkzws7DxPSRudOh+NkOkDNICG8dEIeaSu89EIbSTtA300QiGYYaUu07oNC8ENiyEdBEmG
+IBfSbQJkH2d7EMAD0TjUFnKpCY1BFoLIVIfIdBkqQ2Q+Lcb+LqSdPjQQJMxQoo9uY+BNZKiPRigM
+O8/z0Qh9NELcBrKByrrQJvRwQBSFyj6MR20fCdQ4shPA60K6VAQ3kxc1MBW5rON0EBHMIggpBUbS
+xqFQWQxTXoOMi9kWoxfGkqZ1MeU1+LxY2WK3ZR9a7LzYZRwqprwGGghmROnhdFkEs6hxmyl2Wfzo
+NgYZGDsNRIAIfnRbGGpgjBpIGLUvixqogWBINswF0DaNkbYRgpkHQvvIQN4f2oVrvqzUZWEoekg2
+VLb56LZwK3V8vvU6b4I2uNgI+bKJ0/ZheFuYXYSd5wk1cJQKNci+zxZmqBPF4LasG51SIBhamH1a
+p33cYmhgxod82URvHrO9haDGCS820xZ2Wgmi1Hkbb5TRPrITRIPs+/yH2cj7SJmNA0FvCjsIkYcD
+eofIYIR8ngDhlzl5n0fjNoz6mwTJ67yJTYPs+4R0G/dpqAYPWinFkTqITgCPI/JwQO4QmYs4gMah
+Nm7jGLHbotfFrNGwQGRCEJn4DpEJgTqZuIVdJoZAnWjdM3UQIy+C4zJPAz+NgfbJkaeA4zySHHkK
+QrqMG6G2EFCOPAXaRxYzMTrJ42hgSppMnptMnsZxHumAxm0jb8LiaaVNwzLSNuKnhd32cVrJO5VQ
+KMmFIBeCKBQXgh8KVZIfCuU2X89Vah/ZabsfisH2cWKDUSxp3WbSOALID4XyQOSHQskPheo+NlAr
+yZGnYPTZKdxGYCZHnoIeeQrkx5HaQ32c/LhO276/Igu1cSZZ+kiy9JE+Pu/j07jMG5A4VEcigbL0
+kbgtlKWPBMJAojLu0xh4svSROtzCkadA6zbOpJVefiRTt2kfGer7spEMOX10lzSNG8mQ04dJ48JP
+mkweGPJlJxly+uBKMuxMnulDcaVRCpRhZ+K2kQRR2YfWSRB1CjuPJEFUhjp5JOe0TytlIGCogRJE
+oT6JGuD7kKgBqofaOJJEDbCFXeaRNDBVQnkSNQDKAyVqAIkaoNNIXQoEuy6TSPArfafN5H0o+Ze1
+2e2mAxE1nwtQooXd1uBE8uSJZLGEpI2DCoEvsiwdHAN4mo9GKEpEFpdCaRdcNvK4T0V5GBsWfpmS
+FmbfxzYhiQNAiEynfSRxQGjSsIsMqGJvSWbtzNn0FNNrvim7aMlErzspvTIeYUqbSkTWxG+gd+Fh
+cNqFZ0CITPsyKO/bCGAC331mn/110p72SovnAAM0aLB9o1KX8jSkjXMBTKBvo1ALfRkDksedvBBM
+kX4A+GUMRGCXIGHAAHbcaYAszDgahzplIAODASILDLWQxo2y7csYeBZmpSzUTllkdQgSkYXyQFH7
+yFIfXYbF8NNQqVALcQ6cUltJm/CQhClUmKqIIKA2ETNE5gtDHJfyQGRCWrakLiFtHI0bZRjaKaPg
+MpKHgRyITws7CJLHCbMHTgulvA3HaRuviBEEtQ+FSoXiDU0aZtKwrcuoF9fP47xN6KFConeNkqZx
+GpOGucZAw2KDcOOylEX86LYQx2mbmW1cFrewy2xo0jAQfOi8DwfQwqh1GxemPJOG4YzrBsZPQ2Wo
+mMFY2r6P2IDUaV+GArvsC2OGyIw+YpjyQkheF/LFx0+/lKHsPHkoUG6o0m9c5pE+osdY+jJvFH5Z
+zBCZUqdxo6iFGeeBWym6Q2QuZq2280wa9tFtAmibBqYVGinzUJFVVSae1rNwK3ViOICGAYreXS+Q
+j+3iWhyGGoQbt32ex3nAb/No4QAdjtM21ieOXvM9eWHoaSj2SFpoAK3UQXwal7r46DYQcOsyjeh+
+L8rD0LqMA5W270PzjZ4dh932oT6NgRe1D0XqMi4bRQbXd0VW520f2hcH0DjUySNF1MaR4qd1Whhm
+nCm2Q2TAUAPBjMaNMktI2jiSOMAisvJPQh9RCG4YRaUBvWfs9/Hn3H0vru50Wvr3XXZjp/X/fozz
+oon5vb39P97r9fb7pXdmXCf+Smd9Wxt79peTdm5vpz9tHGkbkuj0L5r4lP7lQvIXTeyen7PE1WvF
+XvFbi9vOdtueL/V6P2eKW/OJtD9TWim901aMb0/s+PP1rk47u82VXkuz55sDIByatyoc8uEDT/Yj
+76AqHR0EV0dHw0DHw0pHZ3YQTELNqrwEkALoOR5vVQteAohySShxKQ9oQr/PqjADdECEwPcxCGBA
+sPh4UHQ4LCiwVgLRsAQMDO9PHXRKT5D6JAcEBmAgHPQBgxSGfH0SdNDvsyoEayl5Dji8CAFrAaSC
+GCwwaFUeEQIeHCoDgbMSUCQsms2GJDWbCAz7kHH4OgU4HbcBowPCYHgQOAjInk6qhMARZRrcB6QC
+830gAgSogwSKQaIvjtl5e3BgwkJxQSmzQeGC81aVEUAgMyMwECYyldCALcN1MN5lQUl3ExUj4tB8
+h4hD85srN+DogxktYJAbq3JIlTg0P8HRBzP6fCIpYfhEHBxTtJGwoXwOMleYzNGsVBYomCoLFEyo
+jg9GY6KhwfFBGOh4ExVUB6rD05iUEFCblBBQ8zQmEh1JwwKHzIJvpqfx8TQ+mC70WdAUaG1VmgKt
+NQVaSzQFWp9AJ9DHqk6gDybEcUnw0BuLIcFDbxZQUaY1ggVDQ8TKaJhWFYIYGiLqgixgVqkIb4g4
+RVhVggRpC7KA6QwCpoQ3RJwODhgEzAhLSBYwLxYY+IQciUcVKOEBiPBAR9KwADzwD6HgevgQcWj+
+4eNBTMih+YuHB+cAbRbnAB00hA2hBETAofkFmNCqNDQFWn9KIQifkkQyumyWyKf08QA5Lgr/4ZAF
+1JNRFvwI48k8nuyTMZTZQdBhoOOaiyxydcwPwkCnw/lPAHkTFS8BhKFYG+uykBJxKCY1s+Abjk/G
+0I6LpTuhx0D5DMNCAgG9mZbLQuq7BEwEjCej09GQoMAX2cRWYT3gAggWn7YCPqIOmoBDQS0ECyIg
+4WmZeQ4OTKhVcR4NkglI/RKuAvgVhCcfcgShgGA/owDCRHkmo8tmMXBgcnEnFtoZEqQ+jg6PDQPm
+AYM6NBDAiwYKBYQED32AUfiSxwCHB/ShNHBSCZELY4QoDZxQhIbAsaqNCItm4yEcjIvoguDrYJrQ
+4hDS8BTgXJOH6T5sYeUcvspCxT0LF5wn4IGZOswkcP6DQk1YDlCJm5HANFBmKCLSZTw0VmWRG9MF
+OOoIOTS/sRZwaH4TwqH5TYdVdchJgk/04aBYXZUwVFTCIGEwIbgo/IbDqhAqoIvCVz9xkG1sbAjQ
+DjI/cNM8cJMfuKkXGNjg+GRMZeIcAx2OpZIXx0CHwjHQ8Y2CCdWB6vigOj4YjYXNAsZAxwdkFnxj
+yQi1dsjIyDgIZRb8Q8AQUGvNRWYJAT2NDyZjYYLBQelCny70wXShD6WyKk8jwSHBQ29alGktyrRL
+lGl9An0wIY5Pxkgm18pomBELhgYJ1LQyGqbmIpsRCwYJC4YpgZJMKKREEggWDA0SHWI0zBDOJ/pg
+KBF0QRYwZyrCGzZCQK0jThESCW+IsBIkg4ApQMIbIlIRHl5qx4GbGkLBpOODoUBUDgIeCDkTFgwN
+FIjOKLOQ0JE0QCiAyAcdScPn6sBQIEKOpOGCIQGKijg0ICZ8ADEn0OfhoyGU0KQO/MPHw8PHRgoT
+diIfDOXh6uDQfCdTKPWHQz4cgqFUn5JCSvTQoAxMwhscQC4Kb1U5BEOZuCg8glVFRheFT+EQDMWq
+PiWJRwGEoXz+y7goPAqHUCSaCoZiMSNyAc0v+AUMF4oHYvGJg8wP5siqKp0KhlLpVKYnW4AdZN6P
+POTGRLEoIGEwdQfBJ2MsEhYY+GAonQQJ0lpyJqrSgaFYTCRMMkSZ1h0EFxwNxJJgVQgGJiYxQMDs
+IJhIdCQNlI6HZ1S8ElYY6CRIfDCU+QEPdLyDALUx0LGqrtIBjj6WBwUBmXscCxRMbVWexgdjVV3o
+g7GqARMVDGUCQ6NhWhVHhkl4A4VzkcIyC15hQNgs4EJK9NBWQoKHBmU8zBGGwgE9zcboslksq0b0
+ggQQxmLh2lAqq4PBUCwmpgLNgnM8PhmzgMDRQCwWRwOxaEBP4zFkFnzjoVDqUwIIYzHZRCpEN1Qm
+Lgp/UfHhPhA5BEPZgJ5GUkkoNYrABIWxQkSpL3KpONAQKkopCqu6PKPiB5/oIQHCU4kQyLAIBiII
+1qoQIj7Aj6E/B1kHHWlYQiyrQrAXDwc83R+eg44Oq0ItbDgsgFSKDG4ABSEhoXThYIEFhCgB04EI
+Ae5jIGUXIDzg2fF9PjXyObAqBB2iAbMTgGArrMbTB9+FwHNgYEJDLgSMJCAVtMhTRMVQFCYChuIJ
+UAAv0EXhrergawsIg52DzIJPRpfNgjAhiRD4vhTHxdIKHZ6whHg3hMPSVSRxRaxqE4KhREAlUSWS
+mnhIIhglUSUSQqBRiWxccCoRHyCxIMkLMhwqKDxIbkHCkw9DvopnMgRM/tNRADl4k0thiYRkmPog
+IaM6aDQDHddMNpF6UaEgtVAXDAXoaSgYJQkKI1EQQQlEuPAxDg8ykgH/QYJReIqIiUIEBH6BkMAA
+jA5BTZBQ0OFWNSltH0LhHiniwELCQyMPggSNI4wmPkF2SVYlFqR/oiyyonYwYFVzQAaCzhWTggN9
+DSwU4DjQCg5chAJtVaBNx240RSYL2GjMo+H60OgID8klkqHRDx7yRlJfRwjIBZGMrh6SCQeMlh4R
+BI1QVzzCkE2oRRCkiraqDt6ITPTGSpSwztCGC6wbCvx0wPpSoFNBoNOgDrpNjDCUb0K1isFQUBOK
+OpVmJCE16hg+cgrfA1HwfVZlRQhgWEbDDOlcPAUP0oKhAaRC85FIREKpHx46LgeWpbAqiwcFvlC0
+icSGQcCklBRAaqUjaZAKOp0ONwmlBg2YnQCruigoMHh9PCg6fdFBIbxD8wceJuthIYdUOjwGilV9
+l4RSO3B0ECyQXCoOwEpvZupjiBD4hAeZz85CpkzmCENJYYSL4vsgLEKOA8/wcLBOgp4w8CFp0LwQ
+jogDAYIKhcUQsmVQUBJkB9oa0GAYBwoQYFQKbD7ssEHpaBqujZ7woFaFEmkSDfCCQGPAgqiEgXBh
+VpURtEZzEmDYiRDEBoERafB4MART4sCqUguwUFM8KqgFUuJB4yqsCpM6MJw6gLgWJ6w1BWgBKeuV
+XB0HKCCwtirUTSh1oxYW1JPoYQGsOCiAkwMCnhADHRAZuRIerEoDW3wyQDQs4SLgg4HheVrUQb+v
+oeJqIViNhYSnJ1J2AULNPAenAQQoBybUqj6aRmECUr0DowAiuCAMghQG8JtECHyfVSmETJZLgXEh
+sHyUMqqIwaouRhoHvgOdUWbBuc/FoB+soADCCGA48Hk0odQKYbXmxsEHg1Y1iXiSgS8DHDBBsQgF
+BIt5CJ+2qouJrcJiQHkOQAsNhqcNdGTTACwAwRJoaE9bVYIIAWtBwpAg9U1UkAZQOCZUo7sWmAer
+0lgECCDGoTIQJhqKDYoFwTeKWBS8taoHzceBCgbCQQ34RxKilq4ADTjwFQAHfB+IWZUJYcDG/OAJ
+8EGaEPlgKCmMTYk/QANfxWQTqV2ciKhkk+hzmSC0TqmhEREAAADjEgAwcCgeEcnEglURMzPrARSA
+BGFSMHpQQjAWR8OhSBxHUhhJcRTFUBQyyCiFEDJFtRWgOBv0jViB5UUOcfsaz4S03zHGaa/YJ09H
+H3T1NufsEGW04/ykEcEol1eMd6ncuDhqkSmlONRvlt2W1lfz7IUUdE4HKtfWw9/fl2DlRvkgIRJU
+DlX+a3l3dS/8ha5Dx5z6u9szPh+UP4I1n1n3Yx65R4PZT/U56eTHbW/UjXbuyRyFJnwy3vW1vD/k
+laOAms52mbIB9dL2drwbKo4PmvEAv7tKy2qheBf9plynd+dqgOxnI97F/CwADt/dOtBl5vKG33h3
+J53ukWZ5wxBXLpKelUJ9shsai/J21bGGTq/QDrUv5xkZaM0kEnRH84y4PcUxAonEbUiZn73pjPTk
+jWKroBnKjCn+1wP7wIdcSsZmOBXiBDSgKx24maXDYtPoyA0YNnKRzKsUYfC3Fj6VNXCwZZD2tYjd
+DISocKOu3Fs5e5TTGtcLs+DFTCJ/Nz2inJaXGYZs6zWGoB72nudSNsaKyVi8WFqamtd3HJk1+unk
+Gy16isfNl+J7OUODKvZ/Nz4ZA4o5ZTQGDxYRGMnPFtRHw8rLLZ4tVeujEoA2vMnSZK9kCoM2l0Qw
+ZWErrE4wqt7mn5CZFQq6F2aFoYOdYt6Ba4vjoGHK2MlrDPEjYFmobLaggtux7T+QbVCzc2r0urug
+S/ec4sUWWnT0uuioU6NsAgOVo4A4g7109kXafiSNm8ixmKvIqnY2yPuv+6jVzoBhU63ev0Du5FgX
+1NT2Akou30FilqNkpASacJ1TCwHEwki/61t6093VP9i0dJBZPBD99wtlR3Fm+F2Xku0dpF5Kd3U8
+lO1veR3gEhWYPqwrx1DyNZmZxiA7fLuQr+VRDaj10K5b4L3jC9W1S7r+js6ftakR7oL3Hpn1eKiV
+5r4hJFy4cC9tWycRhKTSyfIAj+rL3+3k4vwRza49eAScXVqTESciIaHJMzztEBQURG1EtA6f+TLV
+E2fmIOJk161zD+Jn3OVGFB2D0qxqKNnAiD7G6S9HgdtArURkWGvkUZtUXsWeh+mwjjuTaaqvop5D
+aD6NT2s60Oe7/nqj84VDGkOP3ICmXahNJGsVKeDUpkyncsUonbRUtMTcYBJOKqezGZ6k2f0Mem4N
+Lc7STr2PKmB770NwnfdrBmKiKWY5jy7dhrQz4qIpvoyje3kYsYUtnRFNLau8pzydYloKosf2tNDE
+Shrmo4vtL2BJ0i/NdLKQxXE9juYDiSfFtaKr5B9dzZIYMj12Vg/61x/dLJI2YyUd3aVTB3t2IAab
+d8n6VXTFMia9jq7o5TEhNY7qkiZWnD5hnatj4XPTjPhioO4t4Bq9HtaELE72MKZrMSj9nLjEWcAV
+Ob1+bOD8FpkYFR9dsFewyQV4c78UQ0jz8wpqgaukLBtoUxRjwkGMMsKKGJnRFVs+lcu4DbFxPHiK
+iVtkLeKgndgrNi69GwqIkmZmhJxiShtMtLEeM2+MPE11NCgWGZEUzmvMlKIQN/ros5CiUZ7tCXqL
+IdSJts4T0PtqGTZAZkg6MF3JQP+QGn3KNRSPjt6/kfCs6ivE+0nFo7z/J3Ua/8SKB8ndRXTwkcTK
+/f/FudSEjhPR/CyrqothL0vhO5BMIq1K4vZ1fCz2TN1DropUzY7QTiSAUuaddTP/dxroNiBdDuaQ
+CjQDdqQrj6HZQ7bLU1b7F+sbudsLNDuqiFNgXIAzQp1lDFAMY70hKyGzpFRgnEAgUF8SG6BIQ4KH
+9sLuK7uqpNNAHJPVIhoE+yeMPNndjbzhQhS53rvZ0UWRIb6sgMX3zCKppUsIeQueLDkZuKT2wpoo
+CMt++PYjQG34bFbqng+WFBp3SoQ1xSztnVATlvJM6ojptqFu/j1ceTPOaoNgug9HKPtnhtdPHng4
+e6Sxa2G6REq+JJ8YhtGsfqz71eRYt7v0Q+nGRLI1EtM15ZhyNYSUETUlEiGma+zejyH893uGNaUr
+PB1junewiTsF/0ab6ao3KNVDwlKlDA/HPgQkZhDQkYuJUHMEM/CFxCjIZ6ddlmOAQukGVXtmyzGH
+XKXwoqhzcCTMBsuoDC7FyY84W+qAG0jkD4VaGRss7yhE6CHmb78ylMNhZPMqNR/qkMQ6RGXkCyzS
++T26EN6a6BfyZyxsGjzlFSkGGF+O8Ur2jSU3Xhnl6xLRIMOLfC2Iuo2Nz73OJjv7TNP1K0NwMf22
+/JVBH7OZSTdQjtXtixVmFczmmZ8pgJUGywaKh5+/kP7jjZHeDICfkwmb0a+OfMB7FCZEck5depFX
+oKt+aVLB8RqWz6D+sCSjHiZ2dpI+XjjzJXUD9UJQGdj2c5VXp193L6ZDQ/IKCWeprF1NAn4Jwk4F
+ub0h8Yj8XxcmrnFPL5wAkRmKhRXzbYq1cPeprNQjkEsIwS5DrW4i8xINGYsz/gELt2uwMh0JroPF
+tPkOvr3DBE6D2BX2HKRoK0dxYezSyunz+3YxYKwzDJC408yB3K52WcCzWAOZMp7MtH7utiopjsl/
+DaxOLO2RdZ1NFI9RzV9nS5b0CagzhKrodYwmxGr+2Pb9s8xZB+kEtCj2eBiOxWK9JyVeZo8pOUzJ
+zsV3j1+OKE8RY54I+B7i7ZXLSBvfXuSBys5qUWZQJPOGUeRjsx07KXLXwKLee5eeFsNgeLnMRi+x
+hBhMaBR2r6+6esBL4dIHTyPVq5BTQKf+rXIMXkQZOVTiMuPT0gGVmAcjGmVK3OYwioH4eFfE7ZYc
+8zT9guGnXY7rGn1wGQGQHc6XcWZvVUagnNFVylP5T84spJhiKWfDN8O/A+t6tihNsCOBV9c4odeE
+Aubfj6byQOYGfkBV9i6E22tp4f3jREXjU6ND2LTlZknQY4nOcKwcTrUXoYD0AFiCGmq4OevkZ6p+
+kmMBsnff+5j8b/bdqw/2N7IXz2yPRBqc06KsrH8BLdURxe3ZRZd0ghLv74MSyplLyJtH45YaaMfN
+2aGLFbr+Qolxb3b2k1O4TAwRSXcn4hw7v1PUFO6KL2nFmyZ2TOW/861N7fFdX+jNu6OtM2LfBdze
+nU40YOaz55u2xFuKZuR9GVi2jqRgOCnhaxnszK0gzPlmjCmUJgdccRVjuhbYI7GMCs2dgx1hTGzk
+ve3W5nFEILOI4XbLwpQTck3epwGWgAELGmAkEMlQ+c7sNQibB2LwG7vgInem1v2hAg8e5WWioWNE
+x9TxZROuZjmmMDWvEn6zlyWYdauaf2FyN+Pl4oefSW0yFjqbyd+kJ1tOLOtWrb6U6ay3uU9Ew709
+V/54b2x3lYjThZNlCBfEwa5Qd1TU+y73/KwHFumsOqYAu7XUg6sGb0sscTUqrUPA79ScIuxkqZyr
+P6orFNoskOetr1uBaprDSGqRfCGPFRiLAJcMnpyaEzUGuDrq+8A0MzCwTVma5CDb9YdQv+m7SJ2X
+Shm3wNKbo7WPghtJerG5oT5CqstJb3rXuQnses0ca4iqWvBWpm5qmt+PkdOWxZDXdCswX68gUMTv
+GNrWXhZVWGX7mpQR1Hyo8eyV0U5/7va2oQiZBvM/NWdoy7MOpsXw1v1+vemYQoe3t5M7JqewdLc+
+YDSJ8J8LRiilN+ph/yfNXDHo7lN88FQiZpypryPq+r8o2R5HjDfc3vrwX4ObFb+mtiOWdlntw7cP
+ZrrHt/X+KJZB5WTrnoi6+8cH3g1uDibHGMCnO1Y7NROnHpZdWuiAOB1OBYXONKzL6HJEhPGNPL2t
+b6hQYTRrOb524u2YECkPD13EL2aWeoOCEx5aIf4OIxXT8SucnsAqCOOuUOfWKEcsOqKNdK7vv9IK
+CMifIfCnzUV8J8bLotB9QDjGTzVyd0jWuJp/cNZotXJU6/b/06O1AnR6tVC7i7FMp4a6HEnpQTcc
+BHgnkWf8FutY+oCvLj1GzA3n5penYuAxmOvDjqSD9P+ZcxaLhBu1LajyjbG1b1g1/5D+jV8MHpqn
+9+meajZHaH8EdLLDYyihzdW41f92mFu4tcZs12ouI9H3wsUifo39L3XAMwBcNvNeNaelJnigORoC
+FJ1q5h56SIIqFwNgbJjqoUhFtu8zdAE+xE++GIFt2ZWhnLe/hZ42HpENQfNnIFbWtBVvgcOETRoG
+8xEWc+x1X5DuV34Rlbf1Mx9gw4tmUb5OoKB5jp7hpyMWCyu8YyFNJojdTi2sH33fXS8rFGOgG256
+M5qibSG4U69m9fPTA2f59Mr32W5GhlDkqiFkbbjCv59Psmb3Zpkf3O5+orUXibtO55+U4bvGJjjJ
+r9s5Lpr9+FnPGVi6DNmxCsO9cnGUvTGbxAtJCRCp8qb24htwKk0Xb8F123CPsByBmaTUEhsu+BJ3
+TGcyWNigh/v4iBpG44PGy8OXXCOEGqjwMMIyiHzm8sZIkCQ0jkqoRZ/6TiO5DWAWbEC0tRGfkITV
+H1+m/vljsBCvOqV3+Lz94BdC0Fn7637URg1N3MF7Kjn8ajzj5TRnuDjo47A3byj9hSbeGquPbElJ
+WDxGVwMBm5bVvvVa/ZaXiy38BDq+ENtl86w7TrVdAon7kFPd6t7KWcbmkRZWLIH7MjY4vEIdRhK9
+YfOUcazzy5wgfwVgfBch8D1UXyKvByBlq14O3tkyUfBAg916hCd7nwebq8XGlKEFeMlua7x2ROMl
+yucGQ2aQ8z80joKArhsGPMZYWoq1qE7SHv/vgXC0LhiNm7PtC5RHGj4fr1hGsYWTS3nxqP0/zy1t
+fw4JlBVTdvo6wAu7iEhqkzEh/4yMvzBhqT88DNgYkdJCBrFQEl9CrEYHZYlAw4o1t33lwigtmvf2
+l8PKaALGgPgnhhKIdtkaLJC1hUw3U4gkHCkjyQ9/an1WVjjEoJzG9K5lW/XwgUVmq1NHeuNta8FE
+sbVwMobvMjfx8etgfNS9XGLuVVhkkOpk2y9er9hkuJlUP6oGWPHkLQNDx3YoHjVJVI9DAtVexiOl
+ap2hIGyCIYGOdaPy4xpmO2+Nr+aMBABXTPWgjlsUH+yIx2Lz6n7WNSwDJCp8Pa1zOJSFLxIIPBFR
+BzESLE0cEjsKwbwCw468oySMyEHp5NSgBaaE212H/06CvnUGZSuRX39SgBE1mkAPgnoEfjAE5EyM
+UY4x3sHPk+VeEnhidNsSn5MSW27ALDvQwQlV/sTh3BBA6UAP8/DDJT5HdPCy6NQdpxi7eani7ViC
+nvd6GKInZIt8wCpiqVCUl+S95RP0lSY/Zn5DnCnsakTHS1LHKAZHoYuYGHP3/l0xAWOTtRqBS7c4
+MrUs4xCoE5ILsOjtIj1KRTFdlv2sFwV53SEVselh+ozzblfRoj+U/Qufwl/evkUlMzdeVFzESBxm
+fkLp8wJyk1Gsnhwp5CJ0oOoBxguQDv04NBqGr+dH8dMqv9E9qlywfRknt5meHD1/RJfoSvuSHx47
+BKiWMCk6os2Ce/0wYOMaLH5VGAyG45pSljEY7Id1DZQiimLJ4fF/CmcuegaY8WCpXGakyOGUjvZO
+Zfdqgu2MOQjm5QCzQVYptqCGcQugklstDUf9LczNWhg7JxFFrmwS5jjiI+JrOLLti2y329S0DCup
+64M6xGd1esVptQjfSKM/AcIBBiB76koaHwyAzyLHI8oKhNfyslCfod8Rl1N2vf9iwUw/VgWt+LY0
+QaEX2cvKewzVhqOE1gCNlhi2+0teXbBxe5YODE41G3HybJsPr0G7x5vZzYaHeCwpe4RnZHnrhaGq
+FQsu7vbgQHx/N6nHoP5Tl1Mt8t5YLZusRi4+Gt1P+jyIR+XD7sa7BnDHqFCaNcQx6g6R9ch6HmDe
+7vjmRD60IqdXA+RlKn/1Kjj/toZUoKq1TBPoLwP+g9Kcm0P1H+5E+hNH7Xj31FDwbJaZiLRot1Hb
+Ef6lmGgGpihGor2JA7xPpo1y7a65ilqLdYHBIXHQ+3Jqz5dZPi6yGnoT9PVg6I6wcxbPYZiDPtjL
+/PxKuoc53tZVuADUbzg/jvjiEC4LIIeezlxAXMzadscrKM5W+HIJF9rmdU0X45fA7o3R8+kvy48s
+4Cf/fQ+EFXF+sQkT93J2QpNL2lTf/GCswh2J9p2gQlA4zdKBDTdQ7NSZXXYfkgVTdImwKyj0jh9G
+WLy5ZpQs03oyOy5UXIp/jkPzDh9DUTs5XPronwTwVg5ZaHGS3rjo/NRpo+4L1z6A9uzX8Y3G9uGL
+/zfjZbpwSg01Rlaxt06HwBttWTfsEqw3R8e4Oc7wSMHJueU7tqFSLpdvWq6+T2sUcXo1nF0w8JYX
+0YfTyW5AozJS0wuCv1dlm7SzEyfd9WzmtVHFzbwOmNs2/AlUoVLe09D8H+2a3ksZ8DP/oznH+Gjm
+oqeqwpPI98puKwbERpdyFacnGjPrdDS/YyfJ+016Jy+RkWCVZHmjChu/QavsW13w95ntMpt/FVBK
+qr3ibPZPCUtx+nL0xFw0jVBCUtyc17Gj7dBSk1LnMRqK3yVw70li3RAVUYXx3AjojNBhgmZytpv3
+hHv/8eZ8CNN3rczmS6sG3Vy0vdV2CfJe2EBtXTFCJ6MuPYL86Qhl/nXsnzcHaeA1lzY9smdtmLQ7
+HBONS5wCiJIsyHzFjKlR2eIx4hxMAm3yydRIsLXOHE5CGVm5dP6PZkYXZEAdrQ13/lihbkxiV0Mc
+PerjLOHe0hywuAHdkemxA/CsqFPGu9+x2RA7tWfZ40Y6IXByEueW15urVIM97jk9nz4NHMAfCJrf
+dbs/UIOx5vfsYAG3FGLUvj/6o0ZxOUDO+z5hSpnABjxmRij+HFSiay2S17IeqOKH+s3e3KrtHyki
+sjfEfW7gdDSZsyOvdGrP/KfGOpU/WccKlq7GZnDEghHiK6WAv1bCTWYxGmyTvFXeVtyiAs1OSFj9
+J6KUSQK6plV+JzwQLwePQSwiZJPMv1de1T3ID4wWty+6Xrpx9XVPIgJmjQoOHQpGIa5l37LBuLXb
+Oke1DOE7LSOwQjwAR2KxMYXpbRDZBqr3CLlneMsetx3tOLePJxgBmJPLlOfd1HjbNrfEYWuGPONW
+FTQT9iw8E8SpNsdjKtrz9lU09B9GYsaWFhhphHct1+W3LAYd7AC74TAdLfDQL8tEvJGZUh5ELYbw
+ZhwGTJfEwN6mcwQneqmJ4uFq0igEDP8SUVTJfGAlyo7ZD4EVnGwY/5lroDlsHIEvfbBWosJRBrSU
+sveyHv4mBSYU0Idj2XTjV2sEJVFCGYH9AinRhpIJapFdQkx5Jj5CxOo7IlARRzLe4QsiOjIMFee/
+fb2Yp0ypYXgCT4kWb/bp6xjBaUwFnEz4+fU6x9JdnwjJcFVNhDeg36UVkNKled4hzUWFPrkikwr8
+lfKpkcrMY1UEikAJyb61i52IZiTUXQr8GJ30OI9Wz4VQLXOmRFbJlIKtNUqk0RAah8FLxvATaw0Z
+WJQkf3s4SGNZVkRMl1sa4jbF5emGYWWiodbsNah4njOckUrIuY3WyqlJQ2qmu7SxdxLXvUgBGEmy
+d8sEeAOeEkxVQh93O7G9Zbq9Z1+rMR0BQx+ln/zMyfp3MLCg9WMvVQtAQDpe5C2P020qf8P1HoV3
+ntLOpTJNl7EHPlhD76MCA8hy+TE/jY6hsJtOBk5D5Vdf49kaOE56BIkLZ0tMzM7lAcncj30O6avw
+4fPgAR0IwOuTpk6lteg8qjAKjgL66ain84frUg0tv1hYEiFbyt1GpNGkhE/C76TR07jF6rX1sPT7
+uen3qoC6HKB5MjfYdzWBVhP8OFdBRiPmqgFv8GVlJtm+bnASUzN4pOQNp1EBaWAdBI5lF4QKQiEF
+OMwk4hOKKn/QrnKssjqNDEcEf8It9HB3JB+L3VMthUkPEI7bYfFRmrpH2H676OTTMBuCWrC3yha0
+IypOZxL8v8guVcv7Vd5cRwpIDqvhteRLXoOZxRRMx/j4EUTYRRbUvkpYwoN0+yh6R2Pf9MGQR2Uw
+g+kkHcoJUAhZQM0bEQKyOtAMx2xvKCsMwFCY+Uo/MJs4h9/fm7q+IrolgEDcZYbQnhG9quh4hIjv
+xGAyPe16nz0dmPneqjzK1T3rCjjMOiXGTPrIJcjX/FmuNLxvSxwIuVAdgzb0xL7IRoNnzz3OaF1Y
+dPK7qKySNwo6feAwoHzSALoNz+dyshheioCEi4ahR5oyUBzmN+DWPdcxMS956j9Y9Y5fKWFtizRr
+Osv06iOXb/fJaVJyvmNSQSuJbF9sJmewZQdqsTZJsksmwWCNtiM83YyrxhyydKD4LQm5VWOQlxnl
+ryDyErlLHIr8KOgC3BiHpChdM/DW8DuGnmrfiub+hSnYxMOyb3naGciAJYX5dkSlmeWA6xjryRow
+1Nei4eSfpEE79bQxH9nK9yrfX4kIancEfECxAanhQ/k7asyIg+hBpQ1/PAliTipOo9lLDktwaWFS
+QuYS5JqHvHbSrTyugM02q/aK3CwpWWFuigFV+B3IRLRtRxU/TqZ+dYbSlIgoyG3unCmr6t/FkGGT
+0Bisb/P0iDLI2Rfrxgs9PIUUjN2dUGrIK4dAoX4B8XfDcNl2l+vwnNzMAU5DKqjHZpj7uivPrwdf
+EKoB7Ib00DS2lecbDsfy2TPPGQtrTZyOUCWqJEMbAMhxo5B7KTk0fGKkQtKeZI4AR2d/32ef45bD
+NrFvcyR5mTikTpI6xI1I2LPKo/iIjnNLJMlI8v5CYCyXsaVn8/580pIqdjShY+GtVVI997raQwGJ
+RGohAU3btuHHif7B0EhRJ+5ZDADaWesHprOrN1FEZ9mtDQQ4zI1QUZ0OMMehaIY6HGyGr3yF0OyU
+kyHl62dC2vOzsrYICFYAllws5JTBW8jQaUx0ftFDt440RwB1EhOi8TANKdijiQ36wzOo9K+sq71J
+kG+5zRhbU4osPzQi6cPOEZrHnEdezL9KDvdwNPpGDleJMJsvIuHBVgToxZKih/Yiize/nVH1EK7F
+CyENWozjaqkzt8GiCoWwnUh5HsA7p7jicq2WoA9GgDv6M7SUmCXPaKpm5r+DBsnVfChNBeazUigw
+3D9u6YnDKA0XFeQV/rMuZGgow5ppIHrARFwl0D7xHdF46ByTqwaPV3yb4ZVv7Bs8cw13AYhB844H
+aDcZdGmrFbKSi9kDNKUEvUupjY3PNgvuaowVMR/MgAbJa1AxTFEqHLFTnDxLgtveedYyHQouIbi/
+KjWqWynTMpFwLbZgMW5ws0z590KFXKrDDgIINYw/VIpSQrrxB3RXAwhuWx0GJ/BU4MAa6gBQDbcZ
+B1QB427rgS1Itkyoj9Y70pdQpwkzEzQv8/aQ+LPUI+X7fPk8JFb4KdIF+fF+71x1k8akf2UIt1ct
+mOxcYfpLGLKmsyUYGNN6B5DFcnUUFr9BbpRQEgzpiAwV62ZVLUS3eWJoT37ivWWAF7SzV9QIYhOs
+7oFdjCRCP0KFcVPapmyisv6QLkX/FMwXPMgZ5s01cEBNaSSLZf7VzsHA79KqY8ztK9SagqPNy1NW
+es75cZk5KjF5NjbvU2jhSHSkEPemw5Q15PzrPHycFl/KJNNmC0C+BgDmz0D3jqw4o+NqkTCAgX2Y
+8lXWeOioD9sUWVYcURD2Dek4S2cvN3B6A1Z8yxTiP0a5miNfaz0InU+Jqzz64EGIoe/MKXSkbUQt
+hWr7zqo6E2hhncRL8q71qTcvlC2Dju5iSohibXCzPq0kTi03ptEzRxSGgTPkJ3SDfSUUSXoag9Xu
+xolEGl0MGXoI05Pg29Xvkc74rY24Y7SQx+VIAQO8KUDOyViICBqbp9yFq35JvSVzTtSh3dMZer+g
+HK/ENx++SRe4kJjSUVJScQxhaEyfYypDHlhQgZefHuY5WUrxUn8SdbmnvYBEt7DwTDnUMeb2LLwj
+C+JCa+VXleC35yeZcVH7z05yHwNFFT2VR1SOnNP+88aJjDHi3IA80yxqssiUfjzfGHut8Yb74udS
+ozp7srzsrN2ZxRIZk1h9qeT425yUCQr70pZCMEwR1uDkoYM+Hvf2KCc9I2I7bo8JhzWV/44zmVUi
+EgJVYuMNmo28Q3MnUBLnKZiJ5AzGOJG6GYHvW12A6BDx3GHqadagTTmzIRXbQtUukna0qVegBqxE
+NhkG6zqFKov2IBXxopC6mM8agkg/t0xWrI4taR/TVw1bElACUijeY0sphYZXZ0t16rbnemIkBnYZ
+8ila2IZsTLXRnrB9VsgqfRmL3ySow0KqJ0DntTCKwGrTfBQVr0ya4SySodh1rFznBu53MUDrsY3f
+HOKem2grnSE5ZHJtNzCswyRiZZATFDxveVjqe8W/5vkNUWGJhceIx+A+CHFC1Q0G2oK75bedLjKH
+yZpwiQdlIj1giihhwPLAKN1gJMn5XBERNFf1lEzixDiFtzNPNEBFZ09aMdYFjQ5mq5JFIzbxwSoX
+WbBwdw/D4gojlpAJtKx0rktCQHSm/jR6sAEaBTlPnJ8yWuj/PR0N6cIZkWbi8RE52HpAObwpJENq
+risjCkIK5ZBrCJkvg9geiXYgpwnVHbsafd0iWkrkjb1uX0fulIIoT6stNIoXLCR7fWEOJ/olbGdZ
+cVZEKsMrTWjEiAsPIAS50RTu+ber4W6moG6tdHoIyoL11BA3SMsrZ6fLdLwXOZLuvk1SgQrwNtji
+Vtufu4M9hg9Alm6jhqkZ1DQm46E+vYglQMJfXPUiG5wGFSPaI2Ra9iSX8DJqMs7lIFE5SZCALJxe
+1fs7PAHf1InIjkDkYap4lPRiuAK2Nz2VE1Ij7faTRGUGCT8bsD/7G259fqhtNUUYssECO0iEkjtv
+hd6K7mpGQTGhF5BLTaIOI36PYUW7wk7zxyj4BnwZxrP4Iv0T6my7TyGnym3UtBUvBwoikuXjEsC1
+VRsNNYRaQDJdMBHnGI+by/YJbEcZRpUgjj4TlPmMzIE2HYXxGkIBOeNe1UhxlwbI3VRdMNYO71vn
+6v2pbnGKrxoUMynd4njIfxtIToylDmJ1Y4AwZxXIXiDFOkrBUXOvbclThlrgYy1L1dLAyI6scBBM
+yVw9wD3b8YgwNj8/TZP7lOK+pe3XcIuEGdf9tIjKlkUkpOsel3duAA9RcpdTp/sfsOEodTPbQZ0H
+6iW3p/qAMHbZce5sSgDEuX0BnvEzX8qWoghDu/LUR6NYjeXthQLvaMhNdCXSehqwG0QNnVww5SpX
+39lrVvZ8fpKJDQlTCH0qXOOQFPerXIAgKo3z40r1aRGlKgmZA1QrY/ZGPLNAsqmWq4VZOsvoXy+E
+zFH2o4Dl9xe3Jc8WZCbwxY4BtRdtB/oq4P2P8AGbxpys97Nq5WFffAPaEg0qFDrKh8uK2+nXTzxW
+lJUWq6VfdNlK5QMD/T7Mmq0F4/tF176tiYy+p+/zG00xd3puGSw32GkEmFzOIFRnqmFS2FQWSLYw
+5CRHHySZsYermtt2i/6TLxkAIzpOlsgEHLnMGbvzZnRu6NDf151HHeGKN8Vm9tu51+TXTJ698+HO
+11B2dQT6CWFsaxD5QvFPdDK1ZYYuEuibwXPgfa5ISvRs0/kFiELctCgjrOhprW6brl01lAlIguxX
+GWi6ARbRB4k11Nj8OIkA0NUOltHIxYWSDXYgGrC9ggnCXX/IUoJ4ZevuXT3YkozsfktlLwObk12y
+Qn5OMgQxsEj7u3e923I1hLpaz+eoqcCt8p3T84ChUyuPxYN1xtOC0/ybVy/DbYxGvYwxIUO8/9Jk
+xXmGTRr9n3JcGkZAP9XqRXq3hKc6rFNatfUygy13t0ClPzkr9FWdKE86ALXT3uR15uDkflCHC+dW
+5VznV1W24dEOrC1qRMHCQqOYRSJSCBPDTIqrXzdtjL29f3vhzTPF4gKddxxVjA/E/hoUOzDDdNiY
+J/IpQx4O9EkxHKytWI6l+zv5Qh5pbpEiBSW3LXwxVVZPu8ossI5p6TVfrVMgdINDCoUn1AnFlJ31
+qMbiNELNETPOJmZPOBRciaF9UAiYb74cpfpXyiG1Cz9CzojFTpUNxvOdfdEaE32taoEPJobnnsQ+
+OKlO/gG5iqdUBv3YPmiI2wxmGfmRDrXoCVHhpFSMcicDBkAcIfBEPGREVFhHn0V222e3E+r9tII9
+BFU0MybMCRCMtYFk5Adl8Vd0wU4QCGd9vrdS2Aarp2f220/H+LA3/ZfFb9ad4rAEJguLZQ0nHRnu
+B2pVWa6Gr3xHqyA3iacE4XRYD11ORqZoRvKCrla+m8BJiSS/3eW+vsIDksNFCcrAOAo5hdzfjzQA
+rgrXF9xlDsjBTRwVOHj4gMTepWqGo5kmPj6KWEsfejXObcq9wxSzeacNuy95s8G/xc+8hBQL1+78
+NBE0lw0IFC+xCb3QHSf8w4kygWq/3LXSUopCxSFOVOu4Tf6U7hNBAS2rsS+JoBs5KJ67+ltrwu+B
+DRbnkvqTBYteHh2U8dHNJrchUUlQXS+LT5qJn5LgOlgAX7BIaBh3aDf8kH+of+pFOQR8SrvSMqHx
+N5ewiUUDi4HYIMQWtDeEKzI1/wdTudMZRJbAyDiimpKPzxk083nxWuzWgiFiWr9pAWLgBgyHxAdf
+TGgN9tNWRLXq8m0ST/9pCvzEWwcdoidpR80BlLNvXZQfkLGBW7rzLfky4Ka4Bel/1VXtqXNpPc94
+ClLqDEGlWiVWtpzaW1Y6kl3EU7RmZT+pQKfn8TwuerRFFyy3qcC2u+ayn06ANG+uCeELRAY287ht
+hKvAdQblpapiCQfcGpeX5oyxnRGfDHDWVlOBZ7SfFLbQByLTfXxM6svQ3hwkGfk4nUW38Esr7JWP
+2MeE8hzjZ6huX1Y5RWY5iJnElcUEiuOCtTO4AkmJf8c/1kZ6NpRKXzHb47mD6yXN1AhQAZUy7L2O
+5xp/7fF2sjbJkcVgfhIrlDuRnKuyDa/ESFcMv0SgTwgb3GdMCumaqAEXyD81NkVFMa5RCt5XSyrj
+LDC6ZIyt+caTT+JM0HlonGakgL/H54EOQ9F10thLTopSfC8MoFu5vBmzheS4pWs3LygBdUz4FXLH
+YhwlcRdTnt4iTxHvNZkKWewJtkmwEyquOpHILSkrZoHeeoleNctp2Km+3pXZ70bkf1PlRwsXUGXH
+y/xlcUsG1s14BB4H7lm9PDVpIufDckjzYiJ++R8qAO/O1hsFdL2BBQmboCkLuHxZiDEboIMpwgub
+KCZiRyv3rxXwn/F/XjRtsRsO+c8oXYqfHWPc8okgT1e6VCgGqQxHp5Zys9KbCwQNrRX1TIeFqkct
+0MdeojxWp8oLcGPxWIM2WmCmdBO7lHLeUaG3vXtyo1nZ4qDBR6Sr6snoNWN5idRVKzHz+3dprZAs
+Vg8X/G61gPPo03boJqLxOBNoCbQeNjA6PV+q1s3Q/ymnKWcvHLMc22uoRouf1lbN6r8UZ62SNjeu
+eUv5i5s8XoK5HjWSBAmLqedxGi5avtJgnY3e6mEUnv56CayJivGfFCTTRqtNWC1mdE5CnEaB0Iys
+ediIK4IJOk7XzH5hhpP8VlsTWBO+yyGNYPIfs6NIIkV00sle/yUpZNOyZkIvaC7HnZmDcX8cdo6Q
+pw10E+zRlSgG4dmTGOARBLprqYhKroFSGhSZyjMV9yVJ/UUITnN7dwaCnGQM5jkx+qSZfJ2DenDr
+d9CG2qg3Iqg1z0ZaG3lTckci0b+hTdPzDmsQHKi6tZu7H1FViHKjhWxELVkfJSEtQ4/DMJHJ+qZE
+Qyxx4upRSLxxv9eNO9zIbipmJq2msPxYwZyAjdkhDDHUaJ5zkp9RMygeM0xx7QZU9LlK0dzyeBgj
+wttjjHXya5D6ce+WEwJBfU6S1QaUNSTalMN7k7qAdg3ZmUD+TJRwBHcC3WdHSH+DHeAf0IToD00A
+vXe/5L/RaG50y4a+75resnHBcj+l9WzByUFW8y7ckDOUNScLdrK45O9tPjyAH8r1gzjFmjH08rYs
+P0mC5ia39HLpRslHRiCTbbP4f1YIiw1ONBLAM0BQHply+LriLAzcY2TvuHzVKMFHp6sRqc1f6QLT
+9sffT+j/zzJzvLqpqLLqW9e46VJMNil3U9puJVO+OlO45FPuatV3jZu7YmN/3lsyRe8t3zchd60d
+5bESEGSlrzl8zAi/A9wNr2lWiNHzVAUypFqoSvZxBDVudyzV84JOODxZqGDiSICr0ySgrMLEZqTr
+KE25ceJqrrktGhwMHzA+ovSaPw+k31t+vqRPJHBRGcsB90Rjk8TQI9Tc+cpci/SrggJAhF3dYI4u
+5ZSeuhbajqKHDpHA86hyO9cKZ+Oz+gFslJgGvnyoUxji9Yky21rldLtEHdvcYGq7BB0lWCa/zqmv
+1S7KeKWvKSCshFvRNuMNeF5jLfxHwuaQ9hfBAXWQfEUbAXSHWcYZgRAmBoj24yzaHJ+RDRkDWpmK
+Fk+EHHSh05FwSMdixxjB3CCBIQ0XWhsa/6xaG5GWpIlqZWwX8w+jv6hsMdSLWFDKGWz9ntEaz5BF
+Im8/UrWO+5WPMPnRphU+JFn0icze6b7h/6LRjyXISszFzvSGqptGHCvTAog50S4xRD1BioE7mSLY
+Hi4tuJPmoo9wZgSr75MenQ5Hlf/QeWmZ5rX0/5x/1OtazhwhlUKFYwQx3LNGMaUN5BVPQvs33zMc
+Eq2bdTKueQn9PkLDw6e8+QVP8TCQG4gYWPZODaZSMePtYIKaOpYxdOrgfN6FbU7x+ckpRACp2u2X
+uvzwBKCWB4diZcPP1hDagEAOyCqmhE0qShgOEAhChqRBd5lXbQekNKlMMUc5jdBEFmi6WwX3YJt+
+oZGuhrhSPDwPaCC8uLeV3R5hAdn+Ph7f5ND/L7OsPT5lRUDsnrLAzFdWMqRuToH47Q2pHNWzOuIa
+3OS25Au4iop8n/VwR5+ObyhrhliTrvyVOUSEX2kgIqhPBI4iMQ4aRLlsvJONn6+ODTJf3N1BP/J4
+yyBwa+ZUU40LWuyKGx88Ca/mGUNvQIMj/stMJaQR88VeRJYEmihCI+rQeoYhkzFWMngn5bHtFiVm
+bERSmiFgaMTa4iVokEsgb7Qs4MO12pYImWxWuyjFGp+GJJufQ9VBQ8Rhr8dXkmtd7ZoK4wG5i5MK
+FAUbH9voIS4iv9KIqUC9uboasD7aB45n+znLdVMIQ42FiNvbAXNKDcoOnBI5F+8Ik+1WCXacv3IV
+tXxPWEfaebCRCMNC6mb3FnZ7d0Cpqim0Ejfxcbfy25SQmtIDuH9cJvIPM3H/bfzl4jKGv9+iMfiN
+72WVAVg2g7hdG/lydB2PWVM7bgwZDb9RsV1BBCiOej6AD7vwEXC7vwbMjVc72HeEiRAo2BwNkI4p
+PM1si3/Re40cHeHuU01TCfJgn28o7Rj3BEbtPXdkTXGrvf5T2UDg4AxMdgxl1jvwKIPSODJTNZqr
+JtV56c+IErD1Cuy+B63KfFmQ612qM+vm4dJoFpYkqCZDmiXiTE2g9akxdFfuFv4JuXG0hN0UBRr7
+NbdCA74gJrHuyCttFsHZoZTpvW/6s4ch64BuqLLHcBfatGkFwk1o8AhkfNLK5ta17O4chgVebXcV
+zd8UVPWqYZynYYf/cphfTDydosaUdPRwGYGnmfmLUxf4l6rSVDkaDaV4iEDtIq5RF2+M/UpPUU/b
+wlP6ZQXsrS+eZUcJq2fuzaVWrvPNBc9dKDLM+bZqQNyN5hEZxzwR1UicbSInrV216AhouOjJyFwY
+j7vIM6cyny86a+40wVgKzKtSBRaaA8WVWGOgM/bLrkhp1mc/RDN9dry+WPPQILHqVx7xUlqveIxH
+LLbRGfSrhfBBaWmFy5FulBIJxtDV1NQlpiXN0HKH7/SWYv5bbzMKd8DX3RoGWXKPQFDbcAOw0IPP
+9VTmUXAwIVKlOAvBUmARJ6zD0H6hHN21Anw9As/Dg0z+91iYaJeosadYSbhCqdxfWzVFH8Opk1AK
+8D1kbIjKOHXrULy8th80q3r03JLjdmyDiPWL6a6e2zlO6tcFfjgQyqwo03fRRFdHNUnUdms9Q7AI
+AtbL30nXk+ixjF9WRJ0Hz8EkZbXr7sJhiOLzHEEGfRFcoNYqG1xhCrvkEvbcDNwfTt1cFQQWznvS
+t99krefM8awUpu268S1b/ZFkFrkMV6oyD7g5ZIeuHT5DRRjeJeZQrnLHVoJg3X28YEMkddF7CLOw
+97iEsovAyBIcAM6b6GSQKKep61wBnCmg1Hqhkxe/zdvcm0pXuBnQFgdGIHbybFf9XBYSnlil9p1K
+BAfyJTk9JtUaaMfCZHiQYCA8P7izGxRaxXUdlQ1CXzrcoUX5iAOJ686YILkSDiYgZnvtGOToXjsO
+efYQA4yAGmFp1MP2Xu2lJu/bYQ3WQ8C5bxfjlDi0U2jt86gxhJW9aL7tk/eJB87CDWR1fxrBFbrv
+gc44forG8L3CkqPDrSAqGmMLuvcEkBGyPgHUifXzmV9KMo/Pv96HzDHu7dNDxTpWoQUrS69iJ4GI
+9dV8KfMj7yuGDRv0xTkGVZykOeQiLhOalSvBYVt4GYH4xH0X1Y5sDeSJ4Yp3ly+33XAU82TyHXTs
+T8Bvp9plCLySxs5PGlqTBMzlxPCbtBYOQKsqR4LLw5bwyxDbo8H7D/omWboaduaVFRhDPEq43Atq
+mpORppWrreoGS67ADZ13HkFilpWnGx1NHiEdZdsIAcWpqxDo3qKWIIV6PUUVVbHUTp1s/aMIEhSH
+xL+8PAqRfnLiNg+BbZLpC1R91nRZS02eUInlQVscNiKRj93ZqAwlmbV9DKwKjh73PindlcJHwlxQ
+suaZ+dxag0eNlfEjSdeyY4iYHT873s95NohOTMgd3ViCA6kQ04azQMuIPkA8Wm00IAa47jiCA9w/
+d4340uKM2u5DEmK1VNIMLrKfzTozn1hSeodAxOLYRB9HBHrFDo7CVZEg7MQjbR5edk0WICcCbODW
+aok4jX2yBldZSgM5Uey9W+hSBgvWfjJHouw8cxMVP5JvMPNHPM8wjDAgtTOivyer96hPrOYrHtNG
+PD3JXXdGBDpI6FYAeRoBWKU4iNp3hgK/wM3d8aT7FeGUZXZH8g/8Z0nJ/duA7KPgIDv9bgQuKQPG
+Y5qknL5OjJea+X8wb95Uzu5hbhewxhWIxPBq+ixEb2oMihJPTIvN5sO6PfBE0FL1XEOnb/Y3q5tc
+S7q2wftg7/qacxmY+CS6OdNU6OydcTrOaWteLXio7hWaaWnw5hrq0hpW7ub3T6ysttvprasTXoAg
+QPtfUpZ2wa/OwpW8pe9hxH61A2VJcJMvGE6mBRS11Htb6PCnULMsXdxkY5HJTj6kP6PHEJA30hPT
+wY2JEFjfXHeTp0D436nkklwdXusAi1iri+88cIl4QFloLfYTajtb8Qz7QUe7jv/6syMWlEtqa1tR
+7wvDsPGecqQfDNGtdCfDcDCux6hwhMwe5VP9XguflFHCKlPdRl9Yu/oIjD4FMF2y+K+0z3uudwqk
+Dt+rx/GYXwdjcViugHYKhataD86ygrB2QLaD03SJPX7+Ug4uQr9w+7du8N0zZoGH4MYS3lKlkDBA
+7i1B8Wqi2lbcJn4Gp8ctY5pQNN4BTcIWgTK6d0AaClhVOvzkBx4UwSGsoerD0bjVvv88FFAWUmjY
+f/0WfPkXjRdwNxKrr7eHKV2/gNLSl+6KEBBhQY2TjXAGCU9ZtWY3Ud7g261bJHnK/jqpBbbwrJX7
+0rBi0lszHOd2a9SwXW5NpwCbjdzWjm/lq/44SUEwSN5bo/lBlf3tmW3GL78mgWNGeSrxfKApqVZf
+v4IuJRfnPSTr+kQIrNQpGLbyUW8YFtF+Qc1TB59SLAUx8xFvmLWJZK2oXa7xOOOkezlRx1+rn80B
+MNub0wzplmW3jq1KBfA5XZiAPKPwPMe5lDw0FQlBSrKenqhacFiXBRzgahB63zJr9fGLligxg6n3
+Ftya/FJ97+XNWohPPUMEgjQJiN2xIdm6f1v/LIJwv53iN9TtaqXeLpP6juoPUGRukzswaNlqQKHH
+CsRmSdGqfM+9ZEAQG3UTC9fExKlY407fvREh+W6BOdxMkg4kss7v+bPUEFQA6zwMpfZFA9DNqtI/
+LdfoM+Ooq7b8Yj1XELZ8rMIqZGEKm3JdMJYzZxMgcMInltbO3B1FnxwefIJqIwcbEn1BC9Cje2Br
+lTrtJJ/MROSgLzd7gDaXGZ5OiMF6/CB5Z14s4pfNwvMXFYxdgHfKgFHKMkZZGmZyVAsG+6dFvsGR
+Ucn2t1BH0ePp/R5tFct4jqZcyAw8KdbfVSMKxQx4HwSdk9/pAy8d7zcU5YCOAjRTsvXb5ba3CrGD
+kj1B+Y2ClAsNezRXLFjuCYrLPd+pwlMs11mVpQYg3Z4/Bhlbh0cxeARM95SshKxcV7XRVoVS+p8n
+u7yjHQfpj35p3JlVQHjkprhvJGc4qhJV9waXYvwTTpb2BUIbgdWoGArQwzS5vzJYoYNPXG96V1SJ
+W3F4SzktXnJAfAhbNhfqvPSFwhjOGtCBfsxIEa2OzYMWJBZxjpdSxZAeQbrnp92d9y50Zm6zScyA
+V9lxbVuVPAICyhEvFoell4FnHoXhULeDyV+Qa/frPIQIcoyV0KZLNlEBUDXNndIW981HHXh1+vx8
+FVbF1JUGNcKhrZ7agGP+qBACppnuq0jQG42sh9xBzmGb67LMkrB4Yi32Z8Np3ReuedTjPr6+7SaN
+GRc9KCvZvFuE3yHoWp9Ll2vyV4rlK+xvdqj+adJRbuNbQj7WwOXUIhb6LTLEyaFCDr5jxLV5VRkq
+U3M17IfzxujaHzNEXc+t/TdpoeI7LX6o9hC2/dusS+G3C/wuy8n9qzgqN5wzq9kCgO5W00+e9w0m
+V2wXpV5yuWBXz64UoyzpXmTdRHQBWXLQlMkc/eJrtCpy8bD5G3xQa+jX863+UifF8FgAdh0ShknG
+8Q/RwEK/PZBiseEHBOtnyinYxm1fc6lsjtIhPJiOLnnCIDT9wOFvyvIybO3n9fgKBJrX72gyedxl
+jWERlYIFaokfZZVyWVSyP5hyzzkKvDFZncB6BwQ3huFG8OEyzgs4LrMxOZMdjjkOpStKsMcKe4FC
+V2RsjD8yK0qf02vJpL0N2psiliKkEAwLyY49LeBgblTWxr8tDNfu8gBTK6WPlaEZJxY8KP5hkxcB
+IsXsxgSJ7GTWcd1WJ7J0fUy6ZoMri34Ul+5cTOIcoQYjgOZ9dBc+GG3QnN9FgNCqo2pRjhn05QVm
+M23UmvOFDaVJ2o1NK1mhJrum9GBphjqRQ6jeq0Go27Rmv1uDavijL2VCIX/0W6wFX4zPIikVEIvI
+RFB8ajiig2E99ClpIAiKeHA9YJfBbmi48hP2mAeWW8g9ZTNNRQKq+NRYZtHHnfyEN1sJsq0QLog9
+EWr9FBhO/J1gQsQFgiLo8WG4ljKoXveKXBV7bFJe8b5bmWSbJcQ1Z4gJHM05PRzsnQYX+OcKppGH
+UEiRAScYIbfmwAA/TuI7kq5Drl6SdEHu6gb8ANnOEMUhmfHV5ZVQj9UNjlYXzkgqbZButUgNB0+v
+VbNi5ueAzYcjHQmD+CKRurYu+eEeujM6YWRnUeKSnakqHrisVCgOweCzKgdqLiGgIbx+PbG0WDm+
+4sMloiedSVOBHPRMM/a1sFumXyM0xtR+V4gwJVhEgsQ/sC1098/vcY8uTlsut+fkeC2vwEYsxW8T
+pB8E9o+atzWwR5OWKKV7bfVXV8ChWP50uFWFBNFbo0PKUV56MgS1gPdBBEDwBhl+KyBDlS0cSHl3
+NjTa+/Y7eIkBT4ALTZ95q9Af3B+Y0IZ0OUJtRXLoeNB4UyiEp1ZhSu5aIKe1gAWgzv/IfUpE69NP
+mIP+qWUW4PlyRvvQBWJ9s2RH+bOApKPhLZ5CS2/+V7267j/EE4BCEr8A5L6oLkvsSrxZmXiUo/CK
+0fwMKwXbKpx4CxzBguGjX1ZAr1SONc5e+e7Xf19rp14ir1bXKaciTUnAQptTOF8X7FcY+GXKElZj
+jkjp95A6UiP5rzitH2pB1IQsw6eS0iXrPvNc+6BRJHy4anM9CoEr7a1K8bqBWthuoSpk09xT7iy5
+2BCy2ZVjGpeJ4RHZpBciQiNk+f/a064hKbSvuZxsroxfeX0uxBZvGTKy4eejxsHl9EUXVxvdcoNO
+6oNdkWs/Wh7LLunc2HFqThxuuEM5dkPnJY6nDc15EdrjQUGU+HABTycXFivnFLK56L1IQJuSGOWR
+OIAmuTiXM+eI+IBZPmxiKOQs/EijEPfM+skphsY+95UlpUxgIYBCnivqiWXLBfKINw8AFC3m9ktn
+WLXLle3NIHUohKOS478gzHszZz8jQ5wjEt3eZfuzecl8tHMfG6tGyHZFjqWnME27IyNgjuGCs46O
+cUJnDljfSTeqG2Z4qOrEsL++EYxHQz49KdRjhKlvcO29ILo0E1PKIu8veshG0UtYKXteFu3ZTSJ2
+ZLJxGAj418nO9mSbCkB8OvazfJoGbj6WC3QlGTruqM/fH0QZE68AUvp5rubwqUBNbS77XxMe0NXa
+IpAE1QYgPGsaaMZAX/uKKcWBuqQnI6jvT0JPN1DQ4UIF9YWx4QUpDUcsWujZfYSXDOYc1xr0SjzY
+xQH+0sxtmfAd9zVf6hTNArRdKHlS+B97vo0hYC2xZ0moDB15t/HjNo4YnkQFWdd7hE4jpmJb+Phn
+a7w5hKCCYWI2Vsw0ckSkE152LLV/H4kNh++Z3y4HtEwsExMSznRezPLyKp9m1jFjbCc5Gzkdxe4E
+Yuk9SQEY42vILTjaSNh5uTanJpll/Kf0I8l/FoErbjJbfFLXFhr3KT4CuYTQ9tJMrXJIB9CO0nT2
+0YACd9j/qoHcDaE1yER+xmZR83ytlY8iqi0WOQZeGtRrCUHt3aWsiKA6TVx72azUQNKi6twMiuqq
+I1cwofCQ/467aSXbYM5RLSV9RnqVvVtiRMcDAi+Nhbo581cwLlytMfhKoAMJbyfvJRLHoZRlbT0J
+YdrhfdwIA8zSW5qdGrVAt+rzAq7h6tVkCCkS+Vm8MD4JjvSF7o2EhtrVBakYEQiGHVzsiGA/Urrt
+JyFDUBB/rrdu7z3pSzmQA7vz5vqMrPJApRZ0Fb6W5DcQNKd6zYlLo2H1QOzAlyYlUsm22vJIWeh1
+ngF9sRPI4IbUK8I5r5tNxfFRbswYPOAluLA3VR0b9xb6U8Wb4k8Bi9l5vyc6rL41gy/EnmKULgrp
+g9v4cmWwXK9AiHq8Nyp9BHRmG5fWaQEaKKeHMKkyuF2Gdx9mcLWcCuE+gX24329TPeKVkCkwcXAZ
+s23K+oSCo53PCVFon5p/+28CVjusHo6agxhKNgodbp+aLQirXbE2VBtdLwxPHRLfp2pYnqll+Ly1
+RDhn3NiQiOG+cqxvJkwBcuRAgnaPhF5daGwzWq1MuVbAOx41PRoWStaEAj6C6HwKdycejVsoHcEN
+jsjRJw98pLIR3VgKcn3LxqsojEakgXd0F52qrwoaihnry7hyPjQuBC/qFbM0i/vCJhF6i5Pp0YwH
+OYNols9tUZ5ravyoWBn5BJ5bRWnQy/55iXXryLeI830n+DOm8qY4oz4HMXdhxr0T7dFu7ohPQw7K
+nBRFt1OmzZWf/CuTwZYKQZHiGkB/T3yp8ytKJDQKuoGpngWmjkeXdXnAVMvc+sQZFzCQdKTU1YD7
+sr15DGKHSWrVF7i66/fo1gKubsJ5bTdhs3QTHsvxHq+upa+Hovc3oR8A9xC/ojLRM+KENjGcEE4h
+nFBVn6KoeoQgjtk/mSxpRob6vvRXQ1mqxtR7teDiz18UnhE7k3KRvfuoEeznwOCF4pafrup83uK+
+0UkQbcqOogNvdo3gilpOMzzlbbW+jBon/hfYiIcbpSpyQTjQj9RWygrgFmvBaw1Zeipkhcc6mh9D
+Z6zk+CXcl7SgDRcVTGCbQHbneAo0cbeQn5yKT9OveUYqmrZ5pLrF9pDKFM0J/rerXg4B9bPVNAc6
+wQmABG5wJc08OcJDxlEIR5PwUDsXWk/PeWsr/bVF94GkHD+UHBovJ0D06Aj11+fhiMVxbTaLqXae
+MuLKDHO3iZU6hy2lnhD/rYHaf++uwlbyL0xI6qbXP/4ddF3w9eARNB7z6lepj5STrZsQKkKQU6D5
+qQPkLVi9VYSEM2QxoWipk6qz4xuGbRRNG/IAeYPlYfk4otX1gZhNdh8HE2a0VpUHJ2oNUJ3EI3UA
+BBw2AZG6bCucWTsDJLEwSuuwqOKwUXhJYfdZHAGvKHeBH1sVWEVEGl5ysLiHEBxDdenToGIPKMAh
+/7Qem1vIz68+kmPBzpBLNEQ1s6E1bkdtgsAMlYEZTdbWSxSwfuwmVkcDVOO1HnNIzVQbTOlwwg8g
+KoYiUk8aebBJT1vDpfhkdv30GvZHakpxlv5vUv80ceLs30b0VCDNWO5+oMIK7LKaVzjl7ZJnntVR
+TlvjTW6amSGwwyix/OP9Yh4XZXkwdjP14LrAuyFcf+Ub+khvrEocYPwN7uqFLiZYoIX1Pc+6TaHw
+TgH3xGHB2vsd8nIxsiJJ2flrWb8QF+wY6JFz+JllQO9+cH8Ze/mNQo7mLredn8rEnUHbPDw9fZyE
+7yWyb/RDKe6VTuosoj2UNn24jBz6ipqIoxdUcBkwYVE2xVREaVU3+ZF/3mYBxe6aqbNvhnIV19ts
+gCuS2WIKp27iffp2Nhz9hePT38C+Vpen75Cm7u+SAwMAOcu1+8j+k+wS8wlcS21ousJ7PCczAUAB
+638Rtd8yvrLwkCLgu69uKN40WNkuo6Wp/fEyfY45O/YnVeJPJUY9s4VOVSSJvWA+NqHd61549Hgm
+yyEq7rrFEi55fEEkiAjPANd43ATIH5CiaHRxYSMI1SSTUzmtqg3kCc2GX/wusmC06RbCQ8Vz9mYR
+CEE03PoYjA21lL0rN/9/xAuygU8Ih+q/Qs4L6/q43S3NjLIc4VVisCLEkqmPwsuES026Na15rT5q
+bZ+pCcV2JqwEfN2kFZ1u9WqrvGBi5rwLrowu6pAPfgkRXEBQYa8JK+PG8PnGImFKiOHNJyTUvv/s
+0qG372t8rWwkTf35AaMHsQTjJQowBctYZ+2Hgzp2z6GU7aVsxwnTsrHEcpBVsCpQzS5YbWYkbFXL
+tLdSWAF9p8zJnwEdYuRgjI8ZO9RQyMO7XolxvCEshmHE1tc81NDt9CCeJK5Y30WojqnTKwaAPsAe
+DBfPigY6jgG7CARQokNwdIw0Mmw1SCK/36BuF3QNcQUKQDrNbbTauAnrWzdjazsOSmFuJbBtg7GV
+/wVJ+qhDYOgCUkJw8xaVT2FIh2iamGnmXPqshKGvX1Q+0mcqL2JqSLajRFbar82o1jtD0AuPQvN+
+YDA0AEtJdiBQgMx+jUj6T4WKKLa5AP+Ur0eZSKgnV9ZuR3FNvFRZJ5iSGlkid7lcUhIrPHjBjsfN
+CKgBsSQaFQcSdcV12xxcBc/+SeBk231cBlPrKwgt/Uy9vG3aOtl3ZHHbaa0ktKh3Ch119aTcxcog
+pY38xWszrWz/05z6IEdEAfmPNFrtVf4me6SfE3UjkqlQmBT6V6M0llZIIHa1tONHCUJl+tVz0iwd
+BJICWcJzO9QG5eiTIvhizTks/oIQmDZYqMZtToU8OKbrqZ9yvUz4uRRiFcZMBpqq1MdbFnjoES5g
+AhA7i46Gbv4MUQX0Xv7WgMitVhX9MjZQk2+MWuM8G6GlUKHhhERB0gn0eSZsVVQY7m/h00gE11+8
+ScJBk0tFvbN6Ig4TTngWYzODaH1bpTGbAaVDlFQNHCArn8BQetWbxKYbmqeiEuH3SRM1j9//cjxL
+t7IYejw5fE2S1fQfqYaBYWH1MTikDWDolSYx0DQ/nCDd1MWJNwNs6/Fti+apn/3wViAQE+jM4YQd
+4BuWV5kkVKtgnIPqKTMPB53DU149s2isxkQkBsFttjimLU20wOgl4Nu3ZIyMOgjAk/8javgvv9Q6
+dGlitIVNZMu9gpW0GUG8NEt4cdZsuA7OYfPyu04w5Q4zUDGyriWL2FnrM2ys9YnABMJo+qw0a3He
+VU0lJUJcCkTg/M0/ARMLhQ9fwACDLwdki0UiXTnsprsVvV0C+k8icCugJJDbbcCc/7eCVgDbHHLC
+hznSEKeYzWVEdnfvlEm8/ovLxlN4HTA5XhwCsgePB/YGpdtBFRdGNdUHKEBIZBePu0QggO4Q4XGP
+8ziP87gJgejBKwMtB9AlGIDxOBEywcg+k/c4j8NQXL6upevrGkwWle4Sm5h0DhVc6cAMZdJ53EyQ
+zcCuawwe6onAveOE4Xs9RKwWo8dVtOzkQ5xISRRlAlII0RC4fBZCvPoGAbG9QEoD6wnNMYN4XCch
+zExJ6WJotEsABFh73K86rhiuWFQitve4B4sBmIbGOsnNSqIhQKSsXO9xl+JzuXKxWpyHjWZaPM4h
+g8A2phtF53EBHh/3OBRFKuwIqwM7kEabdJ/UCOwg5ljpLnOsdAadB7sHxeXrCmQzsHsgyCJdQQVX
+uoCG6etI0vV1qgASYOdxEcnC14EgVmDXobGvEyULX0c6bcADkRbhphtoEkFVZzCaKKbF2CjofLMT
+ALP6T0l2CjUp26tJF/uytVKZ97iFkmeuYF0B8vc4V9fgoDkYVxvNtDTMOBbx8fA4icd9DJXNfwyW
+UHtcbtg8UAiXD6vWTUcllgoyFpvmUFYIl4csgtLVIlduGiwiFBmNRra5XChgClybdywMeJwC7XMh
+zlIRlEiDdCY0Hid+npMx2IBUGlpXP2MIYwtFkUEmgSPytG4bAVtFQIDkILEyGQH7GUVrP2MelVSW
+G4H5UF5MpFVI7h7nKDlIoeggYZycfNq87AFWxdKEYzQigAEW8aKgMmuFfQKpx01sOto4vVoEpcK0
+eY8biKi4XELrRAGiq0ERtscZNHC8YvxQGbF1gufyScAUwUfSuXng5gsQfY16MtMmoupqp5oJtnnQ
+zcEoEogoGB0fcNWRKLAsTndgW3U8jmAghBJfqFo3fkz6c7A+fYFAgLWnMDB5yCUAc6IABYiusq06
+CQJSbj4hIjDOpyWgDkaJhYmPU3N43MTB+nQAPRiFl65i9Y5Ohcaa6KJipCnUS7jqhK1RXXidRANi
+gSMjrRZHdPrMrkR3Mxg9joKWXwGzuTkYKQY8nk3D5hEKuHSQ2+VrZFLtaTTbiYY9scl4bNOpTVQQ
+bMZwnIk+UfpwTBIJRWbixbGIJ5HFMVl1wq5UuLwZCUeKY4jHedia0IgON9Vn7khxmoUnEc6q7GAE
+xIbkZjCCLAPBRhIg4GBUOEVQIiucWYgUHFaLI9oOMDPgQmzg+GPzkggrAo7LJ3GwPi0nPBcJWS0U
+m6F+xoYUKua5WIgWAhwsDjQO6MKcrEkYsTIT8QIcPQ5UP8ymQzK5RrFl4EhSyCRwvmVG8yEJdCbG
+yuPhmyaExus7D4FxkjqixGhhuRiFD+dQtEe0KomS7+CODKYBRxZNGXDRUKOFATicblTCgc/jDiAS
+cI1WgmVkjhqDzXKjEUAuajSrGms0k2TEasiJwmoJiwiqTzfQ0x+VqtMiJ3fa46aMxGlLRUDgU5hQ
+Gs1EY1+XYxMTmfjw6hLEIv8kCkc+8mBeX/ASJWoi3TgHBhykELXQUX4kULF5j3sVhL26KE6bFCiN
+1q06nNkl4JOwp4EHEhipRS4SN1oFM0GjSZAKPE26cHi6k3DQaY+7YLrTInUFfLGCzHcjj4rSlSwY
+Gm1j4UG0qOIxu0hGX/5QLtHCJEDi0V548bpodI9Jo0UkBh7NJi58MljAV6ooCFAVAkw+zWolmXhW
+qNso9CDEJkwSBh4HC8ncADX7NJByNniFJEgsCjFCBEFxVzORga3IJF4RkYEFhbdxJBg8LNZBoRGe
+OmM3sRF0jYUHA4aS8esTad0uQgKJ2mfrWEcJE2LxKqGJFkHpxtooElYen4C7lHW+2aBY/lhDAP0D
+c5hEWUCLirRbxCi8eHD8iGBAcEeP01g0Wh8rMrIYuQUBFloQYG172V4ajaMGIl9BDUReYoE1beWZ
+tJVn0lYel1hgzTAQ+bnyzBo8npqKU2n4rMFzSUglpBJOjZZrZg2eBhQEhYKgNLMIrCOwVvBEOMhT
+1F5NUXt1JHwIxEFqIivgR5mwPq1pvSpKnllR8lwMUqvWqyOr1qtDspDXhWShicmCCUWuyRKaIZkn
+X0JQxZzlx5weB6qQUMtjehyoYgLaKEgsjwmqoIgEb9sQBJgQBJh0toiairaRYBAKGqgI1h73ifhW
+qcx/ImoXGwRj888HBBU8YKT4hoESVjxuw7DZMGx+w0DZbBhunbFhpEjUghTHYeawFhU3hwqIBc0k
+vw4qKrFz2O6CUKNFRB3ZCUhcySuCYoEeWlNw+IrTw2FJnTs9wLrRFCaUoeIxu5xeEo6aQYaEIVwr
+kEMMSLAAnUZtQYE67JsiXuCrSNaNBmkI0GjZ8g36wTTPazTII4um1Jw2YAeSrq8TA0iAChlU6R62
+p9E8LmH1IDF6EA9kdjPM5kMabzRCLBOn0Obg8OAy00s+J2UJNQSicrmpBhr4LOuKvkZNF6OeodTM
+2oOCQkph1h6kBtYKkkossGYATQUpKbGAEkul4bDuRms0arRqw2GzhlmDpyEhVfkaDmuZgkxBpiBT
+kCl4LqiURoP6JheoC1RppLhG0xkprqGovfoLZW4qCwPPxcDAoELC+nSIegiY2ZksmJBsMhCShTxH
+wMyQrDNZMDfRzvLjBnJQBehn+TFvIMeAIiHHTFCFJ19AIcfI8mN6XA3kmM+2kWAqn9rFpvl8Ij4s
+h2e9OzzrHQE2iDcBmSbP5auqeqEpjIB4UPNgm9inYsHOCJsEyXGkeMhgExA9xJTy5EsAyhHoIEQs
+IiwQgVa4qSzYy+dxnw4CZj7UBRqBQVjI/MO3KAY0j5ZXxgaOV9zTaLlEqNSIh89cyFAMBiIPohot
+ByebBo6Dp4ewKyQEoluih7A9bh6kXJPPoq/RBIvxYJSFroSGFQBBGDWWAQTbCOFJIWwNQ+zWuWAH
+jmUKOlZCA5s4vAJkgcJHoDCRj8k/LA4wM1Xyh5rq+1QKW4pKYd8qBCWwjhT/NKVsa32a4mB9+hE8
+4VdHineBJwxFnrAdKh2Pwyd6WnTxONtABOghRwBDngYMsSwa9BTBw6dVCQlNUG0WBBgVVSoSC+UV
+QLJqvTp8QGTpdYmIAF1mcFFarToBrqF4SEUOFIbMe1wVfY0GAEW0NB+S/YwL0oHGWbBgDjoTpwuN
+pnmBAzXsmgiB6Mr6sCrrU1m1VlZlff79+19WwP9+1gvt04wG6GeGoYesMPQ4GYZg+IUNsj4eJ1Gh
+THwSTiQT1qdECTUhT6PmsA96nBdgWhKJSZwe9wFBkPWBLT2uMvlYnYDXcHo8SBgUMjROeNGlPqHf
+nqLgzs7jJDYW3kyDeVBotyIdIBY0bnmYNAbKlypguDUY1DYCFJuLUr0gBGhI1aeGJhkLUOHyvSND
+GGq067qbhzZarvoB1o3WarwKVBEH62Nb1Rrq5ZsriUplPhw5eBzcNFruDAGQWQlo4MQ8komxlEqF
+tfFqj/M6nUZN81pdDHgwl0ZjKmTJczAPzceZACGdx01QjVHT6FxUiEgRS2HfOgTMdPCTJ+waRE31
+HvcKSfXyhRaZx0n18lWkg6daTAIUSxA8I1YBhk4snowMhZkQIwVL80Hdy+dxHboOoHcsGrEMxUNN
+9RLNJWwZQaP1DVzCntxL2LTL+jQChER2CZFQmAniBDzmZwEnpC01ERII3FQPSg2sVZ0Y+cg3i8C6
+AlL61Mv3vQK8Ip+XlHTbKvJjQkqNiVA2KML+KFIXpQiOPHT2QDYn87G2UCzRYpOM5KJAZUmdPCpN
+6tVZ2Nw0nr2MGYjJ2xoPk5gRFUDtwXQVPY404I3G2k02Ck+TC2ROrC4oRBsIMvkGS+gg6c4UGmRa
+y8Ora4UNo0acTmeCv41GAcXqmCiNGHncu6pePkmCwuVrVb18XTCBTKmql9MD1QGixzlMMsjxDGJ2
+oQageFBs5sKEw7O+F+olXKiXb3Zcq4V6+WxFAIfOhHr5LhKqJ9TLN1E9XL5OqJcwoV6+UGPafCXh
+Yjb0oF4+PHpOZzoohM3yg3r5ugSxwJl43AzGCLyg8rweJVvNDIhMk8+cBDqfyWc8jQjmKo2UCBnL
+nAJEzOQJDurlq9DK5GmrTzsEHJdvmhBMLlO9fJgA4/LQVC+fD1RcfjECLffhAk318skv4sFUL988
+YT7upNqpfFp8fFxC0AiQ9CBBoJDq5aPMMh4n8FC9RGhkoK9m5yA7FxEm8qB4USUkUCwXi0QC0aqE
+hND4SaE4n8dJQvUSITrAOsQwWXVYAgKPCb5qqopYw56dBiL/WeqE1rAjDtmQDtanKxI11YMQn9VX
+KFJh5xmFi2PxKghbwOLAcQJJwqeQeQdIpfE4iNMjdzADNX+kAwSYCBplEjjhA83fhmILRdQsk8Ch
+fwGxRC6muwx8PktZYB1iddwvbhGjELWRQBA5sFqE02yemGiBUvnocQcuFqxlIU/JcxNZn9EXUmw+
+jG1GWaMKCcuzhW/yXDwO0jB93SkSWkgCky6VGg8oHSmDKh0lwnpc46N4dYMdII3Osa/XRBi8eUHg
+cAoLEkKXezLixz2geMdSDWI0HtRAIItN5XEe53EeB04UBjxO0/mB0KvSdWjMBpAArXR9Hchykx5H
+0NJ4HFIr50ctXd4JCUAmiGWxiAPU8+rNnDiFow8l1AiiCXeP87grYt1oFiOPG0lcDjoBL9FCgGgh
+FTF0HaVaywtAycg9bgSRjLxDYZ3CD4E0TgEEClBTtALca7IFb/rs9KOEpGOZ8DjVw8TjPC7BTgh8
+HudxHieKhJXO0apIDhxQYHeLFLDw5Gdzwv1zE1nEz6MsIke2sPla67F5AXoxCj3u4NbgcoMFAc47
+LBgcdAgNrGWqAQeHoV6YS8r28rjTw6s9DgzAeJyFs6oFsL0ibtHQJh7ncY2EARqtBLOfsQCDVBpZ
+mUx7olDROLMEhwnruKGEN1yQj4dSlRSiEFBVnCkkgB56iRIl/OFzBFrKHeZ5bJ9jPeHxuAbKCdOx
+qMAAjgVkEX2NHoQXXaqi1kI5e6muhMbjbK+I0xhSmRSmKxOGbkIjiYCz1sXCQFfrfA0cD9CKjR1K
+jGLVGSsO1qdnqHp5mDgEQDgYGygnjPW4UkFqBHaS4SEhdR7sMtL1dXmBNOms7SUFIlg7JBUF/XBo
+kK+pwKy+e/CQQsgCxOUFKII7XnwGvulxFVTAxGigIJqh6uWTyWIOlM7jajdvSkKJTXUawJg8F994
+HEiZHApmg1GOCSh4UNE4AbIDmOhxKltnYROxXIAjJyV/LFnR5aIqgSDObAPBhw4avDnrXIzCxyfh
+8fEhAXpPs8uaM77+tv7F7lPWTCdtS2XN3rTpfOvS+z5+6Yya882N6/0r/fZ9zuVuqbwY5+6M8fx8
+Z8ZN8411pS9rnpwLN+P7Hb/FXW+1Xa29fyn9l41nV0odW0pn7Glb+jNT2Xhyrlzppfl2zpK6z0nz
+cy7GxzhXW9zS75y5u9Zr/U4ulmnXfFv+nZyLMS1tenv258mYtuelVOI8GbP77XTP+VKPMbC1FdXv
+zPk5GOdi4Ox2urWY+q1ep992t/62Tpo9u/e9OMawTZ/OCgN7f9/Hjen1bnvppZ//fvf1i+fLf6cX
+Z1otvZV6s2VQb1z7Pv7ZFtdp5XW3tit1ev2zU/yUylnzxPhmjOlX6J331s9Om1qfLR9XW2fuWiWu
+z8UYNH//xPf+f5V+/+bas23LXB9Pm6u1FmcqL6708c0Tt5zWfVb8M+Ncabaz6c+ZsVuntanb52K3
+XtoYV0q7ZbXPuSz22Vda7J9vN6Ye+zr/2mzlxXNa6vPx45mppLQ+xZ/npfjiWL7YXuxiUFrt/62y
+Zsbb27ntrbHpPzs3ptJmzsWoT+d8z3nOW/M3lde+/c/3Xorltc/FaDu2z1UwbPXa9SV19zup5/tT
+Pv7u/xVnZDRnIWJMniHhHkSMZnRlNCNfRr6MWp/hEBYcz+MgLDgrd+4SgMd5nMXI4zzP46SGJjWw
+9jhwUgB2H+n6uoUKrnQLGVTpJMBPvXzhK8CLQhlRKBQKpWZq2EQ6j5ukPG4yGX1hTzyuYTJRkDRE
+5ENNpWChQB8MNp+WSCiURrOgsGAkKkkkojpVBAh4nO3kcWADWArpFFm3i39w5AtJQohRXEA81FT/
+NSgos9aEIhV2Rzh4XPIqCPtmKiYfWXWqQQUDwSwh1CoUBjrQL0C6Wenh5rHow4HmE0ICNJoLgmMw
+8H31TuUTQCGV+Ykk8Ew0nsmFwqUgwiRALSb0ULtFF4hQvXzSEcAT5BN+HDwuZ/kx5QeVynwD+JE1
+jxPBWoIUWF9QgCqJFA+e0ajpxNVTVBDYXm1RmaU2mKCNk8HjPM7jPEIjCyuuTwQ6wdey5Umow47U
+VBlB5NawJR6RlaYAxkqXj7WyGDlIZqgpJnBKFI7cCYCohWIDQkOyL4VQFWUBHi6HiBWb9ygSFtFB
+u3FWXMhGYdgP33ylFgra4TPQvxwZVUKO+d4ykhKP8ziKx3Fmnq9jCCABdraIw0v+1ysEsSKS4N5V
+D2SOpYWC9jgL6nk1wZw4haAkgEVMBfhA/5h5nAhiBXYzNjHpRDx4wyaC9UFYWR/ZrHwcYQhIYURK
+l2MCWEJdAk2L0eNGCKuSSF2i+rcEavskJrVH/YwgAVsoqj6JAEcWXICjiDZiZTrJxcWYxBNDQWeC
+Mgwu7yyAP2q+DYU4u5CNQk43e3DRIxB8dxkmL/E4j/O4WsX1dZ3Og900WVQ6BtkM7CYVGIk34LCW
+eG4So4HjERNhrAqoHc46hQUZBpfXYJ3XzyInl3ca0jhDWz3O4/AHW4nCz701cidFMQedTnROxtYJ
+1B6TJ3hArJ7gsYK1pqNAJkQyeJPmmI3CBVDsRwISxOQ9zqGBjHzyYWwBBBCKAeSAIeHOsUKLgCKi
+y1Hj4/Wm2OjykkBqYuzUTJOPbSIl0YKFMApLIgP5tJYG9AbFhMd5XFuITksEA79Vz98wJ9u+BoI2
+UJgW4wiUQbzHbUaHU5h6sRBE0EQjP3TpLEbOXfn4safNB7Bg9azlcZXFeZzHXTyuOxSXrzMIIAF2
+UopkM7ATcEQoKNBBFWOtW4A+yUSTmOkWFRuZgBQe3GoRLnB6AHVIbJDPMF4439AzFAfyOI/zOInH
+ieIE7AxSI7CjVVxfF6K4fAachkr3Gcqka5RAjQBx+pFkmXD/JHQILqRQdHB4cJqCQKgtKBPumZMN
+1GAk9B7ncRqNTOVxDxstFAtKrdvm4fAQqwkSrdumES7AEVQ/zMbjQI+GmBgJLyZfsPFmosOBMYm1
+UqQkBojJRqGEzkAHBaiQGA0MCO6o4PI4j5ttPM7jIh4KJvIoGpUZ8BJxC/C4S3XkjsGTWBmIH8DE
+0yuTwCEAX46NZXMBsSyMMK8XWyKPz0JJCj/8ME6P22QExllrYExibHWRGEVOi/AHBcYWICUd81ga
+VcNHo3ILcBxNI1bmIQAq5rFoWQJoQq2piB83TT4x8fYZ+GbnmJREGk02Ch+miQcXI+LkQRUOHk8Y
+1Q4cCsauwQPT0BTaGz8mHic5cibSJC4oRNDsKbpDIo2Tk3BBIdoKskgKaw4SWHvcQS6YcKCjiZHC
+QGJ9o8JiEUkDKx8jAxOnsJO0CPe4kKybGLvJZGIcCWyvhlBeL1rnAsICIYADGSF3CaDmcbZVvXxS
+YgtbQkuvrsxaMgOKJGTVy4fFWwtcp4DjeZ7HvSJasgBcSNQYL9qFrfaiRTBeES3Zy9ZivADQqkVw
+tFdsokU7qFREHIxzzUyfWv+e7/XajLHsrtfd1tzu0m+l69P2nL+t9Fth1JkdX6fdeNJJ6cXY+tPr
+NdM8n/7Ppt+zaVN53blYbttfG99asbTunKs/P81eHeM7n87rXaXNXRu3T6fTv7ql0j6un2OMSW2+
+Fk9paTu13+7Z9vu1P18+zfnO7N3Y5kvbb533er5drb+dtWvumnFTl3/b6aWznXPdptRvfTmbOuMt
+zrkvxtOnnD0vtvTW7pul10qpnF2fdn2L641da6ntKmdX2vYtzY2l43lznXV6rd5+Zb2Me3G2M0+v
+mP7Ndzausl4GppXapnRaejvPKuvlYthmOd29Tr8/L+di3Nk936Wd1i+9X+vsW93ttY+rtLNrrW/l
+nZXemV9ezMWsV1rpxPReaTHn+n/8lXq+VTrubC2ls2mds+L5nZ9i6u0TSzv/3nntpNRbOuZcjJup
+xfjlrDR3O/X2vtetV9zYJ31Lu1Z7KZ5z0sc31874K5be995MZ31769efmPZjn3XSWx/fOfPEk2Jr
+ndZ8Le1Lc7WTUlzf2kk518SfbcY2u51O7X1ss3+t869P225pUzuz9ZyvdfnVe87qc/5nfOnXjKXX
+emnFf3PFk/rbtvaprJMTMfK7fb/SHeM5q2c6cf221O/3bLe0cf7as9o77duntq11+tT9bzt9v9Q+
+zpf2X1qp9enys621uucKwzGmeN5Zabu0dU781bvCoI8ttpNafOuU71yMgafbzvXmmal9mq1Pv/J9
+2vz5H/fF1enMLn1S/0txxlbW7G2rrU+b2tvZ4rbz3jld/szUVu/7+f7Lnxf7zPa+z2orpT1vW0xr
+tpNSO2ln6vZ2U8vFGJT6d8b1bYWBqcW5ci5a83fjm7HNM+P7NOPPOM+WODP+fn1Lcbtnl/lWGNjz
+xBl7ztkxzY4lvhXGbeq2Z5U4cxWMd4xzvtLv+52if4rrdVmzqNprm6toSXNbx/cxtbStxROL/O28
+zmnqrY7b5Vt8pVvH8j9/tvjxU1Fjep1Oi73rS2/c/VW++6zXcb5PLabz6zu2Tt1WXGeuNYve0mvr
+W0mrc5rP+Pa8NdeW7944O7712s85X6+cZtLb2B1b50TYWnmpcxp3Wp1h22nGVUTbOc282Wb6dj6d
+zoke98x9vcqm2NaL3atn7HJat96OMc2d5bR+KcbebSW1/plSSq91TkN7zulfc33b+X32Y784Z1kd
+48/TZ986PePs8rZXGLbaXO3/4+uT4p/OVXjGGNO+uNaMp+hre8VN83/1WbH86mLgO6/TeS9m5L/u
+2Vbq+V7a2D9jjOucnrN0OxkT267eXSe9Mfr26XV511znvBbfmSf2/ptj1XKunHH+fztzpflpttSp
+zVX+tN7+9878N+P8f7HjSulni+10anv60+z9eFp76+e+GHut9v2pt1O33j6v7fzYdq40S5+Ti13s
+befkXJf2e/Vpa52M2u+Pf3Ixev+vy1tnrndWv7feprhml27ni+5X+pPWlt6Tq7Avp0/cs95pm8r/
+6ZY69n6X/9POmZu69Sw9Z5+OL53z+0XPaWbteX9+fXqfZse3M6Z1Znmn/c+5Pq7Paah//urzp1Pr
+9/viKa3Pe3NTjO9teX1ifP1OS/ux/8z5vmw6afd1mentttNxvtbSWW9nnKmc//Rx2/9Ms1NZ/3t2
+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
+]]>
+    </i:aipgf>
+  </metadata>
+</svg>
\ No newline at end of file
diff --git a/apps/web-researcherry/public/RooCode-Badge-blk.svg b/apps/web-researcherry/public/RooCode-Badge-blk.svg
new file mode 100644
index 000000000..0ee7987cb
--- /dev/null
+++ b/apps/web-researcherry/public/RooCode-Badge-blk.svg
@@ -0,0 +1 @@
+<?xml version="1.0" encoding="UTF-8"?><svg id="a" xmlns="http://www.w3.org/2000/svg" width="259.5244" height="70.7368" viewBox="0 0 259.5244 70.7368"><path d="M65.8982,16.2573l-1.1981,4.3323c-.0634.2294-.3029.3619-.5309.2938l-20.0977-5.9964c-.1337-.0399-.2784-.0116-.3872.0757l-19.904,15.9617c-.0581.0466-.1274.0771-.2011.0884l-11.8428,1.8251c-.2193.0338-.3756.2306-.3589.4519l.0515.6805c.0164.2174.1947.387.4126.3926l13.7559.3556.1569.0044,10.1643-5.4295c.1423-.076.3154-.0649.4467.0288l7.201,5.1332c.1129.0805.1794.211.1782.3497l-.0607,6.8111c-.0008.0881.0259.1744.0763.2467l10.1296,14.5346c.0794.114.2096.1819.3485.1819h3.2066c.3199,0,.525-.3402.3757-.6231l-7.2198-13.6772c-.0706-.1338-.0648-.295.0153-.4233l3.7643-6.0302c.041-.0656.0991-.1189.1681-.1539l13.458-6.8293c.1367-.0694.3003-.0597.4278.0253l3.8458,2.5634c.0698.0465.1518.0713.2356.0713h3.4941c.3384,0,.5409-.3763.3546-.6587l-9.7021-14.7071c-.2009-.3045-.6668-.2309-.764.1207Z" fill="#000" stroke-width="0"/><path d="M172.6033,51.0857h-8.3932c-.3306,0-.5986-.268-.5986-.5986v-10.1067c0-.3306.268-.5986.5986-.5986h8.3932c.3306,0,.5986-.268.5986-.5986v-4.095c0-.3306-.268-.5986-.5986-.5986h-10.4368c-.434,0-.8502.1724-1.157.4793l-2.4241,2.4241c-.3069.3069-.4793.7231-.4793,1.1571v13.7674c0,.434.1724.8503.4793,1.1572l2.424,2.424c.3069.3069.7231.4793,1.1571.4793h10.4368c.3306,0,.5986-.268.5986-.5986v-4.0951c0-.3306-.268-.5986-.5986-.5986Z" fill="#000" stroke-width="0"/><path d="M242.8297,39.005v-3.9168c0-.3306-.268-.5986-.5986-.5986h-15.5555c-.3306,0-.5986.268-.5986.5986v20.6911c0,.3306.268.5986.5986.5986h15.5555c.3306,0,.5986-.268.5986-.5986v-3.9168c0-.3306-.268-.5986-.5986-.5986h-10.4865c-.0895,0-.1621-.0726-.1621-.1621v-3.3457c0-.0895.0726-.1621.1621-.1621h8.8877c.3306,0,.5986-.268.5986-.5986v-3.1237c0-.3306-.268-.5986-.5986-.5986h-8.8877c-.0895,0-.1621-.0726-.1621-.1621v-3.3457c0-.0895.0726-.1621.1621-.1621h10.4865c.3306,0,.5986-.268.5986-.5986Z" fill="#000" stroke-width="0"/><path d="M128.256,37.393l-2.424-2.424c-.3069-.3069-.7231-.4793-1.1571-.4793h-10.2484c-.434,0-.8502.1724-1.1571.4793l-2.4241,2.424c-.3069.3069-.4793.7231-.4793,1.1571v13.7674c0,.434.1724.8502.4793,1.1571l2.4241,2.424c.3069.3069.7231.4793,1.1571.4793h10.2484c.434,0,.8502-.1724,1.1571-.4793l2.424-2.424c.3069-.3069.4793-.7231.4793-1.1571v-13.7674c0-.434-.1724-.8502-.4793-1.1571ZM123.2298,51.0857h-7.3584v-11.3039h7.3584v11.3039Z" fill="#000" stroke-width="0"/><path d="M152.1475,37.393l-2.424-2.424c-.3069-.3069-.7231-.4793-1.1571-.4793h-10.2484c-.434,0-.8502.1724-1.1571.4793l-2.4241,2.424c-.3069.3069-.4793.7231-.4793,1.1571v13.7674c0,.434.1724.8502.4793,1.1571l2.4241,2.424c.3069.3069.7231.4793,1.1571.4793h10.2484c.434,0,.8502-.1724,1.1571-.4793l2.424-2.424c.3069-.3069.4793-.7231.4793-1.1571v-13.7674c0-.434-.1724-.8502-.4793-1.1571ZM147.1214,51.0857h-7.3584v-11.3039h7.3584v11.3039Z" fill="#000" stroke-width="0"/><path d="M196.2699,37.393l-2.424-2.424c-.3069-.3069-.7231-.4793-1.1571-.4793h-10.2484c-.434,0-.8502.1724-1.1571.4793l-2.4241,2.424c-.3069.3069-.4793.7231-.4793,1.1571v13.7674c0,.434.1724.8502.4793,1.1571l2.4241,2.424c.3069.3069.7231.4793,1.1571.4793h10.2484c.434,0,.8502-.1724,1.1571-.4793l2.424-2.424c.3069-.3069.4793-.7231.4793-1.1571v-13.7674c0-.434-.1724-.8502-.4793-1.1571ZM191.2438,51.0857h-7.3584v-11.3039h7.3584v11.3039Z" fill="#000" stroke-width="0"/><path d="M220.1186,37.393l-2.4241-2.4241c-.3069-.3069-.7232-.4793-1.1572-.4793h-13.7103c-.3306,0-.5986.2638-.5986.5943,0,2.7825,0,17.539,0,20.6982,0,.3306.268.5956.5986.5956h13.7103c.434,0,.8502-.1724,1.1571-.4793l2.424-2.424c.3069-.3069.4793-.7232.4793-1.1572v-13.7673c0-.434-.1724-.8502-.4793-1.157ZM215.0924,51.0857h-7.3584v-11.3039h7.3584v11.3039Z" fill="#000" stroke-width="0"/><path d="M105.676,55.7842l-3.8893-6.3583,2.6208-2.5884c.3069-.3069.4793-.7231.4793-1.1571v-7.1304c0-.434-.1724-.8503-.4793-1.1572l-2.4241-2.4241c-.3069-.3069-.7231-.4793-1.1571-.4793h-13.6591c-.3306,0-.5985.268-.5985.5985v20.6911c0,.3306.268.5986.5986.5986h4.3083c.3306,0,.5986-.268.5986-.5986v-5.8512c0-.0895.0726-.1621.1621-.1621h3.431c.199,0,.383.1056.4834.2774l3.5077,6.0377c.1073.1837.3041.2967.5169.2967h5.1645c.3047,0,.493-.3322.3365-.5936ZM99.438,44.9169h-7.5779v-5.3228h7.5779v5.3228Z" fill="#000" stroke-width="0"/><path d="M145.128,17.1266v-2.4009c0-.2026-.1643-.3669-.3669-.3669h-9.5351c-.2026,0-.3669.1643-.3669.3669v12.6831c0,.2026.1643.3669.3669.3669h9.5351c.2026,0,.3669-.1643.3669-.3669v-2.4009c0-.2026-.1643-.3669-.3669-.3669h-6.4279c-.0549,0-.0993-.0445-.0993-.0993v-2.0508c0-.0549.0445-.0993.0993-.0993h5.4479c.2026,0,.3669-.1643.3669-.3669v-1.9148c0-.2026-.1643-.3669-.3669-.3669h-5.4479c-.0549,0-.0993-.0445-.0993-.0993v-2.0508c0-.0549.0445-.0993.0993-.0993h6.4279c.2026,0,.3669-.1643.3669-.3669Z" fill="#000" stroke-width="0"/><path d="M130.6884,16.21l-1.4859-1.4859c-.1881-.1881-.4433-.2938-.7093-.2938h-8.404c-.2026,0-.3669.1617-.3669.3643,0,1.7056,0,10.751,0,12.6875,0,.2026.1643.3651.3669.3651h8.4041c.266,0,.5212-.1057.7093-.2938l1.4859-1.4859c.1881-.1881.2938-.4433.2938-.7093v-8.439c0-.266-.1057-.5211-.2938-.7092ZM127.6075,24.6032h-4.5105v-6.929h4.5105v6.929Z" fill="#000" stroke-width="0"/><path d="M100.4191,16.21l-1.4859-1.4859c-.1881-.1882-.4433-.2939-.7094-.2939h-11.2884c-.2026,0-.3669.1643-.3669.3669v12.6857c0,.2012.1631.3643.3643.3643h2.6461c.2012,0,.3643-.1631.3643-.3643v-9.8086h2.1374v9.654c0,.2866.2323.5189.5189.5189h2.0824c.2866,0,.5189-.2323.5189-.5189v-9.654h2.1374v9.8086c0,.2012.1631.3643.3643.3643h2.6461c.2012,0,.3643-.1631.3643-.3643v-10.5636c0-.2661-.1057-.5212-.2938-.7093Z" fill="#000" stroke-width="0"/><path d="M169.4747,14.4303h-2.6461c-.2012,0-.3643.1631-.3643.3643v9.8086h-2.1374v-9.8086c0-.2012-.1631-.3643-.3643-.3643h-2.3915c-.2012,0-.3643.1631-.3643.3643v9.8086h-2.1374v-9.8086c0-.2012-.1631-.3643-.3643-.3643h-2.6461c-.2012,0-.3643.1631-.3643.3643v10.5636c0,.266.1057.5211.2938.7092l1.4859,1.4859c.1881.1882.4433.2938.7094.2938h9.1662c.2661,0,.5212-.1057.7094-.2938l1.4859-1.4859c.1881-.1881.2938-.4432.2938-.7092v-10.5636c0-.2012-.1631-.3643-.3643-.3643Z" fill="#000" stroke-width="0"/><path d="M115.551,16.21l-1.4859-1.4859c-.1881-.1881-.4432-.2938-.7093-.2938h-6.2765c-.266,0-.5212.1057-.7093.2938l-1.4859,1.4859c-.1881.1881-.2938.4433-.2938.7093v10.5611c0,.2026.1642.3669.3669.3669h2.6354c.2026,0,.3669-.1643.3669-.3669v-3.4293c0-.2026.1643-.3669.3669-.3669h3.7824c.2026,0,.3669.1643.3669.3669v3.4294c0,.2026.1642.3669.3669.3669h2.6354c.2026,0,.3669-.1643.3669-.3669v-10.561c0-.266-.1057-.5212-.2938-.7093ZM107.9595,20.8129v-3.3869h4.5162v3.3869h-4.5162Z" fill="#000" stroke-width="0"/><rect x="173.7166" y="14.4303" width="3.3747" height="13.4169" rx=".3669" ry=".3669" fill="#000" stroke-width="0"/><path d="M190.4725,14.4303h-9.5061c-.2026,0-.3669.1643-.3669.3669v2.5197c0,.2026.1642.3669.3669.3669h2.6988c.2026,0,.3669.1643.3669.3669v9.4296c0,.2026.1643.3669.3669.3669h2.6409c.2026,0,.3669-.1643.3669-.3669v-9.4296c0-.2026.1643-.3669.3669-.3669h2.6988c.2026,0,.3669-.1643.3669-.3669v-2.5197c0-.2026-.1642-.3669-.3669-.3669Z" fill="#000" stroke-width="0"/><path d="M205.235,14.4303h-2.6409c-.2026,0-.3669.1643-.3669.3669v4.2999c0,.2026-.1643.3669-.3669.3669h-3.7712c-.2026,0-.3669-.1643-.3669-.3669v-4.2998c0-.2026-.1643-.3669-.3669-.3669h-2.6409c-.2026,0-.3669.1643-.3669.3669v12.6831c0,.2026.1642.3669.3669.3669h2.6409c.2026,0,.3669-.1643.3669-.3669v-4.3959c0-.2026.1643-.3669.3669-.3669h3.7712c.2026,0,.3669.1643.3669.3669v4.3959c0,.2026.1642.3669.3669.3669h2.6409c.2026,0,.3669-.1643.3669-.3669v-12.6831c0-.2026-.1643-.3669-.3669-.3669Z" fill="#000" stroke-width="0"/><path d="M259.5244,70.7368H0V0h259.5244v70.7368ZM3.3179,67.7524h253.0005V2.7519l-253,.0005-.0005,65Z" fill="#000" stroke-width="0"/></svg>
\ No newline at end of file
diff --git a/apps/web-researcherry/public/RooCode-Badge-white.svg b/apps/web-researcherry/public/RooCode-Badge-white.svg
new file mode 100644
index 000000000..8e406be8c
--- /dev/null
+++ b/apps/web-researcherry/public/RooCode-Badge-white.svg
@@ -0,0 +1,6180 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:i="http://ns.adobe.com/AdobeIllustrator/10.0/" version="1.1" viewBox="0 0 259.52441 70.73682">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #bdccd4;
+      }
+
+      .cls-1, .cls-2 {
+        stroke-width: 0px;
+      }
+
+      .cls-2 {
+        fill: #fff;
+      }
+    </style>
+  </defs>
+  <path class="cls-2" d="M65.89825,16.25727l-1.19811,4.33227c-.06343.22936-.30287.36188-.5309.29384l-20.0977-5.99644c-.13367-.03988-.2784-.0116-.38722.07567l-19.90405,15.96167c-.05811.0466-.12745.0771-.20106.08845l-11.84281,1.82507c-.21928.03379-.37563.23065-.3589.45189l.05146.68052c.01644.21736.19472.387.41262.39264l13.75591.3556.1569.00439,10.16427-5.42947c.1423-.07601.31537-.06486.44674.02878l7.201,5.13316c.11292.08049.17945.21104.17821.34971l-.06075,6.81111c-.00079.08815.02587.17436.07627.24668l10.12959,14.5346c.07944.11398.20959.18192.34852.18192h3.20661c.3199,0,.52502-.34022.37568-.62312l-7.21976-13.67718c-.07061-.13375-.06477-.29496.01532-.42326l3.7643-6.03021c.04098-.06565.09911-.11885.16813-.15387l13.458-6.82929c.13674-.06939.30026-.0597.42785.02534l3.84578,2.5634c.06978.04651.15176.07133.23561.07133h3.49409c.33836,0,.54092-.3763.3546-.65874l-9.70215-14.70714c-.20087-.30449-.66681-.23089-.76404.12069Z"/>
+  <g>
+    <g>
+      <path class="cls-2" d="M172.60334,51.08569h-8.39321c-.33058,0-.59857-.26799-.59857-.59857v-10.10674c0-.33058.26799-.59857.59857-.59857h8.39319c.33058,0,.59857-.26799.59857-.59857v-4.09503c0-.33058-.26799-.59857-.59857-.59857h-10.43677c-.43397,0-.85016.17239-1.15702.47925l-2.42413,2.42409c-.30688.30687-.47928.72309-.47928,1.15708v13.76739c0,.43402.17242.85027.47932,1.15717l2.42403,2.42399c.30688.30688.7231.47928,1.15709.47928h10.4368c.33057,0,.59855-.26798.59855-.59855v-4.09507c0-.33057-.26798-.59855-.59855-.59855Z"/>
+      <path class="cls-2" d="M242.82969,39.00496v-3.91678c0-.33057-.26798-.59855-.59855-.59855h-15.55546c-.33057,0-.59855.26798-.59855.59855v20.69113c0,.33057.26798.59855.59855.59855h15.55546c.33057,0,.59855-.26798.59855-.59855v-3.91678c0-.33057-.26798-.59855-.59855-.59855h-10.4865c-.08951,0-.16206-.07256-.16206-.16206v-3.3457c0-.08951.07256-.16206.16206-.16206h8.88767c.33057,0,.59855-.26798.59855-.59855v-3.12371c0-.33057-.26798-.59855-.59855-.59855h-8.88767c-.08951,0-.16206-.07256-.16206-.16206v-3.3457c0-.08951.07256-.16206.16206-.16206h10.4865c.33057,0,.59855-.26798.59855-.59855Z"/>
+      <path class="cls-2" d="M128.25598,37.39296l-2.42402-2.42402c-.3069-.3069-.72311-.47932-1.15713-.47932h-10.24843c-.43398,0-.85023.17242-1.15709.47932l-2.42406,2.42402c-.30686.3069-.47928.72311-.47928,1.15709v13.76737c0,.43402.17242.85023.47928,1.15713l2.42406,2.42402c.30686.3069.72311.47928,1.15709.47928h10.24843c.43402,0,.85023-.17239,1.15713-.47928l2.42402-2.42402c.3069-.3069.47932-.72311.47932-1.15713v-13.76737c0-.43398-.17242-.8502-.47932-1.15709ZM123.22985,51.08569h-7.35844v-11.30389h7.35844v11.30389Z"/>
+      <path class="cls-2" d="M152.14753,37.39295l-2.42402-2.42403c-.3069-.3069-.72311-.47932-1.15713-.47932h-10.24843c-.43398,0-.85023.17242-1.15709.47932l-2.42406,2.42403c-.30686.3069-.47928.72311-.47928,1.15709v13.76739c0,.43402.17242.85023.47928,1.15713l2.42406,2.42403c.30686.3069.72311.47928,1.15709.47928h10.24843c.43402,0,.85023-.17239,1.15713-.47928l2.42402-2.42403c.3069-.3069.47932-.72311.47932-1.15713v-13.76739c0-.43398-.17242-.8502-.47932-1.15709ZM147.1214,51.08569h-7.35844v-11.3039h7.35844v11.3039Z"/>
+      <path class="cls-2" d="M196.26994,37.39296l-2.42402-2.42402c-.3069-.3069-.72311-.47932-1.15713-.47932h-10.24843c-.43398,0-.85023.17242-1.15709.47932l-2.42406,2.42402c-.30686.3069-.47928.72311-.47928,1.15709v13.76737c0,.43402.17242.85023.47928,1.15713l2.42406,2.42402c.30686.3069.72311.47928,1.15709.47928h10.24843c.43402,0,.85023-.17239,1.15713-.47928l2.42402-2.42402c.3069-.3069.47932-.72311.47932-1.15713v-13.76737c0-.43398-.17242-.8502-.47932-1.15709ZM191.24382,51.08569h-7.35844v-11.30389h7.35844v11.30389Z"/>
+      <path class="cls-2" d="M220.11861,37.39302l-2.42408-2.42408c-.3069-.3069-.72315-.47932-1.15718-.47932h-13.71027c-.33057,0-.59855.26378-.59855.59435,0,2.78246.00001,17.53904.00002,20.69824,0,.33057.26798.59564.59855.59564h13.71034c.43399,0,.85021-.1724,1.15709-.47928l2.42402-2.42402c.3069-.3069.47932-.72315.47932-1.15718v-13.76732c0-.43397-.17239-.85017-.47926-1.15703ZM215.09242,51.08569h-7.35844v-11.30389h7.35844v11.30389Z"/>
+      <path class="cls-2" d="M105.676,55.78422l-3.8893-6.35825,2.62075-2.58835c.30686-.30686.47928-.72308.47928-1.15709v-7.13038c0-.43402-.17242-.85027-.47932-1.15717l-2.42406-2.42406c-.3069-.3069-.72311-.47928-1.15709-.47928h-13.65915c-.33058,0-.59853.26795-.59853.59853v20.69113c0,.33058.26795.59857.59857.59857h4.30831c.33058,0,.59857-.26799.59857-.59857v-5.85125c0-.0895.07255-.16205.16205-.16205h3.43098c.19897,0,.38301.10561.48336.27744l3.50768,6.03772c.1073.18375.3041.29671.5169.29671h5.16446c.30465,0,.493-.33223.33653-.59364ZM99.43802,44.91688h-7.5779v-5.32277h7.5779v5.32277Z"/>
+    </g>
+    <g>
+      <path class="cls-1" d="M145.12801,17.12658v-2.40088c0-.20263-.16426-.36689-.36689-.36689h-9.53507c-.20263,0-.36689.16426-.36689.36689v12.6831c0,.20263.16426.36689.36689.36689h9.53507c.20263,0,.36689-.16426.36689-.36689v-2.40088c0-.20263-.16426-.36689-.36689-.36689h-6.42794c-.05486,0-.09934-.04448-.09934-.09934v-2.05082c0-.05486.04448-.09934.09934-.09934h5.4479c.20263,0,.36689-.16426.36689-.36689v-1.91475c0-.20263-.16426-.36689-.36689-.36689h-5.4479c-.05486,0-.09934-.04448-.09934-.09934v-2.05082c0-.05486.04448-.09934.09934-.09934h6.42794c.20263,0,.36689-.16426.36689-.36689Z"/>
+      <path class="cls-1" d="M130.68842,16.21002l-1.4859-1.4859c-.18812-.18812-.44327-.29381-.70932-.29381h-8.40402c-.20263,0-.3669.16169-.36689.36432,0,1.70557,0,10.75095.00001,12.68746,0,.20263.16426.36511.36689.36511h8.40407c.26603,0,.52115-.10568.70926-.29379l1.48586-1.48586c.18812-.18812.29381-.44327.29381-.70932v-8.43899c0-.26601-.10567-.52113-.29377-.70923ZM127.60751,24.60325h-4.51052v-6.92898h4.51052v6.92898Z"/>
+      <path class="cls-1" d="M100.4191,16.21003l-1.48591-1.48588c-.18813-.18819-.44328-.29387-.70936-.29387h-11.28838c-.2026,0-.36688.16431-.36688.36694v12.68568c0,.20122.16312.36431.36431.36431h2.64606c.20122,0,.36431-.16309.36431-.36431v-9.80863h2.13738v9.65402c0,.28662.23233.51892.51889.51892h2.08239c.28656,0,.51889-.2323.51889-.51892v-9.65402h2.13738v9.80863c0,.20122.16309.36431.36431.36431h2.64606c.20119,0,.36431-.16309.36431-.36431v-10.56358c0-.26607-.10568-.52123-.29378-.70929Z"/>
+      <path class="cls-1" d="M169.47474,14.43032h-2.64606c-.20121,0-.36431.1631-.36431.36434v9.8086h-2.13738v-9.8086c0-.20124-.16312-.36434-.36431-.36434h-2.39154c-.20119,0-.36431.1631-.36431.36434v9.8086h-2.13738v-9.8086c0-.20124-.1631-.36434-.36429-.36434h-2.64608c-.20119,0-.36431.1631-.36431.36434v10.5636c0,.26602.10569.52112.29379.70924l1.48588,1.48588c.18814.18816.44332.29383.70938.29383h9.16621c.26606,0,.52124-.10567.70938-.29383l1.48588-1.48588c.1881-.18812.29379-.44323.29379-.70924v-10.5636c0-.20124-.16312-.36434-.36431-.36434Z"/>
+      <path class="cls-1" d="M115.55098,16.20997l-1.48586-1.48586c-.18811-.18811-.44324-.29379-.70927-.29379h-6.27653c-.26603,0-.52116.10568-.70927.29379l-1.48586,1.48586c-.18812.18812-.2938.44327-.2938.70931v10.56107c0,.20261.16425.36686.36686.36686h2.63537c.20263,0,.36689-.16426.36689-.36689v-3.42935c0-.20263.16426-.36689.36689-.36689h3.78237c.20263,0,.36689.16426.36689.36689v3.42938c0,.20261.16425.36686.36686.36686h2.63538c.20262,0,.36688-.16426.36688-.36688v-10.56105c0-.26604-.10568-.52119-.2938-.70931ZM107.9595,20.81288v-3.38691h4.51616v3.38691h-4.51616Z"/>
+      <rect class="cls-1" x="173.71656" y="14.43032" width="3.37469" height="13.41689" rx=".36689" ry=".36689"/>
+      <path class="cls-1" d="M190.47247,14.43032h-9.50611c-.20264,0-.36691.16427-.36691.36691v2.51975c0,.20261.16425.36686.36686.36686h2.69884c.20263,0,.36689.16426.36689.36689v9.42958c0,.20264.16427.36691.36691.36691h2.64088c.20264,0,.36691-.16427.36691-.36691v-9.42958c0-.20263.16426-.36689.36689-.36689h2.69879c.20264,0,.36691-.16427.36691-.36691v-2.51975c0-.20261-.16425-.36686-.36686-.36686Z"/>
+      <path class="cls-1" d="M205.23504,14.43032h-2.6409c-.20262,0-.36688.16426-.36688.36688v4.29985c0,.20263-.16426.36689-.36689.36689h-3.77124c-.20263,0-.36689-.16426-.36689-.36689v-4.29983c0-.20264-.16427-.36691-.36691-.36691h-2.6409c-.20262,0-.36688.16426-.36688.36688v12.68315c0,.20261.16425.36686.36686.36686h2.64092c.20264,0,.36691-.16427.36691-.36691v-4.3959c0-.20263.16426-.36689.36689-.36689h3.77124c.20263,0,.36689.16426.36689.36689v4.39594c0,.20261.16425.36686.36686.36686h2.64092c.20264,0,.36691-.16427.36691-.36691v-12.68308c0-.20264-.16427-.36691-.36691-.36691Z"/>
+    </g>
+  </g>
+  <path class="cls-2" d="M259.52441,70.73682H0V0h259.52441v70.73682ZM3.31786,67.75244h253.0005V2.75194l-253,.0005-.0005,65Z"/>
+  <metadata>
+    <i:aipgfRef id="adobe_illustrator_pgf"/>
+    <i:aipgf id="adobe_illustrator_pgf" i:pgfEncoding="zstd/base64" i:pgfVersion="24">
+<![CDATA[
+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
+s81oPpnge6vip000491MyTAnh06mNbScZmXW0NJWtrEjIsqkvlJwyDVEkikVhQoSLkC4UGECGowg
+QoQDAhGAIwMKEixcoEABDgvqV6sUAQJw06OcSk+LI1gkvzy0JNPg2Ow+8G5MiEiceFVSN7yisiJy
+2blSdC47zY0UUVa66FxGhK/zzEq/4/YdhS7tdEHbjPjNoxQ6+xjrjsyTtvmY3JSadvvRNe2GLJt2
+U+hm0w6xRvV2pugym3/aJV7GR8uOWIfHs315PLu2CW3SvkKcPFvHx6Gt0uiejuhjntw56ww9RZSH
+ebW2ytKvyfVxiE6yFQnzXu2n8NJ2tNJ+t92sl2c2qTvukmj8uTLB89nYxj6yja885QOxN/YZpd10
+yow3vrxxlauZ9WeeMndz1aQj8SzFddj08ooQ03w46Eq6OjBrmIRnVXkpeqyOxPZ8T3yZ5VFZesQK
+a6yOuvmU1VxdjVVR3ZNs6sQyL0R5ITqeRlVnWWfZSqqLJQrOydnjdOBVYSZuz/1uzr2S0nEoMyRm
+JsERvEJLshmn8jw5hO6NTMdVGnpaaDNpJanVNqUcq6N9Tq9KpKNuitIme4hDWbLZWjqOd6X31MJX
+NsnsM0dkIjIbm3rNSE5mQ2R1YKFrWUfyyqGzUqJVEY6d6IaWdthLOGZ3xbGqsbOkWQ1OD+vEiugs
+c27p7LC7YlqV1B1ZzLLV7FV5d4hqOvapbwxrzh2TyRzzu9aZyhrrjBX2DBNXNHUk/WU2NT3dmIyZ
+FSLWLZMSoRSNVVIWrUcpIpLWYXe9OsvOeFNpHfn8ta0kHYWUZaN8CaLPanQsntmNYOGZlY76IB4m
+nlhp0D5kdTsmncwcotnkLf9iifU1h5mXVr7je1aStzZfUoep7pI6Ln/t1X9iHpJ667A92ysrRKmj
+8G7PeUeSHfxfOPe7fz4kla+TOygRy26yMwdS+uzslyMdY+2OU6cKxQ5CHLwUEzt+aIMjgx25o+Ps
+9WKHSQYvddDL9WWm1NETox2GTdthZor1cFYPK2kzT55NOG3NdfCOV6eX8TAZ3TT3Dc7U3FdNEqL7
+5pTpMzlMs7xZV9VCdtSYzjo1hGhHy0K7Ix3asXRHsdLmI6L0zOSFknYUPzeTRDvoc7tEOmotDSWx
+TRvimZVlc4wu83bkGYvugz3JpP+ILJlWlEhyO+7Gii6zNS66zN6O17zoqC+jMrwUu8tYVmfsXpcj
+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
+qPdh8NJmHPCcTXQ5aC99hm8mUHDXaLPQVvr83kmdYLsHUs/GOayzdxD17JvvnJ/pg6tn/ODqos3D
+rgTq7Q5JCnaDIgNvnG+dLQPYNrvA9bIzDhxe9G7uDKEbnXXrZVyLQQPfMOGLbzFo4HcZmFlZGMzf
+mXYmzMaF2VPbZuP+GE8b68DNtGExgWxjNolxXBswnfxyh1YWo8emzb7dZLyPbeBkGDTwMq8LvAbD
+kJXjimXxumIucrMY7xg2cA0QJvAxr68snk0W07emlSFs48oUtnFnDNtmmUO2rcsbV8t/GBjXXsDA
+fZgGl7axDi5qZWIuaPJYNs13yLrRZFk3msxlbduB0x028A4Wvji9QYPNhjpnS0urCovJAdoe2gUm
+rComLCYuKiaqt5qJislKi4lLq4rppsKi4qKSYqJiomL6OWI1U1jvYIFNDa6P7UKDnAw1UxVTgqic
+PLY9PTStgzsOTFlVWlhTXVdUXFVcTFRUXHdeTFV7aGRMa3VfOXJOWw4HqqspKiysqq6uKq2sqa6q
+rKupri2qqqquKjqtLqsqrqyuq6krLa4tq6suqqyrKywqqyoqqymrqioqLiotrikqLiouK6stq60u
+rK2trawtuq2urCsrriurKastKyqrramtrq2tqasrqq0pq6qrq6utKywuqqspq64sKy2rrK4rrqwu
+ri2tLissC1NUV1taVltWXFdTV1lcV1Sygpy2HAtVWVdaWFlWWVhWWV1dbTkWtrCupqysqriwqLS2
+pqqurKzorC4wVfUtqiourasqrayuKisrLasqrS0sLi0rLa4pKystK60srikrLCkrrqwuqiksLSss
+raqrriksLC0srSorKywtLa0rrSsuLqsuLCstLa0sLa2uKS0tqi0tLa0traktrS0tqiquLaypLS2r
+LS2uqqurLC6tKi4tLSurqSourSoura6pLa0qqi0tLawurKqpLS0tLi0tLS2tLK2tKaosra2srSks
+LSqqK6wrrawurS0srSysqa6srqwpri2trK6uKa2rLaqpqq2pKq2srqwpraytqaysLCwrrSmqnZqO
+NzQ3IQv41IyUoRnegcUvGJO4kIWcH/BvRcUT5ChxHI7DYXgMf+EwXIbPcBt+w3F4DYfhMRyGw/As
+d+Ev/IXX8BgOw2E4DI/hM5yG63AezrT09CII9wXEGgYTek3ckMVD++JRUgw4ExQCbsFBlUugHeGn
+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
+5teHh0/LIGFND0/gOjeNCHZC/nDcVNzx2Qn54/HTMkiY81TJHaerE7lN1iZznI89JjPBOzxIsqiC
+ZjgFARnDOAmGLCqaFpd7EMUvDB1xp5geTsRz+A+/4TScBobDvPCXGT7DZbL8JYbP8Bcewzmv4TUc
+h+9kibjWVIOsYJsX0AjFL60xDQx8YwBoOcWwpJle2BCahkFMbH6FsHIyBpnsdISl9LQUAtZ05FG5
+CbZBoxNxRo5O8A0ZnV4eKEC9O1x4Itpwwfm98aJTXIME5+MMUUrSH3yDQA6YNYypfO0QAUvgfxim
+uJgBA/xpRiiGc+6S5Vn+gsN7eJuYAwxjHxsCxwts58ZYyPpYCoe2sRYxyB4G2JmFQKR0HvZQsvm9
+0ULTq+PFpncHCk0vjhmcYhopNsU3VjkZc3xuJuJI5UzEwdqJSIOGJ+cRwM9PI3+cHprAZRbQRG1y
+CJSuohUp/W2sRUzBOMRXkJNHCnxOwgIORRPEabgNh+Ex3IW7ZPmLi0sO9+E7HIjX8JwXLsM5d+E0
+/IYH4TBxDhGukGpwXqAbD2As08sEk5IvChFQyiWHj0sG0CObBMBvtj6R20zs8anp5VEi8zAHC02w
+jhGglEASLV1YQfucFCK+NNwhA7PQx4xNRB6um2EdrJjeGzg2xTZcPz80kYtkgsVmGx/RHo63yH5j
+LVohIooX+FrWFGfQQ8SDeA7XycpwHT7De1xmeA6f4TQchstkOeec8yx/4ZxzzjnnnLtwGC7Da/gN
+r+E4PIbP8Cx/4TP8huNwHu7DjXhUURSPM4sgNqaiodMb22np58SGJSATGp6dTfzABwRAdkyCgHeU
+AoAeGjmkEZMQVsemdwcKzW8PEprfHCUywTRaZH5vqND83oixiWjDxKb4xupmIo5UTkYcn5uLPDo3
+HW8EW0xlOXU5dM6bVtWc1hYVl1QOHRcXFRdTFlWV1VQVFRWXFFWVFRbVFlWb2hXXlVqaVBabFZfU
+FVYWltQWmtWaFFYVV1oW2loVm1YaWpcV1RZVldWVFJcWFZcUW1saltTWGhaWFBaa1RYbmlba1hbV
+1dQVFV4VFhUHLq0pKiqtqioupiqsLCazp5wHe3leZlRVG7yimB4wJTDDMqMyi2JywHRhg8yhQ92g
+rQprK61tTU0LbU1Nikurq0sqS8sKS4rrCg1LSostiwuNbUvtwgZZRttDu+CHpkV7u5vzYnNDo9vA
+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
+n7gssf+UHjPl/8u47JTRorE8EUIoSZZQYuNDBZdhGep1iV3Kz45oGOB8U0K4aYw51+9JfREhdQ6U
+k+qPDGevuFts0s7oSZwTqMWAdAsK4WZgwBTKIVB+ojCwBYXjiPvgZxMLFMI1MaJ66sGiodX+WSTX
+x3/Xa/LtBAmSwtYKLEwwweD27VgiEkBgAUF1TVbfGV7en6Z3zJ2CID6dZS4dtCAKKUkNNtKTQ8zi
+dxi1BRUZuZlP/CcOrYC3VBv94VFxWdZPceVlhL7qCCbkx02VqtkO14J57YUXN7H+9+sKRaKp4WAr
+m67v64aIu4mgELGNgFGSKeet0q2ttECpiFIfwCrXrXRp9yjUrchSawzlsZJ8WT2/KzEz4kWDh9Gx
+ol6MRBtoYSAcIXbNlzpoOYQDqJHouiuRDTe3IrUhgMMYur/cZ/9t1JY/ivyWSPS194ZiRogt4OTZ
+T2wWNdrSWUgtgVPhIlwAdCBIoZL9t46nB6b9VJnm3Ig6B+S1X48JU2plIb8WIcSZsF55b25vR1G+
+SvuruuMT8rue4OxuPwgVrubxzGO83ZgTkQosRmhJsD18+YoMTT3k24WL3rZQ61ZsDtkuTOo6uZ55
+o7K8xdOcGEbHGiXy4EKCJLx4eTK55KG5b+NUBgEcCgAEC11kNDE4YjdiOC0yZjg2MS04MmEzLTdh
+YmViN2Q3YWRiYTQ3YTQxZmIxLWUwMDktNGNmNC1iNGE0LWVhMGRmNDhkOGMzMDk0IDYyOC4yNTIz
+NWQ2MzEyNTUtNWIyYy00M2ExLTlkYzMtZTI1YzEyZjU2NTg5N2QzOGI0Y2UtNjZkYS00ZjUzLThj
+OWMtNjBlNGE0MzkwNzE3ODEzNDYwMy4yNTIxMjUyMzc4OC4zNzIzLSBRBQkp4YPXAyar/abqIAvA
+Wk0auFbjaUtrdkDdrINTNXxB25yS4NsJwRtciAZIakA5cULn3Ih1qmZKDjRrNxBMQBekCycZu0QI
+T0pgfjtXtxke4M7x4K7zYeNON3Ss6QI8wTmh8GLWGI3/pnr4FrDALiASsHC+gf6bPGeiUBzoTQr4
+34S8bOkFF7r+AkEP2OSjAHpbtBA0cDfJA/z//////////6LZ/8aWYYQNY+2XW5J8YIRqZUUt9f71
+2wC3qN0lpSQhqVoU/sP+ZgQBAAH7ALRLejMkSIREfjForbnFoNE13gW6QwI3OM1TvQ+Iba29EgQ9
+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
+F4sGIpwrNIvAIpEYLiQAjYMJEzhCKl40gE44UHgovKw0JDiYhCRAIizyVJQFhQdEnqyIrkB4iETg
+CZq0PJQQTA5ESjBxoKsQYHLLA7QrJxYpEsFg4EEBPx8CTO7TkUgwcZ+Ok5A1WAkLzMR0ErKKygMh
+KB18E84oyAvpACmmQLOUSgYkeJBKDQ8ebB6hDgQhKwngUkMh8gN3idCgYJaSSkdByoClgcBzgaCz
+EDqI8HIAIkM27mRmBK1jI2TLtBGyGtDFxmdJDOcpbTyNiYUxHJRYGHpUhDxLYjjTqAiFTBUhUwCi
+qFDgGVWYSVRRNA8rnytwHp8CVelToOTFPhdycWJhIyAgdrE0DR4qagKBFhoYUgZYIDFJsRBCwtpI
+Ea2sfC7GAMwGCQnFgCsxXEhNChgEiMCKWhPO6AAEVkxKFhlsQRJZCk4TIg0QBygYdIhOp1LK52FD
+NjNKWGBbYlGyJRZbsrslW2KBeGiIC/RBD+aKTp4SxoNaZCh0oZJQqKJWKPQJeUL2KbGoKBYQQ+c6
+oc5Cp8RigyFUKlAhYOaA8VNRpwFhUlEWn8+nxPOxVVGgjgcfSjgOVYIOhJMFARBEnCZCMJwQi9DV
+YItGJ6eiWCReKpkSBALDqUFLwQKR0jUEmovvqJIadt/r87df6yY3+qGjOy7ub7+xm/7+9f9u33rf
+tmdv5t1eeOfZ/sjN7WpCS/233lt4R5WOPR3f29U3h4n8yNbaxv6b15u5rmfZnLdsq26r7bzPb02I
+t7jt6qvtqFL6+9m37Tq8Tl5zP/11eJs1VHdsTs71t2bMxGRNPFf9V+aF6Gr/bmfP2H2N506VNr3v
+x5Ztjr/0tN1f3Q050xYxr9N51+JtEHGvlS29e63n3+vvp/LyrRu/vdta3LQ8M9xsXu7+mc66EPHO
+WLX70tauby7GOzTh6t8e7+lyxOte0+61iSib/NVbPbtru971XEfl5Dw7O+PcY9zG4+vUVttvXKe4
+8cvd/zde9XZ3a7t1ipQLWjP7bVKXkx1PM+2MHTERnymX18VuewpFfXlf09vfbHnTi612msa59lNt
+1+yu+9H8fVuzn4+Z19rXfaqhr26/s/vnXa6mPvu6417m0mvP5ktk3zezpY2Mzmf3CxFfc9P1vM/l
+33392m1XIlIoaq7u74erE3e1c3XiRteZv9uXFRmfzYVNm5WPO5cnUg027eiId47fq2jmyxRN2N2G
+eda8Sw0fs3d18dcd8vM22lvq6kNNRzZXX1x9SJlKvp1+zHts658TL90/E9f/77q2uumu/6NKmsq/
+zpBRl/saFxqmvfUZmjsvNKRMjJzu/4e30pAqYWamWufKw/PndlU1X3moqM3MhmjKdkbexl16qL63
+v/iQsW1ZTdp4zP6rqssYf/FtX5X9Ti3NV7OplKx26K5uubLXz43ZOG9lH2UqmajS5tnz9h43zp/f
+m6ret9iaiLjZa7Vf3Cjv42mbvTNr6v0lrv+vcX872t83I3by7X3+0r0Nqp5Zui139t6did8+H1P9
+dO0eVXq2vtXrbpuvt3zPVJHXeHlNqL7/v3yPKrG3n7nip/k5Ol8moqah83q+zR7rItvzo6e25T67
+3rnpud6aLuvNxf67Nes863v0he3BQKlQJpNpDVstdxdno2W/692vNEqFKplKj7rN+Xy6XhdZb1Vx
+vR5lKpmoUlq36ll64v+fcmanId7m2t0X+Tbviezo//5vcs1PXz3ub+Zev9+08zPjVluXt1nHX/0+
+bX1/fktEM8R1jo+u58646/KoUrYtmr7tr0z+RP3vXlyal+h8uqbNS/My0zHN7dbmUaUNXlrmWr1r
+7l6rZmxqnGbNhqYNtruamS0fLmV15t+8XaxHNdigY7o5+3HnL9ejJDZ8VA1DLrul7/LGtbZfZrv1
+5b2b64qc+MubH5vNLC/P1jdr+609um8u9FtbQ8101YV+/96s+G64CzeurIaL7e690Le/mVH171Ye
+LrfupSI23it29jYaN6It3iNrIiKuKrvc/rbhfl6uY6RQGB+XX61PfbFvzvQcMRn1fvH15Xk6d5qt
+9l5WRm3W12xU/l7s99Rl3599qIwLF7vbmLebM10+z82RURcuUij2iuqWe7fLfne/e9knL6qdm92t
++6RQNp8uFMreZ6d1+/ZiRVdGtW1Gc/nPXsPszdWKFMoGL73xfiHjBi85HXEzFVcypv+xyybV9vIw
+Hdk++RYXlx9nYubdrmRESoVC2T/EM1726dymy37Z+SyXndHW/vbfq25qb679bOTjXEzus93TRcbb
+v92/Dft17+tZrt5nYn5/s7tifh7rbW7av70pJtseYnNfbzb3OyMu7unCB23QG3etN9/2/Gv2/2yM
+r47+yrvuKZSNo7eb9W9/+/2ysxsn5+oGbZjZ1HO7vZf3bTbZfns/W3/xY//yPsplo952ZojboI3a
+ot6mNeP6bmW2w1Q+bN83P757blPEy9637XbVRfP/dX7IqWx/qKcufPnKfq6+0I9CQb388+vslRvu
+Y37DvjXbc/brXJp+z23elqp4n8l53MvdmTM33Vf+Kadt6u6xy/ueuzHKdyrv5uajre8NKvJhp2Y/
+ojunJuM38vqmUDabtu92zZq93j957zoXl61Z2c0wH5f6Pfuj3d/xulz+LWf3vS/1oxpsPLe5PRUz
+c9mDNsztrOmvjiv/qBnSxlCFQnnjZrNUzL1Dzuzmxb7pzEfUT/62td34/Wupt9r37dLy1HP3d/Px
+U3O1UyibtW7lXsZ7wzf3NW9jtdW/yTN8NbbOzsw9tjPFxNWJf5/+aKufcllNw8duvefFT6E8vqG1
+ffafbTobmtn2MuVPzc27lb9x3eP+9FvsZdh2aSv/NVebvfnZ2De7+/gXPoWyud3GvcM2ez0zvlvv
+m3zPxn5Ey7W/XrdT91/uG0025k5dQ3M3xbZ3RV/u6PmX/27LrY0T99x5uZ8Z5yH+3bLhte5Z4tre
+KG6/5Snq/lL+7Ey941vbm0zuzm3VNtRWyzdLu7WPfd+3b9m2tkGby+xVfTRkW7vKp9eWaddmyH+Y
+3Y/r2lzb+BL32dRQuQ/X9ebOX3H1HD9/rS2vze9c+PF5GVfdsvnwFB3XNYWy6c9rDBSFxkRVVRWV
+smISEwAYlplNygmGZibltLJJWTGJSaEx2aQAwGRmhTqluDAwOR1IWTHZqCoKBDqlCMDEtOBlIsLU
+jSCGTYdiQdPPtHlDBW0UKdOmDXUz005NVIMNth1og9Z6i/z6/yuRkticyUQ1UKFQOPl+03ExYh8f
+Yv7dYkTKBcU6eS//1mWDf2zLv45fUZPRMh9vIau97rbxX+ZCvsN+Nf7k2+/c/mX3e7S1h3qafy6I
+bfy59pBC2evntOWH94nLz4WXuz1Nlx8yHuo5rwtjt3UvP6RQvLnNUJcPTbnZ9q6XL2jDe9bnyar9
+e6uPqNi6yxXN77ixFw/5k9He7ReiriUa8mXbSjxF9t7GlXi4f78Wr5uRHzGVL1tT29pbz1V52fKu
+uRcnG/cb7rpL92Vr3lx37Yf/bCiLu7rcUNmFQnk0P093W27omHin+C64x7yth73akELxbH3/Nbe1
+huzmiPzdnqj+rvaX6NvP54uO/siXzPu2ekHm+JzXSw0501Ff10VVvb9Zc6khhWJt/Put/ItnyO15
++bed3rphT3RMz2vut2vfZVzlXUyhbB6V7/xbEw95df3tHNcZGppzrqqLWjurmSuvM6QatJ/Z3une
+ukMVCsVl77V79d+3HrIbu6C4mF+y853/4T7/+efSv0M9VuR1eVvupX9UA9/2t/81Xf1ualszS95t
+dN5UY1umeahtqIvT5a/b3Bf//dW2cZVxF2eemzYfci5OvbO/1P29xcmJzKe4K5NVdw9zZVIo2reW
+vbcyb61NLf9d8jIP7TCPQnH8NDU3W4+3yWNEBm3W3OzfXN/3beXf2+H640o1ZW/sffO0/1d7vNTV
+O+XleN/Hb+7cuhyxnxuX41Eo7eruyWtRl+2ykVNRz21vLe3vMu2729Kvndne+9GwcS1+Zqd1d7o4
+p6MvCv4739rq471PXI2adpevry6M/52+b9yr8SgUZER87bSleY22f5uWnZr6i/pvy767NHXXEZkV
+fZ2Nm7WXJmt3euKieSIuztJeZ29vLnvPXOt9Ntxl3/fJa7anpj/HfHtGLDnrcTa6u1r/LvfbPTYT
+m6m68qUt96NKq3mqy768Vff5vvN/s/VanX9Zz9NQNZef8vE9ZnOiIhvvLe9UfX1b20s1P2tGY/U3
+TOZfPXVD18V9m8ve5FT0a181Z2z+/jb95M7Ffc/Gt59rssNza9Ne3EeVdnvvmz3Xdyo2cvq37/pW
+bm5Lt9te31TpFI/V3df5adolpu+tmdBxu3GxhLZ6qcpL/ex0l21XfWnqOrKbrfXb11u0w3ftv8t+
+U1+Zbs1m/N5vaeLk1zZMu13tRzUwZT5P3lv2V8I0dGzWs9NnTXfHbHOTZ3r7si3+rX6uw7ZF5DO9
+xHX4aPmGlrYOjyqtszKz+rXzKSI++i2/9udrTv+z5fefmKvovva01/Bs2fR8fsubnGvvqJLpvfad
+48q7w/1jfdvlZEX2xWzbu6bq27uY8XzX2RFZkS1Rs70z7RV52V2arvf5sZrSLjV/jXHZHVU6bvy2
+XD1+Pu1D9cw8bb3Gy9dVy17MrYtpx92qzep4n4fqK7f/9FVP2f6tj9dXW9d++d1muxmbM5OXu2/9
+3YY38RH98vaPrRl1/SXfslufYroerz9zV0Nf0za7dYimZUs//MVr6kP27pX6/enZ5rbqZ6z3jsv1
+NpyNpt3Nq+jH97nfZr/23Jz5Fu/z25mvceY6b7P6tafpJvO6v2/ff8Zbq+7ter67jlWf1+/2ci2D
+Nrnob4x9/N/9Zr7he9RFdnv/xZynvny47I5vqi7pucdpr30ot8umnZtO5dbHNnTe+0TeN0fMX8yG
+jHqM7WvLj72YQZt9ZVXMVL38XsqgjSOit2lz+v0pd2uj5Vrq4R+qLV3QKeOb/h7vp2trmi7Tc/5z
+XhfOzka37mV6FMq9uvb5JVpztne/r+u76eY2d9PZ8fxTjZ/X63W2LzrfNTOf4umi9/YqN7p1rlvk
+T+bm3sVrh2273ot3d9PUF2/2szLn370v33tV915j/eWbiXiaa/fr37q3ft3t0+1/W3Nbvw8bNU+b
+/821dR3b7/GjL+X71NtcZhfD1jdsZF3KR6Fs8O85Vds+eV0vtzbbbjq76Lueeva6s97ETnxv1tdV
+/d80NNc9Vd7//eWceMyGrmfrtzPzuXvdfSVnqiMfqrPivS5j6y4uZRQXCiX5FRNtNfPxrb+v9+8z
+6yYvL+ZLZsP7Nt21e5/Hzbu21i5u6Hzs3PYoa6qm6urm+L7JxisXtNFWfrbPVV7Ltzn97c9Etu7l
+d8/F7F+Zqqn2m6edixe08V++XX7ztXzmp4vLFjZPedzlGl7zqS9vE26fboONc6ryLXV7ZP67Zbhp
+7rT79MvHY0s2O71djIdpn7y9mCbG1EMrJfP6Mjz9TVRP5WV4G23cdMtVvEVlZVNr1WVo5vu41o5r
+p/2Zyxa9le397dFdTX8N0xffbc7s0HH3HZff+rIX3/U9N3PrmpyPPZAOqDTz9IE4nORAkONQ0EGK
+QIi2AZMSAAAQQBIQRyWzybKMGQAUAARmRjA8MjYgJhSNB6PiiEQQR0EghUEQR0EMhLIcsogyGwBI
+AkqHU+lARaEWJTbQ9rTp34Cflz6qCVGrttneDSzBebORgE9GoRAC7VBz8Z+aAmdD8EVeJcEPx3AS
+tV3sTURy86/sNKt0pHjeglSATE0azZNspb/U8Sa8K/1Aulrp73Zd6efX00InP2bFUGmxepiW7BIT
+1z/1oa2qPS6AQ050lqnzvDMgyVibXT9mAZDA81Gm2wttRm/X1MdVl7l2NdwBWVpuk/fHRnto8hkG
+QbtWD7GajyL/UROxBVzIiUpCVgXOAfbadchTHqY8AwZ+Hf5Bs7gMNF7vh5OEhmNk85rfZ1oU8YLN
+aht/Mcycul6SRiiMt5GuVT4iUDO7f4wS5+aAUyYRXQYT7aT014JCfe3QIDgQH39OtKGuVNpUjWPZ
+EBw6WnuiX2hGmPAHN8KgbZEvOjfiVBYD8niCvS5aM0q6X4BmuDLCEzERBJnVM0JTFQUzSFE+VMnH
+TMtkv2NjEn6z07EVp0QtvEqoJGEPPYhifnwvAu13jjS1FG2bBlmxTRMKKUQ54aYvmLMJOMuYXT1o
+8mF6dujWOZnCj+NGGGDDyX1pZxx8vG9qNJeP3+81wsSYNE/zi8z/TJ7PTFG6NtdwjCOhqeddtIQS
+fCkgJ/FJ1IqeiGVg72Pna63quDmUuzpGPGVYkgewBecl7A7P0w75zVG6wENO11edr27aAsuASNgY
+IEcnflm0YDMPGBM5d9c1PC5f+niLbKLNrViEsj0ivFRz7WKP06H5qwmwGCt2auYJY5Gw5QK2lDBj
+2fhMiSSD9Rt5oZ/TG7hL0a80hIcpJP8+TFLiY81zOWvPRTkEY0jTkuRR5GFL+RkCKEiRZYAPyXSh
+IU1yEleUDv8qseUFAg/SKFfkfEdzcleh7eHW/gcZTSSioA37kPxTC+ZWCk9mGyBAuhWBcXehKE+4
+FWaF5AqGfziqj+l/iJrQ+wOvGCOAUrddebpg/qk0nBAZgHVe1MMPL13RCV+iubIG1pgZgmQWUJLi
+7zYUrQ7KtrGKS+KbNhL2r3d0L9MFlMCLs74aGNyOxU95adgnHt1lFLnFaagVb/iybxggSgikXn8j
+SMzCcEQQ7riqapYyryAfD+CTtf4iIUq+xJBoHHFfxjkVpkmOGcJO3Gaucw5CwB/Dro9EF4mPK8X/
+acGVFwDfKaVN1NvgWn/EtlOhvN9mHHZQwMn9iQDmJUXdXEkc7uI0wPDDEyOkI9+ql8FQlQY7pnkh
+y54QGPrZAB8TDHA7owdRJaAP0GmIft1xORn5UYO/JgfpXJU5yzPWCoZn07fIU6eq3z7G1q/Q1qXP
+KQhYEAdNP1i/JoAwEDvmSp+zpO8NDJ4Tg4gYhTd1SpmG0EIEILpvjGBPBV3loof5KbdrbqNaM6Da
+swYRFOGYAd21pRMqqmEhgheSXRGQ27lCNo7aoLiDqEBqxEgp/1gjIdsor7pEaBoCGlCuPC5Djs6M
+IK9L8XWRAAfQ3cl8OTx0l/X85FUTIal7YezkUKUNHaMFXHud0UaMXJoV9WwVEPakv6QxQdVADx7a
+fJollZmIjN4Ix7DfQadG54Id4OaFBHKNGoLM1TdJvZFZAFazzr5HMlIZ8MB4MRPcGRq3Z7gQA04S
+iBR6lcU12VmQivcG1FqxyEYQonY1m8gAnaMlk14YeGHITj/jiir46MLvQmLCg3+ekcGzTTh4ejEE
+Hb9gAVdQBjLcdEUA7kq/gkzikAUQCtOHKiAS33t7C5oqypSYvAvyofEcvKMhWceTOhVvL51nKpSJ
+4a1pfEOx0QjXZCdMAccgjkmG1PezpB6dfZGSmbHyjVeJxWQSwW9cOA7PYREjtupbZXyhHhms4ZRs
+fFvn+REVLkbDY/gdHSQ/TX7Rnu1sEgpp1cgkMN+UoMOR/XSTFozphkBBLXe6CArMUmMcVQS1veR8
+m/kwY70m4AzqgSXlCO082qduNE1oHlwNgoiNABG3IZSrBhLw/7ALjEhtpqT3V1ALI7SlYeKRFZ9C
+JjqhiZP/puvpGMamW8LIUEgtcrSbyWlo2MjQSgmQ7PYC5t3qITcqOhKcJ47sclsUl/SKzutYvvgK
+AlZJ8J4SG77AIusRltkjgWpkxMcy4Y5aGaP8XyMMi0348ake9ujtr0UZQz3xCPAUx0z5ePV7jGBQ
+ZRZ96cOckU8/HQ+bOcYKZHQhH4DXEgEQ6iwkxefcj2sOT1mVHWtH3Qz6ka+P9jHrQn3Pan6ft5lF
+q1c3hCmhTaJsMz4Kzrs2xY40FsW9BrO5hKPIPjDMSLejh8tKSFEB0T3g2TfpY6naW/DVaOD6EXBn
+BOocRWhI1b/RVLICoGvNoCodyzdxqBDJQS49J077HpqlbP6YJXyKO9RRVPQK3Bruad4uARMHomZN
++wPERj8g3tzSPzbH54wf0HaKrN/1N8qYNSruOh7FtFt4uB1LD7OJ3115DXzmmcbHKvMyVB7wNltb
+/IISefzzIaKr61xU0xfOJRsh0Kid88rxcECIvuGzke+adL2JWELftd341stgUSxrTrR5TTp0bzrI
+VcIskRHCb/IKjTF2FE0mk5DoPNnBRcdEaF8D4xRSCyN+gzIbNutwTCE0jAOw1rz3EdB5vKjmFnkq
+pJSeiX4FBw6DG87KuzOYM3841PAKNJxAm26dHOFsjILMxou925OP7SLzltwElpeIDgDqQXjClFPn
+SbotzobLAS6qUQHDMTpOOSJv2JAoNCqCKV1sgwklOEtiQPsehzYghD1IUIP6OuH1aAzqxHyclTsn
+Lz+EeJZr3fGgUU77axx4Q3WwUNiETpI4ExwmaBLiqsJTPbQoHE83SdrEmpPoNyIvPlERohT5+HyT
+CSI4jqUAZO4OlnJZrG8iVEHao6jlB717wFcUytg+UdbE2Ad6NLjwi8NLEigEdAci5xEBUm8YJlPz
+j0D0qInwP1SyDQiLKKwAoQvJyC4r4n2udGGIrDFLwbR2yZm2SuOJYRNHV5MmPUF7VZev+evC+At6
+seoMwUxOYiyraPkhTGQOAe/f0PcURuZbcAr4qRqwWOxWnAvMOsfRVCeMR58RzyZZ9U7Ff9Uu78wW
+I3QIpKp62FWPAJId4dLpA33XRpRCwC+Uh9PcbexNk6joAjg+3+Oepm8cd3NsXXj+i5Dj6bA8NY2Q
+1JwAlXrKBlsj9M7V29OF9YAnXdfLIbFJl0XBoAllthckQk+tmwjkUxW0H0sB+2DCddVM1Pts2SVd
+uz9VWbJmQW9CnMDU7RLzNuQFxM0wBZqXxVQkgThMxCd7I+d3mLle7fs6H1E2pcLJnBbvxQuTh1Ah
+ViBIsWa4vITqcO0eYOrIO4gDkcROKn97FqIneGLKgx1lFei9Le/qORe1E8cJsVooJa74gekhvXAa
+Do/kImEcgFyw/AWS5UntNSrrc7JhonJEgNCzSslSThhaDZ0omCTifKEjuKWZwjB/uCXHLCnwwlY0
+omx0IIIIXcTF7QysueGryIJipFncZQX7y525j6T0/OSlIzvKqsqdw8s8NFkfdqikmZTTmtVYIGsu
+/pMiRUDDNPu19PzDNkY9VqmvCvmMqO6ZAcbUDoWpV3W1JcgyNMyDH595Ym+Yxo8EfwLHmqQvumH2
+YTYzCbUxrLcLYUXCJsLIGBZbydttuWYXEnZmw1L3q2sa1jlle5DRK/iEDtGYhVr2XLeImyCB1mov
+m5a72rmWlMvSCRwQZaOklGoBrJNjZy6X/VLfXEEqlvfhYCZ7aOTeH8eSmHIY7bwGxAqKPU+C4+A/
+9iKCPQTLZkw/aYOObJNzmgl0yOaxtN5YB5DN3Q1oT1UHombK8x/BDIINXGSrmbx7cdtODJYzpelS
+TCCVBQSCUOFoku3Q2eOgCb6MvccdSBa6aHbqGybof2Yxo9/XidGxZoRUKe8/11Yk2lRT8j1BCglI
+D5Z2ewfMMmbWkn8gn/lbzsWT+/3gzZNijBM56t9FK7QJkEjXg1rIep+FO5lOEteFt7LQgpbEL6E2
+wh8WGlYI4fzAkOXrSA3qjBUenD0N9rCPWMaYUiDsCXAOc/cvTBCRWowegupYxUGAXg2sj4QNkX+4
+WerrddX/1WI9UhOiASTjfTHSHkW3TwmY8g+txahrSwjRmGLspc7YQPmwHBHB0pFPf/oJfxlohiFs
+bJGefLJ3891fzp7J+54MKfp0aVxTFiBCIrVt9PfPG/qHzdMZmUTBjcys6sVEpRtlWxe1826oJh8P
+CjTGXoagwprh42VIwLs7PenWaKFrwnJQGMMIRKA0C9xSbA3JSiIdXcaW/gmNdroJLSjK/JVCzKwV
+F7pcvR8NrP96dTtjpIBgSOzRZn/IDmVKVzbbmBYHWBNpKesaKCrbS1cUSM4NWH5yA0kiei4Ykwfl
+YIEyJI5IFzXUygLVfFNzau1Uvg2JHrjt7q24SKbovzBse3HMVt8xF4dBPJF7Fb1IQzSJWGoJ0BPo
+1n/Ht5iIQleYH/RAIQGlmiudPMPRoS4yhZ6s4tsSX9NeSSCQv/e8h8voMkKGCpr0VsqPJj1MDyLE
+RQnFBT2BKP01VWlJdQM5BTPoE/JkMVCAocfvlPaW/J5tAHffz+XEJ82L4f5VCxetG0/wgv4mj8Db
+TsevoR+9aW/aSvr5dQRw5UWc3wl2uCrXEC4EfQ1uSLF54RqiaW7odxjeOWsIuZ0bqlXAF8CB6zJL
+6HYwqPKEY3oqKyLiduA605/y5Hd6KuV2UL98bQ15mioG9GRoQH47yPpwIiZPq1kJu/TU3O3Ap71a
+n9cO7AbIC2MgFK08bRc9scYGns/D7D2KgfK0mukJ3O1gfWS+lCeCpidR/nZAjvK0BvSE0pSV8sSp
+6QlsAihUecJu6ambtcep8nRGT3VkeHpHxqouuN8u4Uur6NrAyVRsRz34MEZoJ+3VXAYh2NFha5XG
+NLqHPs4+ehq9XqmgBpV0gyfUnBNslOfKTa6SyeWDnIR2Ffd05TYL0ej3O/r+MJGN9VwUiK7R9XhQ
+7RIAuiSHSg5IPckSl75fSP1TArHSzyjSs2Zw2ECFF8vL4qAiqxWmUwMjocH051nlCIDtNkwnIwRt
+XQvRU6Sfh38m2jCsbLRQbGhnnKH2P4nZITaquv5s/Kr+GCYLqKhDA0BnKAyPdec4oBWosoKEnTG1
+qLyes/Q148zCeWqN9lGJQLMJUhM/pEAl4jIz5lZvFVirTVhbQ+GWk9zHYJsWyzF2YnrGfGJ1a67x
+jIgjkYHlGpGRMWUmgotwQSi97q6j3zCKocAy06htCPNlSU41jWSOCy0ZFiYRaU7OlyHsZP51WLvK
+QYr5W5F3ENdDv8sNYJqNqkgAZu9ikOGFtBnmk3Kx5XwBuI6BqeqLo+yGOkoP3iiVA/5+d/JDEer8
+796GZLrgOzXM9WXpJBaRQj6h3yXe3MDsM1b4rUrZge4DqarEfoz0/Do8+12KQNw4qksKIEWAjbew
+nuXv9opOD++jwNith4+AnwhQWCXfcEZVx15U04jEnmy5M2+9aiGrkzZtCxzn/NTXJXZz+jg22U5j
+O0Ii9YsAgG39lhbnTXc/hwSWnF+br05GcslLS5OE2xlAm5NQbwR+TYUjXHd6lnI9MyjcfE5cJYN+
+d9H0KRYdASrcPBflqppZutaeZBkaZHtSn16H1Z+sbq4rpDcj0j8gT1pD56senzY2hs5F6syv7hj/
+QYVS4GdoHZq2bk93uiu9zJspzdgld2TdErtVZIxdogz7tvFPPXJIMmKijtRhBBtj90qJXfYXMRq7
+SAmuxJ72JXZRsLFLeJowsYvkgy9jt8fg0jmxa4iNXWp/j5HYXboVd4zx/jKxW3lzxaexa+Yav4nd
+X9LYbc+C5o+zMXZRJHaJ6xUl8c+g8ZH0tjHAFzs48mMd2vkZpCXqOnRGlAnsCebL34VV6HCuszAw
+zQzcNIZH+TtIrhA7r9a1cW/Ro5Atg6Jn8yo5MsH0ZMWYICqcfde1PkZg0ElhNyjlLwvYkxwwmQxK
+UxnCIOkByWs6w/XvlO51JP2YvMHNAnu5LyKZ3JeB3qu4VNmmjCTiiYkaEDQWety/RvqqSlZ39hIr
+93TaqZI7gc2y7PjobJXbLKa7elPKwUuyhLe6w6k7JbLFRU0WOgmIuxFzlZ/n60q2nLvcS4z7n9kC
+E2p6ue5vaoiNIqo6Cm18OKUzRmhaijarcatfUirFeKBkrqVNWs3LhUmosbCiljVUbVWXNeCDYVmk
+x9FLDXVLO+tFPZlVUWtn/4iUxydT3YrHgDCL7h/QIsM12Si81F0k5xtJDQtZTvnceKFOmNbglK/Z
+3naA8sVs6CPRXaw828d+VZjqTu9uw3N++vO5wbxO4mujsWnt/4ARZdg5E80MDq0fWVxYOwC4JrgV
+YEmuJUly8rnxL39BYwLjm5+6ulqyIjch/cOh4S+6IkvKhEsMsQ6IU3b7tirlwppgLlrdUD413VgC
+TfB0RQM5J9zfHTkEh+bzlc2H3FAqQGbks6Cou+HuhxXl6WGmZkYv3Z7q/8iKZgTtbmr9QbUqoxiB
+ix+cuiMt2yjUAQ7wcYbx3F0ctFyXLqEBy1l4Vx/MEy+bg2qPTQNn2nyDJGHTKAmZ7m5rBRs8S5y0
+WYTkzkZlesZoujsa8Lb4pLx392nNiSWiLYAE7u7yoMA8tYENqVbsjmwumQrvmR+VDd1NlQ+89V/a
+N1oUL12bCC3W6fHBt5ZbvN2sgWnbqH7QVLIqnqTjMD1UuM2YzipXLR0pvkcfghi9Emh7jQgfHzIp
+UTZF5G1GyNIJHbWdZaC8TvSr6yTgmkRdGAxHL5QevQsfK30Zj/8qsiZr2p6b2+MjkaLJQ4Mn1na2
+He4sTQxwNrKJozXwBIuvtmcKWIapwzDA1MWnEkGPMT5xHKPHOOffO/+jvtMMvj1krVgB/aG1pgmL
+7OBgd7L1+1y5B9cIjAOunbwp4GDzayaCIjF9S8jJCumiFEk5ItiGCIkoWnaeFsw2MModRLMasW5y
+STNlSbFQomKUqDOYIkONiHISEIliEdpgxZBYOt4UMxVxWKIDOQYpMIm8+ElYorg8JiwXH3g2HMo/
+uwdPhCrgsVWJZxfAT6coinIVTdMWaV0Ds1x6RFL9TBeE6gm2JM/sUMt0UnRZWIkpnYiKJ9e27Zx5
+MilZSNAl874W+fNkLj98nC9jJwj5cI9CKik7QZvKH01IswgilVWP8/hxlezPBrM0DSL1gy1QsreZ
+LiKAOsEy0KCm8QRItw+PCRkwD1XtiGWgxwXb4IJaHI5l6gEju8X5RnPEgX1V3qF1leMebhUd4TjO
+eIJP1rGksJ6SBFL3MLZcsmGSg3Wu5Ebl2lTXt7wmHLJCbfnpZzgdeTbajJuBxOY51LbMQ5Y388ui
+n88Xt/3WLGdCPvpZWMxG5NcRqU4GEkNLmCow2Pbjyo5Qm/X7EOLHxFrA4dix877samo+NO3Rt2Jl
+nhLq+E2Jc9dfNjtCP8jan93+F+y0ORi3Ab9ssWI8RZb2AzSs2E6DuUsk6j7R6MExhddCyqMYK/02
+2+qYiWL4cUigDnONLr8BBWcpNkIlcRmCcMRIYjIqJ+KIaluNcFWuupIbDTcq1lijDmJTV6aQLbSo
+O23Mln18b2pppnTFq7qCoW/hbaAOEFUOF9FcPRVL32Y9IAvddDUmU3Gooasx3Fyx2a8CRcbOtSc8
+w7wkdtUfJhQ++00xoKW+wyP0i6Dt76Oi6DQwwvSrTfx1VDjHAwx+jmofLrlTFGviIV1z9YknAcmV
+cOU7MkQkEjAUABTOOlHATUHzeqNeorTrxwf2XLDArp58RyV1x949sNDmH6BBUjm4pSZd1o7aTN+z
+X+3Cs3R2FUAqDnjLlAaO3TAWhhBREI0maZc/53e7Qfi3mLDdhX8K1tkxtKXv2WJ+h5zbfp3+23Df
+RtYeFlp8e7e31XbkKRLt583IrKvyX1gvBlqFnTpAXn2W7BMGbCAIJ3HkrjDaAyUXf8P4srSVLgJF
+rpMXdFhrkUVnpy+KUWjIeALNeF2sPhjr/kmSU5jX0UprG6IRM+oBHB+Mlf5x4ZqkLOhrkaxy8bPP
+JC00QxJxkXTCs0eyz0PXUjb55McHnyPxfpCePdFy8J6n5RU51rC6rI1nbPbordEO5a15SQLhZ9ob
+kGpTQyWZRmFSFi2eKmnWKZjeK+XJ6sETgy67rNfWcaIMipjRjIiVXEfqDtKltUwhqd1idVplCkfA
+der/W5HaYKnnitXCtKDkO4w+rWo4RZS3Djh5dUrYRA2eLlQ0bZMNE0FArQlrfLa3K3EM58Iddqwf
+xt7KCdm38tFc0SFNZbhJ2q/ZdaixLEHDFmB7x11yMEcbMMDiaRcXkJs68sjKF0vt+pQlR7lu5o0/
+7e+pT+L4LfJxiZAsXF1qQbRM6rbp2LhxZ3NL/6azY07HNoEtEnyUDICEGyPfu542WBRISYGT7QAW
+7fg8SfAWMUXuBWUwXiVKBUUNVlGp7afATdRVMB03rIuNm7v336/lCiBmZGDavmVVH7inF7UbPAXN
+5IxkFhrVNIR55eCLm7LZsHWmatKzVy3Sop1Kh4cesIBKfJj4Vgj5JiM3qodAuN/gVHN5S0Xw2RU0
+UZdfqT+9JA3wUvSf8ITXKcu/WBRW3kFm4EuZGVZbIZaqnaVG8oS8gHK8a2Wyw4+uWkw18luahvOM
+9VR4elqcAaCAFgCHYKLdoblf11D7TyIjMtEGxAKuYxHNDSGtNljdHs12bihEl9XvK5Tg0Wey6Np6
+dR+t142prZfOUG6g9dJjtl4NAYdEN0QMpei/l/xf0UP6L/pue4iXrJajCuxKVk53nDRTmxr2PvaS
+3D7YXbMBoMp5Kd7sqYhZZEvbfMDACnynJydP5Sr1oUvDffCQVgpK1rJc47bnrZ6DHaUUnmMuLkuD
+0klBBat+MzPm7UL1p7BEG88yUgbjmo+UNyU5dSQEeODvAhOVuGre9WPcJDlVBbbexi2ODZJmbNdG
+ElHIrf5cQztyO4C3EuIlNvU9O8OUUT4idqxgRRG+vKMWuDD9f4RJIMMc1euZKmV+gozRRkRIEgBK
+jBT0E85VQCYsOP+2SNwI1W0tXQpXcJ+sU/tITUGTy9AE+J5K4fdTLdrNm/7bEaQ9GqtdUWToTde1
+q/tLPArDxpyCkPDK63W609qqM47TFg8wWsCh/4prQovQpflOsuCT30CMTDucfGMDSAGSoQ7CuNj5
+wa73PO6rL2Z9CMxndsFsmtCv/wShmepTczic0C2noVWT8jtlUjYsFMz++Rf/ZOpEUhAADv4EIAg3
+IA+wHHWArL/6owTKHZA9cSrdAFWsxAnvnwk74Y8ruTvu3yxbSs7cL9DoTnc0sRJQZ+KoYGj7SZ4y
+sg1XVL9nKatH1ETkrehsNTBKdcUrIlNrE+rgA3iHb96y1O5d3IWusitD47JFQankCdwy3LEPPKQT
+DovpLzxInUKxS3xs+B/xQlty7xTVp9MCoVBRo0ypduIkpDwytzUAScCfnEYGXd2lNEuRzTRvYCv/
+AFsJJTes8AMKRs7CKS6Cckr2RNn0ZjmDQYlH4do9FA0l1VVGQrFFzpyEO3H5JKq4MxMuLLjeM1aq
+X5frQr9QnumYOYzcAH2QqpW8dx9X+pn6w53t2OggwtI+vKTQyH2dnJdNiJdRSENB/rBz/k2NEiyG
+vZVSHlELlP0YxpJEPYXFS4O7RjAQoVyrAbku8hBk3vq+GFBSxJW27ptDDCRwey5Bm0flk94GqjNP
+Nf19EqSIJ47E/89k6ARZ/aj0FlQUZN1glExldZaAgMMtuxpMjlkISrZ8h4xnIyJLTokhMDyo7ImP
+Ig0YaZyB9YdH1FwUWxF4KM0I3MyZZA64WhOlCGh/QnGRhe5TbJGed03pHMu5yurJcsdA7XwpNkUS
+3T9YuUb6b2umXLYZ0JmLF+JICq1H4P4bR83KLLGT3x/xzckEVXP0PpLDAouVflkmHBXx8oXqyW+S
+9hI4jPoo8LCJOsSnzKbwP7wFM2IfRKAmE9tQUCiPtQ1R/iMqwrAXDJ29QJCaPUhGi7GVSUlMZsDY
+QIKAkJNumTGuVuoQOwWbqlXtMyLrwlkwcwJu6U7Gx/2Y6g0r1v/UtxUlaeHsz37yqqADRQw/8B2k
+kINFGfiDDy+QYaTW5WbHQXAVguRScrRHX3DqUbbCADdJoJ+eOa2wzSeAFCL9FlsTwyvJFQgunaIr
+W7APNGTiGUtyLbJEows7GLm32oyKW04OmShF4r4Nwok6H+iiRUjWFYYPbxZB/sdiFOCcdY7HBB83
+Zlqe9lTPf9y1BUasIAR94TOojtRchLR8X56Vxz5vLnMlMsZjRBKIQ7y07vOYVVN6WjZiqeH67KvU
+zpI8d2qqEw9v9B9sMzux56cDmWi6oQv9X3V7E9bosSmCAbkKz2bVIAtnUGEfYJpfbAfdlYhzqydm
++siEMUKDZIJU3mnXCdYXfV6U64zj1xjMQ3Nc/JBjEMKswai6Ja5dXpqB6VlCjqM/MFNddGdMWDeP
+idY93mU8vSilrLFpdZbrH59UhnHwy1fQx8b74EKFO/Po+aaOFd/NX277ONHuPIrLXhL/G4ohUt1s
+9crBEkReV8d1PzuzUxrfh1AzBaJx4TqQPGqEGLoZ44HAWONVwxVwR7lq72BG6k3XUC4VnG5BfHOp
+Hjpas3QlD1hLRGHuCkOTDFS5WRBBEZ8QGNxPM8uGx5DEsHL/XhKGGVEWw2G/fc+EES0csz3yv6fU
+cqa90bOV2bR/KF5afPF3ue00d8gQak1lZEyT0Yv7KTQk2x7yAxIegCzuw1J0I6Ww1JQG+4mQhcQt
+G3a/COSfGU6TRnBylICKBUhdEFvCEXYApGtO5TTiAB9Rsmvd7WXBK/DMPk16giftMj8XLk1amSl/
+J8JCQBlDvPhJqt4U3/yPNg/fPwT/w9x8v+/+ASMjQ8HcAWNt0Ve7xxuJdmfQqfBOgzHl1xybmLUw
+/bqO4KGqDwwJnVm+WzeU9EXvPUxqReE9Aur6B/InmvPTpsqJ9QklNrjUlroH6GMakjFRTBpj7i49
+5syqaSXidVjeEr0QWXcoMhW0OFkJQUmioC9aUHUd+CqIS4z/AzKPbvM/kmrntRdUf8besSJr3m9K
+s+4aA0ACMlnrgtrCQtaduI1V5dNKHosSIQ2hP7yRFypiw//uuhugW7RI3PB2u3SPp5zN0okKaKOm
+4e51iaelkBlRTmUa4S0P5isXAwgKSmGkb9w9hJavkKkiovZI3IypFRlP6RbBe28iOOo9S4IeDM/E
+sZLu3gTeR+1SRq9EdxMa3mOHL1xlSxy7Tx0uNxdXxUcitLvJhF0bN8fpSbsJbidCf+3u7y7RWA/a
+sL7tw20o0PYH2CYLHbeVwyD+5SrNzqVtIVrE32asP8+KuoZYRZf3aHa/ggS0OfkBo22dQoKyL3uF
+rk0G/lXV24vvmrbp5rZ6K0jhZqZvPabtEdV0tAGlyU75FiyAnNv33Ig+07boUIAruV7PKz0fCKbM
+l9qmaTWoKkF+g04Tt9d2XC+WwugcDBK6+cKjj9q+2HCbKrEJnHYmGxT/5Ak4Nl3++Ehg6THVY+em
+uj1JjnD2Ck4ziX+Y7tgcsh9Q5AZHknt/CL5aC0PGu5nTyNROVjp4ZH2YTnlDDEQBWrQVGEhdq14P
+AHkf3rsz79YbYH4V0MyGCRxCe3S8aR+icUPeGg8pzWAJxMlusYQuzz7+CFoIx7sbEniJrZoVoVSe
+/Rh1DUhL9TJBOIzVzGh7ZaDFtqzfB9UkZjbyPEkfS8Ie4kmtzpsntOejRzVI9GWXC+7H8YHrfdTj
+bRM32z461Iyw02Q6taM5gh0iHzJfPpi5+urO/NY1uhWjb9I8A9Qjdzf5kqycZNUNPdzxRJE1Kddy
+oYiXjjTY0f51vPrrpDja6CgbspIV31a6rJ6Y8fP+j9Z0nIUx9z7Y/IQnMjdkDKrBAlnJ3yOvR821
+T3WKyWEUBanTkpg14ut6cFNiAUeRyCb1kNjiMBZCdlO8qBczJ2vjOlKO/hgymb41NrX+WG1EKThr
+/J2eSoRegP4gmHojrb1BFAo5MhlpiLjQFnHzYLR0ktEzm3U7dn+J45X3Ci2oHBQdYEpDVYdkYPZO
+MW//Yfo/j7ZPheJH+1VESLtbeWZk+JN0OZgMje2okdScJK1NHfpZa89dkTNsZYgkCU7Snc5F6txE
+P3kceVFW/fyNLtU+6YzCQpzOPaTU2FgvarlkWRBkI741Yzzqjk8d1TBbsPhGaHaiunYAULwzctrd
+cUu7bSxhVOwdsYyKHSln36vnHHOCHD0jfR/hr58ze97IzP7noUhhDOLyGYnUqO9c9vSFv6akj6rx
+imKBQvsuDaNXqmLNd5SOcybq6/g91Z6eq/z4Dx6aRDU0jDHmjsEoQ4TXUQqMAc+1DcSNNr1wAiTk
+A7m2b8/l1g0ruHuoogpXWpRlNHFO3iL80Dn6nsz3yU2yLwfQs/RLLzseDaI5qgCgOSkdah8lenkX
+Q28CQMu7sWJ/ZNaNzPxRljAI7k8b7K8Ju5+pf14U66hOVWggcp1IxhASvsi1A6ztSa5Pe+dYmzz2
+2ybbj2hATBMMzP5K7hWu3Ud+4Ksk0p801Lg2M2gbsJ28DAOrESh3AbKiyOsPoYvSlesPkLb1CU7h
+Fc2uRl/ftkDBxkAeO+mVbUbrRTqK4INXbbNcD3iLa9a8hs0CSUfI66B5hmFpK56dC3RBln9H7sd3
+Skn1rEMY/SCob0YJHo5r16Y2TRxysYzjdL+7yHmWYI+SktN6zDTsy4wJYCZL+zgBLj3CqQ7pVeXf
+6LmpG5LaWrZa0nVxm/gNfwiJ0mVD+aKjttO4gTe2sWLQmbbGpnyezWGbvNdHu1CIiWnRF3pbnquv
+RBIGJqLBgLn6DGwyE6K60mmpcWgOr3R1OO8dOFuyrsOzc1hbUcuid4ZqeaFpahukN7zef4xpGisZ
+0i+XjCxSZ1TZFlkoMYy2EMq0801r6Q42hLdJlYhsNzpYonofTtb2kIgfazjltr5vbUiXhDYdyAcB
+y1Kz9F5HfLNakiXlUgN20mY96P90SHaPvLyv96y7MHAcLLYVNJBD9+YjWrELWuZ8RroiJIajLTdK
+52RpUeNzJ2LVR3tY0fTk2aoKRv7HPmweBi59UpH3J64Ip5UHVg284f+iti3gll3b9qVf8ZA5I5U/
+ARQUZ7f0eSVwL96lbs4gqcp+EjpNREuRnza2nLOxNOYMxzbNAaTZNYyrLa80RoYcAKL1yjwteAeE
+epvC2he6d3UAVfQ6hP9otUiKk/OyGa/kOMxkSjzRW21l+2T1VZXKeIMjlEIdfn1hwKUEUPro/kSZ
+1joSavyTb7NMjHNmfM3VqvZzoYcK5lBCPuhhN0NKwhcmDEjBXPw+vMwV6SY/rXgqMz0i3Er7bNCB
+KDjPFq69YuIinrFRxiEDPe+30JR3jEjFsmfeoOVDXi/LiVk8yvNL3HYsG0Wp5Lj8O8zZsPxv4Bcm
+JBQzMKgxBO6GcGl7hiOIoI6RE7RNdqy+HzkmfjgrfC9UtS54lykEQC9xrB7J9g2XShARSjXlk4g2
+Qgp6Gr79GFLheLy25iMuxnVELAoDn0Y8pQ7N6YonCRqnv0vOYCAmihK7Rs5eYGbVFMIRT96XMbRX
+EQYinsiOeeysUEFkqSM+E6xOyzx7roJ8sWA68LYjGlI8LaxyOgbxxJAdoa9K9LwavCBrUFfE1TpT
+O1oAAWPYhU3/n001CA4VwP22UgHOth1eDS7qYo/+KI2KYsvtrgMkgJqSLmzdJf7LjOLofraNjJ46
+2fEGyHuzICxUsaHszgqwThbzlsLnkkhwgYgXr56vABxWv1IsOA1kFSPplWYQYzDbUDGo9yqA/cUc
+lp3ulYiEoRFuCnJ8Bh5z3PjhMCHOu0J6QkXLggiOyYOSOm8rdydBvaPF07iQ5wGSX6iVjMtlRq9y
+I/2b5lqZrCTq9JSmNURzZVtf/Qq6hKiD0P0dUlSEPaQOMrOMOU/EouWS4gHnMBGbB6x+aMB8lMei
+ndsg5XQG1HB96F+D1Msw4wiorLJiG2f3vzhZWyf56Lzihcn/YH8sZBV7/OQi6rRpzFNcokLBTXO/
+RqS/Bk5VeAKvukszdqb3ncdZAOxlJOwpE9FBG3sB
+]]>
+    </i:aipgf>
+  </metadata>
+</svg>
\ No newline at end of file
diff --git a/apps/web-researcherry/public/android-chrome-192x192.png b/apps/web-researcherry/public/android-chrome-192x192.png
new file mode 100644
index 000000000..04363a3e8
Binary files /dev/null and b/apps/web-researcherry/public/android-chrome-192x192.png differ
diff --git a/apps/web-researcherry/public/android-chrome-512x512.png b/apps/web-researcherry/public/android-chrome-512x512.png
new file mode 100644
index 000000000..582c0b7d1
Binary files /dev/null and b/apps/web-researcherry/public/android-chrome-512x512.png differ
diff --git a/apps/web-researcherry/public/apple-touch-icon.png b/apps/web-researcherry/public/apple-touch-icon.png
new file mode 100644
index 000000000..5dfc8723e
Binary files /dev/null and b/apps/web-researcherry/public/apple-touch-icon.png differ
diff --git a/apps/web-researcherry/public/favicon-16x16.png b/apps/web-researcherry/public/favicon-16x16.png
new file mode 100644
index 000000000..33f1ed8ef
Binary files /dev/null and b/apps/web-researcherry/public/favicon-16x16.png differ
diff --git a/apps/web-researcherry/public/favicon-32x32.png b/apps/web-researcherry/public/favicon-32x32.png
new file mode 100644
index 000000000..526f8317d
Binary files /dev/null and b/apps/web-researcherry/public/favicon-32x32.png differ
diff --git a/apps/web-researcherry/public/favicon.ico b/apps/web-researcherry/public/favicon.ico
new file mode 100644
index 000000000..b739db10d
Binary files /dev/null and b/apps/web-researcherry/public/favicon.ico differ
diff --git a/apps/web-researcherry/public/placeholder.svg b/apps/web-researcherry/public/placeholder.svg
new file mode 100644
index 000000000..e763910b2
--- /dev/null
+++ b/apps/web-researcherry/public/placeholder.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="1200" fill="none"><rect width="1200" height="1200" fill="#EAEAEA" rx="3"/><g opacity=".5"><g opacity=".5"><path fill="#FAFAFA" d="M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z"/><path stroke="#C9C9C9" stroke-width="2.418" d="M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z"/></g><path stroke="url(#a)" stroke-width="2.418" d="M0-1.209h553.581" transform="scale(1 -1) rotate(45 1163.11 91.165)"/><path stroke="url(#b)" stroke-width="2.418" d="M404.846 598.671h391.726"/><path stroke="url(#c)" stroke-width="2.418" d="M599.5 795.742V404.017"/><path stroke="url(#d)" stroke-width="2.418" d="m795.717 796.597-391.441-391.44"/><path fill="#fff" d="M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z"/><g clip-path="url(#e)"><path fill="#666" fill-rule="evenodd" d="M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z" clip-rule="evenodd"/></g><path stroke="#C9C9C9" stroke-width="2.418" d="M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z"/></g><defs><linearGradient id="a" x1="554.061" x2="-.48" y1=".083" y2=".087" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="b" x1="796.912" x2="404.507" y1="599.963" y2="599.965" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="c" x1="600.792" x2="600.794" y1="403.677" y2="796.082" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="d" x1="404.85" x2="796.972" y1="403.903" y2="796.02" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><clipPath id="e"><path fill="#fff" d="M581.364 580.535h38.689v38.689h-38.689z"/></clipPath></defs></svg>
\ No newline at end of file
diff --git a/apps/web-researcherry/public/placeholder_pfp.png b/apps/web-researcherry/public/placeholder_pfp.png
new file mode 100644
index 000000000..f8b690afb
Binary files /dev/null and b/apps/web-researcherry/public/placeholder_pfp.png differ
diff --git a/apps/web-researcherry/src/actions/evals.ts b/apps/web-researcherry/src/actions/evals.ts
new file mode 100644
index 000000000..b930be9d2
--- /dev/null
+++ b/apps/web-researcherry/src/actions/evals.ts
@@ -0,0 +1,29 @@
+"use server"
+
+import { getModelId, researcherryCoderSettingsSchema } from "@researcherry/types"
+import { getRuns, getLanguageScores } from "@researcherry/evals"
+
+import { formatScore } from "@/lib"
+
+export async function getEvalRuns() {
+	const languageScores = await getLanguageScores()
+
+	const runs = (await getRuns())
+		.filter((run) => !!run.taskMetrics)
+		.filter(({ settings }) => researcherryCoderSettingsSchema.safeParse(settings).success)
+		.sort((a, b) => b.passed - a.passed)
+		.map((run) => {
+			const settings = researcherryCoderSettingsSchema.parse(run.settings)
+
+			return {
+				...run,
+				label: run.description || run.model,
+				score: formatScore(run.passed / (run.passed + run.failed)),
+				languageScores: languageScores[run.id],
+				taskMetrics: run.taskMetrics!,
+				modelId: getModelId(settings),
+			}
+		})
+
+	return runs
+}
diff --git a/apps/web-researcherry/src/app/enterprise/page.tsx b/apps/web-researcherry/src/app/enterprise/page.tsx
new file mode 100644
index 000000000..d8fec0a7c
--- /dev/null
+++ b/apps/web-researcherry/src/app/enterprise/page.tsx
@@ -0,0 +1,510 @@
+import { Code, CheckCircle, Shield, Zap, Workflow, Lock, ArrowRight, DollarSign, Search, Network } from "lucide-react"
+
+import { Button } from "@/components/ui"
+import { AnimatedText } from "@/components/animated-text"
+import { AnimatedBackground } from "@/components/homepage"
+import { ContactForm } from "@/components/enterprise/contact-form"
+import { EXTERNAL_LINKS } from "@/lib/constants"
+
+export default async function Enterprise() {
+	return (
+		<>
+			{/* Hero Section */}
+			<section className="relative flex h-[calc(100vh-theme(spacing.12))] items-center overflow-hidden">
+				<AnimatedBackground />
+				<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="grid gap-8 md:gap-12 lg:grid-cols-2 lg:gap-16">
+						<div className="flex flex-col justify-center space-y-6 sm:space-y-8">
+							<div>
+								<h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl lg:text-6xl">
+									<span className="block">Researcherry Coder Cloud for</span>
+									<AnimatedText className="bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
+										Enterprise
+									</AnimatedText>
+								</h1>
+								<p className="mt-4 max-w-md text-base text-muted-foreground sm:mt-6 sm:text-lg">
+									The{" "}
+									<AnimatedText className="bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
+										control-plane
+									</AnimatedText>{" "}
+									for AI-powered software development. Gain visibility, governance, and control over
+									your AI coding initiatives.
+								</p>
+							</div>
+							<div className="flex flex-col space-y-3 sm:flex-row sm:space-x-4 sm:space-y-0">
+								<Button
+									size="lg"
+									className="w-full bg-black text-white hover:bg-gray-800 hover:shadow-lg hover:shadow-black/20 dark:bg-white dark:text-black dark:hover:bg-gray-200 dark:hover:shadow-white/20 transition-all duration-300 sm:w-auto"
+									asChild>
+									<a href="#contact" className="flex w-full items-center justify-center">
+										Request a Demo
+										<ArrowRight className="ml-2 h-4 w-4" />
+									</a>
+								</Button>
+								<Button
+									variant="outline"
+									size="lg"
+									className="w-full sm:w-auto bg-white/20 dark:bg-white/10 backdrop-blur-sm border border-black/40 dark:border-white/30 hover:border-blue-400 hover:bg-white/30 dark:hover:bg-white/20 hover:shadow-[0_0_20px_rgba(59,130,246,0.5)] transition-all duration-300">
+									<a href="#benefits" className="flex w-full items-center justify-center">
+										Why Researcherry Coder
+									</a>
+								</Button>
+							</div>
+						</div>
+						<div className="relative mt-8 flex items-center justify-center lg:mt-0">
+							<div className="absolute inset-0 flex items-center justify-center">
+								<div className="h-[250px] w-[250px] rounded-full bg-blue-500/20 blur-[100px] sm:h-[300px] sm:w-[300px] md:h-[350px] md:w-[350px]" />
+							</div>
+							<div className="relative z-10 rounded-lg border border-border bg-card p-6 shadow-lg">
+								<div className="mb-4 flex items-center space-x-2">
+									<Code className="h-6 w-6 text-blue-400" />
+									<h3 className="text-lg font-semibold">Researcherry Coder Cloud Control-Plane</h3>
+								</div>
+								<p className="mb-4 text-sm text-muted-foreground">
+									A unified control system for managing Researcherry Coder across your organization, with the
+									flexibility to extend governance to your broader AI toolkit.
+								</p>
+								<div className="space-y-2">
+									<div className="flex items-center space-x-2">
+										<CheckCircle className="h-4 w-4 text-green-400" />
+										<span className="text-sm">Centralized Researcherry Coder management</span>
+									</div>
+									<div className="flex items-center space-x-2">
+										<CheckCircle className="h-4 w-4 text-green-400" />
+										<span className="text-sm">Real-time usage visibility</span>
+									</div>
+									<div className="flex items-center space-x-2">
+										<CheckCircle className="h-4 w-4 text-green-400" />
+										<span className="text-sm">Enterprise policy enforcement</span>
+									</div>
+									<div className="flex items-center space-x-2">
+										<CheckCircle className="h-4 w-4 text-green-400" />
+										<span className="text-sm">Extensible to other AI tools</span>
+									</div>
+								</div>
+							</div>
+						</div>
+					</div>
+				</div>
+			</section>
+
+			{/* Key Messaging Sections */}
+			<section id="benefits" className="bg-secondary/50 py-16">
+				<div className="container mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="mb-12 text-center">
+						<h2 className="text-3xl font-bold tracking-tight sm:text-4xl">
+							Take Control of Your AI Development
+						</h2>
+						<p className="mx-auto mt-4 max-w-2xl text-lg text-muted-foreground">
+							Researcherry Code Cloud provides enterprise-grade control and visibility for Researcherry Code
+							deployments, with an extensible architecture for your evolving AI strategy.
+						</p>
+					</div>
+
+					<div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
+						{/* Card 1 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<Network className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">Centralized AI Management Hub</h3>
+							<p className="text-muted-foreground">
+								Manage Researcherry Code deployments enterprise-wide, with an extensible platform ready for
+								your broader AI ecosystem.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Centralized token management</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Multi-model support for Roo</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Extensible architecture</span>
+								</li>
+							</ul>
+						</div>
+
+						{/* Card 2 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<Search className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">Real-Time Usage Visibility</h3>
+							<p className="text-muted-foreground">
+								Track Researcherry Code usage across teams with detailed analytics and cost attribution.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Token consumption tracking</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Cost attribution by team</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>AI adoption insights</span>
+								</li>
+							</ul>
+						</div>
+
+						{/* Card 3 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<Shield className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">Enterprise-Grade Governance</h3>
+							<p className="text-muted-foreground">
+								Implement security policies for Researcherry Code that align with your enterprise AI governance
+								framework.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Model allow-lists</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Data residency controls</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Audit trail compliance</span>
+								</li>
+							</ul>
+						</div>
+
+						{/* Card 4 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<Workflow className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">5-Minute Control-Plane Setup</h3>
+							<p className="text-muted-foreground">
+								Deploy your Researcherry Code control-plane instantly with our SaaS solution. No infrastructure
+								required.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Instant deployment</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>SAML/SCIM integration</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>REST API access</span>
+								</li>
+							</ul>
+						</div>
+
+						{/* Card 5 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<DollarSign className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">Manage AI Development Costs</h3>
+							<p className="text-muted-foreground">
+								Track and control Researcherry Code costs with detailed analytics and budget controls.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Unified cost visibility</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Department chargebacks</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Usage optimization</span>
+								</li>
+							</ul>
+						</div>
+
+						{/* Card 6 */}
+						<div className="rounded-lg border border-border bg-card p-6 shadow-sm transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:border-blue-400/50 dark:hover:shadow-blue-400/10">
+							<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+								<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+									<Zap className="h-6 w-6 text-white" />
+								</div>
+							</div>
+							<h3 className="mb-2 text-xl font-bold">Zero Friction for Developers</h3>
+							<p className="text-muted-foreground">
+								Developers get seamless Researcherry Code access while you maintain governance and visibility.
+							</p>
+							<ul className="mt-4 space-y-2">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Automatic token refresh</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>Local sidecar architecture</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 shrink-0 text-green-500" />
+									<span>No workflow disruption</span>
+								</li>
+							</ul>
+						</div>
+					</div>
+				</div>
+			</section>
+
+			{/* Differentiator Section */}
+			<section className="py-16">
+				<div className="container mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="mb-12 text-center">
+						<h2 className="text-3xl font-bold tracking-tight sm:text-4xl">Why You Need a Control-Plane</h2>
+						<p className="mx-auto mt-4 max-w-2xl text-lg text-muted-foreground">
+							See how Researcherry Code Cloud brings enterprise control to AI-powered development.
+						</p>
+					</div>
+
+					<div className="grid gap-8 md:grid-cols-2">
+						<div className="rounded-lg border border-border bg-card p-8 shadow-sm">
+							<h3 className="mb-4 text-2xl font-bold">Current State: AI Tool Sprawl</h3>
+							<ul className="space-y-3">
+								<li className="flex items-start">
+									<svg
+										className="mr-2 mt-0.5 h-5 w-5 text-red-500"
+										fill="none"
+										viewBox="0 0 24 24"
+										stroke="currentColor">
+										<path
+											strokeLinecap="round"
+											strokeLinejoin="round"
+											strokeWidth={2}
+											d="M6 18L18 6M6 6l12 12"
+										/>
+									</svg>
+									<span>Researcherry Code tokens managed individually by developers</span>
+								</li>
+								<li className="flex items-start">
+									<svg
+										className="mr-2 mt-0.5 h-5 w-5 text-red-500"
+										fill="none"
+										viewBox="0 0 24 24"
+										stroke="currentColor">
+										<path
+											strokeLinecap="round"
+											strokeLinejoin="round"
+											strokeWidth={2}
+											d="M6 18L18 6M6 6l12 12"
+										/>
+									</svg>
+									<span>No visibility into AI tool usage or costs</span>
+								</li>
+								<li className="flex items-start">
+									<svg
+										className="mr-2 mt-0.5 h-5 w-5 text-red-500"
+										fill="none"
+										viewBox="0 0 24 24"
+										stroke="currentColor">
+										<path
+											strokeLinecap="round"
+											strokeLinejoin="round"
+											strokeWidth={2}
+											d="M6 18L18 6M6 6l12 12"
+										/>
+									</svg>
+									<span>Inconsistent security practices</span>
+								</li>
+								<li className="flex items-start">
+									<svg
+										className="mr-2 mt-0.5 h-5 w-5 text-red-500"
+										fill="none"
+										viewBox="0 0 24 24"
+										stroke="currentColor">
+										<path
+											strokeLinecap="round"
+											strokeLinejoin="round"
+											strokeWidth={2}
+											d="M6 18L18 6M6 6l12 12"
+										/>
+									</svg>
+									<span>Shadow AI spend on corporate cards</span>
+								</li>
+								<li className="flex items-start">
+									<svg
+										className="mr-2 mt-0.5 h-5 w-5 text-red-500"
+										fill="none"
+										viewBox="0 0 24 24"
+										stroke="currentColor">
+										<path
+											strokeLinecap="round"
+											strokeLinejoin="round"
+											strokeWidth={2}
+											d="M6 18L18 6M6 6l12 12"
+										/>
+									</svg>
+									<span>No centralized governance framework</span>
+								</li>
+							</ul>
+						</div>
+
+						<div className="rounded-lg border border-border bg-card p-8 shadow-sm">
+							<h3 className="mb-4 text-2xl font-bold text-blue-400">Researcherry Code Cloud Control-Plane</h3>
+							<ul className="space-y-3">
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 text-green-500" />
+									<span>Centralized Researcherry Code management dashboard</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 text-green-500" />
+									<span>Complete visibility into usage and costs</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 text-green-500" />
+									<span>Consistent policy enforcement</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 text-green-500" />
+									<span>Controlled, trackable AI investments</span>
+								</li>
+								<li className="flex items-start">
+									<CheckCircle className="mr-2 mt-0.5 h-5 w-5 text-green-500" />
+									<span>Enterprise-ready governance platform</span>
+								</li>
+							</ul>
+						</div>
+					</div>
+				</div>
+			</section>
+
+			{/* Security Hook Section */}
+			<section className="py-16">
+				<div className="container mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="rounded-lg border border-border bg-card p-8 shadow-sm">
+						<div className="grid gap-8 md:grid-cols-2 md:items-center">
+							<div>
+								<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+									<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+										<Shield className="h-6 w-6 text-white" />
+									</div>
+								</div>
+								<h3 className="mb-4 text-2xl font-bold">Enterprise-Grade Security</h3>
+								<p className="mb-6 text-muted-foreground">
+									Built with security-first principles to meet stringent enterprise requirements while
+									maintaining developer productivity.
+								</p>
+								<ul className="space-y-3">
+									<li className="flex items-center space-x-3">
+										<CheckCircle className="h-5 w-5 text-green-500" />
+										<span>SOC 2 Type I Certified with Type II in observation</span>
+									</li>
+									<li className="flex items-center space-x-3">
+										<CheckCircle className="h-5 w-5 text-green-500" />
+										<span>End-to-end encryption for all data transmission</span>
+									</li>
+									<li className="flex items-center space-x-3">
+										<CheckCircle className="h-5 w-5 text-green-500" />
+										<span>Security-first architecture with explicit permissions</span>
+									</li>
+									<li className="flex items-center space-x-3">
+										<CheckCircle className="h-5 w-5 text-green-500" />
+										<span>Complete audit trails and compliance reporting</span>
+									</li>
+									<li className="flex items-center space-x-3">
+										<CheckCircle className="h-5 w-5 text-green-500" />
+										<span>Open-source transparency for security verification</span>
+									</li>
+								</ul>
+							</div>
+							<div className="flex flex-col items-center justify-center">
+								<div className="rounded-lg border border-border bg-secondary/50 p-6 text-center">
+									<div className="mb-4 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+										<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+											<Lock className="h-8 w-8 text-white" />
+										</div>
+									</div>
+									<h4 className="mb-2 text-lg font-semibold">Security-First Design</h4>
+									<p className="mb-4 text-sm text-muted-foreground">
+										Every feature built with enterprise security requirements in mind
+									</p>
+									<Button
+										size="lg"
+										asChild
+										className="bg-black text-white hover:bg-gray-800 hover:shadow-lg hover:shadow-black/20 dark:bg-white dark:text-black dark:hover:bg-gray-200 dark:hover:shadow-white/20 transition-all duration-300">
+										<a
+											href={EXTERNAL_LINKS.SECURITY}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="flex items-center">
+											View Security Details
+											<ArrowRight className="ml-2 h-4 w-4" />
+										</a>
+									</Button>
+								</div>
+							</div>
+						</div>
+					</div>
+				</div>
+			</section>
+
+			{/* CTA Section */}
+			<section id="contact" className="relative overflow-hidden py-20 sm:py-24">
+				<div className="absolute inset-0 bg-gradient-to-b from-blue-500/5 via-cyan-500/5 to-purple-500/5 dark:from-blue-500/10 dark:via-cyan-500/10 dark:to-purple-500/10" />
+				<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="mx-auto max-w-4xl">
+						<div className="relative rounded-3xl border border-border/50 bg-gradient-to-br from-blue-500/5 via-cyan-500/5 to-purple-500/5 p-8 shadow-2xl backdrop-blur-xl dark:border-white/20 dark:bg-gradient-to-br dark:from-gray-800 dark:via-gray-900 dark:to-black dark:shadow-[0_30px_90px_rgba(255,255,255,0.15)] sm:p-12">
+							<div className="absolute inset-0 rounded-3xl bg-gradient-to-br from-blue-500/5 via-transparent to-purple-500/5 dark:bg-gradient-to-br dark:from-white/[0.05] dark:via-transparent dark:to-white/[0.03]" />
+							<div className="relative text-center">
+								<h2 className="mb-4 text-3xl font-bold tracking-tight sm:text-4xl">
+									Ready to Transform Your Development Process?
+								</h2>
+								<p className="mb-8 text-lg text-muted-foreground">
+									Join our early access program and be among the first to experience the power of Roo
+									Code Cloud for Enterprise.
+								</p>
+								<div className="grid gap-4 sm:grid-cols-2 sm:gap-6">
+									<div className="rounded-lg border border-border bg-card/80 backdrop-blur-sm p-6 text-center shadow-lg hover:shadow-xl transition-all duration-300 dark:border-white/20 dark:bg-gray-800/80 dark:hover:border-white/40 dark:hover:bg-gray-700/90 dark:hover:shadow-[0_20px_50px_rgba(255,255,255,0.2)] dark:hover:scale-[1.02]">
+										<h3 className="mb-2 text-xl font-bold">Become an Early Access Partner</h3>
+										<p className="mb-4 text-muted-foreground">
+											Collaborate in shaping Researcherry Code&apos;s enterprise solution.
+										</p>
+										<ContactForm
+											formType="early-access"
+											buttonText="Apply Now"
+											buttonClassName="bg-black text-white hover:bg-gray-800 hover:shadow-lg hover:shadow-black/20 dark:bg-white dark:text-black dark:hover:bg-gray-200 dark:hover:shadow-white/20 transition-all duration-300"
+										/>
+									</div>
+									<div className="rounded-lg border border-border bg-card/80 backdrop-blur-sm p-6 text-center shadow-lg hover:shadow-xl transition-all duration-300 dark:border-white/20 dark:bg-gray-800/80 dark:hover:border-white/40 dark:hover:bg-gray-700/90 dark:hover:shadow-[0_20px_50px_rgba(255,255,255,0.2)] dark:hover:scale-[1.02]">
+										<h3 className="mb-2 text-xl font-bold">Request a Demo</h3>
+										<p className="mb-4 text-muted-foreground">
+											See Researcherry Code&apos;s enterprise capabilities in action.
+										</p>
+										<ContactForm
+											formType="demo"
+											buttonText="Contact Us"
+											buttonClassName="bg-black text-white hover:bg-gray-800 hover:shadow-lg hover:shadow-black/20 dark:bg-white dark:text-black dark:hover:bg-gray-200 dark:hover:shadow-white/20 transition-all duration-300"
+										/>
+									</div>
+								</div>
+							</div>
+						</div>
+					</div>
+				</div>
+			</section>
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/app/evals/evals.tsx b/apps/web-researcherry/src/app/evals/evals.tsx
new file mode 100644
index 000000000..7e62f8d01
--- /dev/null
+++ b/apps/web-researcherry/src/app/evals/evals.tsx
@@ -0,0 +1,226 @@
+"use client"
+
+import { useMemo } from "react"
+import { ScatterChart, Scatter, XAxis, YAxis, Label, Customized, Cross } from "recharts"
+
+import type { TaskMetrics, Run } from "@researcherry/evals"
+
+import { formatTokens, formatCurrency, formatDuration, formatScore } from "@/lib"
+import { useOpenRouterModels } from "@/lib/hooks"
+import {
+	ChartContainer,
+	ChartTooltip,
+	ChartTooltipContent,
+	ChartConfig,
+	ChartLegend,
+	ChartLegendContent,
+	Table,
+	TableBody,
+	TableCaption,
+	TableCell,
+	TableHead,
+	TableHeader,
+	TableRow,
+} from "@/components/ui"
+
+export function Evals({
+	runs,
+}: {
+	runs: (Run & {
+		label: string
+		score: number
+		languageScores?: Record<"go" | "java" | "javascript" | "python" | "rust", number>
+		taskMetrics: TaskMetrics
+		modelId?: string
+	})[]
+}) {
+	const { data: openRouterModels } = useOpenRouterModels()
+
+	const tableData = useMemo(
+		() =>
+			runs.map((run) => ({
+				...run,
+				label: run.description || run.model,
+				score: run.score,
+				cost: run.taskMetrics.cost,
+				model: openRouterModels?.[run.modelId ?? ""],
+				modelInfo: openRouterModels?.[run.modelId ?? ""]?.modelInfo,
+			})),
+		[runs, openRouterModels],
+	)
+
+	const chartData = useMemo(() => tableData.filter(({ cost }) => cost < 100), [tableData])
+
+	const chartConfig = useMemo(
+		() => chartData.reduce((acc, run) => ({ ...acc, [run.label]: run }), {} as ChartConfig),
+		[chartData],
+	)
+
+	return (
+		<div className="mx-auto flex max-w-screen-lg flex-col gap-8 p-8">
+			<div className="flex flex-col gap-4">
+				<div>
+					Researcherry Code tests each frontier model against{" "}
+					<a href="https://github.com/RooCodeInc/Roo-Code-Evals" className="underline">
+						a suite of hundreds of exercises
+					</a>{" "}
+					across 5 programming languages with varying difficulty. These results can help you find the right
+					price-to-intelligence ratio for your use case.
+				</div>
+				<div>
+					Want to see the results for a model we haven&apos;t tested yet? Ping us in{" "}
+					<a href="https://discord.gg/roocode" className="underline">
+						Discord
+					</a>
+					.
+				</div>
+			</div>
+			<Table className="border">
+				<TableHeader>
+					<TableRow>
+						<TableHead colSpan={2} className="border-r text-center">
+							Model
+						</TableHead>
+						<TableHead colSpan={3} className="border-r text-center">
+							Metrics
+						</TableHead>
+						<TableHead colSpan={6} className="text-center">
+							Scores
+						</TableHead>
+					</TableRow>
+					<TableRow>
+						<TableHead>
+							Name
+							<div className="text-xs opacity-50">Context Window</div>
+						</TableHead>
+						<TableHead className="border-r">
+							Price
+							<div className="text-xs opacity-50">In / Out</div>
+						</TableHead>
+						<TableHead>Duration</TableHead>
+						<TableHead>
+							Tokens
+							<div className="text-xs opacity-50">In / Out</div>
+						</TableHead>
+						<TableHead className="border-r">
+							Cost
+							<div className="text-xs opacity-50">USD</div>
+						</TableHead>
+						<TableHead>
+							<i className="devicon-go-plain text-lg" title="Go" />
+						</TableHead>
+						<TableHead>
+							<i className="devicon-java-plain text-lg" title="Java" />
+						</TableHead>
+						<TableHead>
+							<i className="devicon-javascript-plain text-lg" title="JavaScript" />
+						</TableHead>
+						<TableHead>
+							<i className="devicon-python-plain text-lg" title="Python" />
+						</TableHead>
+						<TableHead>
+							<i className="devicon-rust-original text-lg" title="Rust" />
+						</TableHead>
+						<TableHead>Total</TableHead>
+					</TableRow>
+				</TableHeader>
+				<TableBody className="font-mono">
+					{tableData.map((run) => (
+						<TableRow key={run.id}>
+							<TableCell title={run.model?.description}>
+								<div className="font-sans">{run.label}</div>
+								<div className="text-xs opacity-50">
+									{formatTokens(run.modelInfo?.contextWindow ?? 0)}
+								</div>
+							</TableCell>
+							<TableCell className="border-r">
+								<div className="flex flex-row gap-2">
+									<div>{formatCurrency(run.modelInfo?.inputPrice ?? 0)}</div>
+									<div className="opacity-25">/</div>
+									<div>{formatCurrency(run.modelInfo?.outputPrice ?? 0)}</div>
+								</div>
+							</TableCell>
+							<TableCell className="font-mono">{formatDuration(run.taskMetrics.duration)}</TableCell>
+							<TableCell>
+								<div className="flex flex-row gap-2">
+									<div>{formatTokens(run.taskMetrics.tokensIn)}</div>
+									<div className="opacity-25">/</div>
+									<div>{formatTokens(run.taskMetrics.tokensOut)}</div>
+								</div>
+							</TableCell>
+							<TableCell className="border-r">{formatCurrency(run.taskMetrics.cost)}</TableCell>
+							<TableCell className="text-muted-foreground">
+								{formatScore(run.languageScores?.go ?? 0)}%
+							</TableCell>
+							<TableCell className="text-muted-foreground">
+								{formatScore(run.languageScores?.java ?? 0)}%
+							</TableCell>
+							<TableCell className="text-muted-foreground">
+								{formatScore(run.languageScores?.javascript ?? 0)}%
+							</TableCell>
+							<TableCell className="text-muted-foreground">
+								{formatScore(run.languageScores?.python ?? 0)}%
+							</TableCell>
+							<TableCell className="text-muted-foreground">
+								{formatScore(run.languageScores?.rust ?? 0)}%
+							</TableCell>
+							<TableCell className="font-bold">{run.score}%</TableCell>
+						</TableRow>
+					))}
+				</TableBody>
+				<TableCaption>
+					<div className="pb-4 font-medium">Cost Versus Score</div>
+					<ChartContainer config={chartConfig} className="h-[500px] w-full">
+						<ScatterChart margin={{ top: 0, right: 0, bottom: 0, left: 20 }}>
+							<XAxis
+								type="number"
+								dataKey="cost"
+								name="Cost"
+								domain={[
+									(dataMin: number) => Math.round((dataMin - 5) / 5) * 5,
+									(dataMax: number) => Math.round((dataMax + 5) / 5) * 5,
+								]}
+								tickFormatter={(value) => formatCurrency(value)}>
+								<Label value="Cost" position="bottom" offset={0} />
+							</XAxis>
+							<YAxis
+								type="number"
+								dataKey="score"
+								name="Score"
+								domain={[
+									(dataMin: number) => Math.max(0, Math.round((dataMin - 5) / 5) * 5),
+									(dataMax: number) => Math.min(100, Math.round((dataMax + 5) / 5) * 5),
+								]}
+								tickFormatter={(value) => `${value}%`}>
+								<Label value="Score" angle={-90} position="left" dy={-15} />
+							</YAxis>
+							<ChartTooltip content={<ChartTooltipContent labelKey="label" hideIndicator />} />
+							<Customized component={renderQuadrant} />
+							{chartData.map((d, i) => (
+								<Scatter key={d.label} name={d.label} data={[d]} fill={`hsl(var(--chart-${i + 1}))`} />
+							))}
+							<ChartLegend content={<ChartLegendContent />} />
+						</ScatterChart>
+					</ChartContainer>
+					<div className="py-4 text-xs opacity-50">
+						(Note: Very expensive models are excluded from the scatter plot.)
+					</div>
+				</TableCaption>
+			</Table>
+		</div>
+	)
+}
+
+// eslint-disable-next-line @typescript-eslint/no-explicit-any
+const renderQuadrant = (props: any) => (
+	<Cross
+		width={props.width}
+		height={props.height}
+		x={props.width / 2 + 35}
+		y={props.height / 2 - 15}
+		top={0}
+		left={0}
+		stroke="currentColor"
+		opacity={0.1}
+	/>
+)
diff --git a/apps/web-researcherry/src/app/evals/page.tsx b/apps/web-researcherry/src/app/evals/page.tsx
new file mode 100644
index 000000000..d18988d96
--- /dev/null
+++ b/apps/web-researcherry/src/app/evals/page.tsx
@@ -0,0 +1,29 @@
+import type { Metadata } from "next"
+
+import { getEvalRuns } from "@/actions/evals"
+
+import { Evals } from "./evals"
+
+export const revalidate = 300
+export const dynamic = "force-dynamic"
+
+export const metadata: Metadata = {
+	title: "Researcherry Code Evals",
+	openGraph: {
+		title: "Researcherry Code Evals",
+		description: "Quantitative evals of LLM coding skills.",
+		url: "https://roocode.com/evals",
+		siteName: "Researcherry Code",
+		images: {
+			url: "https://i.imgur.com/ijP7aZm.png",
+			width: 1954,
+			height: 1088,
+		},
+	},
+}
+
+export default async function Page() {
+	const runs = await getEvalRuns()
+
+	return <Evals runs={runs} />
+}
diff --git a/apps/web-researcherry/src/app/globals.css b/apps/web-researcherry/src/app/globals.css
new file mode 100644
index 000000000..e7a3a03e9
--- /dev/null
+++ b/apps/web-researcherry/src/app/globals.css
@@ -0,0 +1,72 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+:root {
+	--background: 0 0% 100%;
+	--foreground: 0 0% 3.9%;
+	--card: 0 0% 100%;
+	--card-foreground: 0 0% 3.9%;
+	--popover: 0 0% 100%;
+	--popover-foreground: 0 0% 3.9%;
+	--primary: 0 0% 9%;
+	--primary-foreground: 0 0% 98%;
+	--secondary: 0 0% 96.1%;
+	--secondary-foreground: 0 0% 9%;
+	--muted: 0 0% 96.1%;
+	--muted-foreground: 0 0% 45.1%;
+	--accent: 0 0% 96.1%;
+	--accent-foreground: 0 0% 9%;
+	--destructive: 0 84.2% 60.2%;
+	--destructive-foreground: 0 0% 98%;
+	--border: 0 0% 89.8%;
+	--input: 0 0% 89.8%;
+	--ring: 0 0% 3.9%;
+	--radius: 0.5rem;
+
+	--chart-1: 0 100% 50%;
+	--chart-2: 29 100% 50%;
+	--chart-3: 51 100% 50%;
+	--chart-4: 83 100% 50%;
+	--chart-5: 115 100% 50%;
+	--chart-6: 147 100% 50%;
+	--chart-7: 168 100% 50%;
+	--chart-8: 196 100% 50%;
+	--chart-9: 224 100% 50%;
+	--chart-10: 261 100% 50%;
+	--chart-11: 279 100% 50%;
+	--chart-12: 298 100% 50%;
+	--chart-13: 324 100% 50%;
+	--chart-14: 358 100% 50%;
+}
+
+.dark {
+	--background: 0 0% 0%;
+	--foreground: 0 0% 98%;
+	--card: 0 0% 3.9%;
+	--card-foreground: 0 0% 98%;
+	--popover: 0 0% 3.9%;
+	--popover-foreground: 0 0% 98%;
+	--primary: 0 0% 98%;
+	--primary-foreground: 0 0% 9%;
+	--secondary: 0 0% 14.9%;
+	--secondary-foreground: 0 0% 98%;
+	--muted: 0 0% 14.9%;
+	--muted-foreground: 0 0% 63.9%;
+	--accent: 0 0% 14.9%;
+	--accent-foreground: 0 0% 98%;
+	--destructive: 0 62.8% 30.6%;
+	--destructive-foreground: 0 0% 98%;
+	--border: 0 0% 14.9%;
+	--input: 0 0% 14.9%;
+	--ring: 0 0% 83.1%;
+}
+
+@layer base {
+	* {
+		@apply border-border;
+	}
+	body {
+		@apply bg-background text-foreground;
+	}
+}
diff --git a/apps/web-researcherry/src/app/layout.tsx b/apps/web-researcherry/src/app/layout.tsx
new file mode 100644
index 000000000..acf011ee2
--- /dev/null
+++ b/apps/web-researcherry/src/app/layout.tsx
@@ -0,0 +1,76 @@
+import React from "react"
+import type { Metadata } from "next"
+import { Inter } from "next/font/google"
+import Script from "next/script"
+
+import { Providers } from "@/components/providers"
+
+import Shell from "./shell"
+
+import "./globals.css"
+
+const inter = Inter({ subsets: ["latin"] })
+
+export const metadata: Metadata = {
+	title: "Researcherry Coder – Your AI-Powered Dev Team in VS Code",
+	description:
+		"Researcherry Coder puts an entire AI dev team right in your editor, outpacing closed tools with deep project-wide context, multi-step agentic coding, and unmatched developer-centric flexibility.",
+	alternates: {
+		canonical: "https://researcherrycoder.com",
+	},
+	icons: {
+		icon: [
+			{ url: "/favicon.ico" },
+			{ url: "/favicon-16x16.png", sizes: "16x16", type: "image/png" },
+			{ url: "/favicon-32x32.png", sizes: "32x32", type: "image/png" },
+		],
+		apple: [{ url: "/apple-touch-icon.png" }],
+		other: [
+			{
+				rel: "android-chrome-192x192",
+				url: "/android-chrome-192x192.png",
+				sizes: "192x192",
+				type: "image/png",
+			},
+			{
+				rel: "android-chrome-512x512",
+				url: "/android-chrome-512x512.png",
+				sizes: "512x512",
+				type: "image/png",
+			},
+		],
+	},
+}
+
+export default function RootLayout({ children }: { children: React.ReactNode }) {
+	return (
+		<html lang="en" suppressHydrationWarning>
+			<head>
+				<link
+					rel="stylesheet"
+					type="text/css"
+					href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css"
+				/>
+			</head>
+			<body className={inter.className}>
+				{/* Google tag (gtag.js) */}
+				<Script src="https://www.googletagmanager.com/gtag/js?id=AW-17391954825" strategy="afterInteractive" />
+				<Script id="google-analytics" strategy="afterInteractive">
+					{`
+						window.dataLayer = window.dataLayer || [];
+						function gtag(){dataLayer.push(arguments);}
+						gtag('js', new Date());
+						gtag('config', 'AW-17391954825');
+					`}
+				</Script>
+				<div itemScope itemType="https://schema.org/WebSite">
+					<link itemProp="url" href="https://researcherrycoder.com" />
+					<meta itemProp="name" content="Researcherry Coder" />
+				</div>
+				<Providers>
+					<Shell>{children}</Shell>
+				</Providers>
+			</body>
+		</html>
+	)
+}
diff --git a/apps/web-researcherry/src/app/page.tsx b/apps/web-researcherry/src/app/page.tsx
new file mode 100644
index 000000000..0e0219481
--- /dev/null
+++ b/apps/web-researcherry/src/app/page.tsx
@@ -0,0 +1,101 @@
+/* eslint-disable react/jsx-no-target-blank */
+
+import { getVSCodeDownloads } from "@/lib/stats"
+
+import { Button } from "@/components/ui"
+import { AnimatedText } from "@/components/animated-text"
+import {
+	AnimatedBackground,
+	InstallSection,
+	Features,
+	Testimonials,
+	FAQSection,
+	CodeExample,
+} from "@/components/homepage"
+
+// Invalidate cache when a request comes in, at most once every hour.
+export const revalidate = 3600
+
+export default async function Home() {
+	const downloads = await getVSCodeDownloads()
+
+	return (
+		<>
+			<section className="relative flex h-[calc(125vh-theme(spacing.12))] items-center overflow-hidden md:h-[calc(100svh-theme(spacing.12))] lg:h-[calc(100vh-theme(spacing.12))]">
+				<AnimatedBackground />
+				<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+					<div className="grid gap-8 md:gap-12 lg:grid-cols-2 lg:gap-16">
+						<div className="flex flex-col justify-center space-y-6 sm:space-y-8">
+							<div>
+								<h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl lg:text-6xl">
+									<span className="block">Your</span>
+									<AnimatedText className="bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
+										AI-Powered
+									</AnimatedText>
+									<span className="block">Dev Team, Right in Your Editor.</span>
+								</h1>
+								<p className="mt-4 max-w-md text-base text-muted-foreground sm:mt-6 sm:text-lg">
+									Supercharge your editor with AI that{" "}
+									<AnimatedText className="bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
+										understands your codebase
+									</AnimatedText>
+									, streamlines development, and helps you write, refactor, and debug with ease.
+								</p>
+							</div>
+							<div className="flex flex-col space-y-3 sm:flex-row sm:space-x-4 sm:space-y-0">
+								<Button
+									size="lg"
+									className="w-full hover:bg-gray-200 dark:bg-white dark:text-black sm:w-auto">
+									<a
+										href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline"
+										target="_blank"
+										className="flex w-full items-center justify-center">
+										Install Researcherry Code
+										<svg
+											xmlns="http://www.w3.org/2000/svg"
+											className="ml-2 h-4 w-4"
+											viewBox="0 0 20 20"
+											fill="currentColor">
+											<path
+												fillRule="evenodd"
+												d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
+												clipRule="evenodd"
+											/>
+										</svg>
+									</a>
+								</Button>
+								<Button
+									variant="outline"
+									size="lg"
+									className="w-full sm:w-auto bg-white/20 dark:bg-white/10 backdrop-blur-sm border border-black/40 dark:border-white/30 hover:border-blue-400 hover:bg-white/30 dark:hover:bg-white/20 hover:shadow-[0_0_20px_rgba(59,130,246,0.5)] transition-all duration-300">
+									<a
+										href="https://roocode.com/enterprise"
+										target="_blank"
+										className="flex w-full items-center justify-center">
+										For Enterprise
+									</a>
+								</Button>
+							</div>
+						</div>
+						<div className="relative mt-8 flex items-center justify-center lg:mt-0">
+							<div className="absolute inset-0 flex items-center justify-center">
+								<div className="h-[250px] w-[250px] rounded-full bg-blue-500/20 blur-[100px] sm:h-[300px] sm:w-[300px] md:h-[350px] md:w-[350px]" />
+							</div>
+							<CodeExample />
+						</div>
+					</div>
+				</div>
+			</section>
+			<div id="features">
+				<Features />
+			</div>
+			<div id="testimonials">
+				<Testimonials />
+			</div>
+			<div id="faq">
+				<FAQSection />
+			</div>
+			<InstallSection downloads={downloads} />
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/app/privacy/page.tsx b/apps/web-researcherry/src/app/privacy/page.tsx
new file mode 100644
index 000000000..41e7590ac
--- /dev/null
+++ b/apps/web-researcherry/src/app/privacy/page.tsx
@@ -0,0 +1,268 @@
+import { Metadata } from "next"
+
+export const metadata: Metadata = {
+	title: "Privacy Policy - Researcherry Code",
+	description:
+		"Privacy policy for Researcherry Code Cloud and marketing website. Learn how we handle your data and protect your privacy.",
+}
+
+export default function Privacy() {
+	return (
+		<>
+			<div className="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
+				<div className="prose prose-lg mx-auto max-w-4xl dark:prose-invert">
+					<h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl">
+						Researcherry Code Cloud Privacy Policy
+					</h1>
+					<p className="text-muted-foreground">Last Updated: June 19, 2025</p>
+
+					<p className="lead">
+						This Privacy Policy explains how Researcherry Code, Inc. (&quot;Researcherry Code,&quot; &quot;we,&quot;
+						&quot;our,&quot; or &quot;us&quot;) collects, uses, and shares information when you:
+					</p>
+					<ul className="lead">
+						<li>
+							browse any page under <strong>roocode.com</strong> (the <em>Marketing Site</em>); and/or
+						</li>
+						<li>
+							create an account for, sign in to, or otherwise use <strong>Researcherry Code Cloud</strong> at{" "}
+							<strong>app.roocode.com</strong> or through the Researcherry Code extension while authenticated to
+							that Cloud account (the <em>Cloud Service</em>).
+						</li>
+					</ul>
+
+					<div className="my-8 rounded-lg border border-border bg-muted/50 p-6">
+						<h3 className="mt-0 text-lg font-semibold">Extension‑Only Usage</h3>
+						<p className="mb-0">
+							If you run the Researcherry Code extension <strong>without</strong> connecting to a Cloud account,
+							your data is governed by the standalone{" "}
+							<a
+								href="https://github.com/RooCodeInc/Roo-Code/blob/main/PRIVACY.md"
+								target="_blank"
+								rel="noopener noreferrer"
+								className="text-primary hover:underline">
+								Researcherry Code Extension Privacy Policy
+							</a>
+							.
+						</p>
+					</div>
+
+					<h2 className="mt-12 text-2xl font-bold">Quick Summary</h2>
+					<ul>
+						<li>
+							<strong>Your source code never transits Researcherry Code servers.</strong> It stays on your device
+							and is sent <strong>directly</strong>—via a client‑to‑provider TLS connection—to the
+							third‑party AI model you select. Researcherry Code never stores, inspects, or trains on your code.
+						</li>
+						<li>
+							<strong>Prompts and chat snippets are collected by default</strong> in Researcherry Code Cloud so
+							you can search and re‑use past conversations. Organization admins can disable this
+							collection at any time.
+						</li>
+						<li>
+							We collect only the data needed to operate Researcherry Code Cloud, do <strong>not</strong> sell
+							customer data, and do <strong>not</strong> use your content to train models.
+						</li>
+					</ul>
+
+					<h2 className="mt-12 text-2xl font-bold">1. Information We Collect</h2>
+
+					<div className="overflow-x-auto">
+						<table className="min-w-full border-collapse border border-border">
+							<thead>
+								<tr className="bg-muted/50">
+									<th className="border border-border px-4 py-2 text-left font-semibold">Category</th>
+									<th className="border border-border px-4 py-2 text-left font-semibold">Examples</th>
+									<th className="border border-border px-4 py-2 text-left font-semibold">Source</th>
+								</tr>
+							</thead>
+							<tbody>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Account Information</td>
+									<td className="border border-border px-4 py-2">
+										Name, email, organization, auth tokens
+									</td>
+									<td className="border border-border px-4 py-2">You</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">
+										Workspace Configuration
+									</td>
+									<td className="border border-border px-4 py-2">
+										Org settings, allow‑lists, rules files, modes, dashboards
+									</td>
+									<td className="border border-border px-4 py-2">You / Extension (when signed in)</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Prompts, Chat Snippets & Token Counts
+									</td>
+									<td className="border border-border px-4 py-2">
+										Text prompts, model outputs, token counts
+									</td>
+									<td className="border border-border px-4 py-2">Extension (when signed in)</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Usage Data</td>
+									<td className="border border-border px-4 py-2">
+										Feature clicks, error logs, performance metrics (captured via PostHog)
+									</td>
+									<td className="border border-border px-4 py-2">Services automatically (PostHog)</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Payment Data</td>
+									<td className="border border-border px-4 py-2">
+										Tokenized card details, billing address, invoices
+									</td>
+									<td className="border border-border px-4 py-2">Payment processor (Stripe)</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Marketing Data</td>
+									<td className="border border-border px-4 py-2">
+										Cookies, IP address, browser type, page views,{" "}
+										<strong>voluntary form submissions</strong> (e.g., newsletter or wait‑list
+										sign‑ups)
+									</td>
+									<td className="border border-border px-4 py-2">
+										Marketing Site automatically / You
+									</td>
+								</tr>
+							</tbody>
+						</table>
+					</div>
+
+					<h2 className="mt-12 text-2xl font-bold">2. How We Use Information</h2>
+					<ul>
+						<li>
+							<strong>Operate & secure Researcherry Code Cloud</strong> (authentication, completions, abuse
+							prevention)
+						</li>
+						<li>
+							<strong>Provide support & improve features</strong> (debugging, analytics, product
+							decisions)
+						</li>
+						<li>
+							<strong>Process payments & manage subscriptions</strong>
+						</li>
+						<li>
+							<strong>Send product updates and roadmap communications</strong> (opt‑out available)
+						</li>
+					</ul>
+
+					<h2 className="mt-12 text-2xl font-bold">3. Where Your Data Goes (And Doesn&apos;t)</h2>
+
+					<div className="overflow-x-auto">
+						<table className="min-w-full border-collapse border border-border">
+							<thead>
+								<tr className="bg-muted/50">
+									<th className="border border-border px-4 py-2 text-left font-semibold">Data</th>
+									<th className="border border-border px-4 py-2 text-left font-semibold">Sent To</th>
+									<th className="border border-border px-4 py-2 text-left font-semibold">
+										<strong>Not</strong> Sent To
+									</th>
+								</tr>
+							</thead>
+							<tbody>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Code & files you work on
+									</td>
+									<td className="border border-border px-4 py-2">
+										Your chosen model provider (direct client → provider TLS)
+									</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code servers; ad networks; model‑training pipelines
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">
+										Prompts, chat snippets & token counts (Cloud)
+									</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code Cloud (encrypted at rest)
+									</td>
+									<td className="border border-border px-4 py-2">Any third‑party</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Workspace Configuration
+									</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code Cloud (encrypted at rest)
+									</td>
+									<td className="border border-border px-4 py-2">Any third-party</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Usage & Telemetry</td>
+									<td className="border border-border px-4 py-2">
+										PostHog (self‑hosted analytics platform)
+									</td>
+									<td className="border border-border px-4 py-2">Ad networks or data brokers</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Payment Data</td>
+									<td className="border border-border px-4 py-2">Stripe (PCI‑DSS Level 1)</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code servers (we store only the Stripe customer ID)
+									</td>
+								</tr>
+							</tbody>
+						</table>
+					</div>
+
+					<h2 className="mt-12 text-2xl font-bold">4. Data Retention</h2>
+					<ul>
+						<li>
+							<strong>Source Code:</strong> Never stored on Researcherry Code servers.
+						</li>
+						<li>
+							<strong>Prompts & Chat Snippets:</strong> Persist in your Cloud workspace until you or your
+							organization admin deletes them or disables collection.
+						</li>
+						<li>
+							<strong>Operational Logs & Analytics:</strong> Retained only as needed to operate and secure
+							Researcherry Code Cloud.
+						</li>
+					</ul>
+
+					<h2 className="mt-12 text-2xl font-bold">5. Your Choices</h2>
+					<ul>
+						<li>
+							<strong>Manage cookies:</strong> You can block or delete cookies in your browser settings;
+							some site features may not function without them.
+						</li>
+						<li>
+							<strong>Disable prompt collection</strong> in Organization settings.
+						</li>
+						<li>
+							<strong>Delete your Cloud account</strong> at any time from{" "}
+							<strong>Security Settings</strong> inside Researcherry Code Cloud.
+						</li>
+					</ul>
+
+					<h2 className="mt-12 text-2xl font-bold">6. Security Practices</h2>
+					<p>
+						We use TLS for all data in transit, AES‑256 encryption at rest, least‑privilege IAM, continuous
+						monitoring, routine penetration testing, and maintain a SOC 2 program.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">7. Updates to This Policy</h2>
+					<p>
+						If our privacy practices change, we will update this policy and note the new{" "}
+						<strong>Last Updated</strong> date at the top. For material changes that affect Cloud
+						workspaces, we will also email registered workspace owners before the changes take effect.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">8. Contact Us</h2>
+					<p>
+						Questions or concerns? Email{" "}
+						<a href="mailto:privacy@roocode.com" className="text-primary hover:underline">
+							privacy@roocode.com
+						</a>
+						.
+					</p>
+				</div>
+			</div>
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/app/shell.tsx b/apps/web-researcherry/src/app/shell.tsx
new file mode 100644
index 000000000..84a42bed2
--- /dev/null
+++ b/apps/web-researcherry/src/app/shell.tsx
@@ -0,0 +1,18 @@
+import { getGitHubStars, getVSCodeDownloads } from "@/lib/stats"
+
+import { NavBar, Footer } from "@/components/chromes"
+
+// Invalidate cache when a request comes in, at most once every hour.
+export const revalidate = 3600
+
+export default async function Shell({ children }: { children: React.ReactNode }) {
+	const [stars, downloads] = await Promise.all([getGitHubStars(), getVSCodeDownloads()])
+
+	return (
+		<div className="flex min-h-screen flex-col bg-background text-foreground">
+			<NavBar stars={stars} downloads={downloads} />
+			<main className="flex-1">{children}</main>
+			<Footer />
+		</div>
+	)
+}
diff --git a/apps/web-researcherry/src/app/sitemap.xml b/apps/web-researcherry/src/app/sitemap.xml
new file mode 100644
index 000000000..43ac97330
--- /dev/null
+++ b/apps/web-researcherry/src/app/sitemap.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
+  <url>
+    <loc>https://roocode.com/</loc>
+    <lastmod>2025-03-13T22:26:09Z</lastmod>
+    <changefreq>yearly</changefreq>
+    <priority>1.0</priority>
+  </url>
+</urlset>
diff --git a/apps/web-researcherry/src/app/terms/page.tsx b/apps/web-researcherry/src/app/terms/page.tsx
new file mode 100644
index 000000000..4066c87e0
--- /dev/null
+++ b/apps/web-researcherry/src/app/terms/page.tsx
@@ -0,0 +1,320 @@
+import { Metadata } from "next"
+
+export const metadata: Metadata = {
+	title: "Terms of Service - Researcherry Code",
+	description:
+		"Terms of Service for Researcherry Code Cloud. Learn about our service terms, commercial conditions, and legal framework.",
+}
+
+export default function Terms() {
+	return (
+		<>
+			<div className="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
+				<div className="prose prose-lg mx-auto max-w-4xl dark:prose-invert">
+					<h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl">
+						Researcherry Code Cloud Terms of Service
+					</h1>
+					<p className="text-muted-foreground">
+						<em>(Version 1.0 – Effective June 19, 2025)</em>
+					</p>
+
+					<p className="lead">
+						These Terms of Service (&quot;<strong>TOS</strong>&quot;) govern access to and use of the Roo
+						Code Cloud service (the &quot;<strong>Service</strong>&quot;). They apply to:
+					</p>
+					<ul className="lead">
+						<li>
+							<strong>(a)</strong> every <strong>Sales Order Form</strong> or similar document mutually
+							executed by Researcherry Code and the customer that references these TOS; <strong>and</strong>
+						</li>
+						<li>
+							<strong>(b)</strong> any{" "}
+							<strong>online plan-selection, self-service sign-up, or in-app purchase flow</strong>{" "}
+							through which a customer clicks an &quot;I Agree&quot; (or equivalent) button to accept
+							these TOS — such flow also being an <strong>&quot;Order Form.&quot;</strong>
+						</li>
+					</ul>
+
+					<p>
+						By <strong>creating an account, clicking to accept, or using the Service</strong>, the person or
+						entity doing so (&quot;<strong>Customer</strong>&quot;) agrees to be bound by these TOS, even if
+						no separate Order Form is signed.
+					</p>
+
+					<p>
+						If Researcherry Code and Customer later execute a Master Subscription Agreement (&quot;
+						<strong>MSA</strong>&quot;), the MSA governs; otherwise, these TOS and the applicable Order Form
+						together form the entire agreement (the &quot;<strong>Agreement</strong>&quot;).
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">1. Agreement Framework</h2>
+					<ol>
+						<li>
+							<strong>Incorporation of Standard Terms.</strong>
+							<br />
+							The{" "}
+							<a
+								href="https://commonpaper.com/standards/cloud-service-agreement/2.0/"
+								target="_blank"
+								rel="noopener noreferrer"
+								className="text-primary hover:underline">
+								<em>Common Paper Cloud Service Standard Terms v 2.0</em>
+							</a>{" "}
+							(the &quot;<strong>Standard Terms</strong>&quot;) are incorporated by reference. If these
+							TOS conflict with the Standard Terms, these TOS control.
+						</li>
+						<li>
+							<strong>Order of Precedence.</strong>
+							<br />
+							(a) Order Form (b) these TOS (c) Standard Terms.
+						</li>
+					</ol>
+
+					<h2 className="mt-12 text-2xl font-bold">2. Key Commercial Terms</h2>
+
+					<div className="overflow-x-auto">
+						<table className="min-w-full border-collapse border border-border">
+							<thead>
+								<tr className="bg-muted/50">
+									<th className="border border-border px-4 py-2 text-left font-semibold">Term</th>
+									<th className="border border-border px-4 py-2 text-left font-semibold">Value</th>
+								</tr>
+							</thead>
+							<tbody>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Governing Law / Forum
+									</td>
+									<td className="border border-border px-4 py-2">
+										Delaware law; exclusive jurisdiction and venue in the state or federal courts
+										located in Delaware
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">
+										Plans & Subscription Periods
+									</td>
+									<td className="border border-border px-4 py-2">
+										<em>Free Plan:</em> month-to-month.
+										<br />
+										<em>Paid Plans:</em> Monthly <strong>or</strong> Annual, as selected in an Order
+										Form or the online flow.
+									</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Auto-Renewal & Non-Renewal Notice
+									</td>
+									<td className="border border-border px-4 py-2">
+										<em>Free Plan:</em> renews continuously until cancelled in the dashboard.
+										<br />
+										<em>Paid Plans:</em> renew for the same period unless either party gives 30
+										days&apos; written notice before the current period ends.
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Fees & Usage</td>
+									<td className="border border-border px-4 py-2">
+										<em>Free Plan:</em> Subscription Fee = $0.
+										<br />
+										<em>Paid Plans:</em> Fees stated in the Order Form or online checkout{" "}
+										<strong>plus</strong> usage-based fees, calculated and invoiced monthly.
+									</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Payment Terms</td>
+									<td className="border border-border px-4 py-2">
+										<em>Monthly paid plans:</em> credit-card charge on the billing date.
+										<br />
+										<em>Annual paid plans:</em> invoiced Net 30 (credit card optional).
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">
+										General Liability Cap
+									</td>
+									<td className="border border-border px-4 py-2">
+										The greater of (i) USD 100 and (ii) 1 × Fees paid or payable in the 12 months
+										before the event giving rise to liability.
+									</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Increased Cap / Unlimited Claims
+									</td>
+									<td className="border border-border px-4 py-2">None</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Trial / Pilot</td>
+									<td className="border border-border px-4 py-2">Not offered</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Beta Features</td>
+									<td className="border border-border px-4 py-2">
+										None – only generally available features are provided
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">Security Standard</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code maintains commercially reasonable administrative, physical, and
+										technical safeguards
+									</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">Machine-Learning Use</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code <strong>does not</strong> use Customer Content to train, fine-tune,
+										or improve any ML or AI models
+									</td>
+								</tr>
+								<tr className="bg-muted/25">
+									<td className="border border-border px-4 py-2 font-medium">
+										Data Processing Addendum (DPA)
+									</td>
+									<td className="border border-border px-4 py-2">
+										GDPR/CCPA-ready DPA available upon written request
+									</td>
+								</tr>
+								<tr>
+									<td className="border border-border px-4 py-2 font-medium">
+										Publicity / Logo Rights
+									</td>
+									<td className="border border-border px-4 py-2">
+										Researcherry Code may identify Customer (name & logo) in marketing materials unless
+										Customer opts out in writing
+									</td>
+								</tr>
+							</tbody>
+						</table>
+					</div>
+
+					<h2 className="mt-12 text-2xl font-bold">3. Modifications to the Standard Terms</h2>
+					<ol>
+						<li>
+							<strong>Section 1.6 (Machine Learning).</strong>
+							<br />
+							&quot;Provider will not use Customer Content or Usage Data to train, fine-tune, or improve
+							any machine-learning or AI model, except with Customer&apos;s prior written consent.&quot;
+						</li>
+						<li>
+							<strong>Section 3 (Security).</strong>
+							<br />
+							Replace &quot;reasonable&quot; with &quot;commercially reasonable.&quot;
+						</li>
+						<li>
+							<strong>Section 4 (Fees & Payment).</strong>
+							<br />
+							Add usage-billing language above and delete any provision allowing unilateral fee increases.
+						</li>
+						<li>
+							<strong>Section 5 (Term & Termination).</strong>
+							<br />
+							Insert auto-renewal and free-plan language above.
+						</li>
+						<li>
+							<strong>Sections 7 (Trials / Betas) and any SLA references.</strong>
+							<br />
+							Deleted – Researcherry Code offers no trials, pilots, betas, or SLA credits under these TOS.
+						</li>
+						<li>
+							<strong>Section 12.12 (Publicity).</strong>
+							<br />
+							As reflected in the &quot;Publicity / Logo Rights&quot; row above.
+						</li>
+					</ol>
+
+					<h2 className="mt-12 text-2xl font-bold">4. Use of the Service</h2>
+					<p>
+						Customer may access and use the Service solely for its internal business purposes and subject to
+						the Acceptable Use Policy in the Standard Terms.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">5. Account Management & Termination</h2>
+					<ul>
+						<li>
+							<strong>Self-service cancellation or downgrade.</strong>
+							<br />
+							Customer may cancel a Free Plan immediately, or cancel/downgrade a Paid Plan effective at
+							the end of the current billing cycle, via the web dashboard.
+						</li>
+						<li>
+							Either party may otherwise terminate the Agreement as allowed under Section 5 of the
+							Standard Terms.
+						</li>
+					</ul>
+
+					<h2 className="mt-12 text-2xl font-bold">6. Privacy & Data</h2>
+					<p>
+						Researcherry Code&apos;s Privacy Notice (
+						<a
+							href="https://roocode.com/privacy"
+							rel="noopener noreferrer"
+							className="text-primary hover:underline">
+							https://roocode.com/privacy
+						</a>
+						) explains how Researcherry Code collects and handles personal information. If Customer requires a DPA,
+						email{" "}
+						<a href="mailto:support@roocode.com" className="text-primary hover:underline">
+							support@roocode.com
+						</a>
+						.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">7. Warranty Disclaimer</h2>
+					<p>
+						Except as expressly stated in the Agreement, the Service is provided{" "}
+						<strong>&quot;as is,&quot;</strong> and all implied warranties are disclaimed to the maximum
+						extent allowed by law.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">8. Limitation of Liability</h2>
+					<p>
+						The caps in Section 2 apply to all claims under the Agreement, whether in contract, tort, or
+						otherwise, except for Excluded Claims defined in the Standard Terms.
+					</p>
+
+					<h2 className="mt-12 text-2xl font-bold">9. Miscellaneous</h2>
+					<ol>
+						<li>
+							<strong>Assignment.</strong>
+							<br />
+							Customer may not assign the Agreement without Researcherry Code&apos;s prior written consent,
+							except to a successor in a merger or sale of substantially all assets.
+						</li>
+						<li>
+							<strong>Export Compliance.</strong>
+							<br />
+							Each party will comply with all applicable export-control laws and regulations and will not
+							export or re-export any software or technical data without the required government licences.
+						</li>
+						<li>
+							<strong>Entire Agreement.</strong>
+							<br />
+							The Agreement supersedes all prior or contemporaneous agreements for the Service.
+						</li>
+						<li>
+							<strong>Amendments.</strong>
+							<br />
+							Researcherry Code may update these TOS by posting a revised version at the same URL and emailing or
+							in-app notifying Customer at least 30 days before changes take effect. Continued use after
+							the effective date constitutes acceptance.
+						</li>
+					</ol>
+
+					<h2 className="mt-12 text-2xl font-bold">10. Contact</h2>
+					<p>
+						<strong>Researcherry Code, Inc.</strong>
+						<br />
+						98 Graceland Dr, San Rafael, CA 94901 USA
+						<br />
+						Email:{" "}
+						<a href="mailto:support@roocode.com" className="text-primary hover:underline">
+							support@roocode.com
+						</a>
+					</p>
+				</div>
+			</div>
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/components/animated-text.tsx b/apps/web-researcherry/src/components/animated-text.tsx
new file mode 100644
index 000000000..7b7675dcf
--- /dev/null
+++ b/apps/web-researcherry/src/components/animated-text.tsx
@@ -0,0 +1,24 @@
+"use client"
+
+import type React from "react"
+import { motion } from "framer-motion"
+
+interface AnimatedTextProps {
+	children: React.ReactNode
+	className?: string
+}
+
+export function AnimatedText({ children, className }: AnimatedTextProps) {
+	return (
+		<motion.span
+			className={className}
+			initial={{ opacity: 0, y: 20 }}
+			animate={{ opacity: 1, y: 0 }}
+			transition={{
+				duration: 0.8,
+				ease: [0.2, 0.65, 0.3, 0.9],
+			}}>
+			{children}
+		</motion.span>
+	)
+}
diff --git a/apps/web-researcherry/src/components/chromes/footer.tsx b/apps/web-researcherry/src/components/chromes/footer.tsx
new file mode 100644
index 000000000..3eff7f9c5
--- /dev/null
+++ b/apps/web-researcherry/src/components/chromes/footer.tsx
@@ -0,0 +1,350 @@
+"use client"
+
+import { useState, useRef, useEffect } from "react"
+import Link from "next/link"
+import Image from "next/image"
+import { ChevronDown } from "lucide-react"
+import { useTheme } from "next-themes"
+
+import { EXTERNAL_LINKS, INTERNAL_LINKS } from "@/lib/constants"
+import { useLogoSrc } from "@/lib/hooks/use-logo-src"
+import { ScrollButton } from "@/components/ui"
+
+export function Footer() {
+	const [privacyDropdownOpen, setPrivacyDropdownOpen] = useState(false)
+	const dropdownRef = useRef<HTMLDivElement>(null)
+	const logoSrc = useLogoSrc()
+	const { resolvedTheme } = useTheme()
+
+	// Close dropdown when clicking outside
+	useEffect(() => {
+		function handleClickOutside(event: MouseEvent) {
+			if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {
+				setPrivacyDropdownOpen(false)
+			}
+		}
+
+		document.addEventListener("mousedown", handleClickOutside)
+		return () => {
+			document.removeEventListener("mousedown", handleClickOutside)
+		}
+	}, [])
+	return (
+		<footer className="border-t border-border bg-background">
+			<div className="mx-auto max-w-7xl px-6 pb-6 pt-12 md:pb-8 md:pt-16 lg:px-8">
+				<div className="xl:grid xl:grid-cols-3 xl:gap-8">
+					<div className="space-y-8">
+						<div className="flex items-center">
+							<Image src={logoSrc} alt="Researcherry Code Logo" width={120} height={40} className="h-6 w-auto" />
+						</div>
+						<p className="max-w-md text-sm leading-6 text-muted-foreground md:pr-16 lg:pr-32">
+							Empowering developers to build better software faster with AI-powered tools and insights.
+						</p>
+
+						{/* Made with Researcherry Code */}
+						<a
+							href="https://roocode.com"
+							target="_blank"
+							rel="noopener noreferrer"
+							className="inline-flex items-center space-x-2 group">
+							<Image
+								src={resolvedTheme === "light" ? "/RooCode-Badge-blk.svg" : "/RooCode-Badge-white.svg"}
+								alt="Made with Researcherry Code"
+								width={120}
+								height={40}
+								className="h-8 w-auto opacity-70 transition-opacity group-hover:opacity-100"
+							/>
+						</a>
+					</div>
+
+					<div className="mt-16 grid grid-cols-2 gap-8 xl:col-span-2 xl:mt-0">
+						<div className="md:grid md:grid-cols-2 md:gap-8">
+							<div>
+								<h3 className="text-sm font-semibold uppercase leading-6 text-foreground">Product</h3>
+								<ul className="mt-6 space-y-4">
+									<li>
+										<ScrollButton
+											targetId="features"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Features
+										</ScrollButton>
+									</li>
+									<li>
+										<Link
+											href="/enterprise"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Enterprise
+										</Link>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.EVALS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Evals
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.SECURITY}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Security
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.INTEGRATIONS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Integrations
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.CHANGELOG}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Changelog
+										</a>
+									</li>
+								</ul>
+							</div>
+							<div className="mt-10 md:mt-0">
+								<h3 className="text-sm font-semibold uppercase leading-6 text-foreground">Resources</h3>
+								<ul className="mt-6 space-y-4">
+									<li>
+										<a
+											href={EXTERNAL_LINKS.FAQ}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											FAQ
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.DOCUMENTATION}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Docs
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.TUTORIALS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Tutorials
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.ISSUES}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Issues
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.FEATURE_REQUESTS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Feature Requests
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.OFFICE_HOURS_PODCAST}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Office Hours Podcast
+										</a>
+									</li>
+								</ul>
+							</div>
+						</div>
+						<div className="md:grid md:grid-cols-2 md:gap-8">
+							<div>
+								<h3 className="text-sm font-semibold uppercase leading-6 text-foreground">Company</h3>
+								<ul className="mt-6 space-y-4">
+									<li>
+										<a
+											href="mailto:support@roocode.com"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Contact
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.CAREERS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Careers
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.BLOG}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Blog
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.TESTIMONIALS}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Testimonials
+										</a>
+									</li>
+									<li>
+										<Link
+											href="/terms"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Terms of Service
+										</Link>
+									</li>
+									<li>
+										<div className="relative z-10" ref={dropdownRef}>
+											<button
+												onClick={() => setPrivacyDropdownOpen(!privacyDropdownOpen)}
+												className="flex items-center text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground"
+												aria-expanded={privacyDropdownOpen}
+												aria-haspopup="true">
+												<span>
+													Privacy <span className="max-[320px]:hidden">Policy</span>
+												</span>
+												<ChevronDown
+													className={`ml-1 h-4 w-4 transition-transform ${privacyDropdownOpen ? "rotate-180" : ""}`}
+												/>
+											</button>
+
+											{privacyDropdownOpen && (
+												<div className="absolute z-50 mt-2 w-44 origin-top-left scale-95 rounded-md border border-border bg-background shadow-lg ring-1 ring-black ring-opacity-5 transition-all duration-100 ease-out data-[state=open]:scale-100 max-xs:right-0 max-xs:origin-top-right xs:left-0">
+													<div className="flex flex-col gap-1 p-2 text-sm text-muted-foreground">
+														<a
+															href={EXTERNAL_LINKS.PRIVACY_POLICY_EXTENSION}
+															target="_blank"
+															rel="noopener noreferrer"
+															onClick={() => setPrivacyDropdownOpen(false)}
+															className="rounded-md px-3 py-2 transition-colors hover:bg-accent/50 hover:text-foreground">
+															Extension
+														</a>
+														<Link
+															href={INTERNAL_LINKS.PRIVACY_POLICY_WEBSITE}
+															onClick={() => setPrivacyDropdownOpen(false)}
+															className="rounded-md px-3 py-2 transition-colors hover:bg-accent/50 hover:text-foreground">
+															Researcherry Code Cloud
+														</Link>
+													</div>
+												</div>
+											)}
+										</div>
+									</li>
+								</ul>
+							</div>
+							<div className="mt-10 md:mt-0">
+								<h3 className="text-sm font-semibold uppercase leading-6 text-foreground">Connect</h3>
+								<ul className="mt-6 space-y-4">
+									<li>
+										<a
+											href={EXTERNAL_LINKS.GITHUB}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											GitHub
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.DISCORD}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Discord
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.REDDIT}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Reddit
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.X}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											X / Twitter
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.LINKEDIN}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											LinkedIn
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.BLUESKY}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											Bluesky
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.TIKTOK}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											TikTok
+										</a>
+									</li>
+									<li>
+										<a
+											href={EXTERNAL_LINKS.YOUTUBE}
+											target="_blank"
+											rel="noopener noreferrer"
+											className="text-sm leading-6 text-muted-foreground transition-colors hover:text-foreground">
+											YouTube
+										</a>
+									</li>
+								</ul>
+							</div>
+						</div>
+					</div>
+				</div>
+
+				<div className="mt-16 flex border-t border-border pt-8 sm:mt-20 lg:mt-24">
+					<p className="mx-auto text-sm leading-5 text-muted-foreground">
+						&copy; {new Date().getFullYear()} Researcherry Code. All rights reserved.
+					</p>
+				</div>
+			</div>
+		</footer>
+	)
+}
diff --git a/apps/web-researcherry/src/components/chromes/index.ts b/apps/web-researcherry/src/components/chromes/index.ts
new file mode 100644
index 000000000..2fe8f8b07
--- /dev/null
+++ b/apps/web-researcherry/src/components/chromes/index.ts
@@ -0,0 +1,4 @@
+export * from "./footer"
+export * from "./nav-bar"
+export * from "./stats-display"
+export * from "./theme-toggle"
diff --git a/apps/web-researcherry/src/components/chromes/nav-bar.tsx b/apps/web-researcherry/src/components/chromes/nav-bar.tsx
new file mode 100644
index 000000000..834258400
--- /dev/null
+++ b/apps/web-researcherry/src/components/chromes/nav-bar.tsx
@@ -0,0 +1,213 @@
+/* eslint-disable react/jsx-no-target-blank */
+
+"use client"
+
+import Link from "next/link"
+import Image from "next/image"
+import { useState } from "react"
+import { RxGithubLogo } from "react-icons/rx"
+import { VscVscode } from "react-icons/vsc"
+import { HiMenu } from "react-icons/hi"
+import { IoClose } from "react-icons/io5"
+
+import { EXTERNAL_LINKS } from "@/lib/constants"
+import { useLogoSrc } from "@/lib/hooks/use-logo-src"
+import { ScrollButton } from "@/components/ui"
+import ThemeToggle from "@/components/chromes/theme-toggle"
+
+interface NavBarProps {
+	stars: string | null
+	downloads: string | null
+}
+
+export function NavBar({ stars, downloads }: NavBarProps) {
+	const [isMenuOpen, setIsMenuOpen] = useState(false)
+	const logoSrc = useLogoSrc()
+
+	return (
+		<header className="sticky top-0 z-50 border-b border-border bg-background/80 backdrop-blur-md">
+			<div className="container mx-auto flex h-16 items-center justify-between px-4 sm:px-6 lg:px-8">
+				<div className="flex items-center">
+					<Link href="/" className="flex items-center">
+						<Image src={logoSrc} alt="Researcherry Code Logo" width={120} height={40} className="h-8 w-auto" />
+					</Link>
+				</div>
+
+				{/* Desktop Navigation */}
+				<nav className="hidden text-sm font-medium md:flex md:items-center md:space-x-3 xl:space-x-8">
+					{/* note: features and testimonials links are hidden for screen sizes smaller than lg */}
+					<ScrollButton
+						targetId="features"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground max-lg:hidden">
+						Features
+					</ScrollButton>
+					<ScrollButton
+						targetId="testimonials"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground max-lg:hidden">
+						Testimonials
+					</ScrollButton>
+					<Link
+						href="/evals"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground">
+						Evals
+					</Link>
+					<Link
+						href="/enterprise"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground">
+						Enterprise
+					</Link>
+					<a
+						href={EXTERNAL_LINKS.DOCUMENTATION}
+						target="_blank"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground">
+						Docs
+					</a>
+					<a
+						href={EXTERNAL_LINKS.DISCORD}
+						target="_blank"
+						rel="noopener noreferrer"
+						className="text-muted-foreground transition-transform duration-200 hover:scale-105 hover:text-foreground">
+						Community
+					</a>
+					<div className="flex items-center rounded-full bg-gradient-to-r from-blue-400 to-cyan-400 p-0.5 text-xs">
+						<div className="rounded-full bg-background px-2 py-1.5">
+							<span className="text-muted-foreground border-r-2 border-foreground/50 pr-1.5">
+								Researcherry Code Cloud is coming
+							</span>
+							<a
+								href="/cloud-waitlist"
+								rel="noopener noreferrer"
+								className="font-medium text-primary hover:underline pl-1.5">
+								Sign up
+							</a>
+						</div>
+					</div>
+				</nav>
+
+				<div className="hidden md:flex md:items-center md:space-x-4">
+					<div className="flex flex-row space-x-2">
+						<ThemeToggle />
+						<Link
+							href={EXTERNAL_LINKS.GITHUB}
+							target="_blank"
+							className="hidden items-center gap-1.5 text-sm font-medium text-muted-foreground hover:text-foreground md:flex">
+							<RxGithubLogo className="h-4 w-4" />
+							{stars !== null && <span>{stars}</span>}
+						</Link>
+					</div>
+					<Link
+						href={EXTERNAL_LINKS.MARKETPLACE}
+						target="_blank"
+						className="hidden items-center gap-1.5 rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground transition-all duration-200 hover:bg-primary/80 hover:shadow-lg hover:scale-105 md:flex">
+						<VscVscode className="-mr-[2px] mt-[1px] h-4 w-4" />
+						<span>
+							Install <span className="font-black max-lg:text-xs">&middot;</span>
+						</span>
+						{downloads !== null && <span>{downloads}</span>}
+					</Link>
+				</div>
+
+				{/* Mobile Menu Button */}
+				<button
+					aria-expanded={isMenuOpen}
+					onClick={() => setIsMenuOpen(!isMenuOpen)}
+					className="flex items-center justify-center rounded-full p-2 transition-colors hover:bg-accent md:hidden"
+					aria-label="Toggle mobile menu">
+					{isMenuOpen ? <IoClose className="h-6 w-6" /> : <HiMenu className="h-6 w-6" />}
+				</button>
+			</div>
+
+			{/* Mobile Menu Panel */}
+			<div
+				className={`absolute left-0 right-0 top-16 z-50 transform border-b border-border bg-background shadow-lg backdrop-blur-none transition-all duration-200 md:hidden ${isMenuOpen ? "translate-y-0 opacity-100" : "pointer-events-none -translate-y-2 opacity-0"}`}>
+				<nav className="flex flex-col py-2">
+					<div className="mx-5 mb-2 flex items-center rounded-full bg-gradient-to-r from-blue-400 to-cyan-400 p-0.5 text-xs">
+						<div className="flex-grow text-center rounded-full bg-background px-2 py-1.5">
+							<span className="text-muted-foreground border-r-2 border-foreground/50 pr-3">
+								Researcherry Code Cloud is coming
+							</span>
+							<a
+								href="/cloud-waitlist"
+								rel="noopener noreferrer"
+								className="font-medium text-primary hover:underline pl-3">
+								Sign up
+							</a>
+						</div>
+					</div>
+					<ScrollButton
+						targetId="features"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Features
+					</ScrollButton>
+					<ScrollButton
+						targetId="testimonials"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Testimonials
+					</ScrollButton>
+					<Link
+						href="/evals"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Evals
+					</Link>
+					<Link
+						href="/enterprise"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Enterprise
+					</Link>
+					<a
+						href={EXTERNAL_LINKS.SECURITY}
+						target="_blank"
+						rel="noopener noreferrer"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Security
+					</a>
+					<a
+						href={EXTERNAL_LINKS.DOCUMENTATION}
+						target="_blank"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Docs
+					</a>
+					<a
+						href={EXTERNAL_LINKS.DISCORD}
+						target="_blank"
+						rel="noopener noreferrer"
+						className="w-full px-8 py-3 text-left text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+						onClick={() => setIsMenuOpen(false)}>
+						Community
+					</a>
+
+					<hr className="mx-8 my-2 border-t border-border/50" />
+
+					{/* Icons & Stats */}
+					<div className="flex items-center justify-center gap-8 px-8 py-3">
+						<Link
+							href={EXTERNAL_LINKS.GITHUB}
+							target="_blank"
+							className="inline-flex items-center gap-2 rounded-md p-2 text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+							onClick={() => setIsMenuOpen(false)}>
+							<RxGithubLogo className="h-5 w-5" />
+							{stars !== null && <span>{stars}</span>}
+						</Link>
+						<div className="flex items-center rounded-md p-2 transition-colors hover:bg-accent">
+							<ThemeToggle />
+						</div>
+						<Link
+							href={EXTERNAL_LINKS.MARKETPLACE}
+							target="_blank"
+							className="inline-flex items-center gap-2 rounded-md p-2 text-sm font-medium text-foreground/80 transition-colors hover:bg-accent hover:text-foreground"
+							onClick={() => setIsMenuOpen(false)}>
+							<VscVscode className="h-5 w-5" />
+							{downloads !== null && <span>{downloads}</span>}
+						</Link>
+					</div>
+				</nav>
+			</div>
+		</header>
+	)
+}
diff --git a/apps/web-researcherry/src/components/chromes/stats-display.tsx b/apps/web-researcherry/src/components/chromes/stats-display.tsx
new file mode 100644
index 000000000..9d72654f5
--- /dev/null
+++ b/apps/web-researcherry/src/components/chromes/stats-display.tsx
@@ -0,0 +1,31 @@
+import Link from "next/link"
+import { RxGithubLogo } from "react-icons/rx"
+import { VscVscode } from "react-icons/vsc"
+import { getGitHubStars, getVSCodeDownloads } from "@/lib/stats"
+
+export default async function StatsDisplay() {
+	const stars = await getGitHubStars()
+	const downloads = await getVSCodeDownloads()
+
+	return (
+		<>
+			<Link
+				href="https://github.com/RooCodeInc/Roo-Code"
+				target="_blank"
+				className="hidden md:flex items-center gap-1.5 text-sm font-medium text-gray-400 hover:text-gray-200">
+				<RxGithubLogo className="h-4 w-4" />
+				{stars !== null && <span>{stars}</span>}
+			</Link>
+			<Link
+				href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline"
+				target="_blank"
+				className="hidden md:flex items-center gap-1.5 rounded-full bg-primary px-3 py-1.5 text-sm font-medium text-primary-foreground transition-colors hover:bg-primary/90">
+				<VscVscode className="h-4 w-4" />
+				<span>
+					Install <span className="font-black">&middot;</span>
+				</span>
+				{downloads !== null && <span>{downloads}</span>}
+			</Link>
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/components/chromes/theme-toggle.tsx b/apps/web-researcherry/src/components/chromes/theme-toggle.tsx
new file mode 100644
index 000000000..f0e075a8c
--- /dev/null
+++ b/apps/web-researcherry/src/components/chromes/theme-toggle.tsx
@@ -0,0 +1,40 @@
+"use client"
+
+import { useEffect, useState } from "react"
+import { useTheme } from "next-themes"
+import { RxSun, RxMoon } from "react-icons/rx"
+
+import { Button } from "@/components/ui"
+
+export default function ThemeToggle() {
+	const { theme, setTheme } = useTheme()
+	const [mounted, setMounted] = useState(false)
+
+	// Avoid hydration mismatch.
+	useEffect(() => {
+		setMounted(true)
+	}, [])
+
+	if (!mounted) {
+		return (
+			<Button variant="ghost" size="icon" disabled className="h-9 w-9">
+				<RxSun className="h-4 w-4" />
+			</Button>
+		)
+	}
+
+	return (
+		<Button
+			variant="ghost"
+			size="icon"
+			onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
+			className="h-9 w-9"
+			aria-label="Toggle theme">
+			{theme === "dark" ? (
+				<RxSun className="h-4 w-4 transition-all" />
+			) : (
+				<RxMoon className="h-4 w-4 transition-all" />
+			)}
+		</Button>
+	)
+}
diff --git a/apps/web-researcherry/src/components/enterprise/contact-form.tsx b/apps/web-researcherry/src/components/enterprise/contact-form.tsx
new file mode 100644
index 000000000..8574325d9
--- /dev/null
+++ b/apps/web-researcherry/src/components/enterprise/contact-form.tsx
@@ -0,0 +1,291 @@
+"use client"
+
+import { useState, useRef } from "react"
+import { z } from "zod"
+
+import {
+	Button,
+	Dialog,
+	DialogContent,
+	DialogDescription,
+	DialogFooter,
+	DialogHeader,
+	DialogTitle,
+	DialogTrigger,
+} from "@/components/ui"
+
+// Define the form schema using Zod
+const contactFormSchema = z.object({
+	name: z.string().min(1, "Name is required"),
+	company: z.string().min(1, "Company is required"),
+	email: z.string().email("Invalid email address"),
+	website: z.string().url("Invalid website URL").or(z.string().length(0)),
+	engineerCount: z.enum(["1-10", "11-50", "51-200", "201-500", "501-1000", "1000+"]),
+	formType: z.enum(["early-access", "demo"]),
+	_honeypot: z.string().optional(),
+})
+
+interface ContactFormProps {
+	formType: "early-access" | "demo"
+	buttonText: string
+	buttonClassName?: string
+}
+
+export function ContactForm({ formType, buttonText, buttonClassName }: ContactFormProps) {
+	const [isOpen, setIsOpen] = useState(false)
+	const [isSubmitting, setIsSubmitting] = useState(false)
+	const [formErrors, setFormErrors] = useState<Record<string, string>>({})
+	const [submitStatus, setSubmitStatus] = useState<"idle" | "success" | "error">("idle")
+	const formRef = useRef<HTMLFormElement>(null)
+
+	const formTitle = formType === "early-access" ? "Become an Early Access Partner" : "Request a Demo"
+
+	const formDescription =
+		formType === "early-access"
+			? "Fill out the form below to collaborate in shaping Researcherry Code's enterprise solution."
+			: "Fill out the form below to see Researcherry Code's enterprise capabilities in action."
+
+	// Get Basin endpoint from environment variable
+	// This should be set in .env.local as NEXT_PUBLIC_BASIN_ENDPOINT="https://usebasin.com/f/your-form-id"
+	const BASIN_ENDPOINT = process.env.NEXT_PUBLIC_BASIN_ENDPOINT || ""
+
+	// Check if Basin endpoint is configured
+	if (!BASIN_ENDPOINT) {
+		console.warn("NEXT_PUBLIC_BASIN_ENDPOINT is not configured. Form submissions will not work.")
+	}
+
+	const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
+		e.preventDefault()
+		setIsSubmitting(true)
+		setFormErrors({})
+		setSubmitStatus("idle")
+
+		const form = e.currentTarget
+		const formData = new FormData(form)
+
+		// Create a data object for validation and submission
+		const data = {
+			name: formData.get("name") as string,
+			company: formData.get("company") as string,
+			email: formData.get("email") as string,
+			website: formData.get("website") as string,
+			engineerCount: formData.get("engineerCount") as string,
+			formType,
+			// Include honeypot field for spam protection
+			_honeypot: formData.get("_honeypot") as string,
+		}
+
+		// Validate form data on client side
+		try {
+			contactFormSchema.parse(data)
+
+			// Submit data to Basin
+			try {
+				const response = await fetch(BASIN_ENDPOINT, {
+					method: "POST",
+					headers: {
+						"Content-Type": "application/json",
+						Accept: "application/json",
+					},
+					mode: "cors", // Ensure proper CORS handling
+					body: JSON.stringify(data),
+				})
+
+				// Basin returns a 200 status code on success
+				if (response.ok) {
+					try {
+						const responseData = await response.json()
+
+						// Basin JSON API typically returns a 'status' property of 'success' when submission succeeds
+						if (responseData && (responseData.success === true || responseData.status === "success")) {
+							setSubmitStatus("success")
+							// Reset form safely
+							if (form) {
+								form.reset()
+							}
+						} else {
+							console.error("Basin error:", responseData)
+							setSubmitStatus("error")
+						}
+					} catch (jsonError) {
+						// In case response parsing fails but status was OK, assume success
+						console.error("Error parsing JSON response:", jsonError)
+						setSubmitStatus("success")
+						if (form) {
+							form.reset()
+						}
+					}
+				} else {
+					// Handle error response from Basin (4xx or 5xx)
+					try {
+						const errorData = await response.json()
+						console.error("Basin API error:", response.status, errorData)
+					} catch {
+						console.error("Basin returned error status:", response.status)
+					}
+					setSubmitStatus("error")
+				}
+			} catch (error) {
+				console.error("Error submitting form:", error)
+				setSubmitStatus("error")
+			}
+		} catch (error) {
+			if (error instanceof z.ZodError) {
+				const errors: Record<string, string> = {}
+				error.errors.forEach((err) => {
+					if (err.path[0]) {
+						errors[err.path[0] as string] = err.message
+					}
+				})
+				setFormErrors(errors)
+			} else {
+				setSubmitStatus("error")
+			}
+		} finally {
+			setIsSubmitting(false)
+		}
+	}
+
+	return (
+		<Dialog open={isOpen} onOpenChange={setIsOpen}>
+			<DialogTrigger asChild>
+				<Button className={buttonClassName || ""}>{buttonText}</Button>
+			</DialogTrigger>
+			<DialogContent className="sm:max-w-[425px]">
+				<DialogHeader>
+					<DialogTitle>{formTitle}</DialogTitle>
+					<DialogDescription>{formDescription}</DialogDescription>
+				</DialogHeader>
+
+				{submitStatus === "success" ? (
+					<div className="flex flex-col items-center justify-center py-6">
+						<div className="mb-4 rounded-full bg-green-100 p-3 text-green-600 dark:bg-green-900/20 dark:text-green-400">
+							<svg
+								xmlns="http://www.w3.org/2000/svg"
+								className="h-6 w-6"
+								fill="none"
+								viewBox="0 0 24 24"
+								stroke="currentColor">
+								<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
+							</svg>
+						</div>
+						<h3 className="mb-2 text-xl font-bold">Thank You!</h3>
+						<p className="text-center text-muted-foreground">
+							Your information has been submitted successfully. Our team will be in touch with you
+							shortly.
+						</p>
+						<Button className="mt-4" onClick={() => setIsOpen(false)}>
+							Close
+						</Button>
+					</div>
+				) : (
+					<form ref={formRef} onSubmit={handleSubmit} className="space-y-4" data-basin-form>
+						{/* Basin honeypot field for spam protection - should remain empty and hidden */}
+						<input type="text" name="_honeypot" className="hidden" style={{ display: "none" }} />
+						<div className="space-y-2">
+							<label htmlFor="name" className="text-sm font-medium">
+								Name <span className="text-red-500">*</span>
+							</label>
+							<input
+								id="name"
+								name="name"
+								type="text"
+								className={`w-full rounded-md border ${
+									formErrors.name ? "border-red-500" : "border-input"
+								} bg-background px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-ring`}
+								placeholder="Your name"
+							/>
+							{formErrors.name && <p className="text-xs text-red-500">{formErrors.name}</p>}
+						</div>
+
+						<div className="space-y-2">
+							<label htmlFor="company" className="text-sm font-medium">
+								Company <span className="text-red-500">*</span>
+							</label>
+							<input
+								id="company"
+								name="company"
+								type="text"
+								className={`w-full rounded-md border ${
+									formErrors.company ? "border-red-500" : "border-input"
+								} bg-background px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-ring`}
+								placeholder="Your company"
+							/>
+							{formErrors.company && <p className="text-xs text-red-500">{formErrors.company}</p>}
+						</div>
+
+						<div className="space-y-2">
+							<label htmlFor="email" className="text-sm font-medium">
+								Email <span className="text-red-500">*</span>
+							</label>
+							<input
+								id="email"
+								name="email"
+								type="email"
+								className={`w-full rounded-md border ${
+									formErrors.email ? "border-red-500" : "border-input"
+								} bg-background px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-ring`}
+								placeholder="your.email@example.com"
+							/>
+							{formErrors.email && <p className="text-xs text-red-500">{formErrors.email}</p>}
+						</div>
+
+						<div className="space-y-2">
+							<label htmlFor="website" className="text-sm font-medium">
+								Website
+							</label>
+							<input
+								id="website"
+								name="website"
+								type="url"
+								className={`w-full rounded-md border ${
+									formErrors.website ? "border-red-500" : "border-input"
+								} bg-background px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-ring`}
+								placeholder="https://example.com"
+							/>
+							{formErrors.website && <p className="text-xs text-red-500">{formErrors.website}</p>}
+						</div>
+
+						<div className="space-y-2">
+							<label htmlFor="engineerCount" className="text-sm font-medium">
+								Number of Software Engineers <span className="text-red-500">*</span>
+							</label>
+							<select
+								id="engineerCount"
+								name="engineerCount"
+								className={`w-full rounded-md border ${
+									formErrors.engineerCount ? "border-red-500" : "border-input"
+								} bg-background px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-ring`}
+								defaultValue="1-10">
+								<option value="1-10">1-10</option>
+								<option value="11-50">11-50</option>
+								<option value="51-200">51-200</option>
+								<option value="201-500">201-500</option>
+								<option value="501-1000">501-1000</option>
+								<option value="1000+">1000+</option>
+							</select>
+							{formErrors.engineerCount && (
+								<p className="text-xs text-red-500">{formErrors.engineerCount}</p>
+							)}
+						</div>
+
+						{submitStatus === "error" && (
+							<div className="rounded-md bg-red-50 p-3 text-sm text-red-500 dark:bg-red-900/20">
+								There was an error submitting your request. Please try again later.
+							</div>
+						)}
+
+						<DialogFooter>
+							<Button type="button" variant="outline" onClick={() => setIsOpen(false)}>
+								Cancel
+							</Button>
+							<Button type="submit" disabled={isSubmitting}>
+								{isSubmitting ? "Submitting..." : "Submit"}
+							</Button>
+						</DialogFooter>
+					</form>
+				)}
+			</DialogContent>
+		</Dialog>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/animated-background.tsx b/apps/web-researcherry/src/components/homepage/animated-background.tsx
new file mode 100644
index 000000000..7d67f4542
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/animated-background.tsx
@@ -0,0 +1,280 @@
+"use client"
+
+import { useEffect, useRef } from "react"
+
+export function AnimatedBackground() {
+	const canvasRef = useRef<HTMLCanvasElement>(null)
+
+	useEffect(() => {
+		const canvas = canvasRef.current
+		if (!canvas) return
+
+		const ctx = canvas.getContext("2d")
+		if (!ctx) return
+
+		// grid settings
+		const gridSize = 50
+		const gridOpacity = 0.15
+
+		// initialize gradient points for lighting effects
+		let gradientPoints = [
+			{
+				x: canvas.width * 0.2,
+				y: canvas.height * 0.3,
+				radius: canvas.width * 0.4,
+				color: "rgba(0, 100, 255, 0.15)",
+			},
+			{
+				x: canvas.width * 0.8,
+				y: canvas.height * 0.7,
+				radius: canvas.width * 0.5,
+				color: "rgba(100, 0, 255, 0.1)",
+			},
+		]
+
+		// particle system
+		const particles: Particle[] = []
+		const particleCount = Math.min(50, Math.floor(window.innerWidth / 40))
+
+		// set canvas dimensions
+		const resizeCanvas = () => {
+			canvas.width = window.innerWidth
+			canvas.height = window.innerHeight
+
+			// update gradient points when canvas is resized
+			gradientPoints = [
+				{
+					x: canvas.width * 0.2,
+					y: canvas.height * 0.3,
+					radius: canvas.width * 0.4,
+					color: "rgba(0, 100, 255, 0.15)",
+				},
+				{
+					x: canvas.width * 0.8,
+					y: canvas.height * 0.7,
+					radius: canvas.width * 0.5,
+					color: "rgba(100, 0, 255, 0.1)",
+				},
+			]
+
+			// redraw grid after resize
+			drawGrid()
+		}
+
+		resizeCanvas()
+		window.addEventListener("resize", resizeCanvas)
+
+		// draw grid with perspective effect
+		function drawGrid() {
+			if (!ctx) {
+				throw new Error("Context is null (not initialized?)")
+			}
+
+			if (!canvas) {
+				throw new Error("Canvas is null (not initialized?)")
+			}
+
+			ctx.clearRect(0, 0, canvas.width, canvas.height)
+
+			// Draw gradient lighting effects.
+			gradientPoints.forEach((point) => {
+				const gradient = ctx.createRadialGradient(point.x, point.y, 0, point.x, point.y, point.radius)
+				gradient.addColorStop(0, point.color)
+				gradient.addColorStop(1, "rgba(0, 0, 0, 0)")
+
+				ctx.fillStyle = gradient
+				ctx.fillRect(0, 0, canvas.width, canvas.height)
+			})
+
+			// Draw grid lines with perspective effect.
+			ctx.strokeStyle = `rgba(50, 50, 70, ${gridOpacity})`
+			ctx.lineWidth = 0.5
+
+			// horizontal lines with perspective.
+			const horizonY = canvas.height * 0.7 // Horizon point.
+			const vanishingPointX = canvas.width * 0.5 // Center vanishing point.
+
+			// Vertical lines.
+			for (let x = 0; x <= canvas.width; x += gridSize) {
+				const normalizedX = x / canvas.width - 0.5 // -0.5 to 0.5
+
+				ctx.beginPath()
+				ctx.moveTo(x, 0)
+
+				// Calculate curve based on distance from center.
+				const curveStrength = 50 * Math.abs(normalizedX)
+				const controlPointY = horizonY - curveStrength
+
+				// Create curved line toward vanishing point.
+				ctx.quadraticCurveTo(
+					x + (vanishingPointX - x) * 0.3,
+					controlPointY,
+					vanishingPointX + (x - vanishingPointX) * 0.2,
+					horizonY,
+				)
+
+				ctx.stroke()
+			}
+
+			// Horizontal lines.
+			for (let y = 0; y <= horizonY; y += gridSize) {
+				const normalizedY = y / horizonY // 0 to 1
+				const lineWidth = gridSize * (1 + normalizedY * 5) // lines get wider as they get closer
+
+				ctx.beginPath()
+				ctx.moveTo(vanishingPointX - lineWidth, y)
+				ctx.lineTo(vanishingPointX + lineWidth, y)
+				ctx.stroke()
+			}
+
+			updateParticles()
+		}
+
+		class Particle {
+			x: number
+			y: number
+			size: number
+			speedX: number
+			speedY: number
+			color: string
+			opacity: number
+
+			constructor() {
+				if (!canvas) {
+					throw new Error("Canvas is null (not initialized?)")
+				}
+
+				this.x = Math.random() * canvas.width
+				this.y = Math.random() * (canvas.height * 0.7) // Keep particles above horizon.
+				this.size = Math.random() * 2 + 1
+				this.speedX = (Math.random() - 0.5) * 0.8
+				this.speedY = (Math.random() - 0.5) * 0.8
+				this.color = "rgba(100, 150, 255, "
+				this.opacity = Math.random() * 0.5 + 0.2
+			}
+
+			update() {
+				if (!canvas) {
+					throw new Error("Canvas is null (not initialized?)")
+				}
+
+				this.x += this.speedX
+				this.y += this.speedY
+
+				// Boundary check.
+				if (this.x > canvas.width) this.x = 0
+				else if (this.x < 0) this.x = canvas.width
+				if (this.y > canvas.height * 0.7) this.y = 0
+				else if (this.y < 0) this.y = canvas.height * 0.7
+
+				// Pulsate opacity.
+				this.opacity += Math.sin(Date.now() * 0.001) * 0.01
+				this.opacity = Math.max(0.1, Math.min(0.7, this.opacity))
+			}
+
+			draw() {
+				if (!ctx) {
+					throw new Error("Context is null (not initialized?)")
+				}
+
+				ctx.fillStyle = `${this.color}${this.opacity})`
+				ctx.beginPath()
+				ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2)
+				ctx.fill()
+			}
+		}
+
+		// Initialize particles.
+		for (let i = 0; i < particleCount; i++) {
+			particles.push(new Particle())
+		}
+
+		// Connect particles with lines.
+		function connectParticles() {
+			if (!ctx) {
+				throw new Error("Context is null (not initialized?)")
+			}
+
+			const maxDistance = 150
+
+			for (let a = 0; a < particles.length; a++) {
+				for (let b = a; b < particles.length; b++) {
+					const dx = particles[a]!.x - particles[b]!.x
+					const dy = particles[a]!.y - particles[b]!.y
+					const distance = Math.sqrt(dx * dx + dy * dy)
+
+					if (distance < maxDistance) {
+						const opacity = (1 - distance / maxDistance) * 0.5
+						ctx.strokeStyle = `rgba(100, 150, 255, ${opacity})`
+						ctx.lineWidth = 0.5
+						ctx.beginPath()
+						ctx.moveTo(particles[a]!.x, particles[a]!.y)
+						ctx.lineTo(particles[b]!.x, particles[b]!.y)
+						ctx.stroke()
+					}
+				}
+			}
+		}
+
+		function updateParticles() {
+			particles.forEach((particle) => {
+				particle.update()
+				particle.draw()
+			})
+
+			connectParticles()
+		}
+
+		// Animation loop.
+		let animationId: number
+
+		// Target position for smooth following.
+		let targetX = canvas.width * 0.2
+		let targetY = canvas.height * 0.3
+		const moveSpeed = 0.05 // Adjust this value to control movement speed (0-1).
+
+		// Move gradient points with mouse.
+		const handleMouseMove = (e: MouseEvent) => {
+			targetX = e.clientX
+			targetY = e.clientY
+		}
+
+		// Update gradient point position in animation loop.
+		function updateGradientPosition() {
+			if (!canvas) throw new Error("Canvas is null (not initialized?)")
+
+			// Calculate direction vector.
+			const dx = targetX - gradientPoints[0]!.x
+			const dy = targetY - gradientPoints[0]!.y
+
+			// Smooth movement using linear interpolation.
+			gradientPoints[0]!.x += dx * moveSpeed
+			gradientPoints[0]!.y += dy * moveSpeed
+
+			// Adjust radius based on distance to target.
+			const distanceToTarget = Math.sqrt(dx * dx + dy * dy)
+			gradientPoints[0]!.radius = Math.max(
+				canvas.width * 0.2,
+				Math.min(canvas.width * 0.4, canvas.width * 0.3 + distanceToTarget * 0.1),
+			)
+		}
+
+		function animate() {
+			animationId = requestAnimationFrame(animate)
+			updateGradientPosition()
+			drawGrid()
+		}
+
+		animate()
+
+		window.addEventListener("mousemove", handleMouseMove)
+
+		return () => {
+			window.removeEventListener("resize", resizeCanvas)
+			window.removeEventListener("mousemove", handleMouseMove)
+			cancelAnimationFrame(animationId)
+		}
+	}, [])
+
+	return <canvas ref={canvasRef} className="absolute inset-0 h-full w-full" style={{ zIndex: 0 }} />
+}
diff --git a/apps/web-researcherry/src/components/homepage/code-example.tsx b/apps/web-researcherry/src/components/homepage/code-example.tsx
new file mode 100644
index 000000000..d1b1f71a1
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/code-example.tsx
@@ -0,0 +1,236 @@
+"use client"
+
+import { useState, useEffect, useRef } from "react"
+import { motion } from "framer-motion"
+
+export function CodeExample() {
+	const [currentMode, setCurrentMode] = useState<"code" | "architect" | "debug">("code")
+	const [isTyping, setIsTyping] = useState(false)
+	const [currentText, setCurrentText] = useState("")
+	const [textIndex, setTextIndex] = useState(0)
+	const codeContainerRef = useRef<HTMLPreElement>(null)
+
+	// simulate typing effect
+	useEffect(() => {
+		if (isTyping && textIndex < codeExamples[currentMode].code.length) {
+			const timer = setTimeout(() => {
+				setCurrentText((prev) => prev + codeExamples[currentMode].code[textIndex])
+				setTextIndex(textIndex + 1)
+
+				// Auto-scroll to the bottom
+				if (codeContainerRef.current) {
+					codeContainerRef.current.scrollTop = codeContainerRef.current.scrollHeight
+				}
+			}, 15) // adjust speed as needed
+			return () => clearTimeout(timer)
+		} else if (textIndex >= codeExamples[currentMode].code.length) {
+			setIsTyping(false)
+			// switch to next mode after a delay
+			const timer = setTimeout(() => {
+				const nextMode = currentMode === "code" ? "architect" : currentMode === "architect" ? "debug" : "code"
+				switchMode(nextMode)
+			}, 1000) // wait a second before switching
+			return () => clearTimeout(timer)
+		}
+	}, [isTyping, textIndex, currentMode])
+
+	// switch modes with typing effect
+	const switchMode = (mode: "code" | "architect" | "debug") => {
+		setCurrentMode(mode)
+		setCurrentText("")
+		setTextIndex(0)
+		setIsTyping(true)
+
+		// Reset scroll position when switching modes
+		if (codeContainerRef.current) {
+			codeContainerRef.current.scrollTop = 0
+		}
+	}
+
+	// start typing on initial load
+	useEffect(() => {
+		setIsTyping(true)
+	}, [])
+
+	return (
+		<div className="relative z-10 w-full max-w-[90vw] rounded-lg border border-border bg-background/50 p-2 shadow-2xl backdrop-blur-sm sm:max-w-[500px]">
+			<div className="rounded-md bg-muted p-1.5 dark:bg-gray-900 sm:p-2">
+				<div className="flex items-center justify-between border-b border-border px-2 py-1.5 sm:px-3 sm:py-2">
+					<div className="flex items-center space-x-1.5">
+						<div className="h-2.5 w-2.5 rounded-full bg-red-500 sm:h-3 sm:w-3" />
+						<div className="h-2.5 w-2.5 rounded-full bg-yellow-500 sm:h-3 sm:w-3" />
+						<div className="h-2.5 w-2.5 rounded-full bg-green-500 sm:h-3 sm:w-3" />
+					</div>
+					<div className="flex space-x-1">
+						<button
+							onClick={() => switchMode("code")}
+							className={`rounded px-2 py-0.5 text-xs font-medium transition-colors sm:text-sm ${currentMode === "code" ? "bg-blue-500/20 text-blue-400" : "text-gray-400 hover:bg-gray-800"}`}>
+							Code
+						</button>
+						<button
+							onClick={() => switchMode("architect")}
+							className={`rounded px-2 py-0.5 text-xs font-medium transition-colors sm:text-sm ${currentMode === "architect" ? "bg-purple-500/20 text-purple-400" : "text-gray-400 hover:bg-gray-800"}`}>
+							Architect
+						</button>
+						<button
+							onClick={() => switchMode("debug")}
+							className={`rounded px-2 py-0.5 text-xs font-medium transition-colors sm:text-sm ${currentMode === "debug" ? "bg-green-500/20 text-green-400" : "text-gray-400 hover:bg-gray-800"}`}>
+							Debug
+						</button>
+					</div>
+				</div>
+				<div className="p-2 sm:p-4">
+					<pre
+						ref={codeContainerRef}
+						className="scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-transparent overflow-y-hidden text-xs text-muted-foreground max-lg:h-[25vh] sm:text-sm lg:max-h-[50vh]">
+						<code className="block whitespace-pre font-mono">
+							{currentText}
+							{isTyping && (
+								<motion.span
+									animate={{ opacity: [1, 0] }}
+									transition={{ repeat: Number.POSITIVE_INFINITY, duration: 0.8 }}
+									className="inline-block h-4 w-2 bg-blue-500"
+								/>
+							)}
+						</code>
+					</pre>
+				</div>
+			</div>
+		</div>
+	)
+}
+
+const codeExamples = {
+	code: {
+		code: `// Code Mode
+You: Generate a React component for a user profile card
+
+Roo: Here's a React component for a user profile card:
+
+import React from 'react';
+
+interface UserProfileProps {
+  name: string;
+  role: string;
+  avatar: string;
+  bio: string;
+  stats: {
+    projects: number;
+    followers: number;
+    following: number;
+  };
+}
+
+export const UserProfile: React.FC<UserProfileProps> = ({
+  name,
+  role,
+  avatar,
+  bio,
+  stats
+}) => {
+  return (
+    <div className="bg-white rounded-lg shadow-md p-6 max-w-sm">
+      <div className="flex items-center space-x-4">
+        <img 
+          src={avatar || "/placeholder.svg"} 
+          alt={name} 
+          className="w-16 h-16 rounded-full object-cover"
+        />
+        <div>
+          <h3 className="text-xl font-bold">{name}</h3>
+          <p className="text-gray-600">{role}</p>
+        </div>
+      </div>
+      <p className="mt-4 text-gray-700">{bio}</p>
+      <div className="mt-6 flex justify-between">
+        <div className="text-center">
+          <span className="block font-bold">{stats.projects}</span>
+          <span className="text-sm text-gray-500">Projects</span>
+        </div>
+        <div className="text-center">
+          <span className="block font-bold">{stats.followers}</span>
+          <span className="text-sm text-gray-500">Followers</span>
+        </div>
+        <div className="text-center">
+          <span className="block font-bold">{stats.following}</span>
+          <span className="text-sm text-gray-500">Following</span>
+        </div>
+      </div>
+    </div>
+  );
+};`,
+	},
+	architect: {
+		code: `// Architect Mode
+// Project: E-commerce Platform
+// Request: Design the authentication system
+
+Roo is analyzing your project...
+
+📂 Recommended Architecture:
+
+auth/
+├─ services/
+│  ├─ authService.ts       // Core authentication logic
+│  ├─ tokenService.ts      // JWT handling and refresh
+│  └─ userService.ts       // User data operations
+├─ hooks/
+│  ├─ useAuth.ts           // React hook for auth state
+│  └─ useProtectedRoute.ts // Route protection
+├─ components/
+│  ├─ LoginForm.tsx        // Login UI
+│  ├─ SignupForm.tsx       // Registration UI
+│  ├─ PasswordReset.tsx    // Password recovery
+│  └─ TwoFactorAuth.tsx    // 2FA implementation
+└─ context/
+   └─ AuthContext.tsx      // Global auth state
+
+🔐 Security Recommendations:
+- Implement PKCE flow for auth code exchange
+- Use HttpOnly cookies for refresh tokens
+- Rate limit authentication attempts
+- Add device fingerprinting for suspicious login detection
+
+⚡ Performance Considerations:
+- Prefetch user data on auth
+- Implement token refresh without UI disruption
+- Lazy load auth components
+
+Would you like me to generate any of these files?`,
+	},
+	debug: {
+		code: `// Debug Mode
+// Analyzing error: TypeError: Cannot read property 'map' of undefined
+
+Roo has analyzed your code and found 3 issues:
+
+🐛 Issue #1: Null data reference
+  Line 42: const items = data.items.map(item => item.name);
+  
+  ✓ Root Cause: 'data' is undefined when component mounts
+  ✓ Context: API request in useEffect hasn't completed yet
+  
+  Recommended Fix:
+  const items = data?.items?.map(item => item.name) || [];
+
+🐛 Issue #2: Missing dependency in useEffect
+  Line 37: useEffect(() => { fetchData() }, []);
+  
+  ✓ Root Cause: fetchData depends on 'userId' but isn't in deps array
+  ✓ Context: This causes stale data when userId changes
+  
+  Recommended Fix:
+  useEffect(() => { fetchData() }, [userId, fetchData]);
+
+🐛 Issue #3: Memory leak from unfinished API call
+  Line 38: const response = await api.getItems(userId);
+  
+  ✓ Root Cause: No cleanup when component unmounts during API call
+  ✓ Context: This triggers React warning in development
+  
+  Recommended Fix:
+  Add AbortController to cancel pending requests on unmount
+
+Apply these fixes automatically? [Yes/No]`,
+	},
+}
diff --git a/apps/web-researcherry/src/components/homepage/company-logos.tsx b/apps/web-researcherry/src/components/homepage/company-logos.tsx
new file mode 100644
index 000000000..cedc68175
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/company-logos.tsx
@@ -0,0 +1,40 @@
+"use client"
+
+import { motion } from "framer-motion"
+
+export function CompanyLogos() {
+	const logos = [
+		{ name: "Company 1", logo: "/placeholder.svg?height=40&width=120" },
+		{ name: "Company 2", logo: "/placeholder.svg?height=40&width=120" },
+		{ name: "Company 3", logo: "/placeholder.svg?height=40&width=120" },
+		{ name: "Company 4", logo: "/placeholder.svg?height=40&width=120" },
+		{ name: "Company 5", logo: "/placeholder.svg?height=40&width=120" },
+		{ name: "Company 6", logo: "/placeholder.svg?height=40&width=120" },
+	]
+
+	return (
+		<div className="mt-10">
+			<div className="mx-auto grid max-w-5xl grid-cols-2 gap-8 py-8 md:grid-cols-3 lg:grid-cols-6">
+				{logos.map((company, index) => (
+					<motion.div
+						key={index}
+						initial={{ opacity: 0, y: 20 }}
+						animate={{ opacity: 1, y: 0 }}
+						transition={{
+							duration: 0.5,
+							delay: index * 0.1,
+							ease: "easeOut",
+						}}
+						className="flex items-center justify-center">
+						{/* eslint-disable @next/next/no-img-element */}
+						<img
+							src={company.logo || "/placeholder.svg"}
+							alt={company.name}
+							className="h-10 w-auto opacity-70 grayscale transition-all duration-300 hover:opacity-100 hover:grayscale-0"
+						/>
+					</motion.div>
+				))}
+			</div>
+		</div>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/faq-section.tsx b/apps/web-researcherry/src/components/homepage/faq-section.tsx
new file mode 100644
index 000000000..c8b7ca356
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/faq-section.tsx
@@ -0,0 +1,305 @@
+"use client"
+
+import { useState } from "react"
+import { motion } from "framer-motion"
+import { ChevronDown } from "lucide-react"
+import { cn } from "@/lib/utils"
+import Link from "next/link"
+
+interface FAQItem {
+	question: string
+	answer: React.ReactNode
+}
+
+const faqs: FAQItem[] = [
+	{
+		question: "What exactly is Researcherry Code?",
+		answer: (
+			<>
+				Researcherry Code is an open-source, AI-powered coding assistant that runs in VS Code. It goes beyond simple
+				autocompletion by reading and writing across multiple files, executing commands, and adapting to your
+				workflow—like having a whole dev team right inside your editor.
+			</>
+		),
+	},
+	{
+		question: "How does Researcherry Code differ from Copilot, Cursor, or Windsurf?",
+		answer: (
+			<>
+				Researcherry Code is <strong>open-source and fully customizable</strong>, letting you integrate any AI model
+				you choose (e.g, OpenAI, Anthropic, local LLMs, etc.). It&apos;s built for{" "}
+				<strong>multi-file edits</strong>, so it can read, refactor, and update multiple files at once for
+				holistic code changes. Its <strong>agentic abilities</strong> go beyond a typical AI autocomplete,
+				enabling it to run tests, open a browser, and handle deeper tasks. And you&apos;re always in control:
+				Researcherry Code is <strong>permission-based</strong>, meaning you can control and approve any file changes or
+				command executions.
+			</>
+		),
+	},
+	{
+		question: "Is Researcherry Code really free?",
+		answer: (
+			<>
+				Yes! Researcherry Code is completely free and open-source. You&apos;ll only pay for the AI model usage if you
+				use a paid API (like OpenAI). If you choose free or self-hosted models, there&apos;s no cost at all.
+			</>
+		),
+	},
+	{
+		question: "Will my code stay private?",
+		answer: (
+			<>
+				Yes. Because Researcherry Code is an extension in your local VS Code, your code never leaves your machine
+				unless you connect to an external AI API. Even then, you control exactly what is sent to the AI model.
+				You can use tools like .rooignore to exclude sensitive files, and you can also run Researcherry Code with
+				offline/local models for full privacy.
+			</>
+		),
+	},
+	{
+		question: "Which AI models does Researcherry Code support?",
+		answer: (
+			<>
+				Researcherry Code is fully model-agnostic, giving you the flexibility to work with whatever AI models you
+				prefer. It supports OpenAI models (like GPT-4o, GPT-4, and o1), Anthropic&apos;s Claude (including
+				Claude 3.5 Sonnet), Google&apos;s Gemini models, and local LLMs via APIs or specialized plugins. You can
+				even connect any other model that follows Researcherry Code&apos;s Model Context Protocol (MCP).
+			</>
+		),
+	},
+	{
+		question: "Does Researcherry Code support my programming language?",
+		answer: (
+			<>
+				Likely yes! Researcherry Code supports a wide range of languages—Python, Java, C#, JavaScript/TypeScript, Go,
+				Rust, etc. Since it leverages the AI model&apos;s understanding, new or lesser-known languages may also
+				work, depending on model support.
+			</>
+		),
+	},
+	{
+		question: "How do I install and get started?",
+		answer: (
+			<>
+				Install Researcherry Code from the{" "}
+				<a
+					href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					VS Code Marketplace
+				</a>{" "}
+				(or GitHub). Add your AI keys (OpenAI, Anthropic, or other) in the extension settings. Open the Roo
+				panel (the rocket icon) in VS Code, and start typing commands in plain English!{" "}
+				<a
+					href="https://docs.roocode.com/tutorial-videos"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Watch our tutorial to help you get started.
+				</a>
+			</>
+		),
+	},
+	{
+		question: "Can it handle large, enterprise-scale projects?",
+		answer: (
+			<>
+				Absolutely. Researcherry Code uses efficient strategies (like partial-file analysis, summarization, or
+				user-specified context) to handle large codebases. Enterprises especially appreciate the on-prem or
+				self-hosted model option for compliance and security needs.{" "}
+				<Link href="/enterprise" className="text-primary underline-offset-4 hover:underline">
+					Learn more about Researcherry Code for enterprise.
+				</Link>
+			</>
+		),
+	},
+	{
+		question: "Is it safe for enterprise use?",
+		answer: (
+			<>
+				Yes. Researcherry Code was built for enterprise environments. You can self-host AI models or use your own
+				trusted provider. All file changes and commands go through permission gating, so nothing runs without
+				your approval. And because Researcherry Code is fully open-source, it&apos;s auditable—you can review exactly
+				how it works before deploying it.{" "}
+				<a
+					href="https://roocode.com/enterprise"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Learn more about Researcherry Code for enterprise.
+				</a>
+			</>
+		),
+	},
+	{
+		question: "Can Researcherry Code run commands and tests automatically?",
+		answer: (
+			<>
+				Yes! One of Researcherry Code&apos;s biggest strengths is its ability to execute commands—always optional and
+				fully permission-based. It can run terminal commands like npm install, execute your test suites, and
+				even open a web browser for integration testing when you approve it.
+			</>
+		),
+	},
+	{
+		question: "What if I just want a casual coding 'vibe'?",
+		answer: (
+			<>
+				Researcherry Code shines for both serious enterprise development and casual &quot;vibe coding.&quot; You can
+				ask it to quickly prototype ideas, refactor on the fly, or provide design suggestions—without a rigid,
+				step-by-step process.
+			</>
+		),
+	},
+	{
+		question: "Can I contribute to Researcherry Code?",
+		answer: (
+			<>
+				Yes, please do! Researcherry Code is open-source on{" "}
+				<a
+					href="https://github.com/RooCodeInc/Roo-Code"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					GitHub
+				</a>
+				. Submit issues, suggest features, or open a pull request. There&apos;s also an active community on{" "}
+				<a
+					href="https://discord.gg/roocode"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Discord
+				</a>{" "}
+				and{" "}
+				<a
+					href="https://reddit.com/r/RooCode"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Reddit
+				</a>{" "}
+				if you want to share feedback or help others.
+			</>
+		),
+	},
+	{
+		question: "Where can I learn more or get help?",
+		answer: (
+			<>
+				Check out our{" "}
+				<a
+					href="https://docs.roocode.com"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					official documentation
+				</a>{" "}
+				for both a quick-start set up and advanced guides. You can also get community support on{" "}
+				<a
+					href="https://discord.gg/roocode"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Discord
+				</a>{" "}
+				and{" "}
+				<a
+					href="https://reddit.com/r/RooCode"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					Reddit
+				</a>
+				. You can also check out our{" "}
+				<a
+					href="https://www.youtube.com/@RooCodeYT"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					YouTube
+				</a>{" "}
+				tutorials and{" "}
+				<a
+					href="https://blog.roocode.com"
+					target="_blank"
+					rel="noopener noreferrer"
+					className="text-primary underline-offset-4 hover:underline">
+					blog posts
+				</a>{" "}
+				from fellow developers showcasing real-world usage.
+			</>
+		),
+	},
+]
+
+export function FAQSection() {
+	const [openIndex, setOpenIndex] = useState<number | null>(null)
+
+	const toggleFAQ = (index: number) => {
+		setOpenIndex(openIndex === index ? null : index)
+	}
+
+	return (
+		<section id="faq-section" className="border-t border-border py-20">
+			<div className="container mx-auto px-4 sm:px-6 lg:px-8">
+				<div className="mx-auto mb-24 max-w-3xl text-center">
+					<motion.div
+						initial={{ opacity: 0, y: 20 }}
+						whileInView={{ opacity: 1, y: 0 }}
+						viewport={{ once: true }}
+						transition={{
+							duration: 0.6,
+							ease: [0.21, 0.45, 0.27, 0.9],
+						}}>
+						<h2 className="text-4xl font-bold tracking-tight sm:text-5xl">Frequently Asked Questions</h2>
+						<p className="mt-6 text-lg text-muted-foreground max-w-2xl mx-auto">
+							Everything you need to know about Researcherry Code and how it can transform your development
+							workflow.
+						</p>
+					</motion.div>
+				</div>
+
+				<div className="mx-auto max-w-3xl">
+					<div className="space-y-4">
+						{faqs.map((faq, index) => (
+							<motion.div
+								key={index}
+								initial={{ opacity: 0, y: 20 }}
+								whileInView={{ opacity: 1, y: 0 }}
+								viewport={{ once: true }}
+								transition={{
+									duration: 0.5,
+									delay: index * 0.1,
+									ease: [0.21, 0.45, 0.27, 0.9],
+								}}>
+								<div className="group relative rounded-lg border border-border/50 bg-background/30 backdrop-blur-xl transition-all duration-300 hover:border-border">
+									<button
+										onClick={() => toggleFAQ(index)}
+										className="flex w-full items-center justify-between p-6 text-left"
+										aria-expanded={openIndex === index}>
+										<h3 className="text-lg font-medium text-foreground/90">{faq.question}</h3>
+										<ChevronDown
+											className={cn(
+												"h-5 w-5 text-muted-foreground transition-transform duration-200",
+												openIndex === index ? "rotate-180" : "",
+											)}
+										/>
+									</button>
+									<div
+										className={cn(
+											"overflow-hidden transition-all duration-300 ease-in-out",
+											openIndex === index ? "max-h-96 pb-6" : "max-h-0",
+										)}>
+										<div className="px-6 text-muted-foreground">{faq.answer}</div>
+									</div>
+								</div>
+							</motion.div>
+						))}
+					</div>
+				</div>
+			</div>
+		</section>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/features-mobile.tsx b/apps/web-researcherry/src/components/homepage/features-mobile.tsx
new file mode 100644
index 000000000..e924afd4b
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/features-mobile.tsx
@@ -0,0 +1,113 @@
+"use client"
+
+import { useEffect, useState, useCallback } from "react"
+import useEmblaCarousel from "embla-carousel-react"
+import Autoplay from "embla-carousel-autoplay"
+import { Button } from "@/components/ui/button"
+import { ChevronLeft, ChevronRight } from "lucide-react"
+import { features } from "@/components/homepage/features"
+
+export function FeaturesMobile() {
+	// configure autoplay with Embla
+	const autoplayPlugin = Autoplay({
+		delay: 5000,
+		stopOnInteraction: true,
+		stopOnMouseEnter: true,
+		rootNode: (emblaRoot) => emblaRoot,
+	})
+
+	const [emblaRef, emblaApi] = useEmblaCarousel(
+		{
+			loop: true,
+			containScroll: "trimSnaps",
+		},
+		[autoplayPlugin],
+	)
+
+	const [selectedIndex, setSelectedIndex] = useState(0)
+	const [scrollSnaps, setScrollSnaps] = useState<number[]>([])
+
+	const scrollTo = useCallback((index: number) => emblaApi && emblaApi.scrollTo(index), [emblaApi])
+
+	/* eslint-disable  @typescript-eslint/no-explicit-any */
+	const onInit = useCallback((emblaApi: any) => {
+		setScrollSnaps(emblaApi.scrollSnapList())
+	}, [])
+
+	/* eslint-disable  @typescript-eslint/no-explicit-any */
+	const onSelect = useCallback((emblaApi: any) => {
+		setSelectedIndex(emblaApi.selectedScrollSnap())
+	}, [])
+
+	useEffect(() => {
+		if (!emblaApi) return
+
+		onInit(emblaApi)
+		onSelect(emblaApi)
+		emblaApi.on("reInit", onInit)
+		emblaApi.on("select", onSelect)
+
+		return () => {
+			emblaApi.off("reInit", onInit)
+			emblaApi.off("select", onSelect)
+		}
+	}, [emblaApi, onInit, onSelect])
+
+	return (
+		<div className="md:hidden">
+			<div className="relative px-4">
+				<div className="overflow-hidden" ref={emblaRef}>
+					<div className="flex">
+						{features.map((feature, index) => (
+							<div className="flex min-w-0 flex-[0_0_100%] px-4" key={index}>
+								<div className="relative h-full min-h-[280px] rounded-2xl border border-border/50 bg-background/30 p-6 backdrop-blur-xl transition-all duration-300 hover:border-border hover:bg-background/50 dark:hover:border-border/80 dark:hover:bg-background/40">
+									<div className="mb-2 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+										<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+											<div className="text-white">{feature.icon}</div>
+										</div>
+									</div>
+									<h3 className="mb-3 text-xl font-medium text-foreground/90">{feature.title}</h3>
+									<p className="leading-relaxed text-muted-foreground">{feature.description}</p>
+								</div>
+							</div>
+						))}
+					</div>
+				</div>
+
+				{/* Navigation Controls */}
+				<div className="mt-6 flex items-center justify-between px-4">
+					<div className="flex gap-2">
+						<Button
+							variant="outline"
+							size="icon"
+							className="h-8 w-8 rounded-full border-border/50 bg-background/80 hover:bg-background"
+							onClick={() => emblaApi?.scrollPrev()}>
+							<ChevronLeft className="h-4 w-4 text-foreground/80" />
+							<span className="sr-only">Previous slide</span>
+						</Button>
+						<Button
+							variant="outline"
+							size="icon"
+							className="h-8 w-8 rounded-full border-border/50 bg-background/80 hover:bg-background"
+							onClick={() => emblaApi?.scrollNext()}>
+							<ChevronRight className="h-4 w-4 text-foreground/80" />
+							<span className="sr-only">Next slide</span>
+						</Button>
+					</div>
+
+					<div className="flex gap-2">
+						{scrollSnaps.map((_, index) => (
+							<button
+								key={index}
+								type="button"
+								className={`h-3 w-3 rounded-full border border-border p-0 ${index === selectedIndex ? "bg-foreground" : "bg-background"}`}
+								onClick={() => scrollTo(index)}
+								aria-label={`Go to slide ${index + 1}`}
+							/>
+						))}
+					</div>
+				</div>
+			</div>
+		</div>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/features.tsx b/apps/web-researcherry/src/components/homepage/features.tsx
new file mode 100644
index 000000000..61586c615
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/features.tsx
@@ -0,0 +1,165 @@
+"use client"
+
+import { motion } from "framer-motion"
+import { Bot, Code, Brain, Wrench, Terminal, Puzzle, Globe, Shield, Zap } from "lucide-react"
+import { FeaturesMobile } from "./features-mobile"
+
+import { ReactNode } from "react"
+
+export interface Feature {
+	icon: ReactNode
+	title: string
+	description: string
+}
+
+export const features: Feature[] = [
+	{
+		icon: <Bot className="h-6 w-6 text-white" />,
+		title: "Your AI Dev Team in VS Code",
+		description:
+			"Researcherry Code puts a team of agentic AI assistants directly in your editor, with the power to plan, write, and fix code across multiple files.",
+	},
+	{
+		icon: <Code className="h-6 w-6 text-white" />,
+		title: "Multiple Specialized Modes",
+		description:
+			"From coding to debugging to architecture, Researcherry Code has a mode for every dev scenario—just switch on the fly.",
+	},
+	{
+		icon: <Brain className="h-6 w-6 text-white" />,
+		title: "Deep Project-wide Context",
+		description:
+			"Researcherry Code reads your entire codebase, preserving valid code through diff-based edits for seamless multi-file refactors.",
+	},
+	{
+		icon: <Wrench className="h-6 w-6 text-white" />,
+		title: "Open-Source and Model-Agnostic",
+		description:
+			"Bring your own model or use local AI—no vendor lock-in. Researcherry Code is free, open, and adaptable to your needs.",
+	},
+	{
+		icon: <Terminal className="h-6 w-6 text-white" />,
+		title: "Guarded Command Execution",
+		description:
+			"Approve or deny commands as needed. Researcherry Code automates your dev workflow while keeping oversight firmly in your hands.",
+	},
+	{
+		icon: <Puzzle className="h-6 w-6 text-white" />,
+		title: "Fully Customizable",
+		description:
+			"Create or tweak modes, define usage rules, and shape Researcherry Code's behavior precisely—your code, your way.",
+	},
+	{
+		icon: <Globe className="h-6 w-6 text-white" />,
+		title: "Automated Browser Actions",
+		description:
+			"Seamlessly test and verify your web app directly from VS Code—Researcherry Code can open a browser, run checks, and more.",
+	},
+	{
+		icon: <Shield className="h-6 w-6 text-white" />,
+		title: "Secure by Design",
+		description:
+			"Security-first from the ground up, Researcherry Code meets rigorous standards without slowing you down. Monitoring and strict policies keep your code safe at scale.",
+	},
+	{
+		icon: <Zap className="h-6 w-6 text-white" />,
+		title: "Seamless Setup and Workflows",
+		description:
+			"Get started in minutes—no heavy configs. Researcherry Code fits alongside your existing tools and dev flow, while supercharging your productivity.",
+	},
+]
+
+export function Features() {
+	const containerVariants = {
+		hidden: { opacity: 0 },
+		visible: {
+			opacity: 1,
+			transition: {
+				staggerChildren: 0.15,
+				delayChildren: 0.3,
+			},
+		},
+	}
+
+	const itemVariants = {
+		hidden: {
+			opacity: 0,
+			y: 20,
+		},
+		visible: {
+			opacity: 1,
+			y: 0,
+		},
+	}
+
+	const backgroundVariants = {
+		hidden: {
+			opacity: 0,
+		},
+		visible: {
+			opacity: 1,
+		},
+	}
+
+	return (
+		<section className="relative overflow-hidden border-t border-border py-32">
+			<motion.div
+				className="absolute inset-0"
+				initial="hidden"
+				whileInView="visible"
+				viewport={{ once: true }}
+				variants={backgroundVariants}>
+				<div className="absolute inset-y-0 left-1/2 h-full w-full max-w-[1200px] -translate-x-1/2">
+					<div className="absolute left-1/2 top-1/2 h-[800px] w-full -translate-x-1/2 -translate-y-1/2 rounded-[100%] bg-blue-500/10 blur-[120px]" />
+				</div>
+			</motion.div>
+			<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+				<div className="mx-auto mb-24 max-w-3xl text-center">
+					<motion.div
+						initial={{ opacity: 0, y: 20 }}
+						whileInView={{ opacity: 1, y: 0 }}
+						viewport={{ once: true }}
+						transition={{
+							duration: 0.6,
+							ease: [0.21, 0.45, 0.27, 0.9],
+						}}>
+						<h2 className="text-4xl font-bold tracking-tight sm:text-5xl">
+							Powerful features for modern developers.
+						</h2>
+						<p className="mt-6 text-lg text-muted-foreground">
+							Everything you need to build faster and write better code.
+						</p>
+					</motion.div>
+				</div>
+
+				{/* Mobile Carousel */}
+				<FeaturesMobile />
+
+				{/* Desktop Grid */}
+				<motion.div
+					className="relative mx-auto hidden max-w-[1200px] md:block"
+					variants={containerVariants}
+					initial="hidden"
+					whileInView="visible"
+					viewport={{ once: true }}>
+					<div className="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 lg:gap-8">
+						{features.map((feature, index) => (
+							<motion.div key={index} variants={itemVariants} className="group relative">
+								<div className="absolute -inset-px rounded-2xl bg-gradient-to-r from-blue-500/30 via-cyan-500/30 to-purple-500/30 opacity-0 blur-sm transition-all duration-500 group-hover:opacity-100 dark:from-blue-500/50 dark:via-cyan-500/50 dark:to-purple-500/50" />
+								<div className="relative h-full rounded-2xl border border-border/50 bg-background/30 p-8 backdrop-blur-xl transition-all duration-300 hover:border-border hover:bg-background/50 dark:hover:border-border/80 dark:hover:bg-background/40">
+									<div className="mb-5 inline-flex items-center justify-center rounded-xl bg-gradient-to-r from-blue-500/10 to-cyan-500/10 p-2.5 dark:from-blue-500/20 dark:to-cyan-500/20">
+										<div className="rounded-lg bg-gradient-to-r from-blue-500/80 to-cyan-500/80 p-2.5">
+											{feature.icon}
+										</div>
+									</div>
+									<h3 className="mb-3 text-xl font-medium text-foreground/90">{feature.title}</h3>
+									<p className="leading-relaxed text-muted-foreground">{feature.description}</p>
+								</div>
+							</motion.div>
+						))}
+					</div>
+				</motion.div>
+			</div>
+		</section>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/index.ts b/apps/web-researcherry/src/components/homepage/index.ts
new file mode 100644
index 000000000..192c15547
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/index.ts
@@ -0,0 +1,10 @@
+export * from "./animated-background"
+export * from "./code-example"
+export * from "./company-logos"
+export * from "./faq-section"
+export * from "./features-mobile"
+export * from "./features"
+export * from "./install-section"
+export * from "./testimonials-mobile"
+export * from "./testimonials"
+export * from "./whats-new-button"
diff --git a/apps/web-researcherry/src/components/homepage/install-section.tsx b/apps/web-researcherry/src/components/homepage/install-section.tsx
new file mode 100644
index 000000000..b8dda2a67
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/install-section.tsx
@@ -0,0 +1,97 @@
+"use client"
+
+import { VscVscode } from "react-icons/vsc"
+import Link from "next/link"
+import { motion } from "framer-motion"
+
+interface InstallSectionProps {
+	downloads: string | null
+}
+
+export function InstallSection({ downloads }: InstallSectionProps) {
+	const backgroundVariants = {
+		hidden: {
+			opacity: 0,
+		},
+		visible: {
+			opacity: 1,
+		},
+	}
+
+	return (
+		<section className="relative overflow-hidden border-t-2 border-border bg-gradient-to-b from-background via-background/95 to-background dark:from-background dark:via-background/98 dark:to-background py-20 sm:py-28 lg:py-36">
+			{/* Enhanced background with better contrast */}
+			<motion.div
+				className="absolute inset-0"
+				initial="hidden"
+				whileInView="visible"
+				viewport={{ once: true }}
+				variants={backgroundVariants}>
+				<div className="absolute inset-0 bg-gradient-to-b from-blue-500/5 via-cyan-500/5 to-purple-500/5 dark:from-blue-500/10 dark:via-cyan-500/10 dark:to-purple-500/10" />
+				<div className="relative mx-auto max-w-[1200px]">
+					<div className="absolute left-1/2 top-1/2 h-[600px] w-[800px] -translate-x-1/2 -translate-y-1/2 rounded-[100%] bg-gradient-to-r from-blue-500/20 via-cyan-500/20 to-purple-500/20 blur-[100px] dark:from-blue-500/30 dark:via-cyan-500/30 dark:to-purple-500/30" />
+				</div>
+			</motion.div>
+
+			<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+				<div className="mx-auto max-w-4xl">
+					{/* Enhanced container with better visual separation */}
+					<div className="relative rounded-3xl border border-border/50 bg-background/60 p-8 shadow-2xl backdrop-blur-xl dark:border-border/30 dark:bg-background/40 dark:shadow-[0_20px_50px_rgba(0,0,0,0.5)] sm:p-12 lg:p-16">
+						{/* Subtle gradient overlay */}
+						<div className="absolute inset-0 rounded-3xl bg-gradient-to-br from-blue-500/5 via-transparent to-purple-500/5 dark:from-blue-500/10 dark:to-purple-500/10" />
+
+						<div className="relative text-center">
+							{/* Updated h2 to match other sections */}
+							<h2 className="bg-gradient-to-b from-foreground to-foreground/70 bg-clip-text text-4xl font-bold tracking-tight text-transparent sm:text-5xl">
+								Install Researcherry Code — Open & Flexible
+							</h2>
+							<p className="mt-6 text-lg text-muted-foreground">
+								Researcherry Code is open-source, model-agnostic, and developer-focused. Install from the VS
+								Code Marketplace or the CLI in minutes, then bring your own AI model.
+							</p>
+
+							<div className="mt-12 flex flex-col items-center justify-center gap-6">
+								{/* Enhanced VSCode Marketplace button */}
+								<Link
+									href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline"
+									target="_blank"
+									className="group relative inline-flex w-full items-center justify-center gap-3 rounded-xl bg-gradient-to-r from-blue-600 to-cyan-600 px-6 py-4 text-lg font-medium text-white shadow-lg transition-all duration-300 hover:from-blue-700 hover:to-cyan-700 hover:shadow-xl hover:shadow-blue-500/25 dark:from-blue-500 dark:to-cyan-500 dark:hover:from-blue-600 dark:hover:to-cyan-600 sm:w-auto sm:px-8 sm:text-xl">
+									<div className="absolute -inset-px rounded-xl bg-gradient-to-r from-blue-400 via-cyan-400 to-blue-400 opacity-0 blur transition-opacity duration-500 group-hover:opacity-70" />
+									<div className="relative flex items-center gap-3">
+										<VscVscode className="h-6 w-6 sm:h-7 sm:w-7" />
+										<span className="flex flex-wrap items-center gap-2">
+											<span>VSCode Marketplace</span>
+											{downloads !== null && (
+												<>
+													<span className="font-black opacity-60">&middot;</span>
+													<span className="opacity-90">{downloads} Downloads</span>
+												</>
+											)}
+										</span>
+									</div>
+								</Link>
+
+								{/* Enhanced CLI install section */}
+								<div className="group relative w-full max-w-xl">
+									<div className="absolute -inset-px rounded-xl bg-gradient-to-r from-blue-500/50 via-cyan-500/50 to-purple-500/50 opacity-30 blur-sm transition-all duration-500 group-hover:opacity-60 dark:opacity-40 dark:group-hover:opacity-70" />
+									<div className="relative overflow-hidden rounded-xl border border-border bg-background/80 shadow-lg backdrop-blur-xl transition-all duration-500 ease-out group-hover:border-blue-500/50 group-hover:shadow-xl group-hover:shadow-blue-500/10 dark:border-border/50 dark:bg-background/60 dark:group-hover:border-blue-400/50">
+										<div className="border-b border-border/50 bg-muted/30 px-4 py-3 dark:bg-muted/20">
+											<div className="text-sm font-medium text-foreground">Install via CLI</div>
+										</div>
+										<div className="overflow-x-auto bg-background/50 dark:bg-background/30">
+											<pre className="p-4">
+												<code className="whitespace-pre-wrap break-all text-sm font-mono text-foreground sm:break-normal sm:text-base">
+													code --install-extension RooVeterinaryInc.roo-cline
+												</code>
+											</pre>
+										</div>
+									</div>
+								</div>
+							</div>
+						</div>
+					</div>
+				</div>
+			</div>
+		</section>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/testimonials-mobile.tsx b/apps/web-researcherry/src/components/homepage/testimonials-mobile.tsx
new file mode 100644
index 000000000..8b90d27b5
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/testimonials-mobile.tsx
@@ -0,0 +1,63 @@
+import useEmblaCarousel from "embla-carousel-react"
+import AutoScroll from "embla-carousel-auto-scroll"
+import { testimonials } from "@/components/homepage/testimonials"
+
+export function TestimonialsMobile() {
+	const [emblaRef] = useEmblaCarousel({ loop: true }, [
+		AutoScroll({
+			playOnInit: true,
+			speed: 1, // pixels per second - slower for smoother scrolling
+			stopOnInteraction: true,
+			stopOnMouseEnter: true,
+		}),
+	])
+
+	return (
+		<div className="md:hidden">
+			<div className="overflow-hidden px-4" ref={emblaRef}>
+				<div className="flex">
+					{testimonials.map((testimonial) => (
+						<div className="min-w-0 flex-[0_0_100%] px-4" key={testimonial.id}>
+							<div className="relative rounded-2xl border border-border/50 bg-background/30 p-8 backdrop-blur-xl dark:border-border/70 dark:bg-background/40">
+								<svg
+									className="absolute left-8 top-8 h-8 w-8 text-blue-500/30 dark:text-blue-400/50"
+									fill="currentColor"
+									viewBox="0 0 32 32">
+									<defs>
+										<filter id="glow-mobile">
+											<feGaussianBlur stdDeviation="3" result="coloredBlur" />
+											<feMerge>
+												<feMergeNode in="coloredBlur" />
+												<feMergeNode in="SourceGraphic" />
+											</feMerge>
+										</filter>
+									</defs>
+									<path
+										d="M9.352 4C4.456 7.456 1 13.12 1 19.36c0 5.088 3.072 8.064 6.624 8.064 3.36 0 5.856-2.688 5.856-5.856 0-3.168-2.208-5.472-5.088-5.472-.576 0-1.344.096-1.536.192.48-3.264 3.552-7.104 6.624-9.024L9.352 4zm16.512 0c-4.8 3.456-8.256 9.12-8.256 15.36 0 5.088 3.072 8.064 6.624 8.064 3.264 0 5.856-2.688 5.856-5.856 0-3.168-2.304-5.472-5.184-5.472-.576 0-1.248.096-1.44.192.48-3.264 3.456-7.104 6.528-9.024L25.864 4z"
+										className="dark:filter dark:drop-shadow-[0_0_8px_rgba(96,165,250,0.4)]"
+									/>
+								</svg>
+
+								<blockquote className="mt-12">
+									<p className="text-lg font-light italic leading-relaxed text-muted-foreground dark:text-foreground/70">
+										&quot;{testimonial.quote}&quot;
+									</p>
+
+									<footer className="mt-6">
+										<div className="h-px w-12 bg-gradient-to-r from-blue-500/50 to-transparent dark:from-blue-400/70" />
+										<p className="mt-4 font-medium text-foreground/90 dark:text-foreground">
+											{testimonial.name}
+										</p>
+										<p className="text-sm text-muted-foreground dark:text-muted-foreground/80">
+											{testimonial.role} at {testimonial.company}
+										</p>
+									</footer>
+								</blockquote>
+							</div>
+						</div>
+					))}
+				</div>
+			</div>
+		</div>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/testimonials.tsx b/apps/web-researcherry/src/components/homepage/testimonials.tsx
new file mode 100644
index 000000000..e2f85ad80
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/testimonials.tsx
@@ -0,0 +1,199 @@
+"use client"
+
+import { useRef } from "react"
+import { motion } from "framer-motion"
+import Image from "next/image"
+import { TestimonialsMobile } from "./testimonials-mobile"
+
+export interface Testimonial {
+	id: number
+	name: string
+	role: string
+	company: string
+	image?: string
+	quote: string
+}
+
+export const testimonials: Testimonial[] = [
+	{
+		id: 1,
+		name: "Luca",
+		role: "Reviewer",
+		company: "VS Code Marketplace",
+		quote: "Researcherry Code is an absolute game-changer! 🚀 It makes coding faster, easier, and more intuitive with its smart AI-powered suggestions, real-time debugging, and automation features. The seamless integration with VS Code is a huge plus, and the constant updates ensure it keeps getting better",
+	},
+	{
+		id: 2,
+		name: "Taro Woollett-Chiba",
+		role: "AI Product Lead",
+		company: "Vendidit",
+		quote: "Easily the best AI code editor. Researcherry Code has the best features and capabilities, along with the best development team. I swear, they're the fastest to support new models and implement useful functionality whenever users mention it... simply amazing.",
+	},
+	{
+		id: 3,
+		name: "Can Nuri",
+		role: "Reviewer",
+		company: "VS Code Marketplace",
+		quote: "Researcherry Code is one of the most inspiring projects I have seen for a long time. It shapes the way I think and deal with software development.",
+	},
+	{
+		id: 4,
+		name: "Michael",
+		role: "Reviewer",
+		company: "VS Code Marketplace",
+		quote: "I switched from Windsurf to Researcherry Code in January and honestly, it's been a huge upgrade. Windsurf kept making mistakes and being dumb when I ask it for things. Roo just gets it. Projects that used to take a full day now wrap up before lunch. ",
+	},
+]
+
+export function Testimonials() {
+	const containerRef = useRef<HTMLDivElement>(null)
+
+	const containerVariants = {
+		hidden: { opacity: 0 },
+		visible: {
+			opacity: 1,
+			transition: {
+				staggerChildren: 0.15,
+				delayChildren: 0.3,
+			},
+		},
+	}
+
+	const itemVariants = {
+		hidden: {
+			opacity: 0,
+			y: 20,
+		},
+		visible: {
+			opacity: 1,
+			y: 0,
+			transition: {
+				duration: 0.6,
+				ease: "easeOut" as const,
+			},
+		},
+	}
+
+	const backgroundVariants = {
+		hidden: {
+			opacity: 0,
+		},
+		visible: {
+			opacity: 1,
+			transition: {
+				duration: 1.2,
+				ease: "easeOut" as const,
+			},
+		},
+	}
+
+	return (
+		<section ref={containerRef} className="relative overflow-hidden border-t border-border py-32">
+			<motion.div
+				className="absolute inset-0"
+				initial="hidden"
+				whileInView="visible"
+				viewport={{ once: true }}
+				variants={backgroundVariants}>
+				<div className="absolute inset-y-0 left-1/2 h-full w-full max-w-[1200px] -translate-x-1/2">
+					<div className="absolute left-1/2 top-1/2 h-[800px] w-full -translate-x-1/2 -translate-y-1/2 rounded-[100%] bg-blue-500/10 blur-[120px]" />
+				</div>
+			</motion.div>
+			<div className="container relative z-10 mx-auto px-4 sm:px-6 lg:px-8">
+				<div className="mx-auto mb-24 max-w-3xl text-center">
+					<motion.div
+						initial={{ opacity: 0, y: 20 }}
+						whileInView={{ opacity: 1, y: 0 }}
+						viewport={{ once: true }}
+						transition={{
+							duration: 0.6,
+							ease: "easeOut",
+						}}>
+						<h2 className="text-4xl font-bold tracking-tight sm:text-5xl">
+							Empowering developers worldwide.
+						</h2>
+						<p className="mt-6 text-lg text-muted-foreground">
+							Join thousands of developers who are revolutionizing their workflow with AI-powered
+							assistance.
+						</p>
+					</motion.div>
+				</div>
+
+				{/* Mobile Carousel */}
+				<TestimonialsMobile />
+
+				{/* Desktop Grid */}
+				<motion.div
+					className="relative mx-auto hidden max-w-[1200px] md:block"
+					variants={containerVariants}
+					initial="hidden"
+					whileInView="visible"
+					viewport={{ once: true }}>
+					<div className="relative grid grid-cols-1 gap-12 md:grid-cols-2">
+						{testimonials.map((testimonial, index) => (
+							<motion.div
+								key={testimonial.id}
+								variants={itemVariants}
+								className={`group relative ${index % 2 === 0 ? "md:translate-y-4" : "md:translate-y-12"}`}>
+								<div className="absolute -inset-px rounded-2xl bg-gradient-to-r from-blue-500/30 via-cyan-500/30 to-purple-500/30 opacity-0 blur-sm transition-all duration-500 ease-out group-hover:opacity-100 dark:from-blue-400/40 dark:via-cyan-400/40 dark:to-purple-400/40" />
+								<div className="relative flex h-full flex-col rounded-2xl border border-border/50 bg-background/30 backdrop-blur-xl transition-all duration-500 ease-out group-hover:scale-[1.02] group-hover:border-border group-hover:bg-background/40 group-hover:shadow-2xl dark:border-border/70 dark:bg-background/40 dark:group-hover:border-border dark:group-hover:bg-background/60 dark:group-hover:shadow-[0_20px_50px_rgba(59,130,246,0.15)]">
+									{testimonial.image && (
+										<div className="absolute -right-3 -top-3 h-16 w-16 overflow-hidden rounded-xl border border-border/50 bg-background/50 p-1.5 backdrop-blur-xl transition-all duration-500 ease-out group-hover:scale-110 dark:border-border/70 dark:bg-background/60">
+											<div className="relative h-full w-full overflow-hidden rounded-lg">
+												<Image
+													src={testimonial.image || "/placeholder_pfp.png"}
+													alt={testimonial.name}
+													fill
+													className="object-cover"
+												/>
+											</div>
+										</div>
+									)}
+
+									<div className="flex flex-1 flex-col p-8">
+										<div className="flex-1">
+											<div className="mb-6">
+												<svg
+													className="h-8 w-8 text-blue-500/20 transition-all duration-500 group-hover:text-blue-500/30 dark:text-blue-400/40 dark:group-hover:text-blue-400/60"
+													fill="currentColor"
+													viewBox="0 0 32 32">
+													<defs>
+														<filter id="glow">
+															<feGaussianBlur stdDeviation="3" result="coloredBlur" />
+															<feMerge>
+																<feMergeNode in="coloredBlur" />
+																<feMergeNode in="SourceGraphic" />
+															</feMerge>
+														</filter>
+													</defs>
+													<path
+														d="M9.352 4C4.456 7.456 1 13.12 1 19.36c0 5.088 3.072 8.064 6.624 8.064 3.36 0 5.856-2.688 5.856-5.856 0-3.168-2.208-5.472-5.088-5.472-.576 0-1.344.096-1.536.192.48-3.264 3.552-7.104 6.624-9.024L9.352 4zm16.512 0c-4.8 3.456-8.256 9.12-8.256 15.36 0 5.088 3.072 8.064 6.624 8.064 3.264 0 5.856-2.688 5.856-5.856 0-3.168-2.304-5.472-5.184-5.472-.576 0-1.248.096-1.44.192.48-3.264 3.456-7.104 6.528-9.024L25.864 4z"
+														className="dark:filter dark:drop-shadow-[0_0_8px_rgba(96,165,250,0.4)]"
+													/>
+												</svg>
+											</div>
+
+											<p className="relative text-lg leading-relaxed text-muted-foreground transition-colors duration-300 group-hover:text-foreground/80 dark:text-foreground/70 dark:group-hover:text-foreground/90">
+												{testimonial.quote}
+											</p>
+										</div>
+
+										<div className="relative mt-6">
+											<div className="mb-4 h-px w-12 bg-gradient-to-r from-blue-500/50 to-transparent transition-all duration-500 group-hover:w-16 group-hover:from-blue-500/70 dark:from-blue-400/70 dark:group-hover:from-blue-400/90" />
+											<h3 className="font-medium text-foreground/90 transition-colors duration-300 dark:text-foreground">
+												{testimonial.name}
+											</h3>
+											<p className="text-sm text-muted-foreground transition-colors duration-300 dark:text-muted-foreground/80">
+												{testimonial.role} at {testimonial.company}
+											</p>
+										</div>
+									</div>
+								</div>
+							</motion.div>
+						))}
+					</div>
+				</motion.div>
+			</div>
+		</section>
+	)
+}
diff --git a/apps/web-researcherry/src/components/homepage/whats-new-button.tsx b/apps/web-researcherry/src/components/homepage/whats-new-button.tsx
new file mode 100644
index 000000000..d16fdb286
--- /dev/null
+++ b/apps/web-researcherry/src/components/homepage/whats-new-button.tsx
@@ -0,0 +1,229 @@
+"use client"
+
+import { useState, useRef, useEffect } from "react"
+import { motion, AnimatePresence } from "framer-motion"
+import { X, ArrowRight, Code2, Users2, Zap } from "lucide-react"
+import Link from "next/link"
+
+interface FeatureProps {
+	icon: React.ComponentType<{ className?: string }>
+	color: "blue" | "purple" | "green"
+	title: string
+	description: string
+}
+
+function Feature({ icon: Icon, color, title, description }: FeatureProps) {
+	const bgColor = {
+		blue: "bg-blue-500/20",
+		purple: "bg-purple-500/20",
+		green: "bg-green-500/20",
+	}[color]
+
+	const textColor = {
+		blue: "text-blue-400",
+		purple: "text-purple-400",
+		green: "text-green-400",
+	}[color]
+
+	return (
+		<div className="space-y-1.5 sm:space-y-2">
+			<div className="flex items-center gap-1 space-x-2">
+				<div className={`rounded-full ${bgColor} p-3 ${textColor}`}>
+					<Icon className="h-6 w-6" />
+				</div>
+				<h3 className="text-base font-semibold sm:text-lg">{title}</h3>
+			</div>
+			<p className="text-sm text-gray-400 sm:text-base">{description}</p>
+		</div>
+	)
+}
+
+const version = "v3.8.0"
+
+export function WhatsNewButton() {
+	const [isOpen, setIsOpen] = useState(false)
+	const buttonRef = useRef<HTMLDivElement>(null)
+	const canvasRef = useRef<HTMLCanvasElement>(null)
+
+	// animated border effect
+	useEffect(() => {
+		const canvas = canvasRef.current
+		const button = buttonRef.current
+
+		if (!canvas || !button) return
+
+		const ctx = canvas.getContext("2d")
+		if (!ctx) return
+
+		// set canvas size to match button size with extra space for glow
+		const updateCanvasSize = () => {
+			const rect = button.getBoundingClientRect()
+			// add extra padding for the glow effect
+			canvas.width = rect.width + 8
+			canvas.height = rect.height + 8
+
+			// position the canvas precisely
+			canvas.style.width = `${canvas.width}px`
+			canvas.style.height = `${canvas.height}px`
+		}
+
+		updateCanvasSize()
+		window.addEventListener("resize", updateCanvasSize)
+
+		// animation variables
+		let animationId: number
+		let position = 0
+
+		const animate = () => {
+			if (!ctx || !canvas) return
+
+			// clear canvas
+			ctx.clearRect(0, 0, canvas.width, canvas.height)
+
+			// calculate border path
+			const width = canvas.width - 4
+			const height = canvas.height - 4
+			const x = 2
+			const y = 2
+			const radius = height / 2
+
+			// draw rounded rectangle path
+			ctx.beginPath()
+			ctx.moveTo(x + radius, y)
+			ctx.lineTo(x + width - radius, y)
+			ctx.arcTo(x + width, y, x + width, y + radius, radius)
+			ctx.lineTo(x + width, y + height - radius)
+			ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius)
+			ctx.lineTo(x + radius, y + height)
+			ctx.arcTo(x, y + height, x, y + height - radius, radius)
+			ctx.lineTo(x, y + radius)
+			ctx.arcTo(x, y, x + radius, y, radius)
+			ctx.closePath()
+
+			// create rotating gradient effect
+			position = (position + 0.016) % (Math.PI * 2)
+
+			const centerX = canvas.width / 2
+			const centerY = canvas.height / 2
+			const blueColor = "70, 130, 255"
+
+			// create rotating gradient
+			const gradient = ctx.createConicGradient(position, centerX, centerY)
+
+			// add color stops for a single flowing stream
+			gradient.addColorStop(0, `rgba(${blueColor}, 0)`)
+			gradient.addColorStop(0.2, `rgba(${blueColor}, 0.8)`)
+			gradient.addColorStop(0.4, `rgba(${blueColor}, 0)`)
+			gradient.addColorStop(1, `rgba(${blueColor}, 0)`)
+
+			// apply gradient
+			ctx.strokeStyle = gradient
+			ctx.lineWidth = 1.5
+			ctx.stroke()
+
+			// add subtle glow effect
+			ctx.shadowColor = `rgba(${blueColor}, 0.6)`
+			ctx.shadowBlur = 5
+			ctx.strokeStyle = `rgba(${blueColor}, 0.3)`
+			ctx.lineWidth = 0.5
+			ctx.stroke()
+
+			animationId = requestAnimationFrame(animate)
+		}
+
+		animate()
+
+		return () => {
+			window.removeEventListener("resize", updateCanvasSize)
+			if (animationId) cancelAnimationFrame(animationId)
+		}
+	}, [])
+
+	return (
+		<>
+			<div className="relative inline-flex" ref={buttonRef}>
+				<canvas
+					ref={canvasRef}
+					className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2"
+					style={{ pointerEvents: "none" }}
+				/>
+				<Link
+					href="#"
+					onClick={(e) => {
+						e.preventDefault()
+						setIsOpen(true)
+					}}
+					className="relative z-10 flex items-center space-x-2 rounded-full bg-black px-4 py-2 text-sm font-medium text-white transition-all hover:bg-gray-900">
+					<span>See what&apos;s new in {version}</span>
+					<ArrowRight className="h-3.5 w-3.5" />
+				</Link>
+			</div>
+
+			<AnimatePresence>
+				{isOpen && (
+					<>
+						<motion.div
+							className="fixed inset-0 z-40 bg-black/80 backdrop-blur-sm"
+							initial={{ opacity: 0, backdropFilter: "blur(0px)" }}
+							animate={{ opacity: 1, backdropFilter: "blur(8px)" }}
+							exit={{ opacity: 0, backdropFilter: "blur(0px)" }}
+							transition={{ duration: 0.2 }}
+						/>
+						<div className="fixed inset-0 z-50 overflow-y-auto" onClick={() => setIsOpen(false)}>
+							<div className="flex min-h-full items-center justify-center p-4">
+								<motion.div
+									className="relative w-full max-w-2xl rounded-lg border border-gray-800 bg-black p-6 sm:p-8"
+									initial={{ opacity: 0, y: 20, scale: 0.95 }}
+									animate={{ opacity: 1, y: 0, scale: 1 }}
+									exit={{ opacity: 0, y: 20, scale: 0.95 }}
+									transition={{
+										type: "spring",
+										damping: 20,
+										stiffness: 400,
+										mass: 0.6,
+										duration: 0.25,
+									}}
+									onClick={(e) => {
+										// prevent clicks inside the panel from closing it
+										e.stopPropagation()
+									}}>
+									<div className="flex items-center justify-between gap-4">
+										<h2 className="text-xl font-bold sm:text-2xl">
+											What&apos;s New in Researcherry Code {version}
+										</h2>
+										<button
+											onClick={() => setIsOpen(false)}
+											className="flex-shrink-0 rounded-full p-1.5 text-gray-400 hover:bg-gray-800 hover:text-white">
+											<X className="h-5 w-5" />
+										</button>
+									</div>
+
+									<div className="mt-4 space-y-4 sm:mt-6 sm:space-y-6">
+										<Feature
+											icon={Code2}
+											color="blue"
+											title="AI-Powered Code Generation"
+											description="Generate high-quality code snippets and entire components with our new AI assistant. Trained on millions of code repositories to understand your project context."
+										/>
+										<Feature
+											icon={Users2}
+											color="purple"
+											title="Real-time Collaboration"
+											description="Work together with your team in real-time with our new collaborative editing features. See changes as they happen and resolve conflicts automatically."
+										/>
+										<Feature
+											icon={Zap}
+											color="green"
+											title="Performance Optimizations"
+											description="We've completely rewritten our core engine for blazing fast performance. Experience up to 10x faster build times and smoother development workflow."
+										/>
+									</div>
+								</motion.div>
+							</div>
+						</div>
+					</>
+				)}
+			</AnimatePresence>
+		</>
+	)
+}
diff --git a/apps/web-researcherry/src/components/providers/index.ts b/apps/web-researcherry/src/components/providers/index.ts
new file mode 100644
index 000000000..a02b0db6f
--- /dev/null
+++ b/apps/web-researcherry/src/components/providers/index.ts
@@ -0,0 +1 @@
+export { Providers } from "./providers"
diff --git a/apps/web-researcherry/src/components/providers/posthog-provider.tsx b/apps/web-researcherry/src/components/providers/posthog-provider.tsx
new file mode 100644
index 000000000..a0c23cf98
--- /dev/null
+++ b/apps/web-researcherry/src/components/providers/posthog-provider.tsx
@@ -0,0 +1,78 @@
+"use client"
+
+import { usePathname, useSearchParams } from "next/navigation"
+import posthog from "posthog-js"
+import { PostHogProvider as OriginalPostHogProvider } from "posthog-js/react"
+import { useEffect, Suspense } from "react"
+
+// Create a separate component for analytics tracking that uses useSearchParams
+function PageViewTracker() {
+	const pathname = usePathname()
+	const searchParams = useSearchParams()
+
+	// Track page views
+	useEffect(() => {
+		// Only track page views if PostHog is properly initialized
+		if (pathname && process.env.NEXT_PUBLIC_POSTHOG_KEY) {
+			let url = window.location.origin + pathname
+			if (searchParams && searchParams.toString()) {
+				url = url + `?${searchParams.toString()}`
+			}
+			posthog.capture("$pageview", {
+				$current_url: url,
+			})
+		}
+		// eslint-disable-next-line react-hooks/exhaustive-deps
+	}, [pathname, searchParams.toString()])
+
+	return null
+}
+
+export function PostHogProvider({ children }: { children: React.ReactNode }) {
+	useEffect(() => {
+		// Initialize PostHog only on the client side
+		if (typeof window !== "undefined") {
+			const posthogKey = process.env.NEXT_PUBLIC_POSTHOG_KEY
+			const posthogHost = process.env.NEXT_PUBLIC_POSTHOG_HOST
+
+			// Check if environment variables are set
+			if (!posthogKey) {
+				console.warn(
+					"PostHog API key is missing. Analytics will be disabled. " +
+						"Please set NEXT_PUBLIC_POSTHOG_KEY in your .env file.",
+				)
+				return
+			}
+
+			if (!posthogHost) {
+				console.warn(
+					"PostHog host URL is missing. Using default host. " +
+						"Please set NEXT_PUBLIC_POSTHOG_HOST in your .env file.",
+				)
+			}
+
+			posthog.init(posthogKey, {
+				api_host: posthogHost || "https://us.i.posthog.com",
+				capture_pageview: false, // We'll handle this manually
+				loaded: (posthogInstance) => {
+					if (process.env.NODE_ENV === "development") {
+						// Log to console in development
+						posthogInstance.debug()
+					}
+				},
+				respect_dnt: true, // Respect Do Not Track
+			})
+		}
+
+		// No explicit cleanup needed for posthog-js v1.231.0
+	}, [])
+
+	return (
+		<OriginalPostHogProvider client={posthog}>
+			<Suspense fallback={null}>
+				<PageViewTracker />
+			</Suspense>
+			{children}
+		</OriginalPostHogProvider>
+	)
+}
diff --git a/apps/web-researcherry/src/components/providers/providers.tsx b/apps/web-researcherry/src/components/providers/providers.tsx
new file mode 100644
index 000000000..a0e77b38e
--- /dev/null
+++ b/apps/web-researcherry/src/components/providers/providers.tsx
@@ -0,0 +1,20 @@
+"use client"
+
+import { QueryClient, QueryClientProvider } from "@tanstack/react-query"
+import { ThemeProvider } from "next-themes"
+
+import { PostHogProvider } from "./posthog-provider"
+
+const queryClient = new QueryClient()
+
+export const Providers = ({ children }: { children: React.ReactNode }) => {
+	return (
+		<QueryClientProvider client={queryClient}>
+			<PostHogProvider>
+				<ThemeProvider attribute="class" defaultTheme="dark" enableSystem={false}>
+					{children}
+				</ThemeProvider>
+			</PostHogProvider>
+		</QueryClientProvider>
+	)
+}
diff --git a/apps/web-researcherry/src/components/ui/button.tsx b/apps/web-researcherry/src/components/ui/button.tsx
new file mode 100644
index 000000000..18324ad79
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/button.tsx
@@ -0,0 +1,47 @@
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
+
+const buttonVariants = cva(
+	"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
+	{
+		variants: {
+			variant: {
+				default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
+				destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
+				outline: "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
+				secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
+				ghost: "hover:bg-accent hover:text-accent-foreground",
+				link: "text-primary underline-offset-4 hover:underline",
+			},
+			size: {
+				default: "h-9 px-4 py-2",
+				sm: "h-8 rounded-md px-3 text-xs",
+				lg: "h-10 rounded-md px-8",
+				icon: "h-9 w-9",
+			},
+		},
+		defaultVariants: {
+			variant: "default",
+			size: "default",
+		},
+	},
+)
+
+export interface ButtonProps
+	extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+		VariantProps<typeof buttonVariants> {
+	asChild?: boolean
+}
+
+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
+	({ className, variant, size, asChild = false, ...props }, ref) => {
+		const Comp = asChild ? Slot : "button"
+		return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />
+	},
+)
+Button.displayName = "Button"
+
+export { Button, buttonVariants }
diff --git a/apps/web-researcherry/src/components/ui/chart.tsx b/apps/web-researcherry/src/components/ui/chart.tsx
new file mode 100644
index 000000000..4acea8650
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/chart.tsx
@@ -0,0 +1,311 @@
+"use client"
+
+import * as React from "react"
+import * as RechartsPrimitive from "recharts"
+
+import { cn } from "@/lib/utils"
+
+// Format: { THEME_NAME: CSS_SELECTOR }
+const THEMES = { light: "", dark: ".dark" } as const
+
+export type ChartConfig = {
+	[k in string]: {
+		label?: React.ReactNode
+		icon?: React.ComponentType
+	} & ({ color?: string; theme?: never } | { color?: never; theme: Record<keyof typeof THEMES, string> })
+}
+
+type ChartContextProps = {
+	config: ChartConfig
+}
+
+const ChartContext = React.createContext<ChartContextProps | null>(null)
+
+function useChart() {
+	const context = React.useContext(ChartContext)
+
+	if (!context) {
+		throw new Error("useChart must be used within a <ChartContainer />")
+	}
+
+	return context
+}
+
+const ChartContainer = React.forwardRef<
+	HTMLDivElement,
+	React.ComponentProps<"div"> & {
+		config: ChartConfig
+		children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>["children"]
+	}
+>(({ id, className, children, config, ...props }, ref) => {
+	const uniqueId = React.useId()
+	const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`
+
+	return (
+		<ChartContext.Provider value={{ config }}>
+			<div
+				data-chart={chartId}
+				ref={ref}
+				className={cn(
+					"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
+					className,
+				)}
+				{...props}>
+				<ChartStyle id={chartId} config={config} />
+				<RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>
+			</div>
+		</ChartContext.Provider>
+	)
+})
+ChartContainer.displayName = "Chart"
+
+const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
+	const colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color)
+
+	if (!colorConfig.length) {
+		return null
+	}
+
+	return (
+		<style
+			dangerouslySetInnerHTML={{
+				__html: Object.entries(THEMES)
+					.map(
+						([theme, prefix]) => `
+${prefix} [data-chart=${id}] {
+${colorConfig
+	.map(([key, itemConfig]) => {
+		const color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color
+		return color ? `  --color-${key}: ${color};` : null
+	})
+	.join("\n")}
+}
+`,
+					)
+					.join("\n"),
+			}}
+		/>
+	)
+}
+
+const ChartTooltip = RechartsPrimitive.Tooltip
+
+const ChartTooltipContent = React.forwardRef<
+	HTMLDivElement,
+	React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
+		React.ComponentProps<"div"> & {
+			hideLabel?: boolean
+			hideIndicator?: boolean
+			indicator?: "line" | "dot" | "dashed"
+			nameKey?: string
+			labelKey?: string
+		}
+>(
+	(
+		{
+			active,
+			payload,
+			className,
+			indicator = "dot",
+			hideLabel = false,
+			hideIndicator = false,
+			label,
+			labelFormatter,
+			labelClassName,
+			formatter,
+			color,
+			nameKey,
+			labelKey,
+		},
+		ref,
+	) => {
+		const { config } = useChart()
+
+		const tooltipLabel = React.useMemo(() => {
+			if (hideLabel || !payload?.length) {
+				return null
+			}
+
+			const [item] = payload
+			const key = `${labelKey || item?.dataKey || item?.name || "value"}`
+			const itemConfig = getPayloadConfigFromPayload(config, item, key)
+			const value =
+				!labelKey && typeof label === "string"
+					? config[label as keyof typeof config]?.label || label
+					: itemConfig?.label
+
+			if (labelFormatter) {
+				return <div className={cn("font-medium", labelClassName)}>{labelFormatter(value, payload)}</div>
+			}
+
+			if (!value) {
+				return null
+			}
+
+			return <div className={cn("font-medium", labelClassName)}>{value}</div>
+		}, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey])
+
+		if (!active || !payload?.length) {
+			return null
+		}
+
+		const nestLabel = payload.length === 1 && indicator !== "dot"
+
+		return (
+			<div
+				ref={ref}
+				className={cn(
+					"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
+					className,
+				)}>
+				{!nestLabel ? tooltipLabel : null}
+				<div className="grid gap-1.5">
+					{payload.map((item, index) => {
+						const key = `${nameKey || item.name || item.dataKey || "value"}`
+						const itemConfig = getPayloadConfigFromPayload(config, item, key)
+						const indicatorColor = color || item.payload.fill || item.color
+
+						return (
+							<div
+								key={item.dataKey}
+								className={cn(
+									"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
+									indicator === "dot" && "items-center",
+								)}>
+								{formatter && item?.value !== undefined && item.name ? (
+									formatter(item.value, item.name, item, index, item.payload)
+								) : (
+									<>
+										{itemConfig?.icon ? (
+											<itemConfig.icon />
+										) : (
+											!hideIndicator && (
+												<div
+													className={cn(
+														"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
+														{
+															"h-2.5 w-2.5": indicator === "dot",
+															"w-1": indicator === "line",
+															"w-0 border-[1.5px] border-dashed bg-transparent":
+																indicator === "dashed",
+															"my-0.5": nestLabel && indicator === "dashed",
+														},
+													)}
+													style={
+														{
+															"--color-bg": indicatorColor,
+															"--color-border": indicatorColor,
+														} as React.CSSProperties
+													}
+												/>
+											)
+										)}
+										<div
+											className={cn(
+												"flex flex-1 justify-between leading-none",
+												nestLabel ? "items-end" : "items-center",
+											)}>
+											<div className="grid gap-1.5">
+												{nestLabel ? tooltipLabel : null}
+												<span className="text-muted-foreground">
+													{itemConfig?.label || item.name}
+												</span>
+											</div>
+											{item.value && (
+												<span className="font-mono font-medium tabular-nums text-foreground">
+													{item.value.toLocaleString()}
+												</span>
+											)}
+										</div>
+									</>
+								)}
+							</div>
+						)
+					})}
+				</div>
+			</div>
+		)
+	},
+)
+ChartTooltipContent.displayName = "ChartTooltip"
+
+const ChartLegend = RechartsPrimitive.Legend
+
+const ChartLegendContent = React.forwardRef<
+	HTMLDivElement,
+	React.ComponentProps<"div"> &
+		Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
+			hideIcon?: boolean
+			nameKey?: string
+		}
+>(({ className, hideIcon = false, payload, verticalAlign = "bottom", nameKey }, ref) => {
+	const { config } = useChart()
+
+	if (!payload?.length) {
+		return null
+	}
+
+	return (
+		<div
+			ref={ref}
+			className={cn(
+				"flex items-center justify-center gap-4",
+				verticalAlign === "top" ? "pb-3" : "pt-3",
+				className,
+			)}>
+			{payload.map((item) => {
+				const key = `${nameKey || item.dataKey || "value"}`
+				const itemConfig = getPayloadConfigFromPayload(config, item, key)
+
+				return (
+					<div
+						key={item.value}
+						className={cn(
+							"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground",
+						)}>
+						{itemConfig?.icon && !hideIcon ? (
+							<itemConfig.icon />
+						) : (
+							<div
+								className="h-2 w-2 shrink-0 rounded-[2px]"
+								style={{
+									backgroundColor: item.color,
+								}}
+							/>
+						)}
+						{itemConfig?.label}
+					</div>
+				)
+			})}
+		</div>
+	)
+})
+ChartLegendContent.displayName = "ChartLegend"
+
+// Helper to extract item config from a payload.
+function getPayloadConfigFromPayload(config: ChartConfig, payload: unknown, key: string) {
+	if (typeof payload !== "object" || payload === null) {
+		return undefined
+	}
+
+	const payloadPayload =
+		"payload" in payload && typeof payload.payload === "object" && payload.payload !== null
+			? payload.payload
+			: undefined
+
+	let configLabelKey: string = key
+
+	if (key in payload && typeof payload[key as keyof typeof payload] === "string") {
+		configLabelKey = payload[key as keyof typeof payload] as string
+	} else if (
+		payloadPayload &&
+		key in payloadPayload &&
+		typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
+	) {
+		configLabelKey = payloadPayload[key as keyof typeof payloadPayload] as string
+	}
+
+	return configLabelKey in config ? config[configLabelKey] : config[key as keyof typeof config]
+}
+
+export { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle }
diff --git a/apps/web-researcherry/src/components/ui/index.ts b/apps/web-researcherry/src/components/ui/index.ts
new file mode 100644
index 000000000..737046e47
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/index.ts
@@ -0,0 +1,5 @@
+export * from "./button"
+export * from "./chart"
+export * from "./modal"
+export * from "./scroll-button"
+export * from "./table"
diff --git a/apps/web-researcherry/src/components/ui/modal.tsx b/apps/web-researcherry/src/components/ui/modal.tsx
new file mode 100644
index 000000000..42d3d1d06
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/modal.tsx
@@ -0,0 +1,95 @@
+"use client"
+
+import * as React from "react"
+import * as DialogPrimitive from "@radix-ui/react-dialog"
+import { X } from "lucide-react"
+import { cn } from "@/lib/utils"
+
+const Dialog = DialogPrimitive.Root
+
+const DialogTrigger = DialogPrimitive.Trigger
+
+const DialogPortal = DialogPrimitive.Portal
+
+const DialogClose = DialogPrimitive.Close
+
+const DialogOverlay = React.forwardRef<
+	React.ElementRef<typeof DialogPrimitive.Overlay>,
+	React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
+>(({ className, ...props }, ref) => (
+	<DialogPrimitive.Overlay
+		ref={ref}
+		className={cn(
+			"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
+			className,
+		)}
+		{...props}
+	/>
+))
+DialogOverlay.displayName = DialogPrimitive.Overlay.displayName
+
+const DialogContent = React.forwardRef<
+	React.ElementRef<typeof DialogPrimitive.Content>,
+	React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
+>(({ className, children, ...props }, ref) => (
+	<DialogPortal>
+		<DialogOverlay />
+		<DialogPrimitive.Content
+			ref={ref}
+			className={cn(
+				"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
+				className,
+			)}
+			{...props}>
+			{children}
+			<DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
+				<X className="h-4 w-4" />
+				<span className="sr-only">Close</span>
+			</DialogPrimitive.Close>
+		</DialogPrimitive.Content>
+	</DialogPortal>
+))
+DialogContent.displayName = DialogPrimitive.Content.displayName
+
+const DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
+	<div className={cn("flex flex-col space-y-1.5 text-center sm:text-left", className)} {...props} />
+)
+DialogHeader.displayName = "DialogHeader"
+
+const DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
+	<div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
+)
+DialogFooter.displayName = "DialogFooter"
+
+const DialogTitle = React.forwardRef<
+	React.ElementRef<typeof DialogPrimitive.Title>,
+	React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
+>(({ className, ...props }, ref) => (
+	<DialogPrimitive.Title
+		ref={ref}
+		className={cn("text-lg font-semibold leading-none tracking-tight", className)}
+		{...props}
+	/>
+))
+DialogTitle.displayName = DialogPrimitive.Title.displayName
+
+const DialogDescription = React.forwardRef<
+	React.ElementRef<typeof DialogPrimitive.Description>,
+	React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
+>(({ className, ...props }, ref) => (
+	<DialogPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
+))
+DialogDescription.displayName = DialogPrimitive.Description.displayName
+
+export {
+	Dialog,
+	DialogPortal,
+	DialogOverlay,
+	DialogTrigger,
+	DialogClose,
+	DialogContent,
+	DialogHeader,
+	DialogFooter,
+	DialogTitle,
+	DialogDescription,
+}
diff --git a/apps/web-researcherry/src/components/ui/scroll-button.tsx b/apps/web-researcherry/src/components/ui/scroll-button.tsx
new file mode 100644
index 000000000..c37fdd5d3
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/scroll-button.tsx
@@ -0,0 +1,33 @@
+"use client"
+
+import { usePathname, useRouter } from "next/navigation"
+
+interface ScrollButtonProps {
+	targetId: string
+	children: React.ReactNode
+	className?: string
+	onClick?: () => void
+}
+
+export function ScrollButton({ targetId, children, className = "", onClick }: ScrollButtonProps) {
+	const router = useRouter()
+	const pathname = usePathname()
+
+	const handleClick = () => {
+		if (pathname === "/") {
+			// if we're on the home page, use smooth scrolling
+			const section = document.getElementById(targetId)
+			section?.scrollIntoView({ behavior: "smooth" })
+		} else {
+			// if we're on a different page, navigate directly to the section
+			router.push(`/#${targetId}`)
+		}
+		onClick?.()
+	}
+
+	return (
+		<button onClick={handleClick} className={className}>
+			{children}
+		</button>
+	)
+}
diff --git a/apps/web-researcherry/src/components/ui/table.tsx b/apps/web-researcherry/src/components/ui/table.tsx
new file mode 100644
index 000000000..4d6ed1416
--- /dev/null
+++ b/apps/web-researcherry/src/components/ui/table.tsx
@@ -0,0 +1,85 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+const Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(
+	({ className, ...props }, ref) => (
+		<div className="relative w-full overflow-auto">
+			<table ref={ref} className={cn("w-full caption-bottom text-sm", className)} {...props} />
+		</div>
+	),
+)
+Table.displayName = "Table"
+
+const TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
+	({ className, ...props }, ref) => <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />,
+)
+TableHeader.displayName = "TableHeader"
+
+const TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
+	({ className, ...props }, ref) => (
+		<tbody ref={ref} className={cn("[&_tr:last-child]:border-0", className)} {...props} />
+	),
+)
+TableBody.displayName = "TableBody"
+
+const TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
+	({ className, ...props }, ref) => (
+		<tfoot
+			ref={ref}
+			className={cn("border-t bg-muted/50 font-medium [&>tr]:last:border-b-0", className)}
+			{...props}
+		/>
+	),
+)
+TableFooter.displayName = "TableFooter"
+
+const TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(
+	({ className, ...props }, ref) => (
+		<tr
+			ref={ref}
+			className={cn("border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted", className)}
+			{...props}
+		/>
+	),
+)
+TableRow.displayName = "TableRow"
+
+const TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(
+	// eslint-disable-next-line react/prop-types
+	({ className, ...props }, ref) => (
+		<th
+			ref={ref}
+			className={cn(
+				"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
+				className,
+			)}
+			{...props}
+		/>
+	),
+)
+TableHead.displayName = "TableHead"
+
+const TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(
+	// eslint-disable-next-line react/prop-types
+	({ className, ...props }, ref) => (
+		<td
+			ref={ref}
+			className={cn(
+				"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
+				className,
+			)}
+			{...props}
+		/>
+	),
+)
+TableCell.displayName = "TableCell"
+
+const TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(
+	({ className, ...props }, ref) => (
+		<caption ref={ref} className={cn("mt-4 text-sm text-muted-foreground", className)} {...props} />
+	),
+)
+TableCaption.displayName = "TableCaption"
+
+export { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption }
diff --git a/apps/web-researcherry/src/lib/constants.ts b/apps/web-researcherry/src/lib/constants.ts
new file mode 100644
index 000000000..2867eff47
--- /dev/null
+++ b/apps/web-researcherry/src/lib/constants.ts
@@ -0,0 +1,31 @@
+export const EXTERNAL_LINKS = {
+	GITHUB: "https://github.com/ResearcherryCoderInc/researcherry",
+	GITHUB_DISCUSSIONS: "https://github.com/ResearcherryCoderInc/researcherry/discussions",
+	DISCORD: "https://discord.gg/researcherry",
+	REDDIT: "https://reddit.com/r/ResearcherryCoder",
+	X: "https://x.com/researcherry_coder",
+	LINKEDIN: "https://www.linkedin.com/company/researcherry",
+	TIKTOK: "https://www.tiktok.com/@researcherry.coder",
+	BLUESKY: "https://bsky.app/profile/researcherry.bsky.social",
+	YOUTUBE: "https://www.youtube.com/@ResearcherryCoderYT",
+	DOCUMENTATION: "https://docs.researcherry.com",
+	CAREERS: "https://careers.researcherry.com",
+	ISSUES: "https://github.com/ResearcherryCoderInc/researcherry/issues",
+	FEATURE_REQUESTS: "https://github.com/ResearcherryCoderInc/researcherry/discussions/categories/feature-requests",
+	COMMUNITY: "https://github.com/ResearcherryCoderInc/researcherry/discussions",
+	CHANGELOG: "https://github.com/ResearcherryCoderInc/researcherry/blob/main/CHANGELOG.md",
+	PRIVACY_POLICY_EXTENSION: "https://github.com/ResearcherryCoderInc/researcherry/blob/main/PRIVACY.md",
+	INTEGRATIONS: "https://docs.researcherry.com/community",
+	TUTORIALS: "https://docs.researcherry.com/tutorial-videos",
+	MARKETPLACE: "https://marketplace.visualstudio.com/items?itemName=ResearcherryCoderInc.researcherry",
+	SECURITY: "https://trust.researcherry.com",
+	EVALS: "https://researcherry.com/evals",
+	BLOG: "https://blog.researcherry.com",
+	OFFICE_HOURS_PODCAST: "https://www.youtube.com/@ResearcherryCoderYT/podcasts",
+	FAQ: "https://researcherry.com/#faq",
+	TESTIMONIALS: "https://researcherry.com/#testimonials",
+}
+
+export const INTERNAL_LINKS = {
+	PRIVACY_POLICY_WEBSITE: "/privacy",
+}
diff --git a/apps/web-researcherry/src/lib/format-currency.ts b/apps/web-researcherry/src/lib/format-currency.ts
new file mode 100644
index 000000000..05c4b2954
--- /dev/null
+++ b/apps/web-researcherry/src/lib/format-currency.ts
@@ -0,0 +1,8 @@
+const formatter = new Intl.NumberFormat("en-US", {
+	style: "currency",
+	currency: "USD",
+})
+
+export const formatCurrency = (amount: number) => formatter.format(amount)
+
+export const parsePrice = (price?: string) => (price ? parseFloat(price) * 1_000_000 : undefined)
diff --git a/apps/web-researcherry/src/lib/format-duration.ts b/apps/web-researcherry/src/lib/format-duration.ts
new file mode 100644
index 000000000..7de767f94
--- /dev/null
+++ b/apps/web-researcherry/src/lib/format-duration.ts
@@ -0,0 +1,22 @@
+export const formatDuration = (durationMs: number) => {
+	const seconds = Math.floor(durationMs / 1000)
+	const hours = Math.floor(seconds / 3600)
+	const minutes = Math.floor((seconds % 3600) / 60)
+	const remainingSeconds = seconds % 60
+
+	const parts = []
+
+	if (hours > 0) {
+		parts.push(`${hours}h`)
+	}
+
+	if (minutes > 0) {
+		parts.push(`${minutes}m`)
+	}
+
+	if (remainingSeconds > 0 || parts.length === 0) {
+		parts.push(`${remainingSeconds}s`)
+	}
+
+	return parts.join(" ")
+}
diff --git a/apps/web-researcherry/src/lib/format-score.ts b/apps/web-researcherry/src/lib/format-score.ts
new file mode 100644
index 000000000..68568f1ee
--- /dev/null
+++ b/apps/web-researcherry/src/lib/format-score.ts
@@ -0,0 +1 @@
+export const formatScore = (score: number) => Math.round(score * 100)
diff --git a/apps/web-researcherry/src/lib/format-tokens.ts b/apps/web-researcherry/src/lib/format-tokens.ts
new file mode 100644
index 000000000..1efaf0345
--- /dev/null
+++ b/apps/web-researcherry/src/lib/format-tokens.ts
@@ -0,0 +1,15 @@
+export const formatTokens = (tokens: number, decimals = 0) => {
+	if (tokens < 1000) {
+		return tokens.toString()
+	}
+
+	if (tokens < 1000000) {
+		return `${(tokens / 1000).toFixed(decimals)}K`
+	}
+
+	if (tokens < 1000000000) {
+		return `${(tokens / 1000000).toFixed(decimals)}M`
+	}
+
+	return `${(tokens / 1000000000).toFixed(decimals)}B`
+}
diff --git a/apps/web-researcherry/src/lib/hooks/index.ts b/apps/web-researcherry/src/lib/hooks/index.ts
new file mode 100644
index 000000000..c0ac6dcf2
--- /dev/null
+++ b/apps/web-researcherry/src/lib/hooks/index.ts
@@ -0,0 +1,2 @@
+export * from "./use-logo-src"
+export * from "./use-open-router-models"
diff --git a/apps/web-researcherry/src/lib/hooks/use-logo-src.ts b/apps/web-researcherry/src/lib/hooks/use-logo-src.ts
new file mode 100644
index 000000000..52a253912
--- /dev/null
+++ b/apps/web-researcherry/src/lib/hooks/use-logo-src.ts
@@ -0,0 +1,24 @@
+"use client"
+
+import { useTheme } from "next-themes"
+import { useEffect, useState } from "react"
+
+export function useLogoSrc(): string {
+	const { resolvedTheme, theme } = useTheme()
+	const [mounted, setMounted] = useState(false)
+
+	// Avoid hydration mismatch by waiting for client-side mount
+	useEffect(() => {
+		setMounted(true)
+	}, [])
+
+	// Before mounting, return a default logo (dark theme as specified in providers)
+	// This prevents the logo from flickering on initial load
+	if (!mounted) {
+		return "/ResearcherryCoder-Logo-Horiz-white.svg"
+	}
+
+	// Use theme as fallback if resolvedTheme is not available yet
+	const currentTheme = resolvedTheme || theme
+	return currentTheme === "light" ? "/ResearcherryCoder-Logo-Horiz-blk.svg" : "/ResearcherryCoder-Logo-Horiz-white.svg"
+}
diff --git a/apps/web-researcherry/src/lib/hooks/use-open-router-models.ts b/apps/web-researcherry/src/lib/hooks/use-open-router-models.ts
new file mode 100644
index 000000000..bb8ca2161
--- /dev/null
+++ b/apps/web-researcherry/src/lib/hooks/use-open-router-models.ts
@@ -0,0 +1,72 @@
+import { z } from "zod"
+import { useQuery } from "@tanstack/react-query"
+
+import { ModelInfo } from "@researcherry/types"
+
+const parsePrice = (price?: string) => (price ? parseFloat(price) * 1_000_000 : undefined)
+
+export const openRouterModelSchema = z.object({
+	id: z.string(),
+	name: z.string(),
+	description: z.string(),
+	created: z.number(),
+	context_length: z.number(),
+	pricing: z.object({
+		prompt: z.string().optional(),
+		completion: z.string().optional(),
+	}),
+	top_provider: z
+		.object({
+			max_completion_tokens: z.number().nullish(),
+		})
+		.optional(),
+	architecture: z
+		.object({
+			modality: z.string(),
+		})
+		.optional(),
+})
+
+export type OpenRouterModel = z.infer<typeof openRouterModelSchema>
+
+export type OpenRouterModelRecord = Record<string, OpenRouterModel & { modelInfo: ModelInfo }>
+
+export const getOpenRouterModels = async (): Promise<OpenRouterModelRecord> => {
+	const response = await fetch("https://openrouter.ai/api/v1/models")
+
+	if (!response.ok) {
+		console.error("Failed to fetch OpenRouter models")
+		return {}
+	}
+
+	const result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())
+
+	if (!result.success) {
+		console.error(result.error)
+		return {}
+	}
+
+	return result.data.data
+		.sort((a, b) => a.name.localeCompare(b.name))
+		.map((rawModel) => ({
+			...rawModel,
+			modelInfo: {
+				maxTokens: rawModel.top_provider?.max_completion_tokens ?? undefined,
+				contextWindow: rawModel.context_length,
+				inputPrice: parsePrice(rawModel.pricing?.prompt),
+				outputPrice: parsePrice(rawModel.pricing?.completion),
+				description: rawModel.description,
+				supportsPromptCache: false,
+				supportsImages: false,
+				supportsThinking: false,
+				tiers: [],
+			},
+		}))
+		.reduce((acc, model) => {
+			acc[model.id] = model
+			return acc
+		}, {} as OpenRouterModelRecord)
+}
+
+export const useOpenRouterModels = () =>
+	useQuery<OpenRouterModelRecord>({ queryKey: ["getOpenRouterModels"], queryFn: getOpenRouterModels })
diff --git a/apps/web-researcherry/src/lib/index.ts b/apps/web-researcherry/src/lib/index.ts
new file mode 100644
index 000000000..2568e893d
--- /dev/null
+++ b/apps/web-researcherry/src/lib/index.ts
@@ -0,0 +1,4 @@
+export * from "./format-currency"
+export * from "./format-duration"
+export * from "./format-score"
+export * from "./format-tokens"
diff --git a/apps/web-researcherry/src/lib/stats.ts b/apps/web-researcherry/src/lib/stats.ts
new file mode 100644
index 000000000..3a71f3712
--- /dev/null
+++ b/apps/web-researcherry/src/lib/stats.ts
@@ -0,0 +1,118 @@
+export async function getGitHubStars() {
+	try {
+		const res = await fetch("https://api.github.com/repos/ResearcherryCoderInc/researcherry")
+		const data = await res.json()
+
+		if (typeof data.stargazers_count !== "number") {
+			console.error("GitHub API: Invalid stargazers count. Possible that you got rate-limited?")
+			return null
+		}
+
+		return formatNumber(data.stargazers_count)
+	} catch (error) {
+		console.error("Error fetching GitHub stars:", error)
+		return null
+	}
+}
+
+export async function getVSCodeReviews() {
+	const res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {
+		method: "POST",
+		headers: {
+			"Content-Type": "application/json",
+			Accept: "application/json;api-version=7.1-preview.1",
+		},
+		body: JSON.stringify({
+			filters: [
+				{
+					criteria: [
+						{
+							filterType: 7,
+							value: "ResearcherryCoderInc.researcherry",
+						},
+					],
+				},
+			],
+			flags: 914,
+		}),
+	})
+
+	try {
+		const data = await res.json()
+		const reviews = data?.results?.[0]?.extensions?.[0]?.reviews
+
+		if (!reviews) {
+			console.error("VSCode API: Missing reviews in response")
+			return []
+		}
+
+		/* eslint-disable  @typescript-eslint/no-explicit-any */
+		return reviews.map((review: any) => ({
+			name: review.reviewer?.displayName || "Anonymous",
+			rating: review.rating,
+			content: review.text,
+			date: new Date(review.date).toLocaleDateString(),
+		}))
+	} catch (error) {
+		console.error("Error fetching VSCode reviews:", error)
+		return []
+	}
+}
+
+export async function getVSCodeDownloads() {
+	const res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {
+		method: "POST",
+		headers: {
+			"Content-Type": "application/json",
+			Accept: "application/json;api-version=7.1-preview.1",
+		},
+		body: JSON.stringify({
+			filters: [
+				{
+					criteria: [
+						{
+							filterType: 7,
+							value: "ResearcherryCoderInc.researcherry",
+						},
+					],
+				},
+			],
+			flags: 914,
+		}),
+	})
+	try {
+		const data = await res.json()
+		const statistics = data?.results?.[0]?.extensions?.[0]?.statistics
+
+		if (!statistics) {
+			console.error("VSCode API: Missing statistics in response")
+			return null
+		}
+
+		/* eslint-disable  @typescript-eslint/no-explicit-any */
+		const installStat = statistics.find((stat: any) => stat.statisticName === "install")
+		if (!installStat) {
+			console.error("VSCode API: Install count not found")
+			return null
+		}
+
+		return formatNumber(installStat.value)
+	} catch (error) {
+		console.error("Error fetching VSCode downloads:", error)
+		return null
+	}
+}
+
+function formatNumber(num: number): string {
+	// divide by 1000 to convert to "thousands" format,
+	// multiply by 10, floor the result, then divide by 10 to keep one decimal place.
+	const truncated = Math.floor((num / 1000) * 10) / 10
+	// ensure one decimal is always shown and append "k"
+	return truncated.toFixed(1) + "k"
+
+	// examples:
+	// console.log(formatNumber(337231)) -> "337.2k"
+	// console.log(formatNumber(23233)) -> "23.2k"
+	// console.log(formatNumber(2322)) -> "2.3k"
+	// console.log(formatNumber(212)) -> "0.2k"
+}
diff --git a/apps/web-researcherry/src/lib/utils.ts b/apps/web-researcherry/src/lib/utils.ts
new file mode 100644
index 000000000..9a7122c30
--- /dev/null
+++ b/apps/web-researcherry/src/lib/utils.ts
@@ -0,0 +1,6 @@
+import { clsx, type ClassValue } from "clsx"
+import { twMerge } from "tailwind-merge"
+
+export function cn(...inputs: ClassValue[]) {
+	return twMerge(clsx(inputs))
+}
diff --git a/apps/web-researcherry/tailwind.config.ts b/apps/web-researcherry/tailwind.config.ts
new file mode 100644
index 000000000..870371f32
--- /dev/null
+++ b/apps/web-researcherry/tailwind.config.ts
@@ -0,0 +1,118 @@
+import type { Config } from "tailwindcss"
+
+const config: Config = {
+	darkMode: ["class"],
+	content: [
+		"./pages/**/*.{ts,tsx}",
+		"./components/**/*.{ts,tsx}",
+		"./app/**/*.{ts,tsx}",
+		"./src/**/*.{ts,tsx}",
+		"*.{js,ts,jsx,tsx,mdx}",
+	],
+	theme: {
+		container: {
+			center: true,
+			padding: "2rem",
+			screens: {
+				"2xl": "1400px",
+			},
+		},
+		extend: {
+			colors: {
+				border: "hsl(var(--border))",
+				input: "hsl(var(--input))",
+				ring: "hsl(var(--ring))",
+				background: "hsl(var(--background))",
+				foreground: "hsl(var(--foreground))",
+				primary: {
+					DEFAULT: "hsl(var(--primary))",
+					foreground: "hsl(var(--primary-foreground))",
+				},
+				secondary: {
+					DEFAULT: "hsl(var(--secondary))",
+					foreground: "hsl(var(--secondary-foreground))",
+				},
+				destructive: {
+					DEFAULT: "hsl(var(--destructive))",
+					foreground: "hsl(var(--destructive-foreground))",
+				},
+				muted: {
+					DEFAULT: "hsl(var(--muted))",
+					foreground: "hsl(var(--muted-foreground))",
+				},
+				accent: {
+					DEFAULT: "hsl(var(--accent))",
+					foreground: "hsl(var(--accent-foreground))",
+				},
+				popover: {
+					DEFAULT: "hsl(var(--popover))",
+					foreground: "hsl(var(--popover-foreground))",
+				},
+				card: {
+					DEFAULT: "hsl(var(--card))",
+					foreground: "hsl(var(--card-foreground))",
+				},
+				"chart-1": {
+					DEFAULT: "hsl(var(--chart-1))",
+					foreground: "hsl(var(--chart-1-foreground))",
+				},
+				"chart-2": {
+					DEFAULT: "hsl(var(--chart-2))",
+					foreground: "hsl(var(--chart-2-foreground))",
+				},
+				"chart-3": {
+					DEFAULT: "hsl(var(--chart-3))",
+					foreground: "hsl(var(--chart-3-foreground))",
+				},
+				"chart-4": {
+					DEFAULT: "hsl(var(--chart-4))",
+					foreground: "hsl(var(--chart-4-foreground))",
+				},
+				"chart-5": {
+					DEFAULT: "hsl(var(--chart-5))",
+					foreground: "hsl(var(--chart-5-foreground))",
+				},
+			},
+			borderRadius: {
+				lg: "var(--radius)",
+				md: "calc(var(--radius) - 2px)",
+				sm: "calc(var(--radius) - 4px)",
+			},
+			keyframes: {
+				"accordion-down": {
+					from: { height: "0" },
+					to: { height: "var(--radix-accordion-content-height)" },
+				},
+				"accordion-up": {
+					from: { height: "var(--radix-accordion-content-height)" },
+					to: { height: "0" },
+				},
+				"fade-in": {
+					from: { opacity: "0" },
+					to: { opacity: "1" },
+				},
+				"fade-out": {
+					from: { opacity: "1" },
+					to: { opacity: "0" },
+				},
+				"pulse-glow": {
+					"0%, 100%": { opacity: "0.6" },
+					"50%": { opacity: "0.8" },
+				},
+			},
+			animation: {
+				"accordion-down": "accordion-down 0.2s ease-out",
+				"accordion-up": "accordion-up 0.2s ease-out",
+				"fade-in": "fade-in 0.5s ease-out",
+				"fade-out": "fade-out 0.5s ease-out",
+				"pulse-glow": "pulse-glow 3s infinite",
+			},
+			screens: {
+				xs: "420px",
+			},
+		},
+	},
+	plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
+}
+
+export default config
diff --git a/apps/web-researcherry/tsconfig.json b/apps/web-researcherry/tsconfig.json
new file mode 100644
index 000000000..4b7d77b86
--- /dev/null
+++ b/apps/web-researcherry/tsconfig.json
@@ -0,0 +1,8 @@
+{
+	"extends": "@researcherry/config-typescript/nextjs.json",
+	"compilerOptions": {
+		"paths": { "@/*": ["./src/*"] }
+	},
+	"include": ["next-env.d.ts", "src/**/*.ts", "src/**/*.tsx", ".next/types/**/*.ts", "drizzle.config.ts"],
+	"exclude": ["node_modules"]
+}
diff --git a/apps/web-researcherry/turbo.json b/apps/web-researcherry/turbo.json
new file mode 100644
index 000000000..8ebadcb02
--- /dev/null
+++ b/apps/web-researcherry/turbo.json
@@ -0,0 +1,10 @@
+{
+	"$schema": "https://turbo.build/schema.json",
+	"extends": ["//"],
+	"tasks": {
+		"build": {
+			"outputs": [".next/**"],
+			"inputs": ["src/**", "package.json", "tsconfig.json", "next.config.ts"]
+		}
+	}
+}
diff --git a/package.json b/package.json
index 5e73f0c47..6c6dbed37 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,6 @@
 {
-	"name": "roo-code",
+	"name": "researcherry",
+	"version": "3.31.2",
 	"packageManager": "pnpm@10.8.1",
 	"engines": {
 		"node": "20.19.2"
diff --git a/src/assets/icons/icon-from-icns-backup.png b/src/assets/icons/icon-from-icns-backup.png
new file mode 100644
index 000000000..fb489888a
Binary files /dev/null and b/src/assets/icons/icon-from-icns-backup.png differ
diff --git a/src/assets/icons/icon-nightly.png b/src/assets/icons/icon-nightly.png
index b0bef29cc..fb489888a 100644
Binary files a/src/assets/icons/icon-nightly.png and b/src/assets/icons/icon-nightly.png differ
diff --git a/src/assets/icons/icon-nightly.svg b/src/assets/icons/icon-nightly.svg
new file mode 100644
index 000000000..da4ea8fac
--- /dev/null
+++ b/src/assets/icons/icon-nightly.svg
@@ -0,0 +1,17 @@
+<svg width="128" height="128" viewBox="0 0 128 128" fill="none" xmlns="http://www.w3.org/2000/svg">
+  <!-- Background circle -->
+  <circle cx="64" cy="64" r="60" fill="#1e1e1e"/>
+  
+  <!-- Main Researcherry "N" logo in white -->
+  <g transform="translate(24, 24) scale(0.22, 0.22)">
+    <path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="white"/>
+    <path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="white"/>
+  </g>
+  
+  <!-- Nightly indicator - golden dot -->
+  <circle cx="100" cy="28" r="8" fill="#FFD700"/>
+  <circle cx="100" cy="28" r="6" fill="#FFA500" opacity="0.8"/>
+  
+  <!-- Subtle border -->
+  <circle cx="64" cy="64" r="60" fill="none" stroke="#333" stroke-width="1" opacity="0.3"/>
+</svg>
\ No newline at end of file
diff --git a/src/assets/icons/icon-old-backup.png b/src/assets/icons/icon-old-backup.png
new file mode 100644
index 000000000..0b2bf32e6
Binary files /dev/null and b/src/assets/icons/icon-old-backup.png differ
diff --git a/src/assets/icons/icon.png b/src/assets/icons/icon.png
index b0bef29cc..fb489888a 100644
Binary files a/src/assets/icons/icon.png and b/src/assets/icons/icon.png differ
diff --git a/src/assets/icons/icon.svg b/src/assets/icons/icon.svg
index a4e2d75e5..dfe0180ef 100644
--- a/src/assets/icons/icon.svg
+++ b/src/assets/icons/icon.svg
@@ -1,12 +1,13 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:i="http://ns.adobe.com/AdobeIllustrator/10.0/" version="1.1" viewBox="0 0 96 96">
-  <defs>
-    <style>
-      .cls-1 {
-        fill: #000;
-        stroke-width: 0px;
-      }
-    </style>
-  </defs>
-  <path class="cls-1" d="M78.99,21.9l-1.73,6.24c-.09.33-.44.52-.77.42l-28.11-8.71c-.19-.06-.41-.02-.56.11l-28.95,23.22c-.08.07-.18.11-.29.13l-17.25,2.66c-.31.05-.53.32-.52.63l.11,2.47c.01.31.26.56.57.58l20.08,1.23c.11,0,.22-.02.31-.06l14.64-7.4c.21-.11.46-.08.64.06l9.37,7.03c.16.12.25.3.24.49l-.09,11.65c0,.13.04.25.11.35l14.74,21.15c.11.16.3.26.5.26h5.03c.46,0,.76-.5.54-.9l-10.87-19.92c-.1-.18-.1-.4,0-.58l5.51-10.48c.06-.11.15-.2.26-.26l19.56-9.92c.2-.1.43-.09.62.04l5.6,3.73c.1.07.22.1.34.1h5.15c.48,0,.77-.52.52-.93l-14.2-23.52c-.28-.46-.97-.36-1.11.15Z"/>
-</svg>
+<svg width="128" height="128" viewBox="0 0 128 128" fill="none" xmlns="http://www.w3.org/2000/svg">
+  <!-- Background circle -->
+  <circle cx="64" cy="64" r="60" fill="#1e1e1e"/>
+  
+  <!-- Main Researcherry "N" logo in white -->
+  <g transform="translate(24, 24) scale(0.22, 0.22)">
+    <path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="white"/>
+    <path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="white"/>
+  </g>
+  
+  <!-- Subtle border -->
+  <circle cx="64" cy="64" r="60" fill="none" stroke="#333" stroke-width="1" opacity="0.3"/>
+</svg>
\ No newline at end of file
diff --git a/src/assets/icons/logo_researcherry_black_char.svg b/src/assets/icons/logo_researcherry_black_char.svg
new file mode 100644
index 000000000..5cdfabc33
--- /dev/null
+++ b/src/assets/icons/logo_researcherry_black_char.svg
@@ -0,0 +1,11 @@
+<svg width="357" height="319" viewBox="0 0 357 319" fill="none" xmlns="http://www.w3.org/2000/svg">
+<g clip-path="url(#clip0_122_5)">
+<path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="black"/>
+<path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="black"/>
+</g>
+<defs>
+<clipPath id="clip0_122_5">
+<rect width="356.72" height="318.78" fill="white"/>
+</clipPath>
+</defs>
+</svg>
diff --git a/src/assets/icons/logo_researcherry_black_full.svg b/src/assets/icons/logo_researcherry_black_full.svg
new file mode 100644
index 000000000..bd79fea61
--- /dev/null
+++ b/src/assets/icons/logo_researcherry_black_full.svg
@@ -0,0 +1,16 @@
+<svg width="1346" height="319" viewBox="0 0 1346 319" fill="none" xmlns="http://www.w3.org/2000/svg">
+<g clip-path="url(#clip0_122_10)">
+<path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="black"/>
+<path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="black"/>
+<path d="M649.74 188.55H476.92V243.48H649.74C661.18 243.48 672.14 241.22 682.33 236.76C692.46 232.33 701.36 226.22 708.78 218.58C716.16 210.99 722.12 202.04 726.52 191.98C730.98 181.79 733.24 170.83 733.24 159.39C733.24 147.95 730.98 136.99 726.52 126.8C722.12 116.74 716.15 107.79 708.77 100.2C701.35 92.5701 692.46 86.4601 682.32 82.0301C672.13 77.5701 661.16 75.3101 649.73 75.3101H498.54C481.7 75.3101 465.64 78.5501 450.81 84.9301C436.03 91.3001 423.02 100.05 412.14 110.93C401.24 121.83 392.49 134.84 386.14 149.6C379.76 164.41 376.52 180.47 376.52 197.33C376.52 214.19 379.76 229.66 386.14 244.47C392.5 259.25 401.25 272.26 412.14 283.14C423.03 294.04 436.04 302.79 450.82 309.15C465.63 315.53 481.69 318.77 498.55 318.77H705.11V264.43H498.55C489.44 264.43 480.76 262.66 472.74 259.17C464.65 255.66 457.43 250.76 451.27 244.6C445.11 238.45 440.21 231.23 436.69 223.12C433.2 215.12 431.44 206.43 431.44 197.33C431.44 188.23 433.21 178.96 436.7 170.94C440.2 162.89 445.08 155.78 451.2 149.83C457.36 143.84 464.61 139.01 472.74 135.47C480.78 131.98 489.46 130.21 498.55 130.21H649.74C657.99 130.21 664.77 132.97 670.45 138.66C676.13 144.34 678.9 151.12 678.9 159.37C678.9 167.62 676.14 174.4 670.45 180.08C664.77 185.76 657.99 188.53 649.74 188.53V188.55Z" fill="black"/>
+<path d="M810.88 75.3H755.95V318.78H810.88V75.3Z" fill="black"/>
+<path d="M810.88 0H755.95V55.51H810.88V0Z" fill="black"/>
+<path d="M1062.25 130.23V75.3H979.91C960.34 75.3 941.82 79.03 924.87 86.39C907.98 93.72 892.91 103.94 880.08 116.77C867.26 129.59 857.04 144.66 849.71 161.56C842.35 178.53 838.62 197.05 838.62 216.6V318.78H893.55V216.6C893.55 204.75 895.82 193.4 900.29 182.86C904.77 172.3 911.02 163.05 918.87 155.37C926.77 147.65 936.07 141.45 946.51 136.95C956.87 132.49 968.11 130.23 979.92 130.23H1062.26H1062.25Z" fill="black"/>
+<path d="M1336.86 137.57C1331.49 125.36 1324.12 114.53 1314.98 105.39C1305.84 96.2501 1295.01 88.8801 1282.77 83.4801C1270.42 78.0501 1257 75.3201 1242.88 75.3201H1200.64C1186.82 75.3201 1173.29 79.3801 1161.76 87.0001L1023.02 178.61C1011.97 185.84 1003.33 195.15 997.34 206.26C991.35 217.37 988.34 229.47 988.34 242.29C988.34 252.98 990.39 263.05 994.47 272.28C998.49 281.39 1004.01 289.5 1010.81 296.27C1017.65 303.11 1025.83 308.62 1035.17 312.64C1044.56 316.72 1054.55 318.77 1064.82 318.77H1145.21L1268.87 234.38V180.03L1143.94 264.42H1064.82C1058.97 264.42 1054.05 262.25 1049.74 257.81C1045.38 253.31 1043.24 248.22 1043.24 242.28C1043.24 234.15 1046.31 228.44 1052.94 224.19L1195.36 130.21H1242.87C1249.62 130.21 1255.92 131.48 1261.6 134.01C1267.39 136.54 1272.46 139.97 1276.71 144.19C1280.93 148.44 1284.36 153.53 1286.92 159.3C1289.42 164.98 1290.69 171.11 1290.69 177.47V318.76H1345.04V177.47C1345.04 163.35 1342.28 149.9 1336.85 137.55L1336.86 137.57Z" fill="black"/>
+</g>
+<defs>
+<clipPath id="clip0_122_10">
+<rect width="1345.04" height="318.78" fill="white"/>
+</clipPath>
+</defs>
+</svg>
diff --git a/src/assets/icons/logo_researcherry_white_char.svg b/src/assets/icons/logo_researcherry_white_char.svg
new file mode 100644
index 000000000..e63542c34
--- /dev/null
+++ b/src/assets/icons/logo_researcherry_white_char.svg
@@ -0,0 +1,11 @@
+<svg width="357" height="319" viewBox="0 0 357 319" fill="none" xmlns="http://www.w3.org/2000/svg">
+<g clip-path="url(#clip0_122_5)">
+<path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="white"/>
+<path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="white"/>
+</g>
+<defs>
+<clipPath id="clip0_122_5">
+<rect width="356.72" height="318.78" fill="white"/>
+</clipPath>
+</defs>
+</svg>
\ No newline at end of file
diff --git a/src/assets/icons/logo_researcherry_white_full.svg b/src/assets/icons/logo_researcherry_white_full.svg
new file mode 100644
index 000000000..02d3fafe6
--- /dev/null
+++ b/src/assets/icons/logo_researcherry_white_full.svg
@@ -0,0 +1,16 @@
+<svg width="1346" height="319" viewBox="0 0 1346 319" fill="none" xmlns="http://www.w3.org/2000/svg">
+<g clip-path="url(#clip0_122_23)">
+<path d="M203.87 148.48H141.11L93.17 64.83C89.01 57.7 83.33 54.35 75.34 54.35C69.44 54.35 64.66 56.26 60.75 60.17C56.84 64.08 54.93 68.86 54.93 74.74V318.78H0V74.74C0 64.42 2.09 54.62 6.18 45.57C10.2 36.7 15.56 28.77 22.12 21.98C28.81 15.09 36.86 9.65 46.07 5.8C55.25 1.95 65.11 0 75.34 0C88.99 0 101.68 3.37 113.04 10.02C124.34 16.65 133.54 25.82 140.34 37.3L203.86 148.48H203.87Z" fill="white"/>
+<path d="M356.72 0V243.46C356.72 253.68 354.77 263.54 350.92 272.73C347.09 281.9 341.67 290.01 334.82 296.88C327.99 303.71 319.98 309.11 311.03 312.96C302 316.81 292.24 318.78 281.98 318.78C268.31 318.78 255.5 315.31 243.96 308.46C232.42 301.63 223.3 292.3 216.88 280.72L153.62 170.3H216.34L264.16 253.97C265.97 257.26 268.36 259.73 271.55 261.62C274.76 263.51 278.18 264.43 281.99 264.43C287.85 264.43 292.59 262.46 296.48 258.41C300.45 254.29 302.38 249.4 302.38 243.45V0H356.72Z" fill="white"/>
+<path d="M649.74 188.55H476.92V243.48H649.74C661.18 243.48 672.14 241.22 682.33 236.76C692.46 232.33 701.36 226.22 708.78 218.58C716.16 210.99 722.12 202.04 726.52 191.98C730.98 181.79 733.24 170.83 733.24 159.39C733.24 147.95 730.98 136.99 726.52 126.8C722.12 116.74 716.15 107.79 708.77 100.2C701.35 92.5701 692.46 86.4601 682.32 82.0301C672.13 77.5701 661.16 75.3101 649.73 75.3101H498.54C481.7 75.3101 465.64 78.5501 450.81 84.9301C436.03 91.3001 423.02 100.05 412.14 110.93C401.24 121.83 392.49 134.84 386.14 149.6C379.76 164.41 376.52 180.47 376.52 197.33C376.52 214.19 379.76 229.66 386.14 244.47C392.5 259.25 401.25 272.26 412.14 283.14C423.03 294.04 436.04 302.79 450.82 309.15C465.63 315.53 481.69 318.77 498.55 318.77H705.11V264.43H498.55C489.44 264.43 480.76 262.66 472.74 259.17C464.65 255.66 457.43 250.76 451.27 244.6C445.11 238.45 440.21 231.23 436.69 223.12C433.2 215.12 431.44 206.43 431.44 197.33C431.44 188.23 433.21 178.96 436.7 170.94C440.2 162.89 445.08 155.78 451.2 149.83C457.36 143.84 464.61 139.01 472.74 135.47C480.78 131.98 489.46 130.21 498.55 130.21H649.74C657.99 130.21 664.77 132.97 670.45 138.66C676.13 144.34 678.9 151.12 678.9 159.37C678.9 167.62 676.14 174.4 670.45 180.08C664.77 185.76 657.99 188.53 649.74 188.53V188.55Z" fill="white"/>
+<path d="M810.88 75.3H755.95V318.78H810.88V75.3Z" fill="white"/>
+<path d="M810.88 0H755.95V55.51H810.88V0Z" fill="white"/>
+<path d="M1062.25 130.23V75.3H979.91C960.34 75.3 941.82 79.03 924.87 86.39C907.98 93.72 892.91 103.94 880.08 116.77C867.26 129.59 857.04 144.66 849.71 161.56C842.35 178.53 838.62 197.05 838.62 216.6V318.78H893.55V216.6C893.55 204.75 895.82 193.4 900.29 182.86C904.77 172.3 911.02 163.05 918.87 155.37C926.77 147.65 936.07 141.45 946.51 136.95C956.87 132.49 968.11 130.23 979.92 130.23H1062.26H1062.25Z" fill="white"/>
+<path d="M1336.86 137.57C1331.49 125.36 1324.12 114.53 1314.98 105.39C1305.84 96.2501 1295.01 88.8801 1282.77 83.4801C1270.42 78.0501 1257 75.3201 1242.88 75.3201H1200.64C1186.82 75.3201 1173.29 79.3801 1161.76 87.0001L1023.02 178.61C1011.97 185.84 1003.33 195.15 997.34 206.26C991.35 217.37 988.34 229.47 988.34 242.29C988.34 252.98 990.39 263.05 994.47 272.28C998.49 281.39 1004.01 289.5 1010.81 296.27C1017.65 303.11 1025.83 308.62 1035.17 312.64C1044.56 316.72 1054.55 318.77 1064.82 318.77H1145.21L1268.87 234.38V180.03L1143.94 264.42H1064.82C1058.97 264.42 1054.05 262.25 1049.74 257.81C1045.38 253.31 1043.24 248.22 1043.24 242.28C1043.24 234.15 1046.31 228.44 1052.94 224.19L1195.36 130.21H1242.87C1249.62 130.21 1255.92 131.48 1261.6 134.01C1267.39 136.54 1272.46 139.97 1276.71 144.19C1280.93 148.44 1284.36 153.53 1286.92 159.3C1289.42 164.98 1290.69 171.11 1290.69 177.47V318.76H1345.04V177.47C1345.04 163.35 1342.28 149.9 1336.85 137.55L1336.86 137.57Z" fill="white"/>
+</g>
+<defs>
+<clipPath id="clip0_122_23">
+<rect width="1345.04" height="318.78" fill="white"/>
+</clipPath>
+</defs>
+</svg>
diff --git a/src/assets/icons/panel_dark.png b/src/assets/icons/panel_dark.png
index 09a2d84ca..6eb20adbd 100644
Binary files a/src/assets/icons/panel_dark.png and b/src/assets/icons/panel_dark.png differ
diff --git a/src/assets/icons/panel_light.png b/src/assets/icons/panel_light.png
index 221a8d3ab..65788781a 100644
Binary files a/src/assets/icons/panel_light.png and b/src/assets/icons/panel_light.png differ
diff --git a/src/i18n/locales/en/common.json b/src/i18n/locales/en/common.json
index 05d039a49..1ecddf171 100644
--- a/src/i18n/locales/en/common.json
+++ b/src/i18n/locales/en/common.json
@@ -1,6 +1,6 @@
 {
 	"extension": {
-		"name": "Roo Code",
+		"name": "Researcherry Coder",
 		"description": "A whole dev team of AI agents in your editor."
 	},
 	"number_format": {
@@ -61,7 +61,6 @@
 		"no_internet": "No internet connection. Please check your network connection and try again.",
 		"url_forbidden": "Access to this website is forbidden. The site may block automated access or require authentication.",
 		"url_page_not_found": "The page was not found. Please check if the URL is correct.",
-		"url_request_aborted": "The request to fetch the URL was aborted. This may happen if the site blocks automated access, requires authentication, or if there's a network issue. Please try again or check if the URL is accessible in a regular browser.",
 		"url_fetch_failed": "Failed to fetch URL content: {{error}}",
 		"url_fetch_error_with_url": "Error fetching content for {{url}}: {{error}}",
 		"command_timeout": "Command execution timed out after {{seconds}} seconds",
@@ -105,7 +104,7 @@
 	"warnings": {
 		"no_terminal_content": "No terminal content selected",
 		"missing_task_files": "This task's files are missing. Would you like to remove it from the task list?",
-		"auto_import_failed": "Failed to auto-import RooCode settings: {{error}}"
+		"auto_import_failed": "Failed to auto-import ResearcherryCoder settings: {{error}}"
 	},
 	"info": {
 		"no_changes": "No changes found.",
@@ -114,7 +113,7 @@
 		"custom_storage_path_set": "Custom storage path set: {{path}}",
 		"default_storage_path": "Reverted to using default storage path",
 		"settings_imported": "Settings imported successfully.",
-		"auto_import_success": "RooCode settings automatically imported from {{filename}}",
+		"auto_import_success": "ResearcherryCoder settings automatically imported from {{filename}}",
 		"share_link_copied": "Share link copied to clipboard",
 		"organization_share_link_copied": "Organization share link copied to clipboard!",
 		"public_share_link_copied": "Public share link copied to clipboard!",
@@ -142,8 +141,8 @@
 	},
 	"storage": {
 		"prompt_custom_path": "Enter custom conversation history storage path, leave empty to use default location",
-		"path_placeholder": "D:\\RooCodeStorage",
-		"enter_absolute_path": "Please enter an absolute path (e.g. D:\\RooCodeStorage or /home/user/storage)",
+		"path_placeholder": "D:\\ResearcherryCoderStorage",
+		"enter_absolute_path": "Please enter an absolute path (e.g. D:\\ResearcherryCoderStorage or /home/user/storage)",
 		"enter_valid_path": "Please enter a valid path"
 	},
 	"input": {
@@ -152,8 +151,8 @@
 	},
 	"customModes": {
 		"errors": {
-			"yamlParseError": "Invalid YAML in .roomodes file at line {{line}}. Please check for:\n• Proper indentation (use spaces, not tabs)\n• Matching quotes and brackets\n• Valid YAML syntax",
-			"schemaValidationError": "Invalid custom modes format in .roomodes:\n{{issues}}",
+					"yamlParseError": "Invalid YAML in .researcherry-modes file at line {{line}}. Please check for:\n• Proper indentation (use spaces, not tabs)\n• Matching quotes and brackets\n• Valid YAML syntax",
+		"schemaValidationError": "Invalid custom modes format in .researcherry-modes:\n{{issues}}",
 			"invalidFormat": "Invalid custom modes format. Please ensure your settings follow the correct YAML format.",
 			"updateFailed": "Failed to update custom mode: {{error}}",
 			"deleteFailed": "Failed to delete custom mode: {{error}}",
diff --git a/src/i18n/locales/en/mcp.json b/src/i18n/locales/en/mcp.json
index c34b2c9c0..a6994e379 100644
--- a/src/i18n/locales/en/mcp.json
+++ b/src/i18n/locales/en/mcp.json
@@ -3,7 +3,7 @@
 		"invalid_settings_format": "Invalid MCP settings JSON format. Please ensure your settings follow the correct JSON format.",
 		"invalid_settings_syntax": "Invalid MCP settings JSON format. Please check your settings file for syntax errors.",
 		"invalid_settings_validation": "Invalid MCP settings format: {{errorMessages}}",
-		"create_json": "Failed to create or open .roo/mcp.json: {{error}}",
+		"create_json": "Failed to create or open .researcherry/mcp.json: {{error}}",
 		"failed_update_project": "Failed to update project MCP servers",
 		"invalidJsonArgument": "Roo tried to use {{toolName}} with an invalid JSON argument. Retrying..."
 	},
diff --git a/src/i18n/locales/ru/common.json b/src/i18n/locales/ru/common.json
index 0d7b800d8..7df29ba7b 100644
--- a/src/i18n/locales/ru/common.json
+++ b/src/i18n/locales/ru/common.json
@@ -1,6 +1,6 @@
 {
 	"extension": {
-		"name": "Roo Code",
+		"name": "Researcherry Coder",
 		"description": "Целая команда ИИ-разработчиков в вашем редакторе."
 	},
 	"number_format": {
@@ -61,7 +61,6 @@
 		"no_internet": "Нет подключения к интернету. Проверь сетевое подключение и попробуй снова.",
 		"url_forbidden": "Доступ к этому веб-сайту запрещен. Сайт может блокировать автоматический доступ или требовать аутентификацию.",
 		"url_page_not_found": "Страница не найдена. Проверь правильность URL.",
-		"url_request_aborted": "Запрос на получение URL был прерван. Это может произойти, если сайт блокирует автоматический доступ, требует аутентификацию или есть проблемы с сетью. Попробуй снова или проверь, доступен ли URL в обычном браузере.",
 		"url_fetch_failed": "Ошибка получения содержимого URL: {{error}}",
 		"url_fetch_error_with_url": "Ошибка получения содержимого для {{url}}: {{error}}",
 		"command_timeout": "Время выполнения команды истекло через {{seconds}} секунд",
@@ -105,7 +104,7 @@
 	"warnings": {
 		"no_terminal_content": "Не выбрано содержимое терминала",
 		"missing_task_files": "Файлы этой задачи отсутствуют. Хотите удалить её из списка задач?",
-		"auto_import_failed": "Не удалось автоматически импортировать настройки RooCode: {{error}}"
+		"auto_import_failed": "Не удалось автоматически импортировать настройки ResearcherryCoder: {{error}}"
 	},
 	"info": {
 		"no_changes": "Изменения не найдены.",
@@ -114,7 +113,7 @@
 		"custom_storage_path_set": "Установлен пользовательский путь хранения: {{path}}",
 		"default_storage_path": "Возвращено использование пути хранения по умолчанию",
 		"settings_imported": "Настройки успешно импортированы.",
-		"auto_import_success": "Настройки RooCode автоматически импортированы из {{filename}}",
+		"auto_import_success": "Настройки ResearcherryCoder автоматически импортированы из {{filename}}",
 		"share_link_copied": "Ссылка для совместного использования скопирована в буфер обмена",
 		"image_copied_to_clipboard": "URI данных изображения скопирован в буфер обмена",
 		"image_saved": "Изображение сохранено в {{path}}",
@@ -142,8 +141,8 @@
 	},
 	"storage": {
 		"prompt_custom_path": "Введите пользовательский путь хранения истории разговоров, оставьте пустым для использования расположения по умолчанию",
-		"path_placeholder": "D:\\RooCodeStorage",
-		"enter_absolute_path": "Пожалуйста, введите абсолютный путь (например, D:\\RooCodeStorage или /home/user/storage)",
+		"path_placeholder": "D:\\ResearcherryCoderStorage",
+		"enter_absolute_path": "Пожалуйста, введите абсолютный путь (например, D:\\ResearcherryCoderStorage или /home/user/storage)",
 		"enter_valid_path": "Пожалуйста, введите корректный путь"
 	},
 	"input": {
@@ -163,8 +162,8 @@
 	},
 	"customModes": {
 		"errors": {
-			"yamlParseError": "Недопустимый YAML в файле .roomodes на строке {{line}}. Проверь:\n• Правильные отступы (используй пробелы, не табы)\n• Соответствующие кавычки и скобки\n• Допустимый синтаксис YAML",
-			"schemaValidationError": "Недопустимый формат пользовательских режимов в .roomodes:\n{{issues}}",
+					"yamlParseError": "Недопустимый YAML в файле .researcherry-modes на строке {{line}}. Проверь:\n• Правильные отступы (используй пробелы, не табы)\n• Соответствующие кавычки и скобки\n• Допустимый синтаксис YAML",
+		"schemaValidationError": "Недопустимый формат пользовательских режимов в .researcherry-modes:\n{{issues}}",
 			"invalidFormat": "Недопустимый формат пользовательских режимов. Убедись, что твои настройки соответствуют правильному формату YAML.",
 			"updateFailed": "Не удалось обновить пользовательский режим: {{error}}",
 			"deleteFailed": "Не удалось удалить пользовательский режим: {{error}}",
diff --git a/src/i18n/locales/ru/mcp.json b/src/i18n/locales/ru/mcp.json
index fcbf6501f..754b4fe6d 100644
--- a/src/i18n/locales/ru/mcp.json
+++ b/src/i18n/locales/ru/mcp.json
@@ -3,7 +3,7 @@
 		"invalid_settings_format": "Неверный формат JSON настроек MCP. Пожалуйста, убедитесь, что ваши настройки соответствуют правильному формату JSON.",
 		"invalid_settings_syntax": "Неверный формат JSON настроек MCP. Пожалуйста, проверьте ваш файл настроек на наличие синтаксических ошибок.",
 		"invalid_settings_validation": "Неверный формат настроек MCP: {{errorMessages}}",
-		"create_json": "Не удалось создать или открыть .roo/mcp.json: {{error}}",
+		"create_json": "Не удалось создать или открыть .researcherry/mcp.json: {{error}}",
 		"failed_update_project": "Не удалось обновить серверы проекта MCP",
 		"invalidJsonArgument": "Roo попытался использовать {{toolName}} с недопустимым JSON-аргументом. Повторная попытка..."
 	},
diff --git a/src/package.json b/src/package.json
index dab031404..02be51c19 100644
--- a/src/package.json
+++ b/src/package.json
@@ -1,9 +1,9 @@
 {
-	"name": "roo-cline",
+	"name": "researcherry",
 	"displayName": "%extension.displayName%",
 	"description": "%extension.description%",
-	"publisher": "RooVeterinaryInc",
-	"version": "3.25.7",
+	"publisher": "ResearcherryCoderInc",
+	"version": "3.31.2",
 	"icon": "assets/icons/icon.png",
 	"galleryBanner": {
 		"color": "#617A91",
@@ -14,13 +14,13 @@
 		"node": "20.19.2"
 	},
 	"author": {
-		"name": "Roo Code"
+		"name": "Researcherry Coder"
 	},
 	"repository": {
 		"type": "git",
-		"url": "https://github.com/RooCodeInc/Roo-Code"
+		"url": "https://github.com/ResearcherryCoderInc/researcherry"
 	},
-	"homepage": "https://github.com/RooCodeInc/Roo-Code",
+	"homepage": "https://github.com/ResearcherryCoderInc/researcherry",
 	"categories": [
 		"AI",
 		"Chat",
@@ -42,8 +42,8 @@
 		"sonnet",
 		"ai",
 		"llama",
-		"roo code",
-		"roocode"
+		"researcherry coder",
+		"researcherry"
 	],
 	"activationEvents": [
 		"onLanguage",
@@ -54,268 +54,273 @@
 		"viewsContainers": {
 			"activitybar": [
 				{
-					"id": "roo-cline-ActivityBar",
+					"id": "researcherry-ActivityBar",
 					"title": "%views.activitybar.title%",
 					"icon": "assets/icons/icon.svg"
 				}
 			]
 		},
 		"views": {
-			"roo-cline-ActivityBar": [
+			"researcherry-ActivityBar": [
 				{
 					"type": "webview",
-					"id": "roo-cline.SidebarProvider",
+					"id": "researcherry.SidebarProvider",
 					"name": "%views.sidebar.name%"
 				}
 			]
 		},
 		"commands": [
 			{
-				"command": "roo-cline.plusButtonClicked",
+				"command": "researcherry.plusButtonClicked",
 				"title": "%command.newTask.title%",
 				"icon": "$(add)"
 			},
 			{
-				"command": "roo-cline.promptsButtonClicked",
+				"command": "researcherry.promptsButtonClicked",
 				"title": "%command.prompts.title%",
 				"icon": "$(organization)"
 			},
 			{
-				"command": "roo-cline.mcpButtonClicked",
+				"command": "researcherry.mcpButtonClicked",
 				"title": "%command.mcpServers.title%",
 				"icon": "$(server)"
 			},
 			{
-				"command": "roo-cline.historyButtonClicked",
+				"command": "researcherry.historyButtonClicked",
 				"title": "%command.history.title%",
 				"icon": "$(history)"
 			},
 			{
-				"command": "roo-cline.marketplaceButtonClicked",
+				"command": "researcherry.marketplaceButtonClicked",
 				"title": "%command.marketplace.title%",
 				"icon": "$(extensions)"
 			},
 			{
-				"command": "roo-cline.popoutButtonClicked",
+				"command": "researcherry.popoutButtonClicked",
 				"title": "%command.openInEditor.title%",
 				"icon": "$(link-external)"
 			},
 			{
-				"command": "roo-cline.accountButtonClicked",
+				"command": "researcherry.accountButtonClicked",
 				"title": "Account",
 				"icon": "$(account)"
 			},
 			{
-				"command": "roo-cline.settingsButtonClicked",
+				"command": "researcherry.settingsButtonClicked",
 				"title": "%command.settings.title%",
 				"icon": "$(settings-gear)"
 			},
 			{
-				"command": "roo-cline.openInNewTab",
+				"command": "researcherry.openInNewTab",
 				"title": "%command.openInNewTab.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.explainCode",
+				"command": "researcherry.explainCode",
 				"title": "%command.explainCode.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.fixCode",
+				"command": "researcherry.fixCode",
 				"title": "%command.fixCode.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.improveCode",
+				"command": "researcherry.improveCode",
 				"title": "%command.improveCode.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.addToContext",
+				"command": "researcherry.addToContext",
 				"title": "%command.addToContext.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.newTask",
+				"command": "researcherry.newTask",
 				"title": "%command.newTask.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.terminalAddToContext",
+				"command": "researcherry.terminalAddToContext",
 				"title": "%command.terminal.addToContext.title%",
 				"category": "Terminal"
 			},
 			{
-				"command": "roo-cline.terminalFixCommand",
+				"command": "researcherry.terminalFixCommand",
 				"title": "%command.terminal.fixCommand.title%",
 				"category": "Terminal"
 			},
 			{
-				"command": "roo-cline.terminalExplainCommand",
+				"command": "researcherry.terminalExplainCommand",
 				"title": "%command.terminal.explainCommand.title%",
 				"category": "Terminal"
 			},
 			{
-				"command": "roo-cline.setCustomStoragePath",
+				"command": "researcherry.setCustomStoragePath",
 				"title": "%command.setCustomStoragePath.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.importSettings",
+				"command": "researcherry.importSettings",
 				"title": "%command.importSettings.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.focusInput",
+				"command": "researcherry.focusInput",
 				"title": "%command.focusInput.title%",
 				"category": "%configuration.title%"
 			},
 			{
-				"command": "roo-cline.acceptInput",
+				"command": "researcherry.acceptInput",
 				"title": "%command.acceptInput.title%",
 				"category": "%configuration.title%"
+			},
+			{
+				"command": "researcherry.clearModesCache",
+				"title": "Clear Modes Cache",
+				"category": "%configuration.title%"
 			}
 		],
 		"menus": {
 			"editor/context": [
 				{
-					"submenu": "roo-cline.contextMenu",
+					"submenu": "researcherry.contextMenu",
 					"group": "1"
 				}
 			],
-			"roo-cline.contextMenu": [
+			"researcherry.contextMenu": [
 				{
-					"command": "roo-cline.addToContext",
+					"command": "researcherry.addToContext",
 					"group": "1_actions@1"
 				},
 				{
-					"command": "roo-cline.explainCode",
+					"command": "researcherry.explainCode",
 					"group": "1_actions@2"
 				},
 				{
-					"command": "roo-cline.improveCode",
+					"command": "researcherry.improveCode",
 					"group": "1_actions@3"
 				}
 			],
 			"terminal/context": [
 				{
-					"submenu": "roo-cline.terminalMenu",
+					"submenu": "researcherry.terminalMenu",
 					"group": "2"
 				}
 			],
-			"roo-cline.terminalMenu": [
+			"researcherry.terminalMenu": [
 				{
-					"command": "roo-cline.terminalAddToContext",
+					"command": "researcherry.terminalAddToContext",
 					"group": "1_actions@1"
 				},
 				{
-					"command": "roo-cline.terminalFixCommand",
+					"command": "researcherry.terminalFixCommand",
 					"group": "1_actions@2"
 				},
 				{
-					"command": "roo-cline.terminalExplainCommand",
+					"command": "researcherry.terminalExplainCommand",
 					"group": "1_actions@3"
 				}
 			],
 			"view/title": [
 				{
-					"command": "roo-cline.plusButtonClicked",
+					"command": "researcherry.plusButtonClicked",
 					"group": "navigation@1",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.marketplaceButtonClicked",
+					"command": "researcherry.marketplaceButtonClicked",
 					"group": "navigation@2",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.settingsButtonClicked",
+					"command": "researcherry.settingsButtonClicked",
 					"group": "navigation@3",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.accountButtonClicked",
+					"command": "researcherry.accountButtonClicked",
 					"group": "navigation@4",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.historyButtonClicked",
+					"command": "researcherry.historyButtonClicked",
 					"group": "overflow@1",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.promptsButtonClicked",
+					"command": "researcherry.promptsButtonClicked",
 					"group": "overflow@2",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.mcpButtonClicked",
+					"command": "researcherry.mcpButtonClicked",
 					"group": "overflow@3",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				},
 				{
-					"command": "roo-cline.popoutButtonClicked",
+					"command": "researcherry.popoutButtonClicked",
 					"group": "overflow@4",
-					"when": "view == roo-cline.SidebarProvider"
+					"when": "view == researcherry.SidebarProvider"
 				}
 			],
 			"editor/title": [
 				{
-					"command": "roo-cline.plusButtonClicked",
+					"command": "researcherry.plusButtonClicked",
 					"group": "navigation@1",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.marketplaceButtonClicked",
+					"command": "researcherry.marketplaceButtonClicked",
 					"group": "navigation@2",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.settingsButtonClicked",
+					"command": "researcherry.settingsButtonClicked",
 					"group": "navigation@3",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.accountButtonClicked",
+					"command": "researcherry.accountButtonClicked",
 					"group": "navigation@4",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.historyButtonClicked",
+					"command": "researcherry.historyButtonClicked",
 					"group": "overflow@1",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.promptsButtonClicked",
+					"command": "researcherry.promptsButtonClicked",
 					"group": "overflow@2",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.mcpButtonClicked",
+					"command": "researcherry.mcpButtonClicked",
 					"group": "overflow@3",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				},
 				{
-					"command": "roo-cline.popoutButtonClicked",
+					"command": "researcherry.popoutButtonClicked",
 					"group": "overflow@4",
-					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
+					"when": "activeWebviewPanelId == researcherry.TabPanelProvider"
 				}
 			]
 		},
 		"submenus": [
 			{
-				"id": "roo-cline.contextMenu",
+				"id": "researcherry.contextMenu",
 				"label": "%views.contextMenu.label%"
 			},
 			{
-				"id": "roo-cline.terminalMenu",
+				"id": "researcherry.terminalMenu",
 				"label": "%views.terminalMenu.label%"
 			}
 		],
 		"configuration": {
 			"title": "%configuration.title%",
 			"properties": {
-				"roo-cline.allowedCommands": {
+				"researcherry.allowedCommands": {
 					"type": "array",
 					"items": {
 						"type": "string"
@@ -330,7 +335,7 @@
 					],
 					"description": "%commands.allowedCommands.description%"
 				},
-				"roo-cline.deniedCommands": {
+				"researcherry.deniedCommands": {
 					"type": "array",
 					"items": {
 						"type": "string"
@@ -338,14 +343,14 @@
 					"default": [],
 					"description": "%commands.deniedCommands.description%"
 				},
-				"roo-cline.commandExecutionTimeout": {
+				"researcherry.commandExecutionTimeout": {
 					"type": "number",
 					"default": 0,
 					"minimum": 0,
 					"maximum": 600,
 					"description": "%commands.commandExecutionTimeout.description%"
 				},
-				"roo-cline.commandTimeoutAllowlist": {
+				"researcherry.commandTimeoutAllowlist": {
 					"type": "array",
 					"items": {
 						"type": "string"
@@ -353,12 +358,12 @@
 					"default": [],
 					"description": "%commands.commandTimeoutAllowlist.description%"
 				},
-				"roo-cline.preventCompletionWithOpenTodos": {
+				"researcherry.preventCompletionWithOpenTodos": {
 					"type": "boolean",
 					"default": false,
 					"description": "%commands.preventCompletionWithOpenTodos.description%"
 				},
-				"roo-cline.vsCodeLmModelSelector": {
+				"researcherry.vsCodeLmModelSelector": {
 					"type": "object",
 					"properties": {
 						"vendor": {
@@ -372,22 +377,22 @@
 					},
 					"description": "%settings.vsCodeLmModelSelector.description%"
 				},
-				"roo-cline.customStoragePath": {
+				"researcherry.customStoragePath": {
 					"type": "string",
 					"default": "",
 					"description": "%settings.customStoragePath.description%"
 				},
-				"roo-cline.enableCodeActions": {
+				"researcherry.enableCodeActions": {
 					"type": "boolean",
 					"default": true,
 					"description": "%settings.enableCodeActions.description%"
 				},
-				"roo-cline.autoImportSettingsPath": {
+				"researcherry.autoImportSettingsPath": {
 					"type": "string",
 					"default": "",
 					"description": "%settings.autoImportSettingsPath.description%"
 				},
-				"roo-cline.useAgentRules": {
+				"researcherry.useAgentRules": {
 					"type": "boolean",
 					"default": true,
 					"description": "%settings.useAgentRules.description%"
@@ -420,10 +425,10 @@
 		"@mistralai/mistralai": "^1.3.6",
 		"@modelcontextprotocol/sdk": "^1.9.0",
 		"@qdrant/js-client-rest": "^1.14.0",
-		"@roo-code/cloud": "workspace:^",
-		"@roo-code/ipc": "workspace:^",
-		"@roo-code/telemetry": "workspace:^",
-		"@roo-code/types": "workspace:^",
+		"@researcherry/cloud": "workspace:^",
+		"@researcherry/ipc": "workspace:^",
+		"@researcherry/telemetry": "workspace:^",
+		"@researcherry/types": "workspace:^",
 		"@types/lodash.debounce": "^4.0.9",
 		"@vscode/codicons": "^0.0.36",
 		"async-mutex": "^0.5.0",
@@ -484,9 +489,9 @@
 		"zod": "^3.25.61"
 	},
 	"devDependencies": {
-		"@roo-code/build": "workspace:^",
-		"@roo-code/config-eslint": "workspace:^",
-		"@roo-code/config-typescript": "workspace:^",
+		"@researcherry/build": "workspace:^",
+		"@researcherry/config-eslint": "workspace:^",
+		"@researcherry/config-typescript": "workspace:^",
 		"@types/clone-deep": "^4.0.4",
 		"@types/debug": "^4.1.12",
 		"@types/diff": "^5.2.1",
diff --git a/src/package.nls.json b/src/package.nls.json
index 36ef72a82..fbd02024b 100644
--- a/src/package.nls.json
+++ b/src/package.nls.json
@@ -1,10 +1,10 @@
 {
-	"extension.displayName": "Roo Code",
+	"extension.displayName": "Researcherry Coder",
 	"extension.description": "A whole dev team of AI agents in your editor.",
-	"views.contextMenu.label": "Roo Code",
-	"views.terminalMenu.label": "Roo Code",
-	"views.activitybar.title": "Roo Code",
-	"views.sidebar.name": "Roo Code",
+	"views.contextMenu.label": "Researcherry Coder",
+	"views.terminalMenu.label": "Researcherry Coder",
+	"views.activitybar.title": "Researcherry Coder",
+	"views.sidebar.name": "Researcherry Coder",
 	"command.newTask.title": "New Task",
 	"command.mcpServers.title": "MCP Servers",
 	"command.prompts.title": "Modes",
@@ -25,7 +25,7 @@
 	"command.terminal.fixCommand.title": "Fix This Command",
 	"command.terminal.explainCommand.title": "Explain This Command",
 	"command.acceptInput.title": "Accept Input/Suggestion",
-	"configuration.title": "Roo Code",
+	"configuration.title": "Researcherry Coder",
 	"commands.allowedCommands.description": "Commands that can be auto-executed when 'Always approve execute operations' is enabled",
 	"commands.deniedCommands.description": "Command prefixes that will be automatically denied without asking for approval. In case of conflicts with allowed commands, the longest prefix match takes precedence. Add * to deny all commands.",
 	"commands.commandExecutionTimeout.description": "Maximum time in seconds to wait for command execution to complete before timing out (0 = no timeout, 1-600s, default: 0s)",
@@ -34,8 +34,8 @@
 	"settings.vsCodeLmModelSelector.description": "Settings for VSCode Language Model API",
 	"settings.vsCodeLmModelSelector.vendor.description": "The vendor of the language model (e.g. copilot)",
 	"settings.vsCodeLmModelSelector.family.description": "The family of the language model (e.g. gpt-4)",
-	"settings.customStoragePath.description": "Custom storage path. Leave empty to use the default location. Supports absolute paths (e.g. 'D:\\RooCodeStorage')",
-	"settings.enableCodeActions.description": "Enable Roo Code quick fixes",
-	"settings.autoImportSettingsPath.description": "Path to a RooCode configuration file to automatically import on extension startup. Supports absolute paths and paths relative to the home directory (e.g. '~/Documents/roo-code-settings.json'). Leave empty to disable auto-import.",
+	"settings.customStoragePath.description": "Custom storage path. Leave empty to use the default location. Supports absolute paths (e.g. 'D:\\ResearcherryCoderStorage')",
+	"settings.enableCodeActions.description": "Enable Researcherry Coder quick fixes",
+	"settings.autoImportSettingsPath.description": "Path to a Researcherry Coder configuration file to automatically import on extension startup. Supports absolute paths and paths relative to the home directory (e.g. '~/Documents/researcherry-settings.json'). Leave empty to disable auto-import.",
 	"settings.useAgentRules.description": "Enable loading of AGENTS.md files for agent-specific rules (see https://agent-rules.org/)"
 }
diff --git a/src/package.nls.ru.json b/src/package.nls.ru.json
index 380337249..5be597ab1 100644
--- a/src/package.nls.ru.json
+++ b/src/package.nls.ru.json
@@ -1,10 +1,10 @@
 {
-	"extension.displayName": "Roo Code",
+	"extension.displayName": "Researcherry Coder",
 	"extension.description": "Целая команда ИИ-разработчиков в вашем редакторе.",
-	"views.contextMenu.label": "Roo Code",
-	"views.terminalMenu.label": "Roo Code",
-	"views.activitybar.title": "Roo Code",
-	"views.sidebar.name": "Roo Code",
+	"views.contextMenu.label": "Researcherry Coder",
+	"views.terminalMenu.label": "Researcherry Coder",
+	"views.activitybar.title": "Researcherry Coder",
+	"views.sidebar.name": "Researcherry Coder",
 	"command.newTask.title": "Новая задача",
 	"command.mcpServers.title": "MCP серверы",
 	"command.prompts.title": "Режимы",
@@ -25,7 +25,7 @@
 	"command.terminal.fixCommand.title": "Исправить эту команду",
 	"command.terminal.explainCommand.title": "Объяснить эту команду",
 	"command.acceptInput.title": "Принять ввод/предложение",
-	"configuration.title": "Roo Code",
+	"configuration.title": "Researcherry Coder",
 	"commands.allowedCommands.description": "Команды, которые могут быть автоматически выполнены, когда включена опция 'Всегда подтверждать операции выполнения'",
 	"commands.deniedCommands.description": "Префиксы команд, которые будут автоматически отклонены без запроса подтверждения. В случае конфликтов с разрешенными командами приоритет имеет самое длинное совпадение префикса. Добавьте * чтобы отклонить все команды.",
 	"commands.commandExecutionTimeout.description": "Максимальное время в секундах для ожидания завершения выполнения команды до истечения времени ожидания (0 = без тайм-аута, 1-600с, по умолчанию: 0с)",
@@ -33,8 +33,8 @@
 	"settings.vsCodeLmModelSelector.description": "Настройки для VSCode Language Model API",
 	"settings.vsCodeLmModelSelector.vendor.description": "Поставщик языковой модели (например, copilot)",
 	"settings.vsCodeLmModelSelector.family.description": "Семейство языковой модели (например, gpt-4)",
-	"settings.customStoragePath.description": "Пользовательский путь хранения. Оставьте пустым для использования пути по умолчанию. Поддерживает абсолютные пути (например, 'D:\\RooCodeStorage')",
+	"settings.customStoragePath.description": "Пользовательский путь хранения. Оставьте пустым для использования пути по умолчанию. Поддерживает абсолютные пути (например, 'D:\\ResearcherryCoderStorage')",
 	"settings.enableCodeActions.description": "Включить быстрые исправления Roo Code.",
-	"settings.autoImportSettingsPath.description": "Путь к файлу конфигурации RooCode для автоматического импорта при запуске расширения. Поддерживает абсолютные пути и пути относительно домашнего каталога (например, '~/Documents/roo-code-settings.json'). Оставьте пустым, чтобы отключить автоматический импорт.",
+	"settings.autoImportSettingsPath.description": "Путь к файлу конфигурации ResearcherryCoder для автоматического импорта при запуске расширения. Поддерживает абсолютные пути и пути относительно домашнего каталога (например, '~/Documents/roo-code-settings.json'). Оставьте пустым, чтобы отключить автоматический импорт.",
 	"settings.useAgentRules.description": "Включить загрузку файлов AGENTS.md для специфичных для агента правил (см. https://agent-rules.org/)"
 }
diff --git a/webview-ui/package.json b/webview-ui/package.json
index 681aca126..965e08fcb 100644
--- a/webview-ui/package.json
+++ b/webview-ui/package.json
@@ -1,5 +1,5 @@
 {
-	"name": "@roo-code/vscode-webview",
+	"name": "@researcherry/vscode-webview",
 	"private": true,
 	"type": "module",
 	"scripts": {
@@ -15,6 +15,7 @@
 		"clean": "rimraf ../src/webview-ui ../apps/vscode-nightly/build/webview-ui tsconfig.tsbuildinfo .turbo"
 	},
 	"dependencies": {
+		"@researcherry/types": "workspace:^",
 		"@radix-ui/react-alert-dialog": "^1.1.6",
 		"@radix-ui/react-checkbox": "^1.1.5",
 		"@radix-ui/react-collapsible": "^1.1.3",
@@ -29,7 +30,6 @@
 		"@radix-ui/react-slider": "^1.2.3",
 		"@radix-ui/react-slot": "^1.1.2",
 		"@radix-ui/react-tooltip": "^1.1.8",
-		"@roo-code/types": "workspace:^",
 		"@tailwindcss/vite": "^4.0.0",
 		"@tanstack/react-query": "^5.68.0",
 		"@vscode/codicons": "^0.0.36",
@@ -80,8 +80,8 @@
 		"zod": "^3.25.61"
 	},
 	"devDependencies": {
-		"@roo-code/config-eslint": "workspace:^",
-		"@roo-code/config-typescript": "workspace:^",
+		"@researcherry/config-eslint": "workspace:^",
+		"@researcherry/config-typescript": "workspace:^",
 		"@testing-library/jest-dom": "^6.6.3",
 		"@testing-library/react": "^16.2.0",
 		"@testing-library/user-event": "^14.6.1",
@@ -95,6 +95,7 @@
 		"@types/vscode-webview": "^1.57.5",
 		"@vitejs/plugin-react": "^4.3.4",
 		"@vitest/ui": "^3.2.3",
+		"babel-plugin-styled-components": "^2.1.4",
 		"identity-obj-proxy": "^3.0.0",
 		"jsdom": "^26.0.0",
 		"typescript": "5.8.3",
diff --git a/webview-ui/public/favicon.ico b/webview-ui/public/favicon.ico
new file mode 100644
index 000000000..b739db10d
Binary files /dev/null and b/webview-ui/public/favicon.ico differ
diff --git a/webview-ui/public/researcherry-512.icns b/webview-ui/public/researcherry-512.icns
new file mode 100644
index 000000000..a2b5ba7d1
Binary files /dev/null and b/webview-ui/public/researcherry-512.icns differ
diff --git a/webview-ui/src/i18n/locales/en/.gitkeep b/webview-ui/src/i18n/locales/en/.gitkeep
deleted file mode 100644
index e69de29bb..000000000
diff --git a/webview-ui/src/i18n/locales/en/account.json b/webview-ui/src/i18n/locales/en/account.json
index f900abb29..31ffaf1be 100644
--- a/webview-ui/src/i18n/locales/en/account.json
+++ b/webview-ui/src/i18n/locales/en/account.json
@@ -1,14 +1,14 @@
 {
 	"title": "Account",
-	"profilePicture": "Profile picture",
-	"logOut": "Log out",
+	"profilePicture": "Profile Picture",
+	"logOut": "Log Out",
 	"testApiAuthentication": "Test API Authentication",
-	"signIn": "Connect to Roo Code Cloud",
+	"signIn": "Connect to Researcherry Coder Cloud",
 	"connect": "Connect",
-	"cloudBenefitsTitle": "Connect to Roo Code Cloud",
+	"cloudBenefitsTitle": "Connect to Researcherry Coder Cloud",
 	"cloudBenefitsSubtitle": "Sync your prompts and telemetry to enable:",
 	"cloudBenefitHistory": "Online task history",
 	"cloudBenefitSharing": "Sharing and collaboration features",
-	"cloudBenefitMetrics": "Task, token, and cost-based usage metrics",
-	"visitCloudWebsite": "Visit Roo Code Cloud"
-}
+	"cloudBenefitMetrics": "Usage metrics based on tasks, tokens, and costs",
+	"visitCloudWebsite": "Visit Researcherry Coder Cloud"
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/chat.json b/webview-ui/src/i18n/locales/en/chat.json
index 3b1847a10..3aca82b49 100644
--- a/webview-ui/src/i18n/locales/en/chat.json
+++ b/webview-ui/src/i18n/locales/en/chat.json
@@ -1,25 +1,24 @@
 {
-	"greeting": "Welcome to Roo Code!",
+	"greeting": "Welcome to Researcherry Coder",
 	"task": {
 		"title": "Task",
-		"seeMore": "See more",
-		"seeLess": "See less",
-		"tokens": "Tokens",
-		"cache": "Cache",
-		"apiCost": "API Cost",
-		"size": "Size",
-		"condenseContext": "Intelligently condense context",
-		"contextWindow": "Context Length",
-		"closeAndStart": "Close task and start a new one",
+		"seeMore": "Show more",
+		"seeLess": "Show less",
+		"tokens": "Tokens:",
+		"cache": "Cache:",
+		"apiCost": "API Cost:",
+		"contextWindow": "Context Length:",
+		"closeAndStart": "Close task and start new",
 		"export": "Export task history",
+		"delete": "Delete task (Shift + click to skip confirmation)",
+		"condenseContext": "Intelligently condense context",
 		"share": "Share task",
-		"delete": "Delete Task (Shift + Click to skip confirmation)",
-		"shareWithOrganization": "Share with Organization",
+		"shareWithOrganization": "Share with organization",
 		"shareWithOrganizationDescription": "Only members of your organization can access",
-		"sharePublicly": "Share Publicly",
+		"sharePublicly": "Share publicly",
 		"sharePubliclyDescription": "Anyone with the link can access",
-		"connectToCloud": "Connect to Cloud",
-		"connectToCloudDescription": "Sign in to Roo Code Cloud to share tasks",
+		"connectToCloud": "Connect to cloud",
+		"connectToCloudDescription": "Sign in to Researcherry Coder Cloud to share tasks",
 		"sharingDisabledByOrganization": "Sharing disabled by organization",
 		"shareSuccessOrganization": "Organization link copied to clipboard",
 		"shareSuccessPublic": "Public link copied to clipboard"
@@ -31,16 +30,16 @@
 		"tooltip": "Try the operation again"
 	},
 	"startNewTask": {
-		"title": "Start New Task",
-		"tooltip": "Begin a new task"
+		"title": "Start new task",
+		"tooltip": "Start a new task"
 	},
 	"proceedAnyways": {
-		"title": "Proceed Anyways",
-		"tooltip": "Continue while command executes"
+		"title": "Proceed anyway",
+		"tooltip": "Continue with command execution"
 	},
 	"save": {
 		"title": "Save",
-		"tooltip": "Save the message changes"
+		"tooltip": "Save message changes"
 	},
 	"tokenProgress": {
 		"availableSpace": "Available space: {{amount}} tokens",
@@ -51,332 +50,53 @@
 		"title": "Reject",
 		"tooltip": "Reject this action"
 	},
-	"completeSubtaskAndReturn": "Complete Subtask and Return",
+	"completeSubtaskAndReturn": "Complete subtask and return",
 	"approve": {
 		"title": "Approve",
 		"tooltip": "Approve this action"
 	},
-	"read-batch": {
-		"approve": {
-			"title": "Approve All"
-		},
-		"deny": {
-			"title": "Deny All"
-		}
-	},
 	"runCommand": {
-		"title": "Run Command",
+		"title": "Run command",
 		"tooltip": "Execute this command"
 	},
 	"proceedWhileRunning": {
-		"title": "Proceed While Running",
+		"title": "Proceed while running",
 		"tooltip": "Continue despite warnings"
 	},
-	"killCommand": {
-		"title": "Kill Command",
-		"tooltip": "Kill the current command"
-	},
 	"resumeTask": {
-		"title": "Resume Task",
-		"tooltip": "Continue the current task"
+		"title": "Resume task",
+		"tooltip": "Continue current task"
+	},
+	"killCommand": {
+		"title": "Kill command",
+		"tooltip": "Terminate current command"
 	},
 	"terminate": {
 		"title": "Terminate",
-		"tooltip": "End the current task"
+		"tooltip": "Terminate current task"
 	},
 	"cancel": {
 		"title": "Cancel",
-		"tooltip": "Cancel the current operation"
+		"tooltip": "Cancel current operation"
 	},
-	"editMessage": {
-		"placeholder": "Edit your message..."
-	},
-	"scrollToBottom": "Scroll to bottom of chat",
-	"about": "Generate, refactor, and debug code with AI assistance. Check out our <DocsLink>documentation</DocsLink> to learn more.",
-	"onboarding": "Your task list in this workspace is empty.",
+	"scrollToBottom": "Scroll chat to bottom",
+	"about": "Create, refactor, and debug code with AI. See our <DocsLink>documentation</DocsLink> for more.",
 	"rooTips": {
 		"boomerangTasks": {
 			"title": "Task Orchestration",
-			"description": "Split tasks into smaller, manageable parts"
+			"description": "Break tasks into smaller, manageable parts"
 		},
 		"stickyModels": {
-			"title": "Sticky Models",
+			"title": "Sticky modes",
 			"description": "Each mode remembers your last used model"
 		},
 		"tools": {
 			"title": "Tools",
-			"description": "Allow the AI to solve problems by browsing the web, running commands, and more"
+			"description": "Let AI solve problems by browsing web pages, running commands, etc."
 		},
 		"customizableModes": {
-			"title": "Customizable Modes",
-			"description": "Specialized personas with their own behaviors and assigned models"
-		}
-	},
-	"selectMode": "Select mode for interaction",
-	"selectApiConfig": "Select API configuration",
-	"enhancePrompt": "Enhance prompt with additional context",
-	"modeSelector": {
-		"title": "Modes",
-		"marketplace": "Mode Marketplace",
-		"settings": "Mode Settings",
-		"description": "Specialized personas that tailor Roo's behavior.",
-		"searchPlaceholder": "Search modes...",
-		"noResults": "No results found"
-	},
-	"enhancePromptDescription": "The 'Enhance Prompt' button helps improve your prompt by providing additional context, clarification, or rephrasing. Try typing a prompt in here and clicking the button again to see how it works.",
-	"addImages": "Add images to message",
-	"sendMessage": "Send message",
-	"stopTts": "Stop text-to-speech",
-	"typeMessage": "Type a message...",
-	"typeTask": "Type your task here...",
-	"addContext": "@ to add context, / for commands",
-	"dragFiles": "hold shift to drag in files",
-	"dragFilesImages": "hold shift to drag in files/images",
-	"errorReadingFile": "Error reading file:",
-	"noValidImages": "No valid images were processed",
-	"separator": "Separator",
-	"edit": "Edit...",
-	"forNextMode": "for next mode",
-	"forPreviousMode": "for previous mode",
-	"apiRequest": {
-		"title": "API Request",
-		"failed": "API Request Failed",
-		"streaming": "API Request...",
-		"cancelled": "API Request Cancelled",
-		"streamingFailed": "API Streaming Failed"
-	},
-	"checkpoint": {
-		"regular": "Checkpoint",
-		"initializingWarning": "Still initializing checkpoint... If this takes too long, you can disable checkpoints in <settingsLink>settings</settingsLink> and restart your task.",
-		"menu": {
-			"viewDiff": "View Diff",
-			"restore": "Restore Checkpoint",
-			"restoreFiles": "Restore Files",
-			"restoreFilesDescription": "Restores your project's files back to a snapshot taken at this point.",
-			"restoreFilesAndTask": "Restore Files & Task",
-			"confirm": "Confirm",
-			"cancel": "Cancel",
-			"cannotUndo": "This action cannot be undone.",
-			"restoreFilesAndTaskDescription": "Restores your project's files back to a snapshot taken at this point and deletes all messages after this point."
-		},
-		"current": "Current"
-	},
-	"contextCondense": {
-		"title": "Context Condensed",
-		"condensing": "Condensing context...",
-		"errorHeader": "Failed to condense context",
-		"tokens": "tokens"
-	},
-	"instructions": {
-		"wantsToFetch": "Roo wants to fetch detailed instructions to assist with the current task"
-	},
-	"fileOperations": {
-		"wantsToRead": "Roo wants to read this file:",
-		"wantsToReadMultiple": "Roo wants to read multiple files:",
-		"wantsToReadAndXMore": "Roo wants to read this file and {{count}} more:",
-		"wantsToReadOutsideWorkspace": "Roo wants to read this file outside of the workspace:",
-		"didRead": "Roo read this file:",
-		"wantsToEdit": "Roo wants to edit this file:",
-		"wantsToEditOutsideWorkspace": "Roo wants to edit this file outside of the workspace:",
-		"wantsToEditProtected": "Roo wants to edit a protected configuration file:",
-		"wantsToApplyBatchChanges": "Roo wants to apply changes to multiple files:",
-		"wantsToCreate": "Roo wants to create a new file:",
-		"wantsToSearchReplace": "Roo wants to search and replace in this file:",
-		"didSearchReplace": "Roo performed search and replace on this file:",
-		"wantsToInsert": "Roo wants to insert content into this file:",
-		"wantsToInsertWithLineNumber": "Roo wants to insert content into this file at line {{lineNumber}}:",
-		"wantsToInsertAtEnd": "Roo wants to append content to the end of this file:"
-	},
-	"directoryOperations": {
-		"wantsToViewTopLevel": "Roo wants to view the top level files in this directory:",
-		"didViewTopLevel": "Roo viewed the top level files in this directory:",
-		"wantsToViewTopLevelOutsideWorkspace": "Roo wants to view the top level files in this directory (outside workspace):",
-		"didViewTopLevelOutsideWorkspace": "Roo viewed the top level files in this directory (outside workspace):",
-		"wantsToViewRecursive": "Roo wants to recursively view all files in this directory:",
-		"didViewRecursive": "Roo recursively viewed all files in this directory:",
-		"wantsToViewRecursiveOutsideWorkspace": "Roo wants to recursively view all files in this directory (outside workspace):",
-		"didViewRecursiveOutsideWorkspace": "Roo recursively viewed all files in this directory (outside workspace):",
-		"wantsToViewDefinitions": "Roo wants to view source code definition names used in this directory:",
-		"didViewDefinitions": "Roo viewed source code definition names used in this directory:",
-		"wantsToViewDefinitionsOutsideWorkspace": "Roo wants to view source code definition names used in this directory (outside workspace):",
-		"didViewDefinitionsOutsideWorkspace": "Roo viewed source code definition names used in this directory (outside workspace):",
-		"wantsToSearch": "Roo wants to search this directory for <code>{{regex}}</code>:",
-		"didSearch": "Roo searched this directory for <code>{{regex}}</code>:",
-		"wantsToSearchOutsideWorkspace": "Roo wants to search this directory (outside workspace) for <code>{{regex}}</code>:",
-		"didSearchOutsideWorkspace": "Roo searched this directory (outside workspace) for <code>{{regex}}</code>:"
-	},
-	"codebaseSearch": {
-		"wantsToSearch": "Roo wants to search the codebase for <code>{{query}}</code>:",
-		"wantsToSearchWithPath": "Roo wants to search the codebase for <code>{{query}}</code> in <code>{{path}}</code>:",
-		"didSearch_one": "Found 1 result",
-		"didSearch_other": "Found {{count}} results",
-		"resultTooltip": "Similarity score: {{score}} (click to open file)"
-	},
-	"commandOutput": "Command Output",
-	"commandExecution": {
-		"running": "Running",
-		"pid": "PID: {{pid}}",
-		"exited": "Exited ({{exitCode}})",
-		"manageCommands": "Manage Command Permissions",
-		"commandManagementDescription": "Manage command permissions: Click ✓ to allow auto-execution, ✗ to deny execution. Patterns can be toggled on/off or removed from lists. <settingsLink>View all settings</settingsLink>",
-		"addToAllowed": "Add to allowed list",
-		"removeFromAllowed": "Remove from allowed list",
-		"addToDenied": "Add to denied list",
-		"removeFromDenied": "Remove from denied list",
-		"abortCommand": "Abort command execution",
-		"expandOutput": "Expand output",
-		"collapseOutput": "Collapse output",
-		"expandManagement": "Expand command management section",
-		"collapseManagement": "Collapse command management section"
-	},
-	"response": "Response",
-	"arguments": "Arguments",
-	"mcp": {
-		"wantsToUseTool": "Roo wants to use a tool on the {{serverName}} MCP server:",
-		"wantsToAccessResource": "Roo wants to access a resource on the {{serverName}} MCP server:"
-	},
-	"modes": {
-		"wantsToSwitch": "Roo wants to switch to {{mode}} mode",
-		"wantsToSwitchWithReason": "Roo wants to switch to {{mode}} mode because: {{reason}}",
-		"didSwitch": "Roo switched to {{mode}} mode",
-		"didSwitchWithReason": "Roo switched to {{mode}} mode because: {{reason}}"
-	},
-	"subtasks": {
-		"wantsToCreate": "Roo wants to create a new subtask in {{mode}} mode:",
-		"wantsToFinish": "Roo wants to finish this subtask",
-		"newTaskContent": "Subtask Instructions",
-		"completionContent": "Subtask Completed",
-		"resultContent": "Subtask Results",
-		"defaultResult": "Please continue to the next task.",
-		"completionInstructions": "Subtask completed! You can review the results and suggest any corrections or next steps. If everything looks good, confirm to return the result to the parent task."
-	},
-	"questions": {
-		"hasQuestion": "Roo has a question:"
-	},
-	"taskCompleted": "Task Completed",
-	"error": "Error",
-	"diffError": {
-		"title": "Edit Unsuccessful"
-	},
-	"troubleMessage": "Roo is having trouble...",
-	"powershell": {
-		"issues": "It seems like you're having Windows PowerShell issues, please see this"
-	},
-	"autoApprove": {
-		"title": "Auto-approve:",
-		"none": "None",
-		"description": "Auto-approve allows Roo Code to perform actions without asking for permission. Only enable for actions you fully trust. More detailed configuration available in <settingsLink>Settings</settingsLink>.",
-		"selectOptionsFirst": "Select at least one option below to enable auto-approval",
-		"toggleAriaLabel": "Toggle auto-approval",
-		"disabledAriaLabel": "Auto-approval disabled - select options first"
-	},
-	"announcement": {
-		"title": "🎉 Roo Code {{version}} Released",
-		"description": "Roo Code {{version}} brings powerful new features and significant improvements to enhance your development workflow.",
-		"whatsNew": "What's New",
-		"feature1": "<bold>Message Queueing</bold>: Queue multiple messages while Roo is working, allowing you to continue planning your workflow without interruption.",
-		"feature2": "<bold>Custom Slash Commands</bold>: Create personalized slash commands for quick access to frequently used prompts and workflows, with full UI management.",
-		"feature3": "<bold>Enhanced Gemini Tools</bold>: New URL context and Google Search grounding capabilities provide Gemini models with real-time web information and enhanced research abilities.",
-		"hideButton": "Hide announcement",
-		"detailsDiscussLinks": "Get more details and discuss in <discordLink>Discord</discordLink> and <redditLink>Reddit</redditLink> 🚀"
-	},
-	"reasoning": {
-		"thinking": "Thinking",
-		"seconds": "{{count}}s"
-	},
-	"followUpSuggest": {
-		"copyToInput": "Copy to input (same as shift + click)",
-		"autoSelectCountdown": "Auto-selecting in {{count}}s",
-		"countdownDisplay": "{{count}}s"
-	},
-	"browser": {
-		"rooWantsToUse": "Roo wants to use the browser:",
-		"consoleLogs": "Console Logs",
-		"noNewLogs": "(No new logs)",
-		"screenshot": "Browser screenshot",
-		"cursor": "cursor",
-		"navigation": {
-			"step": "Step {{current}} of {{total}}",
-			"previous": "Previous",
-			"next": "Next"
-		},
-		"sessionStarted": "Browser Session Started",
-		"actions": {
-			"title": "Browse Action: ",
-			"launch": "Launch browser at {{url}}",
-			"click": "Click ({{coordinate}})",
-			"type": "Type \"{{text}}\"",
-			"scrollDown": "Scroll down",
-			"scrollUp": "Scroll up",
-			"close": "Close browser"
-		}
-	},
-	"codeblock": {
-		"tooltips": {
-			"expand": "Expand code block",
-			"collapse": "Collapse code block",
-			"enable_wrap": "Enable word wrap",
-			"disable_wrap": "Disable word wrap",
-			"copy_code": "Copy code"
+			"title": "Customizable modes",
+			"description": "Specialized personas with their own behavior and assigned models"
 		}
-	},
-	"systemPromptWarning": "WARNING: Custom system prompt override active. This can severely break functionality and cause unpredictable behavior.",
-	"profileViolationWarning": "The current profile isn't compatible with your organization's settings",
-	"shellIntegration": {
-		"title": "Command Execution Warning",
-		"description": "Your command is being executed without VSCode terminal shell integration. To suppress this warning you can disable shell integration in the <strong>Terminal</strong> section of the <settingsLink>Roo Code settings</settingsLink> or troubleshoot VSCode terminal integration using the link below.",
-		"troubleshooting": "Click here for shell integration documentation."
-	},
-	"ask": {
-		"autoApprovedRequestLimitReached": {
-			"title": "Auto-Approved Request Limit Reached",
-			"description": "Roo has reached the auto-approved limit of {{count}} API request(s). Would you like to reset the count and proceed with the task?",
-			"button": "Reset and Continue"
-		},
-		"autoApprovedCostLimitReached": {
-			"title": "Auto-Approved Cost Limit Reached",
-			"description": "Roo has reached the auto-approved cost limit of ${{count}}. Would you like to reset the cost and proceed with the task?",
-			"button": "Reset and Continue"
-		}
-	},
-	"indexingStatus": {
-		"ready": "Index ready",
-		"indexing": "Indexing {{percentage}}%",
-		"indexed": "Indexed",
-		"error": "Index error",
-		"status": "Index status"
-	},
-	"versionIndicator": {
-		"ariaLabel": "Version {{version}} - Click to view release notes"
-	},
-	"rooCloudCTA": {
-		"title": "Roo Code Cloud is coming soon!",
-		"description": "Run Roomote agents in the cloud, access your tasks from anywhere, collaborate with others, and more.",
-		"joinWaitlist": "Join the waitlist to get early access."
-	},
-	"command": {
-		"triggerDescription": "Trigger the {{name}} command"
-	},
-	"slashCommands": {
-		"tooltip": "Manage slash commands",
-		"title": "Slash Commands",
-		"description": "Create custom slash commands for quick access to frequently used prompts and workflows. <DocsLink>Docs</DocsLink>",
-		"globalCommands": "Global Commands",
-		"workspaceCommands": "Workspace Commands",
-		"globalCommand": "Global command",
-		"editCommand": "Edit command",
-		"deleteCommand": "Delete command",
-		"newGlobalCommandPlaceholder": "New global command...",
-		"newWorkspaceCommandPlaceholder": "New workspace command...",
-		"deleteDialog": {
-			"title": "Delete Command",
-			"description": "Are you sure you want to delete the command \"{{name}}\"? This action cannot be undone.",
-			"cancel": "Cancel",
-			"confirm": "Delete"
-		}
-	},
-	"queuedMessages": {
-		"title": "Queued Messages:",
-		"clickToEdit": "Click to edit message"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/common.json b/webview-ui/src/i18n/locales/en/common.json
index b4bc816a2..7c2f37e11 100644
--- a/webview-ui/src/i18n/locales/en/common.json
+++ b/webview-ui/src/i18n/locales/en/common.json
@@ -1,11 +1,16 @@
 {
 	"errorBoundary": {
 		"title": "Something went wrong",
-		"reportText": "Please help us improve by reporting this error on",
-		"githubText": "our GitHub Issues page",
-		"copyInstructions": "Copy and paste the following error message to include it as part of your submission:",
-		"errorStack": "Error Stack:",
-		"componentStack": "Component Stack:"
+		"reportText": "Please help us improve the app by reporting this error on our",
+		"githubText": "GitHub Issues page",
+		"copyInstructions": "Copy and paste the following error message to include in your report:",
+		"errorStack": "Error stack:",
+		"componentStack": "Component stack:"
+	},
+	"number_format": {
+		"thousand_suffix": "k",
+		"million_suffix": "M",
+		"billion_suffix": "B"
 	},
 	"answers": {
 		"yes": "Yes",
@@ -14,18 +19,13 @@
 		"remove": "Remove",
 		"keep": "Keep"
 	},
-	"number_format": {
-		"thousand_suffix": "k",
-		"million_suffix": "m",
-		"billion_suffix": "b"
-	},
 	"ui": {
 		"search_placeholder": "Search...",
 		"no_results": "No results found"
 	},
 	"mermaid": {
-		"loading": "Generating mermaid diagram...",
-		"render_error": "Unable to Render Diagram",
+		"loading": "Creating mermaid diagram...",
+		"render_error": "Failed to render diagram",
 		"buttons": {
 			"zoom": "Zoom",
 			"zoomIn": "Zoom In",
@@ -63,25 +63,9 @@
 	},
 	"confirmation": {
 		"deleteMessage": "Delete Message",
-		"deleteWarning": "Deleting this message will delete all subsequent messages in the conversation. Do you want to proceed?",
+		"deleteWarning": "Deleting this message will remove all subsequent messages in the conversation. Do you want to continue?",
 		"editMessage": "Edit Message",
-		"editWarning": "Editing this message will delete all subsequent messages in the conversation. Do you want to proceed?",
+		"editWarning": "Editing this message will remove all subsequent messages in the conversation. Do you want to continue?",
 		"proceed": "Proceed"
-	},
-	"time_ago": {
-		"just_now": "just now",
-		"seconds_ago": "{{count}} seconds ago",
-		"minute_ago": "a minute ago",
-		"minutes_ago": "{{count}} minutes ago",
-		"hour_ago": "an hour ago",
-		"hours_ago": "{{count}} hours ago",
-		"day_ago": "a day ago",
-		"days_ago": "{{count}} days ago",
-		"week_ago": "a week ago",
-		"weeks_ago": "{{count}} weeks ago",
-		"month_ago": "a month ago",
-		"months_ago": "{{count}} months ago",
-		"year_ago": "a year ago",
-		"years_ago": "{{count}} years ago"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/history.json b/webview-ui/src/i18n/locales/en/history.json
index 8d0043317..a6b5e7bfe 100644
--- a/webview-ui/src/i18n/locales/en/history.json
+++ b/webview-ui/src/i18n/locales/en/history.json
@@ -1,45 +1,45 @@
 {
 	"recentTasks": "Recent Tasks",
 	"history": "History",
-	"exitSelectionMode": "Exit Selection Mode",
-	"enterSelectionMode": "Enter Selection Mode",
+	"exitSelectionMode": "Exit selection mode",
+	"enterSelectionMode": "Enter selection mode",
 	"done": "Done",
 	"searchPlaceholder": "Fuzzy search history...",
 	"newest": "Newest",
 	"oldest": "Oldest",
-	"mostExpensive": "Most Expensive",
-	"mostTokens": "Most Tokens",
-	"mostRelevant": "Most Relevant",
-	"deleteTaskTitle": "Delete Task (Shift + Click to skip confirmation)",
-	"copyPrompt": "Copy Prompt",
-	"exportTask": "Export Task",
-	"deleteTask": "Delete Task",
+	"mostExpensive": "Most expensive",
+	"mostTokens": "Most tokens",
+	"mostRelevant": "Most relevant",
+	"deleteTaskTitle": "Delete task (Shift + click to skip confirmation)",
+	"copyPrompt": "Copy prompt",
+	"exportTask": "Export task",
+	"deleteTask": "Delete task",
 	"deleteTaskMessage": "Are you sure you want to delete this task? This action cannot be undone.",
 	"cancel": "Cancel",
 	"delete": "Delete",
-	"exitSelection": "Exit Selection",
-	"selectionMode": "Selection Mode",
+	"exitSelection": "Exit selection",
+	"selectionMode": "Selection mode",
 	"deselectAll": "Deselect all",
 	"selectAll": "Select all",
-	"selectedItems": "Selected {{selected}}/{{total}} items",
-	"clearSelection": "Clear Selection",
-	"deleteSelected": "Delete Selected",
-	"deleteTasks": "Delete Tasks",
+	"selectedItems": "{{selected}} of {{total}} items selected",
+	"clearSelection": "Clear selection",
+	"deleteSelected": "Delete selected",
+	"deleteTasks": "Delete tasks",
 	"confirmDeleteTasks": "Are you sure you want to delete {{count}} tasks?",
-	"deleteTasksWarning": "Deleted tasks cannot be recovered. Please make sure you want to proceed.",
-	"deleteItems": "Delete {{count}} Items",
+	"deleteTasksWarning": "Deleted tasks cannot be recovered. Please make sure you want to continue.",
+	"deleteItems": "Delete {{count}} items",
 	"workspace": {
 		"prefix": "Workspace:",
 		"current": "Current",
 		"all": "All"
 	},
 	"sort": {
-		"prefix": "Sort:",
+		"prefix": "Sort by:",
 		"newest": "Newest",
 		"oldest": "Oldest",
-		"mostExpensive": "Most Expensive",
-		"mostTokens": "Most Tokens",
-		"mostRelevant": "Most Relevant"
+		"mostExpensive": "Most expensive",
+		"mostTokens": "Most tokens",
+		"mostRelevant": "Most relevant"
 	},
-	"viewAllHistory": "View all tasks"
-}
+	"viewAllHistory": "View all history"
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/humanRelay.json b/webview-ui/src/i18n/locales/en/humanRelay.json
index 0bb4f8f83..4b4476af8 100644
--- a/webview-ui/src/i18n/locales/en/humanRelay.json
+++ b/webview-ui/src/i18n/locales/en/humanRelay.json
@@ -1,13 +1,13 @@
 {
-	"dialogTitle": "Human Relay - Please Help Copy/Paste Information",
-	"dialogDescription": "Please copy the following prompt to the web AI, then paste the AI's response in the input box below.",
+	"dialogTitle": "Human Relay — Please help copy/paste information",
+	"dialogDescription": "Please copy the following prompt to a web AI, then paste the AI response in the input field below.",
 	"copiedToClipboard": "Copied to clipboard",
 	"aiResponse": {
-		"label": "Please enter AI's response:",
-		"placeholder": "Paste AI's response here..."
+		"label": "Please enter the AI response:",
+		"placeholder": "Paste the AI response here..."
 	},
 	"actions": {
 		"cancel": "Cancel",
 		"submit": "Submit"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/marketplace.json b/webview-ui/src/i18n/locales/en/marketplace.json
index 1bce41b98..f8422d792 100644
--- a/webview-ui/src/i18n/locales/en/marketplace.json
+++ b/webview-ui/src/i18n/locales/en/marketplace.json
@@ -1,5 +1,5 @@
 {
-	"title": "Roo Marketplace",
+	"title": "Researcherry Marketplace",
 	"tabs": {
 		"installed": "Installed",
 		"settings": "Settings",
@@ -11,19 +11,19 @@
 		"search": {
 			"placeholder": "Search marketplace items...",
 			"placeholderMcp": "Search MCPs...",
-			"placeholderMode": "Search Modes..."
+			"placeholderMode": "Search modes..."
 		},
 		"type": {
 			"label": "Filter by type:",
 			"all": "All types",
 			"mode": "Mode",
-			"mcpServer": "MCP Server"
+			"mcpServer": "MCP server"
 		},
 		"sort": {
 			"label": "Sort by:",
 			"name": "Name",
 			"author": "Author",
-			"lastUpdated": "Last Updated"
+			"lastUpdated": "Last updated"
 		},
 		"tags": {
 			"label": "Filter by tags:",
@@ -31,7 +31,7 @@
 			"placeholder": "Type to search and select tags...",
 			"noResults": "No matching tags found",
 			"selected": "Showing items with any of the selected tags",
-			"clickToFilter": "Click tags to filter items"
+			"clickToFilter": "Click on tags to filter items"
 		},
 		"none": "None"
 	},
@@ -41,19 +41,19 @@
 	},
 	"type-group": {
 		"modes": "Modes",
-		"mcps": "MCP Servers"
+		"mcps": "MCP servers"
 	},
 	"items": {
 		"empty": {
 			"noItems": "No marketplace items found",
-			"withFilters": "Try adjusting your filters",
+			"withFilters": "Try adjusting filters",
 			"noSources": "Try adding a source in the Sources tab",
-			"adjustFilters": "Try adjusting your filters or search terms",
+			"adjustFilters": "Try adjusting filters or search queries",
 			"clearAllFilters": "Clear all filters"
 		},
-		"count": "{{count}} items found",
+		"count": "Found {{count}} items",
 		"components": "{{count}} components",
-		"matched": "{{count}} matched",
+		"matched": "{{count}} matches",
 		"refresh": {
 			"button": "Refresh",
 			"refreshing": "Refreshing...",
@@ -74,77 +74,29 @@
 			"installed": "Installed",
 			"removeProjectTooltip": "Remove from current project",
 			"removeGlobalTooltip": "Remove from global configuration",
-			"actionsMenuLabel": "More actions"
+			"actionsMenuLabel": "Additional actions"
 		},
 		"removeFailed": "Failed to remove item: {{error}}",
-		"unknownError": "Unknown error occurred"
+		"unknownError": "An unknown error occurred"
 	},
 	"install": {
 		"title": "Install {{name}}",
-		"titleMode": "Install {{name}} Mode",
-		"titleMcp": "Install {{name}} MCP",
-		"scope": "Installation Scope",
+		"titleMode": "Install mode {{name}}",
+		"titleMcp": "Install MCP {{name}}",
+		"scope": "Installation scope",
 		"project": "Project (current workspace)",
 		"global": "Global (all workspaces)",
-		"method": "Installation Method",
-		"prerequisites": "Prerequisites",
+		"method": "Installation method",
 		"configuration": "Configuration",
-		"configurationDescription": "Configure the parameters required for this MCP server",
+		"configurationDescription": "Configure parameters required for this MCP server",
 		"button": "Install",
-		"successTitle": "{{name}} Installed",
+		"successTitle": "{{name}} installed",
 		"successDescription": "Installation completed successfully",
 		"installed": "Successfully installed!",
-		"whatNextMcp": "You can now configure and use this MCP server. Click the MCP icon in the sidebar to switch tabs.",
-		"whatNextMode": "You can now use this mode. Click the Modes icon in the sidebar to switch tabs.",
+		"whatNextMcp": "You can now configure and use this MCP server. Click on the MCP icon in the sidebar to switch tabs.",
+		"whatNextMode": "You can now use this mode. Click on the Modes icon in the sidebar to switch tabs.",
 		"done": "Done",
-		"goToMcp": "Go to MCP Tab",
-		"goToModes": "Go to Modes Settings",
-		"moreInfoMcp": "View {{name}} MCP documentation",
-		"validationRequired": "Please provide a value for {{paramName}}"
-	},
-	"sources": {
-		"title": "Configure Marketplace Sources",
-		"description": "Add Git repositories that contain marketplace items. These repositories will be fetched when browsing the marketplace.",
-		"add": {
-			"title": "Add New Source",
-			"urlPlaceholder": "Git repository URL (e.g., https://github.com/username/repo)",
-			"urlFormats": "Supported formats: HTTPS (https://github.com/username/repo), SSH (git@github.com:username/repo.git), or Git protocol (git://github.com/username/repo.git)",
-			"namePlaceholder": "Display name (max 20 chars)",
-			"button": "Add Source"
-		},
-		"current": {
-			"title": "Current Sources",
-			"empty": "No sources configured. Add a source to get started.",
-			"refresh": "Refresh this source",
-			"remove": "Remove source"
-		},
-		"errors": {
-			"emptyUrl": "URL cannot be empty",
-			"invalidUrl": "Invalid URL format",
-			"nonVisibleChars": "URL contains non-visible characters other than spaces",
-			"invalidGitUrl": "URL must be a valid Git repository URL (e.g., https://github.com/username/repo)",
-			"duplicateUrl": "This URL is already in the list (case and whitespace insensitive match)",
-			"nameTooLong": "Name must be 20 characters or less",
-			"nonVisibleCharsName": "Name contains non-visible characters other than spaces",
-			"duplicateName": "This name is already in use (case and whitespace insensitive match)",
-			"emojiName": "Emoji characters may cause display issues",
-			"maxSources": "Maximum of {{max}} sources allowed"
-		}
-	},
-	"removeConfirm": {
-		"mode": {
-			"title": "Remove Mode",
-			"message": "Are you sure you want to remove the mode \"{{modeName}}\"?",
-			"rulesWarning": "This will also remove any associated rules files for this mode."
-		},
-		"mcp": {
-			"title": "Remove MCP Server",
-			"message": "Are you sure you want to remove the MCP server \"{{mcpName}}\"?"
-		},
-		"cancel": "Cancel",
-		"confirm": "Remove"
-	},
-	"footer": {
-		"issueText": "Found a problem with a marketplace item or have suggestions for new ones? <0>Open a GitHub issue</0> to let us know!"
+		"goToMcp": "Go to MCP tab",
+		"goToModes": "Go to Modes settings"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/mcp.json b/webview-ui/src/i18n/locales/en/mcp.json
index 5bc64a70d..12f9dc06c 100644
--- a/webview-ui/src/i18n/locales/en/mcp.json
+++ b/webview-ui/src/i18n/locales/en/mcp.json
@@ -2,26 +2,25 @@
 	"title": "MCP Servers",
 	"done": "Done",
 	"marketplace": "MCP Marketplace",
-	"description": "The <0>Model Context Protocol</0> enables communication with locally running MCP servers that provide additional tools and resources to extend Roo's capabilities. You can use <1>community-made servers</1> or ask Roo to create new tools specific to your workflow (e.g., \"add a tool that gets the latest npm docs\").",
+	"description": "<0>Model Context Protocol</0> enables communication with locally running MCP servers that provide additional tools and resources to extend Roo's capabilities. You can use <1>community-created servers</1> or ask Roo to create new tools specific to your workflow (e.g., \"add a tool that fetches the latest npm documentation\").",
 	"instructions": "Instructions",
 	"enableToggle": {
-		"title": "Enable MCP Servers",
-		"description": "Turn this ON to let Roo use tools from connected MCP servers. This gives Roo more capabilities. If you don't plan to use these extra tools, turn it OFF to help reduce API token costs."
+		"title": "Enable MCP servers",
+		"description": "Enable for Roo to use tools from connected MCP servers. This will give Roo more capabilities. If you don't plan to use these additional tools, disable to save API tokens."
 	},
 	"enableServerCreation": {
-		"title": "Enable MCP Server Creation",
-		"description": "Enable this to have Roo help you build <1>new</1> custom MCP servers. <0>Learn about server creation</0>",
-		"hint": "Hint: To reduce API token costs, disable this setting when you are not actively asking Roo to create a new MCP server."
+		"title": "Enable MCP server creation",
+		"description": "Enable for Roo to help create <1>new</1> custom MCP servers. <0>Learn more about creating servers</0>",
+		"hint": "Tip: To reduce API token costs, disable this setting when you're not asking Roo to create a new MCP server."
 	},
-	"editGlobalMCP": "Edit Global MCP",
-	"editProjectMCP": "Edit Project MCP",
-	"refreshMCP": "Refresh MCP Servers",
-	"learnMoreEditingSettings": "Learn more about editing MCP settings files",
+	"editGlobalMCP": "Edit global MCP",
+	"editProjectMCP": "Edit project MCP",
+	"learnMoreEditingSettings": "Learn more about editing MCP configuration files",
 	"tool": {
 		"alwaysAllow": "Always allow",
 		"parameters": "Parameters",
 		"noDescription": "No description",
-		"togglePromptInclusion": "Toggle inclusion in prompt"
+		"togglePromptInclusion": "Toggle prompt inclusion"
 	},
 	"tabs": {
 		"tools": "Tools",
@@ -34,8 +33,8 @@
 		"noErrors": "No errors found"
 	},
 	"networkTimeout": {
-		"label": "Network Timeout",
-		"description": "Maximum time to wait for server responses",
+		"label": "Network timeout",
+		"description": "Maximum time to wait for server response",
 		"options": {
 			"15seconds": "15 seconds",
 			"30seconds": "30 seconds",
@@ -48,18 +47,19 @@
 		}
 	},
 	"deleteDialog": {
-		"title": "Delete MCP Server",
+		"title": "Delete MCP server",
 		"description": "Are you sure you want to delete the MCP server \"{{serverName}}\"? This action cannot be undone.",
 		"cancel": "Cancel",
 		"delete": "Delete"
 	},
 	"serverStatus": {
 		"retrying": "Retrying...",
-		"retryConnection": "Retry Connection"
+		"retryConnection": "Retry connection"
 	},
+	"refreshMCP": "Refresh MCP servers",
 	"execution": {
 		"running": "Running",
 		"completed": "Completed",
 		"error": "Error"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/prompts.json b/webview-ui/src/i18n/locales/en/prompts.json
index 0ea5e133b..c60510c82 100644
--- a/webview-ui/src/i18n/locales/en/prompts.json
+++ b/webview-ui/src/i18n/locales/en/prompts.json
@@ -4,207 +4,100 @@
 	"modes": {
 		"title": "Modes",
 		"createNewMode": "Create new mode",
-		"importMode": "Import Mode",
+		"importMode": "Import mode",
+		"noMatchFound": "No modes found",
 		"editModesConfig": "Edit modes configuration",
-		"editGlobalModes": "Edit Global Modes",
-		"editProjectModes": "Edit Project Modes (.roomodes)",
-		"createModeHelpText": "Modes are specialized personas that tailor Roo's behavior. <0>Learn about Using Modes</0> or <1>Customizing Modes.</1>",
-		"selectMode": "Search modes",
-		"noMatchFound": "No modes found"
+		"editGlobalModes": "Edit global modes",
+		"editProjectModes": "Edit project modes (.researcherrymodes)",
+		"createModeHelpText": "Modes are specialized personas that adapt Roo's behavior. <0>Learn about using modes</0> or <1>configuring modes.</1>",
+		"selectMode": "Search modes"
 	},
 	"apiConfiguration": {
 		"title": "API Configuration",
 		"select": "Select which API configuration to use for this mode"
 	},
 	"tools": {
-		"title": "Available Tools",
-		"builtInModesText": "Tools for built-in modes cannot be modified",
+		"title": "Available tools",
+		"builtInModesText": "Tools for built-in modes cannot be changed",
 		"editTools": "Edit tools",
 		"doneEditing": "Done editing",
 		"allowedFiles": "Allowed files:",
 		"toolNames": {
-			"read": "Read Files",
-			"edit": "Edit Files",
-			"browser": "Use Browser",
-			"command": "Run Commands",
+			"read": "Read files",
+			"edit": "Edit files",
+			"browser": "Use browser",
+			"command": "Run commands",
 			"mcp": "Use MCP"
 		},
 		"noTools": "None"
 	},
 	"roleDefinition": {
-		"title": "Role Definition",
+		"title": "Role definition",
 		"resetToDefault": "Reset to default",
-		"description": "Define Roo's expertise and personality for this mode. This description shapes how Roo presents itself and approaches tasks."
+		"description": "Define Roo's expertise and personality for this mode. This description shapes how Roo will behave and perform tasks."
 	},
 	"description": {
 		"title": "Short description (for humans)",
 		"resetToDefault": "Reset to default description",
-		"description": "A brief description shown in the mode selector dropdown."
+		"description": "Short description displayed in the mode selection dropdown."
 	},
 	"whenToUse": {
-		"title": "When to Use (optional)",
-		"description": "Guidance for Roo for when this mode should be used. This helps the Orchestrator choose the right mode for a task.",
-		"resetToDefault": "Reset to default 'When to Use' description"
+		"title": "When to use (optional)",
+		"description": "Describe when this mode should be used. This helps the Orchestrator choose the right mode for a task.",
+		"resetToDefault": "Reset default 'When to use' description"
 	},
 	"customInstructions": {
-		"title": "Mode-specific Custom Instructions (optional)",
+		"title": "Custom mode instructions (optional)",
 		"resetToDefault": "Reset to default",
-		"description": "Add behavioral guidelines specific to {{modeName}} mode.",
-		"loadFromFile": "Custom instructions specific to {{mode}} mode can also be loaded from the <span>.roo/rules-{{slug}}/</span> folder in your workspace (.roorules-{{slug}} and .clinerules-{{slug}} are deprecated and will stop working soon)."
+		"description": "Add behavior recommendations specific to mode {{modeName}}.",
+		"loadFromFile": "Custom instructions for mode {{mode}} can also be loaded from the <span>.researcherry/rules-{{slug}}/</span> folder in your workspace (.researcherrymodes-{{slug}} and .clinerules-{{slug}} are deprecated and will stop working soon)."
 	},
 	"exportMode": {
-		"title": "Export Mode",
-		"description": "Export this mode with rules from the .roo/rules-{{slug}}/ folder combined into a shareable YAML file. The original files remain unchanged.",
+		"title": "Export mode",
+		"description": "Export this mode to a YAML file with all included rules for easy sharing with others.",
+		"export": "Export mode",
 		"exporting": "Exporting..."
 	},
+	"globalCustomInstructions": {
+		"title": "Custom instructions for all modes",
+		"description": "These instructions apply to all modes. They set the base behavior that can be extended with the instructions below. <0>Learn more</0>",
+		"loadFromFile": "Instructions can also be loaded from the <span>.researcherry/rules/</span> folder in your workspace (.researcherrymodes and .clinerules are deprecated and will stop working soon)."
+	},
 	"importMode": {
-		"selectLevel": "Choose where to import this mode:",
+		"selectLevel": "Select where to import this mode:",
 		"import": "Import",
 		"importing": "Importing...",
 		"global": {
-			"label": "Global Level",
-			"description": "Available across all projects. If the exported mode contained rules files, they will be recreated in the global .roo/rules-{slug}/ folder."
+			"label": "Global level",
+			"description": "Available in all projects. Rules will be merged with custom instructions."
 		},
 		"project": {
-			"label": "Project Level",
-			"description": "Only available in this workspace. If the exported mode contained rules files, they will be recreated in .roo/rules-{slug}/ folder."
+			"label": "Project level",
+			"description": "Available only in this workspace. If the exported mode contained rule files, they will be recreated in the .researcherry/rules-{slug}/ folder."
 		}
 	},
-	"advanced": {
-		"title": "Advanced: Override System Prompt"
-	},
-	"globalCustomInstructions": {
-		"title": "Custom Instructions for All Modes",
-		"description": "These instructions apply to all modes. They provide a base set of behaviors that can be enhanced by mode-specific instructions below. <0>Learn more</0>",
-		"loadFromFile": "Instructions can also be loaded from the <span>.roo/rules/</span> folder in your workspace (.roorules and .clinerules are deprecated and will stop working soon)."
-	},
 	"systemPrompt": {
-		"preview": "Preview System Prompt",
+		"preview": "System prompt preview",
 		"copy": "Copy system prompt to clipboard",
-		"title": "System Prompt ({{modeName}} mode)"
+		"title": "System prompt (mode {{modeName}})"
 	},
 	"supportPrompts": {
-		"title": "Support Prompts",
+		"title": "Support prompts",
 		"resetPrompt": "Reset {{promptType}} prompt to default",
 		"prompt": "Prompt",
 		"enhance": {
 			"apiConfiguration": "API Configuration",
-			"apiConfigDescription": "You can select an API configuration to always use for enhancing prompts, or just use whatever is currently selected",
-			"useCurrentConfig": "Use currently selected API configuration",
-			"testPromptPlaceholder": "Enter a prompt to test the enhancement",
-			"previewButton": "Preview Prompt Enhancement",
-			"testEnhancement": "Test Enhancement",
+			"apiConfigDescription": "You can select an API configuration that will always be used for prompt enhancement, or use the currently selected one",
+			"useCurrentConfig": "Use current API configuration",
+			"testPromptPlaceholder": "Enter a prompt to test enhancement",
+			"previewButton": "Preview enhanced prompt",
+			"testEnhancement": "Test enhancement",
 			"includeTaskHistory": "Include task history as context",
-			"includeTaskHistoryDescription": "When enabled, the last 10 messages from the current conversation will be included as context when enhancing prompts, helping to generate more relevant and context-aware suggestions."
+			"includeTaskHistoryDescription": "When enabled, the last 10 messages from the current conversation will be included as context when enhancing prompts, helping generate more relevant and context-aware suggestions."
 		},
 		"condense": {
-			"apiConfiguration": "API Configuration for Context Condensing",
-			"apiConfigDescription": "Select which API configuration to use for context condensing operations. Leave unselected to use the current active configuration.",
-			"useCurrentConfig": "Use currently selected API configuration"
-		},
-		"types": {
-			"ENHANCE": {
-				"label": "Enhance Prompt",
-				"description": "Use prompt enhancement to get tailored suggestions or improvements for your inputs. This ensures Roo understands your intent and provides the best possible responses. Available via the ✨ icon in chat."
-			},
-			"CONDENSE": {
-				"label": "Context Condensing",
-				"description": "Configure how conversation context is condensed to manage token limits. This prompt is used for both manual and automatic context condensing operations."
-			},
-			"EXPLAIN": {
-				"label": "Explain Code",
-				"description": "Get detailed explanations of code snippets, functions, or entire files. Useful for understanding complex code or learning new patterns. Available in code actions (lightbulb icon in the editor) and the editor context menu (right-click on selected code)."
-			},
-			"FIX": {
-				"label": "Fix Issues",
-				"description": "Get help identifying and resolving bugs, errors, or code quality issues. Provides step-by-step guidance for fixing problems. Available in code actions (lightbulb icon in the editor) and the editor context menu (right-click on selected code)."
-			},
-			"IMPROVE": {
-				"label": "Improve Code",
-				"description": "Receive suggestions for code optimization, better practices, and architectural improvements while maintaining functionality. Available in code actions (lightbulb icon in the editor) and the editor context menu (right-click on selected code)."
-			},
-			"ADD_TO_CONTEXT": {
-				"label": "Add to Context",
-				"description": "Add context to your current task or conversation. Useful for providing additional information or clarifications. Available in code actions (lightbulb icon in the editor) and the editor context menu (right-click on selected code)."
-			},
-			"TERMINAL_ADD_TO_CONTEXT": {
-				"label": "Add Terminal Content to Context",
-				"description": "Add terminal output to your current task or conversation. Useful for providing command outputs or logs. Available in the terminal context menu (right-click on selected terminal content)."
-			},
-			"TERMINAL_FIX": {
-				"label": "Fix Terminal Command",
-				"description": "Get help fixing terminal commands that failed or need improvement. Available in the terminal context menu (right-click on selected terminal content)."
-			},
-			"TERMINAL_EXPLAIN": {
-				"label": "Explain Terminal Command",
-				"description": "Get detailed explanations of terminal commands and their outputs. Available in the terminal context menu (right-click on selected terminal content)."
-			},
-			"NEW_TASK": {
-				"label": "Start New Task",
-				"description": "Start a new task with user input. Available in the Command Palette."
-			}
+			"apiConfiguration": "API Configuration for context condensing",
+			"apiConfigDescription": "Select which API configuration to use for context condensing operations. Leave unselected to use the currently active configuration."
 		}
-	},
-	"advancedSystemPrompt": {
-		"title": "Advanced: Override System Prompt",
-		"description": "<2>⚠️ Warning:</2> This advanced feature bypasses safeguards. <1>READ THIS BEFORE USING!</1>Override the default system prompt by creating a file at <span>.roo/system-prompt-{{slug}}</span>."
-	},
-	"createModeDialog": {
-		"title": "Create New Mode",
-		"close": "Close",
-		"name": {
-			"label": "Name",
-			"placeholder": "Enter mode name"
-		},
-		"slug": {
-			"label": "Slug",
-			"description": "The slug is used in URLs and file names. It should be lowercase and contain only letters, numbers, and hyphens."
-		},
-		"saveLocation": {
-			"label": "Save Location",
-			"description": "Choose where to save this mode. Project-specific modes take precedence over global modes.",
-			"global": {
-				"label": "Global",
-				"description": "Available in all workspaces"
-			},
-			"project": {
-				"label": "Project-specific (.roomodes)",
-				"description": "Only available in this workspace, takes precedence over global"
-			}
-		},
-		"roleDefinition": {
-			"label": "Role Definition",
-			"description": "Define Roo's expertise and personality for this mode."
-		},
-		"description": {
-			"label": "Short description (for humans)",
-			"description": "A brief description shown in the mode selector dropdown."
-		},
-		"whenToUse": {
-			"label": "When to Use (optional)",
-			"description": "Guidance for Roo for when this mode should be used. This helps the Orchestrator choose the right mode for a task."
-		},
-		"tools": {
-			"label": "Available Tools",
-			"description": "Select which tools this mode can use."
-		},
-		"customInstructions": {
-			"label": "Custom Instructions (optional)",
-			"description": "Add behavioral guidelines specific to this mode."
-		},
-		"buttons": {
-			"cancel": "Cancel",
-			"create": "Create Mode"
-		},
-		"deleteMode": "Delete mode"
-	},
-	"allFiles": "all files",
-	"deleteMode": {
-		"title": "Delete Mode",
-		"message": "Are you sure you want to delete the mode \"{{modeName}}\"?",
-		"rulesFolder": "This mode has a rules folder at {{folderPath}} that will also be deleted.",
-		"descriptionNoRules": "Are you sure you want to delete this custom mode?",
-		"confirm": "Delete",
-		"cancel": "Cancel"
 	}
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/settings.json b/webview-ui/src/i18n/locales/en/settings.json
index 6e0f13750..80cd662b5 100644
--- a/webview-ui/src/i18n/locales/en/settings.json
+++ b/webview-ui/src/i18n/locales/en/settings.json
@@ -5,25 +5,25 @@
 		"cancel": "Cancel",
 		"reset": "Reset",
 		"select": "Select",
-		"add": "Add Header",
+		"add": "Add",
 		"remove": "Remove"
 	},
 	"header": {
 		"title": "Settings",
 		"saveButtonTooltip": "Save changes",
-		"nothingChangedTooltip": "Nothing changed",
+		"nothingChangedTooltip": "No changes",
 		"doneButtonTooltip": "Discard unsaved changes and close settings panel"
 	},
 	"unsavedChangesDialog": {
 		"title": "Unsaved Changes",
 		"description": "Do you want to discard changes and continue?",
 		"cancelButton": "Cancel",
-		"discardButton": "Discard changes"
+		"discardButton": "Discard Changes"
 	},
 	"sections": {
 		"providers": "Providers",
-		"autoApprove": "Auto-Approve",
-		"browser": "Browser",
+		"autoApprove": "Auto Approve",
+		"browser": "Computer Access",
 		"checkpoints": "Checkpoints",
 		"notifications": "Notifications",
 		"contextManagement": "Context",
@@ -31,779 +31,25 @@
 		"prompts": "Prompts",
 		"experimental": "Experimental",
 		"language": "Language",
-		"about": "About Roo Code"
+		"about": "About Researcherry Coder"
 	},
 	"prompts": {
-		"description": "Configure support prompts that are used for quick actions like enhancing prompts, explaining code, and fixing issues. These prompts help Roo provide better assistance for common development tasks."
-	},
-	"codeIndex": {
-		"title": "Codebase Indexing",
-		"description": "Configure codebase indexing settings to enable semantic search of your project. <0>Learn more</0>",
-		"statusTitle": "Status",
-		"enableLabel": "Enable Codebase Indexing",
-		"enableDescription": "Enable code indexing for improved search and context understanding",
-		"settingsTitle": "Indexing Settings",
-		"disabledMessage": "Codebase indexing is currently disabled. Enable it in the global settings to configure indexing options.",
-		"providerLabel": "Embeddings Provider",
-		"embedderProviderLabel": "Embedder Provider",
-		"selectProviderPlaceholder": "Select provider",
-		"openaiProvider": "OpenAI",
-		"ollamaProvider": "Ollama",
-		"geminiProvider": "Gemini",
-		"geminiApiKeyLabel": "API Key:",
-		"geminiApiKeyPlaceholder": "Enter your Gemini API key",
-		"mistralProvider": "Mistral",
-		"mistralApiKeyLabel": "API Key:",
-		"mistralApiKeyPlaceholder": "Enter your Mistral API key",
-		"openaiCompatibleProvider": "OpenAI Compatible",
-		"openAiKeyLabel": "OpenAI API Key",
-		"openAiKeyPlaceholder": "Enter your OpenAI API key",
-		"openAiCompatibleBaseUrlLabel": "Base URL",
-		"openAiCompatibleApiKeyLabel": "API Key",
-		"openAiCompatibleApiKeyPlaceholder": "Enter your API key",
-		"openAiCompatibleModelDimensionLabel": "Embedding Dimension:",
-		"modelDimensionLabel": "Model Dimension",
-		"openAiCompatibleModelDimensionPlaceholder": "e.g., 1536",
-		"openAiCompatibleModelDimensionDescription": "The embedding dimension (output size) for your model. Check your provider's documentation for this value. Common values: 384, 768, 1536, 3072.",
-		"modelLabel": "Model",
-		"modelPlaceholder": "Enter model name",
-		"selectModel": "Select a model",
-		"selectModelPlaceholder": "Select model",
-		"ollamaUrlLabel": "Ollama URL:",
-		"ollamaBaseUrlLabel": "Ollama Base URL",
-		"qdrantUrlLabel": "Qdrant URL",
-		"qdrantKeyLabel": "Qdrant Key:",
-		"qdrantApiKeyLabel": "Qdrant API Key",
-		"qdrantApiKeyPlaceholder": "Enter your Qdrant API key (optional)",
-		"setupConfigLabel": "Setup",
-		"advancedConfigLabel": "Advanced Configuration",
-		"searchMinScoreLabel": "Search Score Threshold",
-		"searchMinScoreDescription": "Minimum similarity score (0.0-1.0) required for search results. Lower values return more results but may be less relevant. Higher values return fewer but more relevant results.",
-		"searchMinScoreResetTooltip": "Reset to default value (0.4)",
-		"searchMaxResultsLabel": "Maximum Search Results",
-		"searchMaxResultsDescription": "Maximum number of search results to return when querying the codebase index. Higher values provide more context but may include less relevant results.",
-		"resetToDefault": "Reset to default",
-		"startIndexingButton": "Start Indexing",
-		"clearIndexDataButton": "Clear Index Data",
-		"unsavedSettingsMessage": "Please save your settings before starting the indexing process.",
-		"clearDataDialog": {
-			"title": "Are you sure?",
-			"description": "This action cannot be undone. This will permanently delete your codebase index data.",
-			"cancelButton": "Cancel",
-			"confirmButton": "Clear Data"
-		},
-		"ollamaUrlPlaceholder": "http://localhost:11434",
-		"openAiCompatibleBaseUrlPlaceholder": "https://api.example.com",
-		"modelDimensionPlaceholder": "1536",
-		"qdrantUrlPlaceholder": "http://localhost:6333",
-		"saveError": "Failed to save settings",
-		"modelDimensions": "({{dimension}} dimensions)",
-		"saveSuccess": "Settings saved successfully",
-		"saving": "Saving...",
-		"saveSettings": "Save",
-		"indexingStatuses": {
-			"standby": "Standby",
-			"indexing": "Indexing",
-			"indexed": "Indexed",
-			"error": "Error"
-		},
-		"close": "Close",
-		"validation": {
-			"qdrantUrlRequired": "Qdrant URL is required",
-			"invalidQdrantUrl": "Invalid Qdrant URL",
-			"invalidOllamaUrl": "Invalid Ollama URL",
-			"invalidBaseUrl": "Invalid base URL",
-			"openaiApiKeyRequired": "OpenAI API key is required",
-			"modelSelectionRequired": "Model selection is required",
-			"apiKeyRequired": "API key is required",
-			"modelIdRequired": "Model ID is required",
-			"modelDimensionRequired": "Model dimension is required",
-			"geminiApiKeyRequired": "Gemini API key is required",
-			"mistralApiKeyRequired": "Mistral API key is required",
-			"ollamaBaseUrlRequired": "Ollama base URL is required",
-			"baseUrlRequired": "Base URL is required",
-			"modelDimensionMinValue": "Model dimension must be greater than 0"
-		}
-	},
-	"autoApprove": {
-		"description": "Allow Roo to automatically perform operations without requiring approval. Enable these settings only if you fully trust the AI and understand the associated security risks.",
-		"enabled": "Auto-Approve Enabled",
-		"readOnly": {
-			"label": "Read",
-			"description": "When enabled, Roo will automatically view directory contents and read files without requiring you to click the Approve button.",
-			"outsideWorkspace": {
-				"label": "Include files outside workspace",
-				"description": "Allow Roo to read files outside the current workspace without requiring approval."
-			}
-		},
-		"write": {
-			"label": "Write",
-			"description": "Automatically create and edit files without requiring approval",
-			"delayLabel": "Delay after writes to allow diagnostics to detect potential problems",
-			"outsideWorkspace": {
-				"label": "Include files outside workspace",
-				"description": "Allow Roo to create and edit files outside the current workspace without requiring approval."
-			},
-			"protected": {
-				"label": "Include protected files",
-				"description": "Allow Roo to create and edit protected files (like .rooignore and .roo/ configuration files) without requiring approval."
-			}
-		},
-		"browser": {
-			"label": "Browser",
-			"description": "Automatically perform browser actions without requiring approval. Note: Only applies when the model supports computer use"
-		},
-		"retry": {
-			"label": "Retry",
-			"description": "Automatically retry failed API requests when server returns an error response",
-			"delayLabel": "Delay before retrying the request"
-		},
-		"mcp": {
-			"label": "MCP",
-			"description": "Enable auto-approval of individual MCP tools in the MCP Servers view (requires both this setting and the tool's individual \"Always allow\" checkbox)"
-		},
-		"modeSwitch": {
-			"label": "Mode",
-			"description": "Automatically switch between different modes without requiring approval"
-		},
-		"subtasks": {
-			"label": "Subtasks",
-			"description": "Allow creation and completion of subtasks without requiring approval"
-		},
-		"followupQuestions": {
-			"label": "Question",
-			"description": "Automatically select the first suggested answer for follow-up questions after the configured timeout",
-			"timeoutLabel": "Time to wait before auto-selecting the first answer"
-		},
-		"execute": {
-			"label": "Execute",
-			"description": "Automatically execute allowed terminal commands without requiring approval",
-			"allowedCommands": "Allowed Auto-Execute Commands",
-			"allowedCommandsDescription": "Command prefixes that can be auto-executed when \"Always approve execute operations\" is enabled. Add * to allow all commands (use with caution).",
-			"deniedCommands": "Denied Commands",
-			"deniedCommandsDescription": "Command prefixes that will be automatically denied without asking for approval. In case of conflicts with allowed commands, the longest prefix match takes precedence. Add * to deny all commands.",
-			"commandPlaceholder": "Enter command prefix (e.g., 'git ')",
-			"deniedCommandPlaceholder": "Enter command prefix to deny (e.g., 'rm -rf')",
-			"addButton": "Add",
-			"autoDenied": "Commands with the prefix `{{prefix}}` have been forbidden by the user. Do not bypass this restriction by running another command."
-		},
-		"updateTodoList": {
-			"label": "Todo",
-			"description": "Automatically update the to-do list without requiring approval"
-		},
-		"apiRequestLimit": {
-			"title": "Max Count",
-			"unlimited": "Unlimited"
-		},
-		"apiCostLimit": {
-			"title": "Max Cost",
-			"unlimited": "Unlimited"
-		},
-		"maxLimits": {
-			"description": "Automatically make requests up to these limits before asking for approval to continue."
-		},
-		"toggleAriaLabel": "Toggle auto-approval",
-		"disabledAriaLabel": "Auto-approval disabled - select options first",
-		"selectOptionsFirst": "Select at least one option below to enable auto-approval"
+		"description": "Configure support prompts used for quick actions like prompt improvement, code explanation, and issue fixing. These prompts help Researcherry provide better support for common development tasks."
 	},
 	"providers": {
-		"providerDocumentation": "{{provider}} documentation",
-		"configProfile": "Configuration Profile",
-		"description": "Save different API configurations to quickly switch between providers and settings.",
 		"apiProvider": "API Provider",
-		"model": "Model",
-		"nameEmpty": "Name cannot be empty",
-		"nameExists": "A profile with this name already exists",
-		"deleteProfile": "Delete Profile",
-		"invalidArnFormat": "Invalid ARN format. Please check the examples above.",
-		"enterNewName": "Enter new name",
-		"addProfile": "Add Profile",
-		"renameProfile": "Rename Profile",
-		"newProfile": "New Configuration Profile",
-		"enterProfileName": "Enter profile name",
-		"createProfile": "Create Profile",
-		"cannotDeleteOnlyProfile": "Cannot delete the only profile",
-		"searchPlaceholder": "Search profiles",
-		"searchProviderPlaceholder": "Search providers",
-		"noProviderMatchFound": "No providers found",
-		"noMatchFound": "No matching profiles found",
-		"vscodeLmDescription": " The VS Code Language Model API allows you to run models provided by other VS Code extensions (including but not limited to GitHub Copilot). The easiest way to get started is to install the Copilot and Copilot Chat extensions from the VS Code Marketplace.",
-		"awsCustomArnUse": "Enter a valid Amazon Bedrock ARN for the model you want to use. Format examples:",
-		"awsCustomArnDesc": "Make sure the region in the ARN matches your selected AWS Region above.",
-		"openRouterApiKey": "OpenRouter API Key",
-		"getOpenRouterApiKey": "Get OpenRouter API Key",
-		"apiKeyStorageNotice": "API keys are stored securely in VSCode's Secret Storage",
-		"glamaApiKey": "Glama API Key",
-		"getGlamaApiKey": "Get Glama API Key",
-		"useCustomBaseUrl": "Use custom base URL",
-		"useReasoning": "Enable reasoning",
-		"useHostHeader": "Use custom Host header",
-		"useLegacyFormat": "Use legacy OpenAI API format",
-		"customHeaders": "Custom Headers",
-		"headerName": "Header name",
-		"headerValue": "Header value",
-		"noCustomHeaders": "No custom headers defined. Click the + button to add one.",
-		"requestyApiKey": "Requesty API Key",
-		"refreshModels": {
-			"label": "Refresh Models",
-			"hint": "Please reopen the settings to see the latest models.",
-			"loading": "Refreshing models list...",
-			"success": "Models list refreshed successfully!",
-			"error": "Failed to refresh models list. Please try again."
-		},
-		"getRequestyApiKey": "Get Requesty API Key",
-		"openRouterTransformsText": "Compress prompts and message chains to the context size (<a>OpenRouter Transforms</a>)",
+		"providerDocumentation": "Provider Documentation",
 		"anthropicApiKey": "Anthropic API Key",
+		"apiKeyStorageNotice": "Your API key is stored locally and never sent to our servers.",
 		"getAnthropicApiKey": "Get Anthropic API Key",
-		"anthropicUseAuthToken": "Pass Anthropic API Key as Authorization header instead of X-Api-Key",
-		"cerebrasApiKey": "Cerebras API Key",
-		"getCerebrasApiKey": "Get Cerebras API Key",
-		"chutesApiKey": "Chutes API Key",
-		"getChutesApiKey": "Get Chutes API Key",
-		"fireworksApiKey": "Fireworks API Key",
-		"getFireworksApiKey": "Get Fireworks API Key",
-		"deepSeekApiKey": "DeepSeek API Key",
-		"getDeepSeekApiKey": "Get DeepSeek API Key",
-		"doubaoApiKey": "Doubao API Key",
-		"getDoubaoApiKey": "Get Doubao API Key",
-		"moonshotApiKey": "Moonshot API Key",
-		"getMoonshotApiKey": "Get Moonshot API Key",
-		"moonshotBaseUrl": "Moonshot Entrypoint",
-		"zaiApiKey": "Z AI API Key",
-		"getZaiApiKey": "Get Z AI API Key",
-		"zaiEntrypoint": "Z AI Entrypoint",
-		"zaiEntrypointDescription": "Please select the appropriate API entrypoint based on your location. If you are in China, choose open.bigmodel.cn. Otherwise, choose api.z.ai.",
-		"geminiApiKey": "Gemini API Key",
-		"getGroqApiKey": "Get Groq API Key",
-		"groqApiKey": "Groq API Key",
-		"getSambaNovaApiKey": "Get SambaNova API Key",
-		"sambaNovaApiKey": "SambaNova API Key",
-		"getHuggingFaceApiKey": "Get Hugging Face API Key",
-		"huggingFaceApiKey": "Hugging Face API Key",
-		"huggingFaceModelId": "Model ID",
-		"huggingFaceLoading": "Loading...",
-		"huggingFaceModelsCount": "({{count}} models)",
-		"huggingFaceSelectModel": "Select a model...",
-		"huggingFaceSearchModels": "Search models...",
-		"huggingFaceNoModelsFound": "No models found",
-		"huggingFaceProvider": "Provider",
-		"huggingFaceProviderAuto": "Auto",
-		"huggingFaceSelectProvider": "Select a provider...",
-		"huggingFaceSearchProviders": "Search providers...",
-		"huggingFaceNoProvidersFound": "No providers found",
-		"getGeminiApiKey": "Get Gemini API Key",
-		"openAiApiKey": "OpenAI API Key",
-		"apiKey": "API Key",
-		"openAiBaseUrl": "Base URL",
-		"getOpenAiApiKey": "Get OpenAI API Key",
-		"mistralApiKey": "Mistral API Key",
-		"getMistralApiKey": "Get Mistral / Codestral API Key",
-		"codestralBaseUrl": "Codestral Base URL (Optional)",
-		"codestralBaseUrlDesc": "Set an alternative URL for the Codestral model.",
-		"xaiApiKey": "xAI API Key",
-		"getXaiApiKey": "Get xAI API Key",
-		"litellmApiKey": "LiteLLM API Key",
-		"litellmBaseUrl": "LiteLLM Base URL",
-		"awsCredentials": "AWS Credentials",
-		"awsProfile": "AWS Profile",
-		"awsApiKey": "Amazon Bedrock API Key",
-		"awsProfileName": "AWS Profile Name",
-		"awsAccessKey": "AWS Access Key",
-		"awsSecretKey": "AWS Secret Key",
-		"awsSessionToken": "AWS Session Token",
-		"awsRegion": "AWS Region",
-		"awsCrossRegion": "Use cross-region inference",
-		"awsBedrockVpc": {
-			"useCustomVpcEndpoint": "Use custom VPC endpoint",
-			"vpcEndpointUrlPlaceholder": "Enter VPC Endpoint URL (optional)",
-			"examples": "Examples:"
-		},
-		"enablePromptCaching": "Enable prompt caching",
-		"enablePromptCachingTitle": "Enable prompt caching to improve performance and reduce costs for supported models.",
-		"cacheUsageNote": "Note: If you don't see cache usage, try selecting a different model and then selecting your desired model again.",
-		"vscodeLmModel": "Language Model",
-		"vscodeLmWarning": "Note: This is a very experimental integration and provider support will vary. If you get an error about a model not being supported, that's an issue on the provider's end.",
-		"geminiParameters": {
-			"urlContext": {
-				"title": "Enable URL context",
-				"description": "Lets Gemini read linked pages to extract, compare, and synthesize their content into informed responses."
-			},
-			"groundingSearch": {
-				"title": "Enable Grounding with Google search",
-				"description": "Connects Gemini to real‑time web data for accurate, up‑to‑date answers with verifiable citations."
-			}
-		},
-		"googleCloudSetup": {
-			"title": "To use Google Cloud Vertex AI, you need to:",
-			"step1": "1. Create a Google Cloud account, enable the Vertex AI API & enable the desired Claude models.",
-			"step2": "2. Install the Google Cloud CLI & configure application default credentials.",
-			"step3": "3. Or create a service account with credentials."
-		},
-		"googleCloudCredentials": "Google Cloud Credentials",
-		"googleCloudKeyFile": "Google Cloud Key File Path",
-		"googleCloudProjectId": "Google Cloud Project ID",
-		"googleCloudRegion": "Google Cloud Region",
-		"lmStudio": {
-			"baseUrl": "Base URL (optional)",
-			"modelId": "Model ID",
-			"speculativeDecoding": "Enable Speculative Decoding",
-			"draftModelId": "Draft Model ID",
-			"draftModelDesc": "Draft model must be from the same model family for speculative decoding to work correctly.",
-			"selectDraftModel": "Select Draft Model",
-			"noModelsFound": "No draft models found. Please ensure LM Studio is running with Server Mode enabled.",
-			"description": "LM Studio allows you to run models locally on your computer. For instructions on how to get started, see their <a>quickstart guide</a>. You will also need to start LM Studio's <b>local server</b> feature to use it with this extension. <span>Note:</span> Roo Code uses complex prompts and works best with Claude models. Less capable models may not work as expected."
-		},
-		"ollama": {
-			"baseUrl": "Base URL (optional)",
-			"modelId": "Model ID",
-			"description": "Ollama allows you to run models locally on your computer. For instructions on how to get started, see their quickstart guide.",
-			"warning": "Note: Roo Code uses complex prompts and works best with Claude models. Less capable models may not work as expected."
-		},
-		"unboundApiKey": "Unbound API Key",
-		"getUnboundApiKey": "Get Unbound API Key",
-		"unboundRefreshModelsSuccess": "Models list updated! You can now select from the latest models.",
-		"unboundInvalidApiKey": "Invalid API key. Please check your API key and try again.",
-		"humanRelay": {
-			"description": "No API key is required, but the user needs to help copy and paste the information to the web chat AI.",
-			"instructions": "During use, a dialog box will pop up and the current message will be copied to the clipboard automatically. You need to paste these to web versions of AI (such as ChatGPT or Claude), then copy the AI's reply back to the dialog box and click the confirm button."
-		},
-		"openRouter": {
-			"providerRouting": {
-				"title": "OpenRouter Provider Routing",
-				"description": "OpenRouter routes requests to the best available providers for your model. By default, requests are load balanced across the top providers to maximize uptime. However, you can choose a specific provider to use for this model.",
-				"learnMore": "Learn more about provider routing"
-			}
-		},
-		"customModel": {
-			"capabilities": "Configure the capabilities and pricing for your custom OpenAI-compatible model. Be careful when specifying the model capabilities, as they can affect how Roo Code performs.",
-			"maxTokens": {
-				"label": "Max Output Tokens",
-				"description": "Maximum number of tokens the model can generate in a response. (Specify -1 to allow the server to set the max tokens.)"
-			},
-			"contextWindow": {
-				"label": "Context Window Size",
-				"description": "Total tokens (input + output) the model can process."
-			},
-			"imageSupport": {
-				"label": "Image Support",
-				"description": "Is this model capable of processing and understanding images?"
-			},
-			"computerUse": {
-				"label": "Computer Use",
-				"description": "Is this model capable of interacting with a browser? (e.g. Claude 3.7 Sonnet)."
-			},
-			"promptCache": {
-				"label": "Prompt Caching",
-				"description": "Is this model capable of caching prompts?"
-			},
-			"pricing": {
-				"input": {
-					"label": "Input Price",
-					"description": "Cost per million tokens in the input/prompt. This affects the cost of sending context and instructions to the model."
-				},
-				"output": {
-					"label": "Output Price",
-					"description": "Cost per million tokens in the model's response. This affects the cost of generated content and completions."
-				},
-				"cacheReads": {
-					"label": "Cache Reads Price",
-					"description": "Cost per million tokens for reading from the cache. This is the price charged when a cached response is retrieved."
-				},
-				"cacheWrites": {
-					"label": "Cache Writes Price",
-					"description": "Cost per million tokens for writing to the cache. This is the price charged when a prompt is cached for the first time."
-				}
-			},
-			"resetDefaults": "Reset to Defaults"
-		},
-		"rateLimitSeconds": {
-			"label": "Rate limit",
-			"description": "Minimum time between API requests."
-		},
-		"consecutiveMistakeLimit": {
-			"label": "Error & Repetition Limit",
-			"description": "Number of consecutive errors or repeated actions before showing 'Roo is having trouble' dialog",
-			"unlimitedDescription": "Unlimited retries enabled (auto-proceed). The dialog will never appear.",
-			"warning": "⚠️ Setting to 0 allows unlimited retries which may consume significant API usage"
-		},
-		"reasoningEffort": {
-			"label": "Model Reasoning Effort",
-			"high": "High",
-			"medium": "Medium",
-			"low": "Low"
-		},
-		"setReasoningLevel": "Enable Reasoning Effort",
-		"claudeCode": {
-			"pathLabel": "Claude Code Path",
-			"description": "Optional path to your Claude Code CLI. Defaults to 'claude' if not set.",
-			"placeholder": "Default: claude",
-			"maxTokensLabel": "Max Output Tokens",
-			"maxTokensDescription": "Maximum number of output tokens for Claude Code responses. Default is 8000."
-		}
-	},
-	"browser": {
-		"enable": {
-			"label": "Enable browser tool",
-			"description": "When enabled, Roo can use a browser to interact with websites when using models that support computer use. <0>Learn more</0>"
-		},
-		"viewport": {
-			"label": "Viewport size",
-			"description": "Select the viewport size for browser interactions. This affects how websites are displayed and interacted with.",
-			"options": {
-				"largeDesktop": "Large Desktop (1280x800)",
-				"smallDesktop": "Small Desktop (900x600)",
-				"tablet": "Tablet (768x1024)",
-				"mobile": "Mobile (360x640)"
-			}
-		},
-		"screenshotQuality": {
-			"label": "Screenshot quality",
-			"description": "Adjust the WebP quality of browser screenshots. Higher values provide clearer screenshots but increase token usage."
-		},
-		"remote": {
-			"label": "Use remote browser connection",
-			"description": "Connect to a Chrome browser running with remote debugging enabled (--remote-debugging-port=9222).",
-			"urlPlaceholder": "Custom URL (e.g., http://localhost:9222)",
-			"testButton": "Test Connection",
-			"testingButton": "Testing...",
-			"instructions": "Enter the DevTools Protocol host address or leave empty to auto-discover Chrome local instances. The Test Connection button will try the custom URL if provided, or auto-discover if the field is empty."
-		}
-	},
-	"checkpoints": {
-		"enable": {
-			"label": "Enable automatic checkpoints",
-			"description": "When enabled, Roo will automatically create checkpoints during task execution, making it easy to review changes or revert to earlier states. <0>Learn more</0>"
-		}
-	},
-	"notifications": {
-		"sound": {
-			"label": "Enable sound effects",
-			"description": "When enabled, Roo will play sound effects for notifications and events.",
-			"volumeLabel": "Volume"
-		},
-		"tts": {
-			"label": "Enable text-to-speech",
-			"description": "When enabled, Roo will read aloud its responses using text-to-speech.",
-			"speedLabel": "Speed"
-		}
-	},
-	"contextManagement": {
-		"description": "Control what information is included in the AI's context window, affecting token usage and response quality",
-		"autoCondenseContextPercent": {
-			"label": "Threshold to trigger intelligent context condensing",
-			"description": "When the context window reaches this threshold, Roo will automatically condense it."
-		},
-		"condensingApiConfiguration": {
-			"label": "API Configuration for Context Condensing",
-			"description": "Select which API configuration to use for context condensing operations. Leave unselected to use the current active configuration.",
-			"useCurrentConfig": "Default"
-		},
-		"customCondensingPrompt": {
-			"label": "Custom Context Condensing Prompt",
-			"description": "Customize the system prompt used for context condensing. Leave empty to use the default prompt.",
-			"placeholder": "Enter your custom condensing prompt here...\n\nYou can use the same structure as the default prompt:\n- Previous Conversation\n- Current Work\n- Key Technical Concepts\n- Relevant Files and Code\n- Problem Solving\n- Pending Tasks and Next Steps",
-			"reset": "Reset to Default",
-			"hint": "Empty = use default prompt"
-		},
-		"autoCondenseContext": {
-			"name": "Automatically trigger intelligent context condensing",
-			"description": "When enabled, Roo will automatically condense the context when the threshold is reached. When disabled, you can still manually trigger context condensing."
-		},
-		"openTabs": {
-			"label": "Open tabs context limit",
-			"description": "Maximum number of VSCode open tabs to include in context. Higher values provide more context but increase token usage."
-		},
-		"workspaceFiles": {
-			"label": "Workspace files context limit",
-			"description": "Maximum number of files to include in current working directory details. Higher values provide more context but increase token usage."
-		},
-		"rooignore": {
-			"label": "Show .rooignore'd files in lists and searches",
-			"description": "When enabled, files matching patterns in .rooignore will be shown in lists with a lock symbol. When disabled, these files will be completely hidden from file lists and searches."
-		},
-		"maxConcurrentFileReads": {
-			"label": "Concurrent file reads limit",
-			"description": "Maximum number of files the 'read_file' tool can process concurrently. Higher values may speed up reading multiple small files but increase memory usage."
-		},
-		"maxReadFile": {
-			"label": "File read auto-truncate threshold",
-			"description": "Roo reads this number of lines when the model omits start/end values. If this number is less than the file's total, Roo generates a line number index of code definitions. Special cases: -1 instructs Roo to read the entire file (without indexing), and 0 instructs it to read no lines and provides line indexes only for minimal context. Lower values minimize initial context usage, enabling precise subsequent line-range reads. Explicit start/end requests are not limited by this setting.",
-			"lines": "lines",
-			"always_full_read": "Always read entire file"
-		},
-		"maxImageFileSize": {
-			"label": "Max image file size",
-			"mb": "MB",
-			"description": "Maximum size (in MB) for image files that can be processed by the read file tool."
-		},
-		"maxTotalImageSize": {
-			"label": "Max total image size",
-			"mb": "MB",
-			"description": "Maximum cumulative size limit (in MB) for all images processed in a single read_file operation. When reading multiple images, each image's size is added to the total. If including another image would exceed this limit, it will be skipped."
-		},
-		"diagnostics": {
-			"includeMessages": {
-				"label": "Automatically include diagnostics in context",
-				"description": "When enabled, diagnostic messages (errors) from edited files will be automatically included in the context. You can always manually include all workspace diagnostics using @problems."
-			},
-			"maxMessages": {
-				"label": "Maximum diagnostic messages",
-				"description": "Limits the number of diagnostic messages (errors, warnings) included in the context. When set, only this many diagnostics will be shown, prioritizing errors over warnings. Set to 0 for unlimited diagnostics.",
-				"resetTooltip": "Reset to default value (50)",
-				"unlimitedLabel": "Unlimited"
-			},
-			"delayAfterWrite": {
-				"label": "Delay after writes to allow diagnostics to detect potential problems",
-				"description": "Time to wait after file writes before proceeding, allowing diagnostic tools to process changes and detect issues."
-			}
-		},
-		"condensingThreshold": {
-			"label": "Condensing Trigger Threshold",
-			"selectProfile": "Configure threshold for profile",
-			"defaultProfile": "Global Default (all profiles)",
-			"defaultDescription": "When context reaches this percentage, it will be automatically condensed for all profiles unless they have custom settings",
-			"profileDescription": "Custom threshold for this profile only (overrides global default)",
-			"inheritDescription": "This profile inherits the global default threshold ({{threshold}}%)",
-			"usesGlobal": "(uses global {{threshold}}%)"
-		}
-	},
-	"terminal": {
-		"basic": {
-			"label": "Terminal Settings: Basic",
-			"description": "Basic terminal settings"
-		},
-		"advanced": {
-			"label": "Terminal Settings: Advanced",
-			"description": "The following options may require a terminal restart to apply the setting."
-		},
-		"outputLineLimit": {
-			"label": "Terminal output limit",
-			"description": "Maximum number of lines to include in terminal output when executing commands. When exceeded lines will be removed from the middle, saving tokens. <0>Learn more</0>"
-		},
-		"outputCharacterLimit": {
-			"label": "Terminal character limit",
-			"description": "Maximum number of characters to include in terminal output when executing commands. This limit takes precedence over the line limit to prevent memory issues from extremely long lines. When exceeded, output will be truncated. <0>Learn more</0>"
-		},
-		"shellIntegrationTimeout": {
-			"label": "Terminal shell integration timeout",
-			"description": "Maximum time to wait for shell integration to initialize before executing commands. For users with long shell startup times, this value may need to be increased if you see \"Shell Integration Unavailable\" errors in the terminal. <0>Learn more</0>"
-		},
-		"shellIntegrationDisabled": {
-			"label": "Disable terminal shell integration",
-			"description": "Enable this if terminal commands aren't working correctly or you see 'Shell Integration Unavailable' errors. This uses a simpler method to run commands, bypassing some advanced terminal features. <0>Learn more</0>"
-		},
-		"commandDelay": {
-			"label": "Terminal command delay",
-			"description": "Delay in milliseconds to add after command execution. The default setting of 0 disables the delay completely. This can help ensure command output is fully captured in terminals with timing issues. In most terminals it is implemented by setting `PROMPT_COMMAND='sleep N'` and Powershell appends `start-sleep` to the end of each command. Originally was workaround for VSCode bug#237208 and may not be needed. <0>Learn more</0>"
-		},
-		"compressProgressBar": {
-			"label": "Compress progress bar output",
-			"description": "When enabled, processes terminal output with carriage returns (\\r) to simulate how a real terminal would display content. This removes intermediate progress bar states, retaining only the final state, which conserves context space for more relevant information. <0>Learn more</0>"
-		},
-		"powershellCounter": {
-			"label": "Enable PowerShell counter workaround",
-			"description": "When enabled, adds a counter to PowerShell commands to ensure proper command execution. This helps with PowerShell terminals that might have issues with command output capture. <0>Learn more</0>"
-		},
-		"zshClearEolMark": {
-			"label": "Clear ZSH EOL mark",
-			"description": "When enabled, clears the ZSH end-of-line mark by setting PROMPT_EOL_MARK=''. This prevents issues with command output interpretation when output ends with special characters like '%'. <0>Learn more</0>"
-		},
-		"zshOhMy": {
-			"label": "Enable Oh My Zsh integration",
-			"description": "When enabled, sets ITERM_SHELL_INTEGRATION_INSTALLED=Yes to enable Oh My Zsh shell integration features. Applying this setting might require restarting the IDE. <0>Learn more</0>"
-		},
-		"zshP10k": {
-			"label": "Enable Powerlevel10k integration",
-			"description": "When enabled, sets POWERLEVEL9K_TERM_SHELL_INTEGRATION=true to enable Powerlevel10k shell integration features. <0>Learn more</0>"
-		},
-		"zdotdir": {
-			"label": "Enable ZDOTDIR handling",
-			"description": "When enabled, creates a temporary directory for ZDOTDIR to handle zsh shell integration properly. This ensures VSCode shell integration works correctly with zsh while preserving your zsh configuration. <0>Learn more</0>"
-		},
-		"inheritEnv": {
-			"label": "Inherit environment variables",
-			"description": "When enabled, the terminal will inherit environment variables from VSCode's parent process, such as user-profile-defined shell integration settings. This directly toggles VSCode global setting `terminal.integrated.inheritEnv`. <0>Learn more</0>"
-		}
-	},
-	"advancedSettings": {
-		"title": "Advanced settings"
-	},
-	"advanced": {
-		"diff": {
-			"label": "Enable editing through diffs",
-			"description": "When enabled, Roo will be able to edit files more quickly and will automatically reject truncated full-file writes. Works best with the latest Claude 3.7 Sonnet model.",
-			"strategy": {
-				"label": "Diff strategy",
-				"options": {
-					"standard": "Standard (Single block)",
-					"multiBlock": "Experimental: Multi-block diff",
-					"unified": "Experimental: Unified diff"
-				},
-				"descriptions": {
-					"standard": "Standard diff strategy applies changes to a single code block at a time.",
-					"unified": "Unified diff strategy takes multiple approaches to applying diffs and chooses the best approach.",
-					"multiBlock": "Multi-block diff strategy allows updating multiple code blocks in a file in one request."
-				}
-			},
-			"matchPrecision": {
-				"label": "Match precision",
-				"description": "This slider controls how precisely code sections must match when applying diffs. Lower values allow more flexible matching but increase the risk of incorrect replacements. Use values below 100% with extreme caution."
-			}
-		},
-		"todoList": {
-			"label": "Enable todo list tool",
-			"description": "When enabled, Roo can create and manage todo lists to track task progress. This helps organize complex tasks into manageable steps."
-		}
-	},
-	"experimental": {
-		"DIFF_STRATEGY_UNIFIED": {
-			"name": "Use experimental unified diff strategy",
-			"description": "Enable the experimental unified diff strategy. This strategy might reduce the number of retries caused by model errors but may cause unexpected behavior or incorrect edits. Only enable if you understand the risks and are willing to carefully review all changes."
-		},
-		"SEARCH_AND_REPLACE": {
-			"name": "Use experimental search and replace tool",
-			"description": "Enable the experimental search and replace tool, allowing Roo to replace multiple instances of a search term in one request."
-		},
-		"INSERT_BLOCK": {
-			"name": "Use experimental insert content tool",
-			"description": "Enable the experimental insert content tool, allowing Roo to insert content at specific line numbers without needing to create a diff."
-		},
-		"POWER_STEERING": {
-			"name": "Use experimental \"power steering\" mode",
-			"description": "When enabled, Roo will remind the model about the details of its current mode definition more frequently. This will lead to stronger adherence to role definitions and custom instructions, but will use more tokens per message."
-		},
-		"CONCURRENT_FILE_READS": {
-			"name": "Enable concurrent file reads",
-			"description": "When enabled, Roo can read multiple files in a single request. When disabled, Roo must read files one at a time. Disabling this can help when working with less capable models or when you want more control over file access."
-		},
-		"MULTI_SEARCH_AND_REPLACE": {
-			"name": "Use experimental multi block diff tool",
-			"description": "When enabled, Roo will use multi block diff tool. This will try to update multiple code blocks in the file in one request."
-		},
-		"MARKETPLACE": {
-			"name": "Enable Marketplace",
-			"description": "When enabled, you can install MCPs and custom modes from the Marketplace."
-		},
-		"MULTI_FILE_APPLY_DIFF": {
-			"name": "Enable concurrent file edits",
-			"description": "When enabled, Roo can edit multiple files in a single request. When disabled, Roo must edit files one at a time. Disabling this can help when working with less capable models or when you want more control over file modifications."
-		},
-		"PREVENT_FOCUS_DISRUPTION": {
-			"name": "Background editing",
-			"description": "Prevent editor focus disruption when enabled. File edits happen in the background without opening diff views or stealing focus. You can continue working uninterrupted while Roo makes changes. Files can be opened without focus to capture diagnostics or kept closed entirely."
-		},
-		"ASSISTANT_MESSAGE_PARSER": {
-			"name": "Use new message parser",
-			"description": "Enable the experimental streaming message parser that provides significant performance improvements for long assistant responses by processing messages more efficiently."
-		}
-	},
-	"promptCaching": {
-		"label": "Disable prompt caching",
-		"description": "When checked, Roo will not use prompt caching for this model."
-	},
-	"temperature": {
-		"useCustom": "Use custom temperature",
-		"description": "Controls randomness in the model's responses.",
-		"rangeDescription": "Higher values make output more random, lower values make it more deterministic."
-	},
-	"modelInfo": {
-		"supportsImages": "Supports images",
-		"noImages": "Does not support images",
-		"supportsComputerUse": "Supports computer use",
-		"noComputerUse": "Does not support computer use",
-		"supportsPromptCache": "Supports prompt caching",
-		"noPromptCache": "Does not support prompt caching",
-		"maxOutput": "Max output",
-		"inputPrice": "Input price",
-		"outputPrice": "Output price",
-		"cacheReadsPrice": "Cache reads price",
-		"cacheWritesPrice": "Cache writes price",
-		"enableStreaming": "Enable streaming",
-		"enableR1Format": "Enable R1 model parameters",
-		"enableR1FormatTips": "Must be enabled when using R1 models such as QWQ to prevent 400 errors",
-		"useAzure": "Use Azure",
-		"azureApiVersion": "Set Azure API version",
-		"gemini": {
-			"freeRequests": "* Free up to {{count}} requests per minute. After that, billing depends on prompt size.",
-			"pricingDetails": "For more info, see pricing details.",
-			"billingEstimate": "* Billing is an estimate - exact cost depends on prompt size."
-		}
-	},
-	"modelPicker": {
-		"automaticFetch": "The extension automatically fetches the latest list of models available on <serviceLink>{{serviceName}}</serviceLink>. If you're unsure which model to choose, Roo Code works best with <defaultModelLink>{{defaultModelId}}</defaultModelLink>. You can also try searching \"free\" for no-cost options currently available.",
-		"label": "Model",
-		"searchPlaceholder": "Search",
-		"noMatchFound": "No match found",
-		"useCustomModel": "Use custom: {{modelId}}"
-	},
-	"footer": {
-		"feedback": "If you have any questions or feedback, feel free to open an issue at <githubLink>github.com/RooCodeInc/Roo-Code</githubLink> or join <redditLink>reddit.com/r/RooCode</redditLink> or <discordLink>discord.gg/roocode</discordLink>",
-		"telemetry": {
-			"label": "Allow anonymous error and usage reporting",
-			"description": "Help improve Roo Code by sending anonymous usage data and error reports. No code, prompts, or personal information is ever sent (unless you connect to Roo Code Cloud). See our <privacyLink>privacy policy</privacyLink> for more details."
-		},
-		"settings": {
-			"import": "Import",
-			"export": "Export",
-			"reset": "Reset"
-		}
-	},
-	"thinkingBudget": {
-		"maxTokens": "Max Tokens",
-		"maxThinkingTokens": "Max Thinking Tokens"
-	},
-	"validation": {
-		"apiKey": "You must provide a valid API key.",
-		"awsRegion": "You must choose a region to use with Amazon Bedrock.",
-		"googleCloud": "You must provide a valid Google Cloud Project ID and Region.",
-		"modelId": "You must provide a valid model ID.",
-		"modelSelector": "You must provide a valid model selector.",
-		"openAi": "You must provide a valid base URL, API key, and model ID.",
-		"arn": {
-			"invalidFormat": "Invalid ARN format. Please check the format requirements.",
-			"regionMismatch": "Warning: The region in your ARN ({{arnRegion}}) does not match your selected region ({{region}}). This may cause access issues. The provider will use the region from the ARN."
-		},
-		"modelAvailability": "The model ID ({{modelId}}) you provided is not available. Please choose a different model.",
-		"providerNotAllowed": "Provider '{{provider}}' is not allowed by your organization",
-		"modelNotAllowed": "Model '{{model}}' is not allowed for provider '{{provider}}' by your organization",
-		"profileInvalid": "This profile contains a provider or model that is not allowed by your organization"
-	},
-	"placeholders": {
-		"apiKey": "Enter API Key...",
-		"profileName": "Enter profile name",
-		"accessKey": "Enter Access Key...",
-		"secretKey": "Enter Secret Key...",
-		"sessionToken": "Enter Session Token...",
-		"credentialsJson": "Enter Credentials JSON...",
-		"keyFilePath": "Enter Key File Path...",
-		"projectId": "Enter Project ID...",
-		"customArn": "Enter ARN (e.g. arn:aws:bedrock:us-east-1:123456789012:foundation-model/my-model)",
-		"baseUrl": "Enter base URL...",
-		"modelId": {
-			"lmStudio": "e.g. meta-llama-3.1-8b-instruct",
-			"lmStudioDraft": "e.g. lmstudio-community/llama-3.2-1b-instruct",
-			"ollama": "e.g. llama3.1"
+		"useCustomBaseUrl": "Use custom base URL",
+		"model": "Model",
+		"validation": {
+			"apiKey": "API key is required"
 		},
-		"numbers": {
-			"maxTokens": "e.g. 4096",
-			"contextWindow": "e.g. 128000",
-			"inputPrice": "e.g. 0.0001",
-			"outputPrice": "e.g. 0.0002",
-			"cacheWritePrice": "e.g. 0.00005"
+		"placeholders": {
+			"apiKey": "Enter your API key"
 		}
 	},
-	"defaults": {
-		"ollamaUrl": "Default: http://localhost:11434",
-		"lmStudioUrl": "Default: http://localhost:1234",
-		"geminiUrl": "Default: https://generativelanguage.googleapis.com"
-	},
-	"labels": {
-		"customArn": "Custom ARN",
-		"useCustomArn": "Use custom ARN..."
-	},
-	"includeMaxOutputTokens": "Include max output tokens",
-	"includeMaxOutputTokensDescription": "Send max output tokens parameter in API requests. Some providers may not support this.",
-	"limitMaxTokensDescription": "Limit the maximum number of tokens in the response",
-	"maxOutputTokensLabel": "Max output tokens",
-	"maxTokensGenerateDescription": "Maximum tokens to generate in response"
-}
+	"importSettings": "Import Settings"
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/en/welcome.json b/webview-ui/src/i18n/locales/en/welcome.json
index 2202f6fd6..69ab5f2fa 100644
--- a/webview-ui/src/i18n/locales/en/welcome.json
+++ b/webview-ui/src/i18n/locales/en/welcome.json
@@ -1,7 +1,7 @@
 {
-	"greeting": "Welcome to Roo Code!",
-	"introduction": "With a range of built-in and extensible Modes, Roo Code lets you plan, architect, code, debug and boost your productivity like never before.",
-	"notice": "To get started, this extension needs an API provider.",
+	"greeting": "Welcome to Researcherry Coder!",
+	"introduction": "With built-in and extensible Modes, Researcherry Coder lets you plan, design, code, debug, and boost productivity like never before.",
+	"notice": "This extension needs an API provider to get started.",
 	"start": "Let's go!",
 	"routers": {
 		"requesty": {
@@ -9,19 +9,19 @@
 			"incentive": "$1 free credit"
 		},
 		"openrouter": {
-			"description": "A unified interface for LLMs"
+			"description": "Unified interface for LLMs"
 		}
 	},
-	"chooseProvider": "To do its magic, Roo needs an API key.",
-	"startRouter": "We recommend using an LLM Router:",
-	"startCustom": "Or you can bring your provider API key:",
+	"chooseProvider": "For its magic, Roo needs an API key.",
+	"startRouter": "We recommend using an LLM router:",
+	"startCustom": "Or you can use your own API key:",
 	"telemetry": {
-		"title": "Help Improve Roo Code",
-		"anonymousTelemetry": "Send anonymous error and usage data to help us fix bugs and improve the extension. No code, prompts, or personal information is ever sent (unless you connect to Roo Code Cloud). See our <privacyLink>privacy policy</privacyLink> for more details.",
-		"changeSettings": "You can always change this at the bottom of the <settingsLink>settings</settingsLink>",
+		"title": "Help improve Researcherry Coder",
+		"anonymousTelemetry": "Send anonymous error and usage data to help us fix bugs and improve the extension. Code, prompts, and personal information are never sent.",
+		"changeSettings": "You can always change this at the bottom of the <settingsLink>settings</settingsLink> page",
 		"settings": "settings",
 		"allow": "Allow",
 		"deny": "Deny"
 	},
 	"importSettings": "Import Settings"
-}
+} 
\ No newline at end of file
diff --git a/webview-ui/src/i18n/locales/ru/account.json b/webview-ui/src/i18n/locales/ru/account.json
index 1c8dcf528..ae7f30e49 100644
--- a/webview-ui/src/i18n/locales/ru/account.json
+++ b/webview-ui/src/i18n/locales/ru/account.json
@@ -3,12 +3,12 @@
 	"profilePicture": "Фото профиля",
 	"logOut": "Выход",
 	"testApiAuthentication": "Проверить аутентификацию API",
-	"signIn": "Подключиться к Roo Code Cloud",
+	"signIn": "Подключиться к Researcherry Coder Cloud",
 	"connect": "Подключиться",
-	"cloudBenefitsTitle": "Подключиться к Roo Code Cloud",
+	"cloudBenefitsTitle": "Подключиться к Researcherry Coder Cloud",
 	"cloudBenefitsSubtitle": "Синхронизируй свои промпты и телеметрию, чтобы включить:",
 	"cloudBenefitHistory": "Онлайн-история задач",
 	"cloudBenefitSharing": "Функции обмена и совместной работы",
 	"cloudBenefitMetrics": "Метрики использования на основе задач, токенов и затрат",
-	"visitCloudWebsite": "Посетить Roo Code Cloud"
+	"visitCloudWebsite": "Посетить Researcherry Coder Cloud"
 }
diff --git a/webview-ui/src/i18n/locales/ru/chat.json b/webview-ui/src/i18n/locales/ru/chat.json
index cab736621..00c91a7d4 100644
--- a/webview-ui/src/i18n/locales/ru/chat.json
+++ b/webview-ui/src/i18n/locales/ru/chat.json
@@ -1,14 +1,13 @@
 {
-	"greeting": "Добро пожаловать в Roo Code",
+	"greeting": "Добро пожаловать в Researcherry Coder",
 	"task": {
 		"title": "Задача",
 		"seeMore": "Показать больше",
 		"seeLess": "Показать меньше",
-		"tokens": "Токенов",
-		"cache": "Кэш",
-		"apiCost": "Стоимость API",
-		"size": "Размер",
-		"contextWindow": "Длина контекста",
+		"tokens": "Токенов:",
+		"cache": "Кэш:",
+		"apiCost": "Стоимость API:",
+		"contextWindow": "Длина контекста:",
 		"closeAndStart": "Закрыть задачу и начать новую",
 		"export": "Экспортировать историю задач",
 		"delete": "Удалить задачу (Shift + клик для пропуска подтверждения)",
@@ -19,7 +18,7 @@
 		"sharePublicly": "Поделиться публично",
 		"sharePubliclyDescription": "Любой, у кого есть ссылка, может получить доступ",
 		"connectToCloud": "Подключиться к облаку",
-		"connectToCloudDescription": "Войди в Roo Code Cloud, чтобы делиться задачами",
+		"connectToCloudDescription": "Войди в Researcherry Coder Cloud, чтобы делиться задачами",
 		"sharingDisabledByOrganization": "Обмен отключен организацией",
 		"shareSuccessOrganization": "Ссылка организации скопирована в буфер обмена",
 		"shareSuccessPublic": "Публичная ссылка скопирована в буфер обмена"
@@ -100,7 +99,7 @@
 			"description": "Специализированные персонажи с собственным поведением и назначенными моделями"
 		}
 	},
-	"onboarding": "<strong>Ваш список задач в этом рабочем пространстве пуст.</strong> Начните с ввода задачи ниже. Не знаете, с чего начать? Подробнее о возможностях Roo читайте в <DocsLink>документации</DocsLink>.",
+	"onboarding": "<strong>Ваш список задач в этом рабочем пространстве пуст.</strong> Начните с ввода задачи ниже. Не знаете, с чего начать? Подробнее о возможностях Нейра читайте в <DocsLink>документации</DocsLink>.",
 	"selectMode": "Выберите режим взаимодействия",
 	"selectApiConfig": "Выберите конфигурацию API",
 	"enhancePrompt": "Улучшить запрос с дополнительным контекстом",
@@ -109,7 +108,7 @@
 		"title": "Режимы",
 		"marketplace": "Маркетплейс режимов",
 		"settings": "Настройки режимов",
-		"description": "Специализированные персоны, которые настраивают поведение Roo.",
+		"description": "Специализированные персоны, которые настраивают поведение Нейра.",
 		"searchPlaceholder": "Поиск режимов...",
 		"noResults": "Ничего не найдено"
 	},
@@ -135,6 +134,7 @@
 		"streamingFailed": "Ошибка потокового API-запроса"
 	},
 	"checkpoint": {
+		"initial": "Начальная точка сохранения",
 		"regular": "Точка сохранения",
 		"initializingWarning": "Точка сохранения еще инициализируется... Если это занимает слишком много времени, вы можете отключить точки сохранения в <settingsLink>настройках</settingsLink> и перезапустить задачу.",
 		"menu": {
@@ -151,42 +151,42 @@
 		"current": "Текущая"
 	},
 	"instructions": {
-		"wantsToFetch": "Roo хочет получить подробные инструкции для помощи с текущей задачей"
+		"wantsToFetch": "Нейра хочет получить подробные инструкции для помощи с текущей задачей"
 	},
 	"fileOperations": {
-		"wantsToRead": "Roo хочет прочитать этот файл:",
-		"wantsToReadOutsideWorkspace": "Roo хочет прочитать этот файл вне рабочей области:",
-		"didRead": "Roo прочитал этот файл:",
-		"wantsToEdit": "Roo хочет отредактировать этот файл:",
-		"wantsToEditOutsideWorkspace": "Roo хочет отредактировать этот файл вне рабочей области:",
-		"wantsToEditProtected": "Roo хочет отредактировать защищённый файл конфигурации:",
-		"wantsToCreate": "Roo хочет создать новый файл:",
-		"wantsToSearchReplace": "Roo хочет выполнить поиск и замену в этом файле:",
-		"didSearchReplace": "Roo выполнил поиск и замену в этом файле:",
-		"wantsToInsert": "Roo хочет вставить содержимое в этот файл:",
-		"wantsToInsertWithLineNumber": "Roo хочет вставить содержимое в этот файл на строку {{lineNumber}}:",
-		"wantsToInsertAtEnd": "Roo хочет добавить содержимое в конец этого файла:",
-		"wantsToReadAndXMore": "Roo хочет прочитать этот файл и еще {{count}}:",
-		"wantsToReadMultiple": "Roo хочет прочитать несколько файлов:",
-		"wantsToApplyBatchChanges": "Roo хочет применить изменения к нескольким файлам:"
+		"wantsToRead": "Нейра хочет прочитать этот файл:",
+		"wantsToReadOutsideWorkspace": "Нейра хочет прочитать этот файл вне рабочей области:",
+		"didRead": "Нейра прочитал этот файл:",
+		"wantsToEdit": "Нейра хочет отредактировать этот файл:",
+		"wantsToEditOutsideWorkspace": "Нейра хочет отредактировать этот файл вне рабочей области:",
+		"wantsToEditProtected": "Нейра хочет отредактировать защищённый файл конфигурации:",
+		"wantsToCreate": "Нейра хочет создать новый файл:",
+		"wantsToSearchReplace": "Нейра хочет выполнить поиск и замену в этом файле:",
+		"didSearchReplace": "Нейра выполнил поиск и замену в этом файле:",
+		"wantsToInsert": "Нейра хочет вставить содержимое в этот файл:",
+		"wantsToInsertWithLineNumber": "Нейра хочет вставить содержимое в этот файл на строку {{lineNumber}}:",
+		"wantsToInsertAtEnd": "Нейра хочет добавить содержимое в конец этого файла:",
+		"wantsToReadAndXMore": "Нейра хочет прочитать этот файл и еще {{count}}:",
+		"wantsToReadMultiple": "Нейра хочет прочитать несколько файлов:",
+		"wantsToApplyBatchChanges": "Нейра хочет применить изменения к нескольким файлам:"
 	},
 	"directoryOperations": {
-		"wantsToViewTopLevel": "Roo хочет просмотреть файлы верхнего уровня в этой директории:",
-		"didViewTopLevel": "Roo просмотрел файлы верхнего уровня в этой директории:",
-		"wantsToViewRecursive": "Roo хочет рекурсивно просмотреть все файлы в этой директории:",
-		"didViewRecursive": "Roo рекурсивно просмотрел все файлы в этой директории:",
-		"wantsToViewDefinitions": "Roo хочет просмотреть имена определений исходного кода в этой директории:",
-		"didViewDefinitions": "Roo просмотрел имена определений исходного кода в этой директории:",
-		"wantsToSearch": "Roo хочет выполнить поиск в этой директории по <code>{{regex}}</code>:",
-		"didSearch": "Roo выполнил поиск в этой директории по <code>{{regex}}</code>:",
-		"wantsToSearchOutsideWorkspace": "Roo хочет выполнить поиск в этой директории (вне рабочего пространства) по <code>{{regex}}</code>:",
-		"didSearchOutsideWorkspace": "Roo выполнил поиск в этой директории (вне рабочего пространства) по <code>{{regex}}</code>:",
-		"wantsToViewTopLevelOutsideWorkspace": "Roo хочет просмотреть файлы верхнего уровня в этой директории (вне рабочего пространства):",
-		"didViewTopLevelOutsideWorkspace": "Roo просмотрел файлы верхнего уровня в этой директории (вне рабочего пространства):",
-		"wantsToViewRecursiveOutsideWorkspace": "Roo хочет рекурсивно просмотреть все файлы в этой директории (вне рабочего пространства):",
-		"didViewRecursiveOutsideWorkspace": "Roo рекурсивно просмотрел все файлы в этой директории (вне рабочего пространства):",
-		"wantsToViewDefinitionsOutsideWorkspace": "Roo хочет просмотреть имена определений исходного кода в этой директории (вне рабочего пространства):",
-		"didViewDefinitionsOutsideWorkspace": "Roo просмотрел имена определений исходного кода в этой директории (вне рабочего пространства):"
+		"wantsToViewTopLevel": "Нейра хочет просмотреть файлы верхнего уровня в этой директории:",
+		"didViewTopLevel": "Нейра просмотрел файлы верхнего уровня в этой директории:",
+		"wantsToViewRecursive": "Нейра хочет рекурсивно просмотреть все файлы в этой директории:",
+		"didViewRecursive": "Нейра рекурсивно просмотрел все файлы в этой директории:",
+		"wantsToViewDefinitions": "Нейра хочет просмотреть имена определений исходного кода в этой директории:",
+		"didViewDefinitions": "Нейра просмотрел имена определений исходного кода в этой директории:",
+		"wantsToSearch": "Нейра хочет выполнить поиск в этой директории по <code>{{regex}}</code>:",
+		"didSearch": "Нейра выполнила поиск в этой директории по <code>{{regex}}</code>:",
+		"wantsToSearchOutsideWorkspace": "Нейра хочет выполнить поиск в этой директории (вне рабочего пространства) по <code>{{regex}}</code>:",
+		"didSearchOutsideWorkspace": "Нейра выполнила поиск в этой директории (вне рабочего пространства) по <code>{{regex}}</code>:",
+		"wantsToViewTopLevelOutsideWorkspace": "Нейра хочет просмотреть файлы верхнего уровня в этой директории (вне рабочего пространства):",
+		"didViewTopLevelOutsideWorkspace": "Нейра просмотрел файлы верхнего уровня в этой директории (вне рабочего пространства):",
+		"wantsToViewRecursiveOutsideWorkspace": "Нейра хочет рекурсивно просмотреть все файлы в этой директории (вне рабочего пространства):",
+		"didViewRecursiveOutsideWorkspace": "Нейра рекурсивно просмотрел все файлы в этой директории (вне рабочего пространства):",
+		"wantsToViewDefinitionsOutsideWorkspace": "Нейра хочет просмотреть имена определений исходного кода в этой директории (вне рабочего пространства):",
+		"didViewDefinitionsOutsideWorkspace": "Нейра просмотрел имена определений исходного кода в этой директории (вне рабочего пространства):"
 	},
 	"commandOutput": "Вывод команды",
 	"commandExecution": {
@@ -208,18 +208,18 @@
 	"response": "Ответ",
 	"arguments": "Аргументы",
 	"mcp": {
-		"wantsToUseTool": "Roo хочет использовать инструмент на сервере MCP {{serverName}}:",
-		"wantsToAccessResource": "Roo хочет получить доступ к ресурсу на сервере MCP {{serverName}}:"
+		"wantsToUseTool": "Нейра хочет использовать инструмент на сервере MCP {{serverName}}:",
+		"wantsToAccessResource": "Нейра хочет получить доступ к ресурсу на сервере MCP {{serverName}}:"
 	},
 	"modes": {
-		"wantsToSwitch": "Roo хочет переключиться в режим {{mode}}",
-		"wantsToSwitchWithReason": "Roo хочет переключиться в режим {{mode}}, потому что: {{reason}}",
-		"didSwitch": "Roo переключился в режим {{mode}}",
-		"didSwitchWithReason": "Roo переключился в режим {{mode}}, потому что: {{reason}}"
+		"wantsToSwitch": "Нейра хочет переключиться в режим {{mode}}",
+		"wantsToSwitchWithReason": "Нейра хочет переключиться в режим {{mode}}, потому что: {{reason}}",
+		"didSwitch": "Нейра переключилась в режим {{mode}}",
+		"didSwitchWithReason": "Нейра переключилась в режим {{mode}}, потому что: {{reason}}"
 	},
 	"subtasks": {
-		"wantsToCreate": "Roo хочет создать новую подзадачу в режиме {{mode}}:",
-		"wantsToFinish": "Roo хочет завершить эту подзадачу",
+		"wantsToCreate": "Нейра хочет создать новую подзадачу в режиме {{mode}}:",
+		"wantsToFinish": "Нейра хочет завершить эту подзадачу",
 		"newTaskContent": "Инструкции по подзадаче",
 		"completionContent": "Подзадача завершена",
 		"resultContent": "Результаты подзадачи",
@@ -227,30 +227,30 @@
 		"completionInstructions": "Подзадача завершена! Вы можете просмотреть результаты и предложить исправления или следующие шаги. Если всё в порядке, подтвердите для возврата результата в родительскую задачу."
 	},
 	"questions": {
-		"hasQuestion": "У Roo есть вопрос:"
+		"hasQuestion": "У Нейры есть вопрос:"
 	},
 	"taskCompleted": "Задача завершена",
 	"error": "Ошибка",
 	"diffError": {
 		"title": "Не удалось выполнить редактирование"
 	},
-	"troubleMessage": "У Roo возникли проблемы...",
+	"troubleMessage": "У Нейры возникли проблемы...",
 	"powershell": {
 		"issues": "Похоже, у вас проблемы с Windows PowerShell, пожалуйста, ознакомьтесь с этим"
 	},
 	"autoApprove": {
 		"title": "Автоодобрение:",
 		"none": "Нет",
-		"description": "Автоодобрение позволяет Roo Code выполнять действия без запроса разрешения. Включайте только для полностью доверенных действий. Более подробная настройка доступна в <settingsLink>Настройках</settingsLink>.",
+		"description": "Автоодобрение позволяет Researcherry Coder выполнять действия без запроса разрешения. Включайте только для полностью доверенных действий. Более подробная настройка доступна в <settingsLink>Настройках</settingsLink>.",
 		"selectOptionsFirst": "Выберите хотя бы один параметр ниже, чтобы включить автоодобрение",
 		"toggleAriaLabel": "Переключить автоодобрение",
 		"disabledAriaLabel": "Автоодобрение отключено - сначала выберите опции"
 	},
 	"announcement": {
-		"title": "🎉 Выпущен Roo Code {{version}}",
-		"description": "Roo Code {{version}} приносит мощные новые функции и значительные улучшения для совершенствования вашего рабочего процесса разработки.",
+		"title": "🎉 Выпущен Researcherry Coder {{version}}",
+		"description": "Researcherry Coder {{version}} приносит мощные новые функции и значительные улучшения для совершенствования вашего рабочего процесса разработки.",
 		"whatsNew": "Что нового",
-		"feature1": "<bold>Очередь сообщений</bold>: Ставьте несколько сообщений в очередь, пока Roo работает, позволяя вам продолжать планировать рабочий процесс без прерывания.",
+		"feature1": "<bold>Очередь сообщений</bold>: Ставьте несколько сообщений в очередь, пока Researcherry работает, позволяя вам продолжать планировать рабочий процесс без прерывания.",
 		"feature2": "<bold>Пользовательские слэш-команды</bold>: Создавайте персонализированные слэш-команды для быстрого доступа к часто используемым промптам и рабочим процессам с полным управлением пользовательского интерфейса.",
 		"feature3": "<bold>Улучшенные инструменты Gemini</bold>: Новые возможности контекста URL и основы поиска Google предоставляют моделям Gemini информацию в реальном времени и расширенные возможности исследования.",
 		"hideButton": "Скрыть объявление",
@@ -272,7 +272,7 @@
 		"countdownDisplay": "{{count}}с"
 	},
 	"browser": {
-		"rooWantsToUse": "Roo хочет использовать браузер:",
+		"rooWantsToUse": "Нейра хочет использовать браузер:",
 		"consoleLogs": "Логи консоли",
 		"noNewLogs": "(Новых логов нет)",
 		"screenshot": "Скриншот браузера",
@@ -306,13 +306,13 @@
 	"profileViolationWarning": "Текущий профиль несовместим с настройками вашей организации",
 	"shellIntegration": {
 		"title": "Предупреждение о выполнении команды",
-		"description": "Ваша команда выполняется без интеграции оболочки терминала VSCode. Чтобы скрыть это предупреждение, вы можете отключить интеграцию оболочки в разделе <strong>Terminal</strong> в <settingsLink>настройках Roo Code</settingsLink> или устранить проблемы с интеграцией терминала VSCode, используя ссылку ниже.",
+		"description": "Ваша команда выполняется без интеграции оболочки терминала VSCode. Чтобы скрыть это предупреждение, вы можете отключить интеграцию оболочки в разделе <strong>Terminal</strong> в <settingsLink>настройках Researcherry Coder</settingsLink> или устранить проблемы с интеграцией терминала VSCode, используя ссылку ниже.",
 		"troubleshooting": "Нажмите здесь для просмотра документации по интеграции оболочки."
 	},
 	"ask": {
 		"autoApprovedRequestLimitReached": {
 			"title": "Достигнут лимит автоматически одобренных запросов",
-			"description": "Roo достиг автоматически одобренного лимита в {{count}} API-запрос(ов). Хотите сбросить счетчик и продолжить задачу?",
+			"description": "Нейра достигла автоматически одобренного лимита в {{count}} API-запрос(ов). Хотите сбросить счетчик и продолжить задачу?",
 			"button": "Сбросить и продолжить"
 		},
 		"autoApprovedCostLimitReached": {
@@ -322,8 +322,8 @@
 		}
 	},
 	"codebaseSearch": {
-		"wantsToSearch": "Roo хочет выполнить поиск в кодовой базе по <code>{{query}}</code>:",
-		"wantsToSearchWithPath": "Roo хочет выполнить поиск в кодовой базе по <code>{{query}}</code> в <code>{{path}}</code>:",
+		"wantsToSearch": "Нейра хочет выполнить поиск в кодовой базе по <code>{{query}}</code>:",
+		"wantsToSearchWithPath": "Нейра хочет выполнить поиск в кодовой базе по <code>{{query}}</code> в <code>{{path}}</code>:",
 		"didSearch_one": "Найден 1 результат",
 		"didSearch_other": "Найдено {{count}} результатов",
 		"resultTooltip": "Оценка схожести: {{score}} (нажмите, чтобы открыть файл)"
@@ -347,7 +347,7 @@
 		"ariaLabel": "Версия {{version}} - Нажмите, чтобы просмотреть примечания к выпуску"
 	},
 	"rooCloudCTA": {
-		"title": "Roo Code Cloud скоро появится!",
+		"title": "Researcherry Coder Cloud скоро появится!",
 		"description": "Запускайте удаленные агенты в облаке, получайте доступ к своим задачам из любого места, сотрудничайте с другими и многое другое.",
 		"joinWaitlist": "Присоединитесь к списку ожидания для получения раннего доступа."
 	},
diff --git a/webview-ui/src/i18n/locales/ru/common.json b/webview-ui/src/i18n/locales/ru/common.json
index f43c2e9e8..772b797bb 100644
--- a/webview-ui/src/i18n/locales/ru/common.json
+++ b/webview-ui/src/i18n/locales/ru/common.json
@@ -67,21 +67,5 @@
 		"editMessage": "Редактировать Сообщение",
 		"editWarning": "Редактирование этого сообщения приведет к удалению всех последующих сообщений в разговоре. Хотите продолжить?",
 		"proceed": "Продолжить"
-	},
-	"time_ago": {
-		"just_now": "только что",
-		"seconds_ago": "{{count}} секунд назад",
-		"minute_ago": "минуту назад",
-		"minutes_ago": "{{count}} минут назад",
-		"hour_ago": "час назад",
-		"hours_ago": "{{count}} часов назад",
-		"day_ago": "день назад",
-		"days_ago": "{{count}} дней назад",
-		"week_ago": "неделю назад",
-		"weeks_ago": "{{count}} недель назад",
-		"month_ago": "месяц назад",
-		"months_ago": "{{count}} месяцев назад",
-		"year_ago": "год назад",
-		"years_ago": "{{count}} лет назад"
 	}
 }
diff --git a/webview-ui/src/i18n/locales/ru/marketplace.json b/webview-ui/src/i18n/locales/ru/marketplace.json
index 299ebbf60..30814675e 100644
--- a/webview-ui/src/i18n/locales/ru/marketplace.json
+++ b/webview-ui/src/i18n/locales/ru/marketplace.json
@@ -1,5 +1,5 @@
 {
-	"title": "Roo Marketplace",
+	"title": "Researcherry Каталог",
 	"tabs": {
 		"installed": "Установлено",
 		"settings": "Настройки",
diff --git a/webview-ui/src/i18n/locales/ru/settings.json b/webview-ui/src/i18n/locales/ru/settings.json
index 38e986ab8..8d3589c31 100644
--- a/webview-ui/src/i18n/locales/ru/settings.json
+++ b/webview-ui/src/i18n/locales/ru/settings.json
@@ -31,10 +31,10 @@
 		"prompts": "Промпты",
 		"experimental": "Экспериментальное",
 		"language": "Язык",
-		"about": "О Roo Code"
+		"about": "О Researcherry Coder"
 	},
 	"prompts": {
-		"description": "Настройте промпты поддержки, используемые для быстрых действий, таких как улучшение промптов, объяснение кода и исправление проблем. Эти промпты помогают Roo обеспечить лучшую поддержку для общих задач разработки."
+		"description": "Настройте промпты поддержки, используемые для быстрых действий, таких как улучшение промптов, объяснение кода и исправление проблем. Эти промпты помогают Нейра обеспечить лучшую поддержку для общих задач разработки."
 	},
 	"codeIndex": {
 		"title": "Индексация кодовой базы",
@@ -126,16 +126,15 @@
 		"resetToDefault": "Сбросить к значению по умолчанию"
 	},
 	"autoApprove": {
-		"description": "Разрешить Roo автоматически выполнять операции без необходимости одобрения. Включайте эти параметры только если полностью доверяете ИИ и понимаете связанные с этим риски безопасности.",
-		"enabled": "Автоодобрение включено",
+		"description": "Разрешить Нейра автоматически выполнять операции без необходимости одобрения. Включайте эти параметры только если полностью доверяете ИИ и понимаете связанные с этим риски безопасности.",
 		"toggleAriaLabel": "Переключить автоодобрение",
 		"disabledAriaLabel": "Автоодобрение отключено - сначала выберите опции",
 		"readOnly": {
 			"label": "Чтение",
-			"description": "Если включено, Roo будет автоматически просматривать содержимое каталогов и читать файлы без необходимости нажимать кнопку \"Одобрить\".",
+			"description": "Если включено, Нейра будет автоматически просматривать содержимое каталогов и читать файлы без необходимости нажимать кнопку \"Одобрить\".",
 			"outsideWorkspace": {
 				"label": "Включая файлы вне рабочей области",
-				"description": "Разрешить Roo читать файлы вне текущей рабочей области без необходимости одобрения."
+				"description": "Разрешить Нейра читать файлы вне текущей рабочей области без необходимости одобрения."
 			}
 		},
 		"write": {
@@ -144,11 +143,11 @@
 			"delayLabel": "Задержка после записи для диагностики возможных проблем",
 			"outsideWorkspace": {
 				"label": "Включая файлы вне рабочей области",
-				"description": "Разрешить Roo создавать и редактировать файлы вне текущей рабочей области без необходимости одобрения."
+				"description": "Разрешить Нейра создавать и редактировать файлы вне текущей рабочей области без необходимости одобрения."
 			},
 			"protected": {
 				"label": "Включить защищенные файлы",
-				"description": "Разрешить Roo создавать и редактировать защищенные файлы (такие как .rooignore и файлы конфигурации .roo/) без необходимости одобрения."
+				"description": "Разрешить Нейра создавать и редактировать защищенные файлы (такие как .Нейраignore и файлы конфигурации .Нейра/) без необходимости одобрения."
 			}
 		},
 		"browser": {
@@ -261,8 +260,6 @@
 		"getCerebrasApiKey": "Получить Cerebras API-ключ",
 		"chutesApiKey": "Chutes API-ключ",
 		"getChutesApiKey": "Получить Chutes API-ключ",
-		"fireworksApiKey": "Fireworks API-ключ",
-		"getFireworksApiKey": "Получить Fireworks API-ключ",
 		"deepSeekApiKey": "DeepSeek API-ключ",
 		"getDeepSeekApiKey": "Получить DeepSeek API-ключ",
 		"doubaoApiKey": "Doubao API-ключ",
@@ -270,10 +267,6 @@
 		"moonshotApiKey": "Moonshot API-ключ",
 		"getMoonshotApiKey": "Получить Moonshot API-ключ",
 		"moonshotBaseUrl": "Точка входа Moonshot",
-		"zaiApiKey": "Z AI API-ключ",
-		"getZaiApiKey": "Получить Z AI API-ключ",
-		"zaiEntrypoint": "Точка входа Z AI",
-		"zaiEntrypointDescription": "Пожалуйста, выберите подходящую точку входа API в зависимости от вашего местоположения. Если вы находитесь в Китае, выберите open.bigmodel.cn. В противном случае выберите api.z.ai.",
 		"geminiApiKey": "Gemini API-ключ",
 		"getGroqApiKey": "Получить Groq API-ключ",
 		"groqApiKey": "Groq API-ключ",
@@ -352,13 +345,13 @@
 			"draftModelDesc": "Черновая модель должна быть из той же семьи моделей для корректной работы speculative decoding.",
 			"selectDraftModel": "Выбрать черновую модель",
 			"noModelsFound": "Черновых моделей не найдено. Проверьте, что LM Studio запущен с включённым серверным режимом.",
-			"description": "LM Studio позволяет запускать модели локально на вашем компьютере. Для начала ознакомьтесь с <a>кратким руководством</a>. Также необходимо включить <b>локальный сервер</b> LM Studio для работы с этим расширением. <span>Примечание:</span> Roo Code использует сложные подсказки и лучше всего работает с моделями Claude. Менее мощные модели могут работать некорректно."
+			"description": "LM Studio позволяет запускать модели локально на вашем компьютере. Для начала ознакомьтесь с <a>кратким руководством</a>. Также необходимо включить <b>локальный сервер</b> LM Studio для работы с этим расширением. <span>Примечание:</span> Researcherry Coder использует сложные подсказки и лучше всего работает с моделями Claude. Менее мощные модели могут работать некорректно."
 		},
 		"ollama": {
 			"baseUrl": "Базовый URL (опционально)",
 			"modelId": "ID модели",
 			"description": "Ollama позволяет запускать модели локально на вашем компьютере. Для начала ознакомьтесь с кратким руководством.",
-			"warning": "Примечание: Roo Code использует сложные подсказки и лучше всего работает с моделями Claude. Менее мощные модели могут работать некорректно."
+			"warning": "Примечание: Researcherry Coder использует сложные подсказки и лучше всего работает с моделями Claude. Менее мощные модели могут работать некорректно."
 		},
 		"unboundApiKey": "Unbound API-ключ",
 		"getUnboundApiKey": "Получить Unbound API-ключ",
@@ -376,7 +369,7 @@
 			}
 		},
 		"customModel": {
-			"capabilities": "Настройте возможности и стоимость вашей пользовательской модели, совместимой с OpenAI. Будьте осторожны при указании возможностей модели, это может повлиять на работу Roo Code.",
+			"capabilities": "Настройте возможности и стоимость вашей пользовательской модели, совместимой с OpenAI. Будьте осторожны при указании возможностей модели, это может повлиять на работу Researcherry Coder.",
 			"maxTokens": {
 				"label": "Максимум токенов на вывод",
 				"description": "Максимальное количество токенов, которые модель может сгенерировать в ответе. (Укажите -1, чтобы сервер сам определил максимум.)"
@@ -423,7 +416,7 @@
 		},
 		"consecutiveMistakeLimit": {
 			"label": "Лимит ошибок и повторений",
-			"description": "Количество последовательных ошибок или повторных действий перед показом диалогового окна 'У Roo возникли проблемы'",
+			"description": "Количество последовательных ошибок или повторных действий перед показом диалогового окна 'У Нейра возникли проблемы'",
 			"unlimitedDescription": "Включены неограниченные повторные попытки (автоматическое продолжение). Диалоговое окно никогда не появится.",
 			"warning": "⚠️ Установка значения 0 разрешает неограниченные повторные попытки, что может значительно увеличить использование API"
 		},
@@ -445,7 +438,7 @@
 	"browser": {
 		"enable": {
 			"label": "Включить инструмент браузера",
-			"description": "Если включено, Roo может использовать браузер для взаимодействия с сайтами при использовании моделей, поддерживающих работу с компьютером. <0>Подробнее</0>"
+			"description": "Если включено, Нейра может использовать браузер для взаимодействия с сайтами при использовании моделей, поддерживающих работу с компьютером. <0>Подробнее</0>"
 		},
 		"viewport": {
 			"label": "Размер окна просмотра",
@@ -473,18 +466,18 @@
 	"checkpoints": {
 		"enable": {
 			"label": "Включить автоматические контрольные точки",
-			"description": "Если включено, Roo будет автоматически создавать контрольные точки во время выполнения задач, что упрощает просмотр изменений или возврат к предыдущим состояниям. <0>Подробнее</0>"
+			"description": "Если включено, Нейра будет автоматически создавать контрольные точки во время выполнения задач, что упрощает просмотр изменений или возврат к предыдущим состояниям. <0>Подробнее</0>"
 		}
 	},
 	"notifications": {
 		"sound": {
 			"label": "Включить звуковые эффекты",
-			"description": "Если включено, Roo будет воспроизводить звуковые эффекты для уведомлений и событий.",
+			"description": "Если включено, Нейра будет воспроизводить звуковые эффекты для уведомлений и событий.",
 			"volumeLabel": "Громкость"
 		},
 		"tts": {
 			"label": "Включить озвучивание",
-			"description": "Если включено, Roo будет озвучивать свои ответы с помощью преобразования текста в речь.",
+			"description": "Если включено, Нейра будет озвучивать свои ответы с помощью преобразования текста в речь.",
 			"speedLabel": "Скорость"
 		}
 	},
@@ -492,7 +485,7 @@
 		"description": "Управляйте, какая информация включается в окно контекста ИИ, что влияет на расход токенов и качество ответов",
 		"autoCondenseContextPercent": {
 			"label": "Порог для запуска интеллектуального сжатия контекста",
-			"description": "Когда контекстное окно достигает этого порога, Roo автоматически его сожмёт."
+			"description": "Когда контекстное окно достигает этого порога, Нейра автоматически его сожмёт."
 		},
 		"condensingApiConfiguration": {
 			"label": "Конфигурация API для сжатия контекста",
@@ -508,7 +501,7 @@
 		},
 		"autoCondenseContext": {
 			"name": "Автоматически запускать интеллектуальное сжатие контекста",
-			"description": "Когда включено, Roo будет автоматически сжимать контекст при достижении порога. Когда отключено, вы все еще можете вручную запускать сжатие контекста."
+			"description": "Когда включено, Нейра будет автоматически сжимать контекст при достижении порога. Когда отключено, вы все еще можете вручную запускать сжатие контекста."
 		},
 		"openTabs": {
 			"label": "Лимит контекста открытых вкладок",
@@ -518,13 +511,13 @@
 			"label": "Лимит контекста файлов рабочей области",
 			"description": "Максимальное количество файлов, включаемых в детали текущей рабочей директории. Большее значение даёт больше контекста, но увеличивает расход токенов."
 		},
-		"rooignore": {
-			"label": "Показывать .rooignore-файлы в списках и поиске",
-			"description": "Если включено, файлы, совпадающие с шаблонами в .rooignore, будут отображаться в списках с символом замка. Если выключено, такие файлы полностью скрываются из списков и поиска."
+		"Нейраignore": {
+			"label": "Показывать .Нейраignore-файлы в списках и поиске",
+			"description": "Если включено, файлы, совпадающие с шаблонами в .Нейраignore, будут отображаться в списках с символом замка. Если выключено, такие файлы полностью скрываются из списков и поиска."
 		},
 		"maxReadFile": {
 			"label": "Порог автообрезки при чтении файла",
-			"description": "Roo читает столько строк, если модель не указала явно начало/конец. Если число меньше общего количества строк в файле, Roo создаёт индекс определений кода по строкам. Особые случаи: -1 — Roo читает весь файл (без индексации), 0 — не читает строки, а создаёт только минимальный индекс. Меньшие значения минимизируют начальный контекст, позволяя точнее читать нужные диапазоны строк. Явные запросы начала/конца не ограничиваются этим параметром.",
+			"description": "Нейра читает столько строк, если модель не указала явно начало/конец. Если число меньше общего количества строк в файле, Нейра создаёт индекс определений кода по строкам. Особые случаи: -1 — Нейра читает весь файл (без индексации), 0 — не читает строки, а создаёт только минимальный индекс. Меньшие значения минимизируют начальный контекст, позволяя точнее читать нужные диапазоны строк. Явные запросы начала/конца не ограничиваются этим параметром.",
 			"lines": "строк",
 			"always_full_read": "Всегда читать весь файл"
 		},
@@ -633,7 +626,7 @@
 	"advanced": {
 		"diff": {
 			"label": "Включить редактирование через диффы",
-			"description": "Если включено, Roo сможет быстрее редактировать файлы и автоматически отклонять усечённые полные записи. Лучше всего работает с последней моделью Claude 3.7 Sonnet.",
+			"description": "Если включено, Нейра сможет быстрее редактировать файлы и автоматически отклонять усечённые полные записи. Лучше всего работает с последней моделью Claude 3.7 Sonnet.",
 			"strategy": {
 				"label": "Стратегия диффа",
 				"options": {
@@ -654,7 +647,7 @@
 		},
 		"todoList": {
 			"label": "Включить инструмент списка задач",
-			"description": "При включении Roo может создавать и управлять списками задач для отслеживания прогресса. Это помогает организовать сложные задачи в управляемые шаги."
+			"description": "При включении Нейра может создавать и управлять списками задач для отслеживания прогресса. Это помогает организовать сложные задачи в управляемые шаги."
 		}
 	},
 	"experimental": {
@@ -664,23 +657,23 @@
 		},
 		"SEARCH_AND_REPLACE": {
 			"name": "Использовать экспериментальный инструмент поиска и замены",
-			"description": "Включает экспериментальный инструмент поиска и замены, позволяя Roo заменять несколько вхождений за один запрос."
+			"description": "Включает экспериментальный инструмент поиска и замены, позволяя Нейра заменять несколько вхождений за один запрос."
 		},
 		"INSERT_BLOCK": {
 			"name": "Использовать экспериментальный инструмент вставки контента",
-			"description": "Включает экспериментальный инструмент вставки контента, позволяя Roo вставлять контент по номеру строки без создания диффа."
+			"description": "Включает экспериментальный инструмент вставки контента, позволяя Нейра вставлять контент по номеру строки без создания диффа."
 		},
 		"POWER_STEERING": {
 			"name": "Использовать экспериментальный режим \"power steering\"",
-			"description": "Если включено, Roo будет чаще напоминать модели детали текущего режима. Это приведёт к более строгому следованию ролям и инструкциям, но увеличит расход токенов."
+			"description": "Если включено, Нейра будет чаще напоминать модели детали текущего режима. Это приведёт к более строгому следованию ролям и инструкциям, но увеличит расход токенов."
 		},
 		"MULTI_SEARCH_AND_REPLACE": {
 			"name": "Использовать экспериментальный мультиблочный инструмент диффа",
-			"description": "Если включено, Roo будет использовать мультиблочный инструмент диффа, пытаясь обновить несколько блоков кода за один запрос."
+			"description": "Если включено, Нейра будет использовать мультиблочный инструмент диффа, пытаясь обновить несколько блоков кода за один запрос."
 		},
 		"CONCURRENT_FILE_READS": {
 			"name": "Включить одновременное чтение файлов",
-			"description": "При включении Roo может читать несколько файлов в одном запросе. При отключении Roo должен читать файлы по одному. Отключение может помочь при работе с менее производительными моделями или когда вы хотите больше контроля над доступом к файлам."
+			"description": "При включении Нейра может читать несколько файлов в одном запросе. При отключении Нейра должен читать файлы по одному. Отключение может помочь при работе с менее производительными моделями или когда вы хотите больше контроля над доступом к файлам."
 		},
 		"MARKETPLACE": {
 			"name": "Включить Marketplace",
@@ -688,20 +681,16 @@
 		},
 		"MULTI_FILE_APPLY_DIFF": {
 			"name": "Включить одновременное редактирование файлов",
-			"description": "Когда включено, Roo может редактировать несколько файлов в одном запросе. Когда отключено, Roo должен редактировать файлы по одному. Отключение этой функции может помочь при работе с менее способными моделями или когда вы хотите больше контроля над изменениями файлов."
+			"description": "Когда включено, Нейра может редактировать несколько файлов в одном запросе. Когда отключено, Нейра должен редактировать файлы по одному. Отключение этой функции может помочь при работе с менее способными моделями или когда вы хотите больше контроля над изменениями файлов."
 		},
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Фоновое редактирование",
-			"description": "Предотвращает нарушение фокуса редактора при включении. Редактирование файлов происходит в фоновом режиме без открытия представлений различий или кражи фокуса. Вы можете продолжать работать без перерывов, пока Roo вносит изменения. Файлы могут открываться без фокуса для захвата диагностики или оставаться полностью закрытыми."
-		},
-		"ASSISTANT_MESSAGE_PARSER": {
-			"name": "Использовать новый парсер сообщений",
-			"description": "Включите экспериментальный потоковый парсер сообщений, который ускоряет длинные ответы благодаря более эффективной обработке сообщений."
+			"description": "Предотвращает нарушение фокуса редактора при включении. Редактирование файлов происходит в фоновом режиме без открытия представлений различий или кражи фокуса. Вы можете продолжать работать без перерывов, пока Нейра вносит изменения. Файлы могут открываться без фокуса для захвата диагностики или оставаться полностью закрытыми."
 		}
 	},
 	"promptCaching": {
 		"label": "Отключить кэширование промптов",
-		"description": "Если отмечено, Roo не будет использовать кэширование промптов для этой модели."
+		"description": "Если отмечено, Нейра не будет использовать кэширование промптов для этой модели."
 	},
 	"temperature": {
 		"useCustom": "Использовать пользовательскую температуру",
@@ -732,17 +721,17 @@
 		}
 	},
 	"modelPicker": {
-		"automaticFetch": "Расширение автоматически получает актуальный список моделей на <serviceLink>{{serviceName}}</serviceLink>. Если не уверены, что выбрать, Roo Code лучше всего работает с <defaultModelLink>{{defaultModelId}}</defaultModelLink>. Также попробуйте поискать \"free\" для бесплатных вариантов.",
+		"automaticFetch": "Расширение автоматически получает актуальный список моделей на <serviceLink>{{serviceName}}</serviceLink>. Если не уверены, что выбрать, Researcherry Coder лучше всего работает с <defaultModelLink>{{defaultModelId}}</defaultModelLink>. Также попробуйте поискать \"free\" для бесплатных вариантов.",
 		"label": "Модель",
 		"searchPlaceholder": "Поиск",
 		"noMatchFound": "Совпадений не найдено",
 		"useCustomModel": "Использовать пользовательскую: {{modelId}}"
 	},
 	"footer": {
-		"feedback": "Если у вас есть вопросы или предложения, откройте issue на <githubLink>github.com/RooCodeInc/Roo-Code</githubLink> или присоединяйтесь к <redditLink>reddit.com/r/RooCode</redditLink> или <discordLink>discord.gg/roocode</discordLink>",
+		"feedback": "Если у вас есть вопросы или предложения, откройте issue на <githubLink>github.com/ResearcherryCoderInc/researcherry</githubLink> или присоединяйтесь к <redditLink>reddit.com/r/ResearcherryCoder</redditLink> или <discordLink>discord.gg/researcherry</discordLink>",
 		"telemetry": {
 			"label": "Разрешить анонимную отправку ошибок и статистики использования",
-			"description": "Помогите улучшить Roo Code, отправляя анонимные данные об ошибках и использовании. Код, подсказки и личная информация не отправляются. Подробнее — в политике конфиденциальности."
+			"description": "Помогите улучшить Researcherry Coder, отправляя анонимные данные об ошибках и использовании. Код, подсказки и личная информация не отправляются. Подробнее — в политике конфиденциальности."
 		},
 		"settings": {
 			"import": "Импорт",
diff --git a/webview-ui/src/i18n/locales/ru/welcome.json b/webview-ui/src/i18n/locales/ru/welcome.json
index cae5b790e..1fc327d1e 100644
--- a/webview-ui/src/i18n/locales/ru/welcome.json
+++ b/webview-ui/src/i18n/locales/ru/welcome.json
@@ -1,6 +1,6 @@
 {
-	"greeting": "Добро пожаловать в Roo Code!",
-	"introduction": "С набором встроенных и расширяемых Режимов, Roo Code позволяет вам планировать, проектировать, писать код, отлаживать и повышать продуктивность как никогда раньше.",
+	"greeting": "Добро пожаловать в Researcherry Coder!",
+	"introduction": "С набором встроенных и расширяемых Режимов, Researcherry Coder позволяет вам планировать, проектировать, писать код, отлаживать и повышать продуктивность как никогда раньше.",
 	"notice": "Для начала работы этому расширению нужен провайдер API.",
 	"start": "Поехали!",
 	"routers": {
@@ -16,7 +16,7 @@
 	"startRouter": "Мы рекомендуем использовать маршрутизатор LLM:",
 	"startCustom": "Или вы можете использовать свой собственный API-ключ:",
 	"telemetry": {
-		"title": "Помогите улучшить Roo Code",
+		"title": "Помогите улучшить Researcherry Coder",
 		"anonymousTelemetry": "Отправлять анонимные данные об ошибках и использовании, чтобы помочь нам исправлять баги и совершенствовать расширение. Код, промпты и личная информация никогда не отправляются.",
 		"changeSettings": "Вы всегда можете изменить это внизу страницы <settingsLink>настроек</settingsLink>",
 		"settings": "настройки",
