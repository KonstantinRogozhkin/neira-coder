#!/bin/bash

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
set -e

# –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–µ–π
validate_icons_after_patch() {
    echo "      üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–∫–æ–Ω–æ–∫..."
    local validation_failed=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    local icon_files=(
        "src/assets/icons/icon.png"
        "src/assets/icons/icon-nightly.png" 
        "src/assets/icons/icon.svg"
        "src/assets/icons/icon-nightly.svg"
    )
    
    for icon_file in "${icon_files[@]}"; do
        if [ -f "$icon_file" ]; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–Ω–æ–≤—ã–µ –∏–∫–æ–Ω–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–µ–Ω—å—à–µ —Å—Ç–∞—Ä—ã—Ö)
            file_size=$(stat -f%z "$icon_file" 2>/dev/null || stat -c%s "$icon_file" 2>/dev/null || echo 0)
            
            if [[ "$icon_file" == *.png ]]; then
                # PNG –∏–∫–æ–Ω–∫–∏: –Ω–æ–≤—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å 3-4KB (–Ω–µ 18KB –∫–∞–∫ —Å—Ç–∞—Ä—ã–µ)
                if [ "$file_size" -gt 10000 ]; then
                    echo "      ‚ùå $icon_file —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ($file_size bytes) - –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ä–∞—è –∏–∫–æ–Ω–∫–∞!"
                    validation_failed=true
                else
                    echo "      ‚úÖ $icon_file —Ä–∞–∑–º–µ—Ä OK ($file_size bytes)"
                fi
            elif [[ "$icon_file" == *.svg ]]; then
                # SVG –∏–∫–æ–Ω–∫–∏: –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ (–ø—Ä–∏–∑–Ω–∞–∫ –Ω–æ–≤–æ–π –∏–∫–æ–Ω–∫–∏)
                if grep -q "linearGradient\|researcherryGradient" "$icon_file"; then
                    echo "      ‚úÖ $icon_file —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω"
                else
                    echo "      ‚ùå $icon_file –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω - –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ä–∞—è –∏–∫–æ–Ω–∫–∞!"
                    validation_failed=true
                fi
            fi
        else
            echo "      ‚ùå $icon_file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            validation_failed=true
        fi
    done
    
    if [ "$validation_failed" = true ]; then
        echo "      üö® –í–ê–õ–ò–î–ê–¶–ò–Ø –ò–ö–û–ù–û–ö –ü–†–û–í–ê–õ–ï–ù–ê!"
        echo "      üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –∏–∑ src/assets/icons/ –≤—Ä—É—á–Ω—É—é"
        return 1
    else
        echo "      ‚úÖ –í—Å–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é"
        return 0
    fi
}

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
UPSTREAM_REPO="https://github.com/RooCodeInc/Roo-Code.git"
# –í–µ—Ç–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è UPSTREAM_REF
UPSTREAM_BRANCH="main"
# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–∏—Ç/—Ç–µ–≥ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ–π —Å–±–æ—Ä–∫–∏. –ú–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —á–µ—Ä–µ–∑ UPSTREAM_REF
# –ü—Ä–∏–º–µ—Ä: export UPSTREAM_REF="1a2b3c4d" –∏–ª–∏ "v3.31.0". –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è $UPSTREAM_BRANCH
UPSTREAM_REF="${UPSTREAM_REF:-$UPSTREAM_BRANCH}"
BUILD_DIR="build-src"
PATCHES_DIR="patches"

echo "=== –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–±–æ—Ä–∫–µ Researcherry ==="

# 1. –û—á–∏—Å—Ç–∫–∞
echo "-> –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–±–æ—Ä–æ—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
rm -rf $BUILD_DIR

# 2. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ upstream
echo "-> –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è roo-code ($UPSTREAM_REF)..."
git clone --depth 1 --branch "$UPSTREAM_BRANCH" "$UPSTREAM_REPO" "$BUILD_DIR"
if [ "$UPSTREAM_REF" != "$UPSTREAM_BRANCH" ]; then
    echo "-> –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ $UPSTREAM_REF"
    (cd "$BUILD_DIR" && git fetch --depth 1 origin "$UPSTREAM_REF" && git checkout --detach "$UPSTREAM_REF") || {
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ $UPSTREAM_REF, –æ—Å—Ç–∞–≤–ª—è–µ–º $UPSTREAM_BRANCH"
    }
fi

# 3. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–µ–π
echo "-> –ù–∞–ª–æ–∂–µ–Ω–∏–µ –ø–∞—Ç—á–µ–π..."
cd $BUILD_DIR

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∞—Ç—á–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
if [ -d "../$PATCHES_DIR" ] && [ "$(ls -A ../$PATCHES_DIR/*.patch 2>/dev/null)" ]; then
    echo "   –ù–∞–π–¥–µ–Ω—ã –ø–∞—Ç—á–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    patch_order=(
        "001-branding.patch"
        "002-documentation.patch"
        "003-configuration.patch"
        "004-rules-modes.patch"
        "005-source-code.patch"
        "006-tests.patch"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –ø–∞—Ç—á —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (< 100MB)
    if [ -f "../$PATCHES_DIR/007-general.patch" ]; then
        general_size=$(stat -f%z "../$PATCHES_DIR/007-general.patch" 2>/dev/null || stat -c%s "../$PATCHES_DIR/007-general.patch" 2>/dev/null || echo 0)
        if [ "$general_size" -lt 104857600 ]; then  # 100MB –≤ –±–∞–π—Ç–∞—Ö
            patch_order+=("007-general.patch")
        else
            echo "   ‚ö†Ô∏è 007-general.patch —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ($(echo "scale=1; $general_size/1048576" | bc 2>/dev/null || echo "?")MB), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ç—á–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    fix_patches=(
        "008-framer-motion-fix.patch"
        "009-workspace-fixes.patch"
        "013-updated-icon-fixes.patch"
        "012-new-logos-and-panels.patch"
    )
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
    critical_patches=(
        "001-branding.patch"
        "013-updated-icon-fixes.patch" 
        "012-new-logos-and-panels.patch"
    )
    
    for fix_patch in "${fix_patches[@]}"; do
        if [ -f "../$PATCHES_DIR/$fix_patch" ]; then
            patch_order+=("$fix_patch")
        fi
    done
    
    for patch_file in "${patch_order[@]}"; do
        if [ -f "../$PATCHES_DIR/$patch_file" ]; then
            echo "   -> –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ $patch_file"
            if git apply --ignore-whitespace --reject "../$PATCHES_DIR/$patch_file"; then
                echo "      ‚úÖ $patch_file –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            else
                echo "      ‚ö†Ô∏è $patch_file –ø—Ä–∏–º–µ–Ω–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ (–≤–æ–∑–º–æ–∂–Ω—ã .rej —Ñ–∞–π–ª—ã)"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—á–∏
                if [[ " ${critical_patches[*]} " =~ " ${patch_file} " ]]; then
                    echo "      üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–ê–¢–ß: $patch_file –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é!"
                    echo "      üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .rej —Ñ–∞–π–ª—ã –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—á–µ–π —Å –∏–∫–æ–Ω–∫–∞–º–∏
                    if [[ "$patch_file" == *"icon"* ]]; then
                        echo "      üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∫–æ–Ω–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞..."
                        validate_icons_after_patch
                    fi
                fi
            fi
        else
            echo "   -> ‚ö†Ô∏è –ü–∞—Ç—á $patch_file –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
    done
else
    echo "   ‚ö†Ô∏è –ü–∞—Ç—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $PATCHES_DIR"
fi

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "-> –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if command -v pnpm &> /dev/null; then
    pnpm install || echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å pnpm"
elif command -v npm &> /dev/null; then
    npm install || echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å npm"
else
    echo "‚ö†Ô∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω (pnpm –∏–ª–∏ npm)"
fi

# 5. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo "-> –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
if command -v pnpm &> /dev/null; then
    pnpm run build || echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Å pnpm"
elif command -v npm &> /dev/null; then
    npm run build || echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Å npm"
fi

echo ""
echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $BUILD_DIR"
echo ""
echo "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ VS Code"
echo "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É $BUILD_DIR"
echo "3. –ù–∞–∂–º–∏—Ç–µ F5 –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"