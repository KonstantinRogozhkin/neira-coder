# –ö–∞—Ä—Ç–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

*–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*

> –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è TypeScript (.ts, .tsx) –∏ Python (.py) —Ñ–∞–π–ª—ã

## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –æ–±–∑–æ—Ä

### üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:** 2412
- **–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:** 13908.7 KB
- **–§—É–Ω–∫—Ü–∏–π:** 1475 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–ö–ª–∞—Å—Å–æ–≤:** 26 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:** 338 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–¢–∏–ø–æ–≤:** 311 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–ö–æ–Ω—Å—Ç–∞–Ω—Ç:** 26222 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)

### üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤

**–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:** 829 —Ñ–∞–π–ª–æ–≤
**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** 134 —Ñ–∞–π–ª–æ–≤
**–¢–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:** 414 —Ñ–∞–π–ª–æ–≤
**–û–±—â–∏–π –∫–æ–¥:** 480 —Ñ–∞–π–ª–æ–≤
**–ö–ª–∞—Å—Å—ã:** 402 —Ñ–∞–π–ª–æ–≤
**API:** 8 —Ñ–∞–π–ª–æ–≤
**–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å:** 117 —Ñ–∞–π–ª–æ–≤
**–£—Ç–∏–ª–∏—Ç—ã:** 23 —Ñ–∞–π–ª–æ–≤
**–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö:** 5 —Ñ–∞–π–ª–æ–≤

### üîó –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã

### üìÇ webview-ui

#### üìÑ vitest.config.ts

#### üìÑ vite.config.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGitSha()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `wasmPlugin(): Plugin` (—Å—Ç—Ä–æ–∫–∞ 22)
- `persistPortPlugin(): Plugin` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasmPlugin = (): Plugin => ({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `wasmBinary = await import(id)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `wasmModule = new WebAssembly.Module(${wasmBinary.default})` (—Å—Ç—Ä–æ–∫–∞ 29)
- `persistPortPlugin = (): Plugin => ({` (—Å—Ç—Ä–æ–∫–∞ 36)
- `address = viteDevServer?.httpServer?.address()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `port = address && typeof address === "object" ? address.port : null` (—Å—Ç—Ä–æ–∫–∞ 41)
- `pkg = JSON.parse(fs.readFileSync(path.join(__dirname, "..", "src", "package.json"), "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `gitSha = getGitSha()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `nightlyPkg = JSON.parse(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `moduleInfo = getModuleInfo(id)` (—Å—Ç—Ä–æ–∫–∞ 168)

### üìÇ src

#### üìÑ vitest.setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalConsoleLog = console.log` (—Å—Ç—Ä–æ–∫–∞ 21)
- `originalConsoleWarn = console.warn` (—Å—Ç—Ä–æ–∫–∞ 22)
- `originalConsoleInfo = console.info` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ vitest.config.ts

#### üìÑ extension.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `postStateListener()` (—Å—Ç—Ä–æ–∫–∞ 86)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `envPath = path.join(__dirname, "..", ".env")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `telemetryService = TelemetryService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `cloudLogger = createDualLogger(createOutputChannelLogger(outputChannel))` (—Å—Ç—Ä–æ–∫–∞ 82)
- `cloudService = await CloudService.createInstance(context, cloudLogger)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `postStateListener = () => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `mdmService = await MdmService.createInstance(cloudLogger)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `defaultCommands = vscode.workspace.getConfiguration(Package.name).get<string[]>("allowedCommands") || []` (—Å—Ç—Ä–æ–∫–∞ 105)
- `contextProxy = await ContextProxy.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `provider = new ClineProvider(context, outputChannel, "sidebar", contextProxy, codeIndexManager, mdmService)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `diffContentProvider = new (class implements vscode.TextDocumentContentProvider {` - We use the text document content provider API to show the left side for diff view by creating a virtual document for the original content. This makes it readonly so users know to edit the right side if they want to keep their changes. This API allows you to create readonly documents in VSCode from arbitrary sources, and works by claiming an uri-scheme for which your provider then returns text contents. The scheme must be provided when registering a provider and cannot change afterwards. Note how the provider doesn't create uris for virtual documents - its role is to provide contents given such an uri. In return, content providers are wired into the open document logic so that providers are always considered. https://code.visualstudio.com/api/extension-guides/virtual-documents (—Å—Ç—Ä–æ–∫–∞ 168)
- `socketPath = process.env.NEIRA_CODE_IPC_SOCKET_PATH` (—Å—Ç—Ä–æ–∫–∞ 194)
- `enableLogging = typeof socketPath === "string"` (—Å—Ç—Ä–æ–∫–∞ 195)
- `pattern = "**/*.ts"` (—Å—Ç—Ä–æ–∫–∞ 199)
- `watchPaths = [` (—Å—Ç—Ä–æ–∫–∞ 201)
- `watcher = vscode.workspace.createFileSystemWatcher(new vscode.RelativePattern(watchPath, pattern))` (—Å—Ç—Ä–æ–∫–∞ 213)

### üìÇ webview-ui/src

#### üìÑ vite-env.d.ts

#### üìÑ types.d.ts

#### üìÑ index.tsx

#### üìÑ App.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `App()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `AppWithProviders()` (—Å—Ç—Ä–æ–∫–∞ 301)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface HumanRelayDialogState` (—Å—Ç—Ä–æ–∫–∞ 31)

- `interface DeleteMessageDialogState` (—Å—Ç—Ä–æ–∫–∞ 37)

- `interface EditMessageDialogState` (—Å—Ç—Ä–æ–∫–∞ 42)

**–¢–∏–ø—ã:**

- `type Tab` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MemoizedDeleteMessageDialog = React.memo(DeleteMessageDialog)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `MemoizedEditMessageDialog = React.memo(EditMessageDialog)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `MemoizedHumanRelayDialog = React.memo(HumanRelayDialog)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `App = () => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `marketplaceStateManager = useMemo(() => new MarketplaceViewStateManager(), [])` (—Å—Ç—Ä–æ–∫–∞ 80)
- `settingsRef = useRef<SettingsViewRef>(null)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `chatViewRef = useRef<ChatViewRef>(null)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `switchTab = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 128)
- `targetTab = message.tab as Tab` (—Å—Ç—Ä–æ–∫–∞ 135)
- `newTab = tabsByMessageAction[message.action]` (—Å—Ç—Ä–æ–∫–∞ 141)
- `section = message.values?.section as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 142)
- `marketplaceTab = message.values?.marketplaceTab as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 143)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 299)
- `AppWithProviders = () => (` (—Å—Ç—Ä–æ–∫–∞ 301)

### üìÇ src/workers

#### üìÑ types.ts

#### üìÑ countTokens.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async countTokens(content: A): Promise<CountTokensResult>` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `count = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ src/utils

#### üìÑ xml.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `_stopNodes = stopNodes ?? []` - Parses an XML string into a JavaScript object (—Å—Ç—Ä–æ–∫–∞ 10)
- `parser = new XMLParser({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 24)

#### üìÑ xml-matcher.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `last = this.chunks.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `data = this.cached.join("")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `matched = this.matched` (—Å—Ç—Ä–æ–∫–∞ 24)
- `chunks = this.chunks` (—Å—Ç—Ä–æ–∫–∞ 36)

#### üìÑ tts.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async processQueue(): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface Say` (—Å—Ç—Ä–æ–∫–∞ 1)

**–¢–∏–ø—ã:**

- `type PlayTtsOptions` (—Å—Ç—Ä–æ–∫–∞ 6)
- `type QueueItem` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `processQueue = async (): Promise<void> => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `item = queue.shift()` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ tiktoken.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TOKEN_FUDGE_FACTOR = 1.5` (—Å—Ç—Ä–æ–∫–∞ 5)
- `text = block.text || ""` (—Å—Ç—Ä–æ–∫–∞ 24)
- `tokens = encoder.encode(text)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `imageSource = block.source` (—Å—Ç—Ä–æ–∫–∞ 32)
- `base64Data = imageSource.data as string` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ text-normalization.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `opts = { ...DEFAULT_OPTIONS, ...options }` - Normalizes a string based on the specified options (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ storage.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `testFile = path.join(customStoragePath, ".write_test")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the storage directory path for a task (—Å—Ç—Ä–æ–∫–∞ 55)
- `taskDir = path.join(basePath, "tasks", taskId)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the settings directory path (—Å—Ç—Ä–æ–∫–∞ 65)
- `settingsDir = path.join(basePath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the cache directory path (—Å—Ç—Ä–æ–∫–∞ 75)
- `cacheDir = path.join(basePath, "cache")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `currentConfig = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await vscode.window.showInputBox({` (—Å—Ç—Ä–æ–∫–∞ 100)
- `currentConfig = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 128)

#### üìÑ single-completion-handler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handler = buildApiHandler(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ shell.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getWindowsTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `getMacTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `getLinuxTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 68)
- `getWindowsShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on Windows. (—Å—Ç—Ä–æ–∫–∞ 84)
- `getMacShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on macOS. (—Å—Ç—Ä–æ–∫–∞ 122)
- `getLinuxShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on Linux. (—Å—Ç—Ä–æ–∫–∞ 133)
- `getShellFromUserInfo(): string | null` - Tries to get a user‚Äôs shell from os.userInfo() (works on Unix if the underlying system call is supported). Returns null on error or if not found. (—Å—Ç—Ä–æ–∫–∞ 151)
- `getShellFromEnv(): string | null` - Returns the environment-based shell variable, or null if not set. (—Å—Ç—Ä–æ–∫–∞ 161)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MacTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 23)

- `interface WindowsTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 29)

- `interface LinuxTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 36)

**–¢–∏–ø—ã:**

- `type MacTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 27)
- `type WindowsTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 34)
- `type LinuxTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SHELL_PATHS = {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultProfileName = config.get<string>("defaultProfile.windows")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `profiles = config.get<WindowsTerminalProfiles>("profiles.windows") || {}` (—Å—Ç—Ä–æ–∫–∞ 50)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 59)
- `defaultProfileName = config.get<string>("defaultProfile.osx")` (—Å—Ç—Ä–æ–∫–∞ 60)
- `profiles = config.get<MacTerminalProfiles>("profiles.osx") || {}` (—Å—Ç—Ä–æ–∫–∞ 61)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `defaultProfileName = config.get<string>("defaultProfile.linux")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `profiles = config.get<LinuxTerminalProfiles>("profiles.linux") || {}` (—Å—Ç—Ä–æ–∫–∞ 72)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 90)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `windowsShell = getWindowsShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 189)
- `macShell = getMacShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `linuxShell = getLinuxShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `userInfoShell = getShellFromUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `envShell = getShellFromEnv()` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ safeWriteJson.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async safeWriteJson(filePath: s, data: a): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 21)
- `async releaseLock()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `async _streamDataToFile(targetPath: s, data: a): Promise<void>` - Helper function to stream JSON data to a file. (—Å—Ç—Ä–æ–∫–∞ 187)
- `handleError(_streamName: s)` (—Å—Ç—Ä–æ–∫–∞ 196)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absoluteFilePath = path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `dirPath = path.dirname(absoluteFilePath)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `newFileToCleanupWithinCatch = actualTempNewFilePath` (—Å—Ç—Ä–æ–∫–∞ 126)
- `backupFileToRollbackOrCleanupWithinCatch = actualTempBackupFilePath` (—Å—Ç—Ä–æ–∫–∞ 127)
- `fileWriteStream = fsSync.createWriteStream(targetPath, { encoding: "utf8" })` (—Å—Ç—Ä–æ–∫–∞ 189)
- `disassembler = Disassembler.disassembler()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `stringer = Stringer.stringer()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `handleError = (_streamName: string) => (err: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 196)

#### üìÑ pathUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `folderPath = folder.uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ path.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toPosixPath(p: s)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `normalizePath(p: s): string` (—Å—Ç—Ä–æ–∫–∞ 71)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface String` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isExtendedLengthPath = p.startsWith("\\\\?\\")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `absolutePath = path.resolve(cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `normalizedRelPath = path.relative(cwd, absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `relativePath = path.relative(cwd, filePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `cwdPath = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0) || defaultCwdPath` (—Å—Ç—Ä–æ–∫–∞ 110)
- `currentFileUri = vscode.window.activeTextEditor?.document.uri` (—Å—Ç—Ä–æ–∫–∞ 111)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(currentFileUri)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(vscode.Uri.file(contextPath))` (—Å—Ç—Ä–æ–∫–∞ 122)

#### üìÑ outputChannelLogger.ts

#### üìÑ object.ts

#### üìÑ migrateSettings.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async migrateCustomModesToYaml(settingsDir: s, outputChannel: v): Promise<void>` - Special migration function to convert custom_modes.json to YAML format (—Å—Ç—Ä–æ–∫–∞ 69)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `deprecatedCustomModesJSONFilename = "custom_modes.json"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `fileMigrations = [` (—Å—Ç—Ä–æ–∫–∞ 20)
- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `oldPath = path.join(settingsDir, migration.oldName)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `newPath = path.join(settingsDir, migration.newName)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `oldFileExists = await fileExistsAtPath(oldPath)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `newFileExists = await fileExistsAtPath(newPath)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `oldJsonPath = path.join(settingsDir, deprecatedCustomModesJSONFilename)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newYamlPath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `jsonExists = await fileExistsAtPath(oldJsonPath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `yamlExists = await fileExistsAtPath(newYamlPath)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `jsonContent = await fs.readFile(oldJsonPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `customModesData = yaml.parse(jsonContent)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `yamlContent = yaml.stringify(customModesData, { lineWidth: 0 })` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ globalContext.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ git.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async checkGitRepo(cwd: s): Promise<boolean>` (—Å—Ç—Ä–æ–∫–∞ 204)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `execAsync = promisify(exec)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `GIT_OUTPUT_LINE_LIMIT = 500` (—Å—Ç—Ä–æ–∫–∞ 9)
- `gitDir = path.join(workspaceRoot, ".git")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `configPath = path.join(gitDir, "config")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `configContent = await fs.readFile(configPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `urlMatch = configContent.match(/url\s*=\s*(.+?)(?:\r?\n|$)/m)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `url = urlMatch[1].trim()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `repositoryName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `branchMatch = configContent.match(/\[branch "([^"]+)"\]/i)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `headPath = path.join(gitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `headContent = await fs.readFile(headPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `branchMatch = headContent.match(/ref: refs\/heads\/(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `match = url.match(/git@([^:]+):(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `match = url.match(/ssh:\/\/(?:git@)?([^\/]+)\/(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `urlObj = new URL(url)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `patterns = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `match = url.match(pattern)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `workspaceFolders = vscode.workspace.workspaceFolders` - Gets git repository information for the current VSCode workspace (—Å—Ç—Ä–æ–∫–∞ 194)
- `workspaceRoot = workspaceFolders[0].uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 200)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `lines = output` (—Å—Ç—Ä–æ–∫–∞ 267)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 291)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `summary = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `output = summary + "\n\n" + diff.trim()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 332)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `lineLimit = GIT_OUTPUT_LINE_LIMIT` (—Å—Ç—Ä–æ–∫–∞ 350)
- `output = `Working directory changes:\n\n${status}\n\n${diff}`.trim()` (—Å—Ç—Ä–æ–∫–∞ 351)

#### üìÑ fs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `normalizedFilePath = path.normalize(filePath) // Normalize path for cross-platform compatibility` (—Å—Ç—Ä–æ–∫–∞ 13)
- `directoryPath = path.dirname(normalizedFilePath)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ focusPanel.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `panel = tabPanel || sidebarPanel` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ countTokens.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `data = await pool.exec("countTokens", [content])` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = countTokensResultSchema.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ config.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isObject = typeof config === "object"` (—Å—Ç—Ä–æ–∫–∞ 40)
- `nestedValue = value[name]` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ commands.ts

#### üìÑ autoImportSettings.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `resolvePath(settingsPath: s): string` - Resolves a file path, handling home directory expansion and relative paths (—Å—Ç—Ä–æ–∫–∞ 71)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsPath = vscode.workspace.getConfiguration(Package.name).get<string>("autoImportSettingsPath")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `resolvedPath = resolvePath(settingsPath.trim())` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await importSettingsFromPath(resolvedPath, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 60)

### üìÇ src/shared

#### üìÑ vsCodeSelectorUtils.ts

#### üìÑ tools.ts

#### üìÑ todo.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `todos = clineMessages` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ support-prompt.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `generateDiagnosticText()` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SupportPromptConfig` (—Å—Ç—Ä–æ–∫–∞ 32)

**–¢–∏–ø—ã:**

- `type PromptParams` (—Å—Ç—Ä–æ–∫–∞ 2)
- `type SupportPromptType` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `generateDiagnosticText = (diagnostics?: any[]) => {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `value = params[key]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `template = supportPrompt.get(customSupportPrompts, type)` (—Å—Ç—Ä–æ–∫–∞ 185)

#### üìÑ safeJsonParse.ts

#### üìÑ package.ts

#### üìÑ modes.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGroupOptions(group: G): GroupOptions | undefined` (—Å—Ç—Ä–æ–∫–∞ 47)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `regex = new RegExp(pattern)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `tools = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `groupConfig = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 69)
- `customMode = customModes?.find((mode) => mode.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mode = getModeBySlug(slug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `allModes = [...modes]` (—Å—Ç—Ä–æ–∫–∞ 111)
- `index = allModes.findIndex((mode) => mode.slug === customMode.slug)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `customMode = findModeBySlug(mode, customModes)` - Get the mode selection based on the provided mode slug, prompt component, and custom modes. If a custom mode is found, it takes precedence over the built-in modes. If no custom mode is found, the built-in mode is used with partial merging from promptComponent. If neither is found, the default mode is used. (—Å—Ç—Ä–æ–∫–∞ 147)
- `builtInMode = findModeBySlug(mode, modes)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `baseMode = builtInMode || modes[0] // fallback to default mode` (—Å—Ç—Ä–æ–∫–∞ 160)
- `EDIT_OPERATION_PARAMS = ["diff", "content", "operations", "search", "replace", "args", "line"] as const` (—Å—Ç—Ä–æ–∫–∞ 170)
- `toolInfo = tool ? `Tool '${tool}' in mode '${mode}'` : `This mode (${mode})`` (—Å—Ç—Ä–æ–∫–∞ 175)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `options = getGroupOptions(group)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `groupConfig = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 221)
- `filePath = toolParams?.path` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isEditOperation = EDIT_OPERATION_PARAMS.some((param) => toolParams?.[param])` (—Å—Ç—Ä–æ–∫–∞ 237)
- `filePathMatches = toolParams.args.match(/<path>([^<]+)<\/path>/g)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `pathMatch = match.match(/<path>([^<]+)<\/path>/)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `extractedPath = pathMatch[1].trim()` (—Å—Ç—Ä–æ–∫–∞ 254)
- `customModes = (await context.globalState.get<ModeConfig[]>("customModes")) || []` (—Å—Ç—Ä–æ–∫–∞ 304)
- `customModePrompts = (await context.globalState.get<CustomModePrompts>("customModePrompts")) || {}` (—Å—Ç—Ä–æ–∫–∞ 305)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `baseMode = getModeBySlug(modeSlug, customModes) || modes.find((m) => m.slug === modeSlug) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 329)
- `promptComponent = customModePrompts?.[modeSlug]` (—Å—Ç—Ä–æ–∫–∞ 332)
- `baseCustomInstructions = promptComponent?.customInstructions || baseMode.customInstructions || ""` (—Å—Ç—Ä–æ–∫–∞ 335)
- `baseWhenToUse = promptComponent?.whenToUse || baseMode.whenToUse || ""` (—Å—Ç—Ä–æ–∫–∞ 336)
- `baseDescription = promptComponent?.description || baseMode.description || ""` (—Å—Ç—Ä–æ–∫–∞ 337)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 363)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 393)

#### üìÑ mcp.ts

#### üìÑ language.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formattedLocale = vscodeLocale.replace(/-(\w+)$/, (_, region) => `-${region.toUpperCase()}`)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ globalFileNames.ts

#### üìÑ getApiMetrics.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `message = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ experiments.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ExperimentConfig` (—Å—Ç—Ä–æ–∫–∞ 13)

**–¢–∏–ø—ã:**

- `type _AssertExperimentIds` (—Å—Ç—Ä–æ–∫–∞ 9)
- `type ExperimentKey` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ embeddingModels.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the embedding dimension for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 65)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the score threshold for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 88)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 93)
- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the query prefix for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 104)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 109)
- `ollamaModels = EMBEDDING_MODEL_PROFILES.ollama` (—Å—Ç—Ä–æ–∫–∞ 129)
- `defaultOllamaModel = ollamaModels && Object.keys(ollamaModels)[0]` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ cost.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cacheWritesCost = ((modelInfo.cacheWritesPrice || 0) / 1_000_000) * cacheCreationInputTokens` (—Å—Ç—Ä–æ–∫–∞ 10)
- `cacheReadsCost = ((modelInfo.cacheReadsPrice || 0) / 1_000_000) * cacheReadInputTokens` (—Å—Ç—Ä–æ–∫–∞ 11)
- `baseInputCost = ((modelInfo.inputPrice || 0) / 1_000_000) * inputTokens` (—Å—Ç—Ä–æ–∫–∞ 12)
- `outputCost = ((modelInfo.outputPrice || 0) / 1_000_000) * outputTokens` (—Å—Ç—Ä–æ–∫–∞ 13)
- `totalCost = cacheWritesCost + cacheReadsCost + baseInputCost + outputCost` (—Å—Ç—Ä–æ–∫–∞ 14)
- `cacheCreationInputTokensNum = cacheCreationInputTokens || 0` (—Å—Ç—Ä–æ–∫–∞ 44)
- `cacheReadInputTokensNum = cacheReadInputTokens || 0` (—Å—Ç—Ä–æ–∫–∞ 45)
- `nonCachedInputTokens = Math.max(0, inputTokens - cacheCreationInputTokensNum - cacheReadInputTokensNum)` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ context-mentions.ts

#### üìÑ combineCommandSequences.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `combinedMessages = new Map<number, ClineMessage>()` - Combines sequences of command and command_output messages in an array of ClineMessages. Also combines sequences of use_mcp_server and mcp_server_response messages. This function processes an array of ClineMessages objects, looking for sequences where a 'command' message is followed by one or more 'command_output' messages, or where a 'use_mcp_server' message is followed by one or more 'mcp_server_response' messages. When such a sequence is found, it combines them into a single message, merging their text contents. (—Å—Ç—Ä–æ–∫–∞ 29)
- `processedIndices = new Set<number>()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `msg = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `jsonObj = safeJsonParse<any>(msg.text || "{}", {})` (—Å—Ç—Ä–æ–∫–∞ 57)
- `combinedText = JSON.stringify(jsonObj)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `isDuplicate = previous && previous.type !== type && previous.text === text` (—Å—Ç—Ä–æ–∫–∞ 90)
- `msg = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ combineApiRequests.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `startIndex = startedIndices.length > 0 ? startedIndices.pop() : undefined` (—Å—Ç—Ä–æ–∫–∞ 60)
- `startMessage = result[startIndex]` (—Å—Ç—Ä–æ–∫–∞ 63)

#### üìÑ checkExistApiConfig.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasSecretKey = SECRET_STATE_KEYS.some((key) => config[key] !== undefined)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `hasOtherConfig = [` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ array.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `index = findLastIndex(array, predicate)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ api.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerNames = ["openrouter", "requesty", "glama", "unbound", "litellm", "ollama", "lmstudio"] as const` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ WebviewMessage.ts

#### üìÑ TelemetrySetting.ts

#### üìÑ ProfileValidator.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.getModelIdFromProfile(profile)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `providerAllowList = allowList.providers[providerName]` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ ExtensionMessage.ts

### üìÇ src/i18n

#### üìÑ setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isTestEnv = process.env.NODE_ENV === "test"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `localesDir = path.join(__dirname, "i18n", "locales")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `languageDirs = fs.readdirSync(localesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 20)
- `languages = languageDirs` (—Å—Ç—Ä–æ–∫–∞ 22)
- `langPath = path.join(localesDir, language)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `files = fs.readdirSync(langPath).filter((file: string) => file.endsWith(".json"))` (—Å—Ç—Ä–æ–∫–∞ 31)
- `namespace = path.basename(file, ".json")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `filePath = path.join(langPath, file)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `content = fs.readFileSync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 45)

#### üìÑ index.ts

### üìÇ src/extension

#### üìÑ api.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ipc = (this.ipc = new IpcServer(socketPath, this.log))` (—Å—Ç—Ä–æ–∫–∞ 62)
- `data = { eventName: eventName as NeiraCoderEventName, payload: args } as TaskEvent` (—Å—Ç—Ä–æ–∫–∞ 91)
- `cline = await provider.initClineWithTask(text, images, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 152)
- `provider = this.taskMap.get(taskId)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile ?? {}, activate)` (—Å—Ç—Ä–æ–∫–∞ 354)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile, activate)` (—Å—Ç—Ä–æ–∫–∞ 374)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile, activate)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 398)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 412)

### üìÇ src/api

#### üìÑ index.ts

### üìÇ src/activate

#### üìÑ registerTerminalActions.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `registerTerminalAction = (` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ registerCommands.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCommandsMap(): Record<CommandId, any>` (—Å—Ç—Ä–æ–∫–∞ 75)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `visibleProvider = ClineProvider.getVisibleInstance()` - Helper to get the visible ClineProvider instance or log if not found. (—Å—Ç—Ä–æ–∫–∞ 24)
- `command = getCommand(id as CommandId)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `getCommandsMap = ({ context, outputChannel, provider }: RegisterCommandOptions): Record<CommandId, any> => ({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `panel = getPanel()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 178)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `contextProxy = await ContextProxy.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `tabProvider = new ClineProvider(context, outputChannel, "editor", contextProxy, codeIndexManager, mdmService)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `lastCol = Math.max(...vscode.window.visibleTextEditors.map((editor) => editor.viewColumn || 0))` (—Å—Ç—Ä–æ–∫–∞ 257)
- `hasVisibleEditors = vscode.window.visibleTextEditors.length > 0` (—Å—Ç—Ä–æ–∫–∞ 261)
- `targetCol = hasVisibleEditors ? Math.max(lastCol + 1, 1) : vscode.ViewColumn.Two` (—Å—Ç—Ä–æ–∫–∞ 267)
- `newPanel = vscode.window.createWebviewPanel(ClineProvider.tabPanelId, "Neira Coder", targetCol, {` (—Å—Ç—Ä–æ–∫–∞ 269)
- `panel = e.webviewPanel` (—Å—Ç—Ä–æ–∫–∞ 290)

#### üìÑ registerCodeActions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `registerCodeAction(context: v, command: C, promptType: C)` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `registerCodeAction = (context: vscode.ExtensionContext, command: CodeActionId, promptType: CodeActionName) => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `context = EditorUtils.getEditorContext()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `params = {` (—Å—Ç—Ä–æ–∫–∞ 42)

#### üìÑ index.ts

#### üìÑ humanRelay.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `humanRelayCallbacks = new Map<string, (response: string | undefined) => void>()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `callback = humanRelayCallbacks.get(response.requestId)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ handleUri.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `path = uri.path` (—Å—Ç—Ä–æ–∫–∞ 8)
- `query = new URLSearchParams(uri.query.replace(/\+/g, "%2B"))` (—Å—Ç—Ä–æ–∫–∞ 9)
- `visibleProvider = ClineProvider.getVisibleInstance()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 18)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `state = query.get("state")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `organizationId = query.get("organizationId")` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ handleTask.ts

#### üìÑ CodeActionProvider.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `action = new vscode.CodeAction(title, kind)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `effectiveRange = EditorUtils.getEffectiveRange(document, range)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `filePath = EditorUtils.getFilePath(document)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `relevantDiagnostics = context.diagnostics.filter((d) =>` (—Å—Ç—Ä–æ–∫–∞ 63)

### üìÇ src/__tests__

#### üìÑ migrateSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = "/mock/storage"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockSettingsDir = path.join(mockStoragePath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `legacyCustomModesJson = path.join(mockSettingsDir, "custom_modes.json")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `legacyClineCustomModesPath = path.join(mockSettingsDir, "cline_custom_modes.json")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `legacyMcpSettingsPath = path.join(mockSettingsDir, "cline_mcp_settings.json")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `newCustomModesYaml = path.join(mockSettingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `newMcpSettingsPath = path.join(mockSettingsDir, GlobalFileNames.mcpSettings)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `testJsonContent = JSON.stringify({ customModes: [{ slug: "test-mode", name: "Test Mode" }] })` (—Å—Ç—Ä–æ–∫–∞ 143)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ dist_assets.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `distPath = path.join(__dirname, "../dist")` (—Å—Ç—Ä–æ–∫–∞ 7)
- `treeSitterFiles = [` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ commands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `commands = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `names = await getCommandNames(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `result = await getCommand(testCwd, "non-existent")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `commands1 = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `commands2 = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 83)

#### üìÑ command-mentions.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async callParseMentions(text: s)` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedUrlContentFetcher = vi.mocked(UrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGetCommand = vi.mocked(getCommand)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `callParseMentions = async (text: string) => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `commandContent = "# Setup Environment\n\nRun the following commands:\n```bash\nnpm install\n```"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `input = "/setup Please help me set up the project"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `setupContent = "# Setup Environment\n\nRun the following commands:\n```bash\nnpm install\n```"` (—Å—Ç—Ä–æ–∫–∞ 65)
- `deployContent = "# Deploy Environment\n\nRun the following commands:\n```bash\nnpm run deploy\n```"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `input = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `input = "/nonexistent command"` (—Å—Ç—Ä–æ–∫–∞ 111)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `input = "/error-command test"` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `input = "/error-command test"` (—Å—Ç—Ä–æ–∫–∞ 144)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `input = "/setup-dev for the project"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 161)
- `commandContent = `# Complex Command` (—Å—Ç—Ä–æ–∫–∞ 169)
- `input = "/complex command"` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `input = "/empty command"` (—Å—Ç—Ä–æ–∫–∞ 211)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 222)
- `validPatterns = ["/setup", "/build-prod", "/test_suite", "/my-command", "/command123"]` (—Å—Ç—Ä–æ–∫–∞ 224)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 234)
- `validPatterns = ["Please /setup", "Run /build now", "Use /deploy here"]` (—Å—Ç—Ä–æ–∫–∞ 236)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 246)
- `multilineText = "First line\n/setup the project\nAnother line\n/deploy when ready"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `matches = multilineText.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `commandRegex = /(?:^|\s)\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 259)
- `validText = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `matches = validText.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 262)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 271)
- `invalidPatterns = ["/ space", "/with space", "/with/slash", "//double", "/with@symbol"]` (—Å—Ç—Ä–æ–∫–∞ 273)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `input = "/setup the project"` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `input = "/nonexistent the project"` (—Å—Ç—Ä–æ–∫–∞ 303)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `input = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 325)

#### üìÑ command-integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testWorkspaceDir = path.join(__dirname, "../../")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `commands = await getCommands(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `commandNames = await getCommandNames(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `commands = await getCommands(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `firstCommand = commands[0]` (—Å—Ç—Ä–æ–∫–∞ 41)
- `loadedCommand = await getCommand(testWorkspaceDir, firstCommand.name)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `nonExistentCommand = await getCommand(testWorkspaceDir, "non-existent-command")` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ packages/types

#### üìÑ vitest.config.ts

#### üìÑ tsup.config.ts

### üìÇ packages/telemetry

#### üìÑ vitest.config.ts

### üìÇ packages/evals

#### üìÑ vitest.config.ts

#### üìÑ vitest-global-setup.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async resetTestDatabase()` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `db = testDb` (—Å—Ç—Ä–æ–∫–∞ 6)
- `tables = await db.execute<{ table_name: string }>(sql`` (—Å—Ç—Ä–æ–∫–∞ 14)
- `tableNames = tables.map((t) => t.table_name)` (—Å—Ç—Ä–æ–∫–∞ 21)

#### üìÑ drizzle.config.ts

### üìÇ packages/cloud

#### üìÑ vitest.config.ts

### üìÇ build-src/webview-ui

#### üìÑ vitest.config.ts

#### üìÑ vite.config.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGitSha()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `wasmPlugin(): Plugin` (—Å—Ç—Ä–æ–∫–∞ 22)
- `persistPortPlugin(): Plugin` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasmPlugin = (): Plugin => ({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `wasmBinary = await import(id)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `wasmModule = new WebAssembly.Module(${wasmBinary.default})` (—Å—Ç—Ä–æ–∫–∞ 29)
- `persistPortPlugin = (): Plugin => ({` (—Å—Ç—Ä–æ–∫–∞ 36)
- `address = viteDevServer?.httpServer?.address()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `port = address && typeof address === "object" ? address.port : null` (—Å—Ç—Ä–æ–∫–∞ 41)
- `pkg = JSON.parse(fs.readFileSync(path.join(__dirname, "..", "src", "package.json"), "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `gitSha = getGitSha()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `nightlyPkg = JSON.parse(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `moduleInfo = getModuleInfo(id)` (—Å—Ç—Ä–æ–∫–∞ 168)

### üìÇ build-src/src

#### üìÑ vitest.setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalConsoleLog = console.log` (—Å—Ç—Ä–æ–∫–∞ 21)
- `originalConsoleWarn = console.warn` (—Å—Ç—Ä–æ–∫–∞ 22)
- `originalConsoleInfo = console.info` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ vitest.config.ts

#### üìÑ extension.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `postStateListener()` (—Å—Ç—Ä–æ–∫–∞ 86)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `envPath = path.join(__dirname, "..", ".env")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `telemetryService = TelemetryService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `cloudLogger = createDualLogger(createOutputChannelLogger(outputChannel))` (—Å—Ç—Ä–æ–∫–∞ 82)
- `cloudService = await CloudService.createInstance(context, cloudLogger)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `postStateListener = () => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `mdmService = await MdmService.createInstance(cloudLogger)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `defaultCommands = vscode.workspace.getConfiguration(Package.name).get<string[]>("allowedCommands") || []` (—Å—Ç—Ä–æ–∫–∞ 105)
- `contextProxy = await ContextProxy.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `provider = new ClineProvider(context, outputChannel, "sidebar", contextProxy, codeIndexManager, mdmService)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `diffContentProvider = new (class implements vscode.TextDocumentContentProvider {` - We use the text document content provider API to show the left side for diff view by creating a virtual document for the original content. This makes it readonly so users know to edit the right side if they want to keep their changes. This API allows you to create readonly documents in VSCode from arbitrary sources, and works by claiming an uri-scheme for which your provider then returns text contents. The scheme must be provided when registering a provider and cannot change afterwards. Note how the provider doesn't create uris for virtual documents - its role is to provide contents given such an uri. In return, content providers are wired into the open document logic so that providers are always considered. https://code.visualstudio.com/api/extension-guides/virtual-documents (—Å—Ç—Ä–æ–∫–∞ 168)
- `socketPath = process.env.NEIRA_CODE_IPC_SOCKET_PATH` (—Å—Ç—Ä–æ–∫–∞ 194)
- `enableLogging = typeof socketPath === "string"` (—Å—Ç—Ä–æ–∫–∞ 195)
- `pattern = "**/*.ts"` (—Å—Ç—Ä–æ–∫–∞ 199)
- `watchPaths = [` (—Å—Ç—Ä–æ–∫–∞ 201)
- `watcher = vscode.workspace.createFileSystemWatcher(new vscode.RelativePattern(watchPath, pattern))` (—Å—Ç—Ä–æ–∫–∞ 213)

### üìÇ apps/web-neira-coder

#### üìÑ tailwind.config.ts

#### üìÑ next.config.ts

#### üìÑ next-env.d.ts

### üìÇ apps/web-evals

#### üìÑ vitest.config.ts

#### üìÑ next.config.ts

#### üìÑ next-env.d.ts

### üìÇ webview-ui/src/vite-plugins

#### üìÑ sourcemapPlugin.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mode = process.env.NODE_ENV` (—Å—Ç—Ä–æ–∫–∞ 21)
- `assetsDir = path.join(outDir, "assets")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `jsFiles = fs.readdirSync(assetsDir).filter((file) => file.endsWith(".js"))` (—Å—Ç—Ä–æ–∫–∞ 47)
- `jsPath = path.join(assetsDir, jsFile)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `mapPath = jsPath + ".map"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mapContent = JSON.parse(fs.readFileSync(mapPath, "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 76)

### üìÇ webview-ui/src/utils

#### üìÑ validate.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `validateModelsAndKeysProvided(apiConfiguration: P): string | undefined` (—Å—Ç—Ä–æ–∫–∞ 28)
- `getModelIdForProvider(apiConfiguration: P, provider: s): string | undefined` (—Å—Ç—Ä–æ–∫–∞ 161)

**–¢–∏–ø—ã:**

- `type ValidationError` (—Å—Ç—Ä–æ–∫–∞ 123)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `keysAndIdsPresentErrorMessage = validateModelsAndKeysProvided(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `organizationAllowListError = validateProviderAgainstOrganizationSettings(` (—Å—Ç—Ä–æ–∫–∞ 17)
- `provider = apiConfiguration.apiProvider` (—Å—Ç—Ä–æ–∫–∞ 133)
- `providerConfig = organizationAllowList.providers[provider]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `modelId = getModelIdForProvider(apiConfiguration, provider)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `allowedModels = providerConfig.models || []` (—Å—Ç—Ä–æ–∫–∞ 146)
- `arnRegex = /^arn:aws:(?:bedrock|sagemaker):([^:]+):([^:]*):(?:([^/]+)\/([\w.\-:]+)|([^/]+))$/` (—Å—Ç—Ä–æ–∫–∞ 196)
- `match = arn.match(arnRegex)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `arnRegion = match[1]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `provider = apiConfiguration.apiProvider ?? ""` (—Å—Ç—Ä–æ–∫–∞ 224)
- `models = routerModels?.[provider]` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelId = getModelIdForProvider(apiConfiguration, apiConfiguration.apiProvider || "")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `configWithModelId = {` (—Å—Ç—Ä–æ–∫–∞ 279)
- `orgError = validateProviderAgainstOrganizationSettings(configWithModelId, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `keysAndIdsPresentErrorMessage = validateModelsAndKeysProvided(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `organizationAllowListError = validateProviderAgainstOrganizationSettings(` (—Å—Ç—Ä–æ–∫–∞ 307)

#### üìÑ useDebounceEffect.ts

**–¢–∏–ø—ã:**

- `type VoidFn` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `callbackRef = useRef<VoidFn>(effect)` - Runs `effectRef.current()` after `delay` ms whenever any of the `deps` change, but cancels/re-schedules if they change again before the delay. (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ url.ts

#### üìÑ textMateToHljs.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `constructTheme(tmTheme: F): Record<string, string>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fallbackTheme()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `parseHexColor(hexColor: s)` (—Å—Ç—Ä–æ–∫–∞ 138)

**–¢–∏–ø—ã:**

- `type FullColorTheme` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rules = tmTheme["rules"] || []` (—Å—Ç—Ä–æ–∫–∞ 41)
- `tokens = hljsToTextMate[className]` (—Å—Ç—Ä–æ–∫–∞ 53)
- `styles = getComputedStyle(document.body)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `backgroundColor = styles.getPropertyValue("--vscode-editor-background")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `avg = (r + g + b) / 3` (—Å—Ç—Ä–æ–∫–∞ 73)
- `r = parseInt(hexColor.substring(0, 2), 16)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `g = parseInt(hexColor.substring(2, 4), 16)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `b = parseInt(hexColor.substring(4, 6), 16)` (—Å—Ç—Ä–æ–∫–∞ 153)

#### üìÑ sourceMapUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tempError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `errorMessage = stack.split("\n")[0]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `stackFrames = await StackTrace.fromError(tempError)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mappedFrames = stackFrames.map((frame: StackTrace.StackFrame) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `functionName = frame.functionName || "<anonymous>"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `fileName = frame.fileName || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lineNumber = frame.lineNumber || 0` (—Å—Ç—Ä–æ–∫–∞ 40)
- `columnNumber = frame.columnNumber || 0` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = [errorMessage, ...mappedFrames].join("\n")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `lines = componentStack.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mappedLines = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 71)
- `match = line.match(/at\s+(.+?)\s+\((.+?):(\d+):(\d+)\)/)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `syntheticError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `stackFrames = await StackTrace.fromError(syntheticError)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `frame = stackFrames[0]` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mappedFileName = frame.fileName || fileName` (—Å—Ç—Ä–æ–∫–∞ 93)
- `mappedLineNumber = frame.lineNumber || parseInt(lineNumber, 10)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mappedColumnNumber = frame.columnNumber || parseInt(columnNumber, 10)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = mappedLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `stackPromise = applySourceMapsToStack(error.stack)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `componentStackPromise = componentStack` (—Å—Ç—Ä–æ–∫–∞ 131)
- `tempError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `frames = await StackTrace.fromError(tempError)` (—Å—Ç—Ä–æ–∫–∞ 178)

#### üìÑ sourceMapInitializer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `enhancedError = await enhanceErrorWithSourceMaps(event.error)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `enhancedError = await enhanceErrorWithSourceMaps(event.reason)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `scripts = document.getElementsByTagName("script")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `script = scripts[i]` (—Å—Ç—Ä–æ–∫–∞ 60)
- `possibleMapUrls = [` (—Å—Ç—Ä–æ–∫–∞ 63)
- `link = document.createElement("link")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `sourceMappingURLMatch = content.match(/\/\/[#@]\s*sourceMappingURL=([^\s]+)/)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `sourceMappingURL = sourceMappingURLMatch[1]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `scriptUrlObj = new URL(script.src)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `baseUrl = scriptUrlObj.href.substring(0, scriptUrlObj.href.lastIndexOf("/") + 1)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `fullUrl = new URL(sourceMappingURL, baseUrl).href` (—Å—Ç—Ä–æ–∫–∞ 93)
- `link = document.createElement("link")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `response = await fetch(`${scriptUrl}.map`)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `sourceMap = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 161)

#### üìÑ removeLeadingNonAlphanumeric.ts

#### üìÑ path-mentions.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `protocolStripped = path.substring("vscode-remote://".length)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `firstSlashIndex = protocolStripped.indexOf("/")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `normalizedPath = pathWithoutProtocol.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `lowerPath = normalizedPath.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `lowerCwd = normalizedCwd.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `escapedRelativePath = escapeSpaces(relativePath)` (—Å—Ç—Ä–æ–∫–∞ 74)

#### üìÑ model-utils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `safeContextWindow = Math.max(0, contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `safeContextTokens = Math.max(0, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `availableSize = Math.max(0, safeContextWindow - safeContextTokens - reservedForOutput)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `total = safeContextTokens + reservedForOutput + availableSize` (—Å—Ç—Ä–æ–∫–∞ 61)

#### üìÑ mcp.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pattern = String(template.uriTemplate)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `regex = new RegExp(`^${pattern}$`)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `exactMatch = resources.find((resource) => resource.uri === uri)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ imageUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `imagesToAdd = newImages ?? []` - Utility function to append new images to existing images array while respecting the maximum image limit (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ highlighter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `warnedLanguages = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `normalizedInput = language.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `LANGUAGE_LOAD_DELAY = 0` (—Å—Ç—Ä–æ–∫–∞ 125)
- `shikilang = normalizeLanguage(language)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `instance = await createHighlighter({` (—Å—Ç—Ä–æ–∫–∞ 153)
- `instance = await state.instanceInitPromise` (—Å—Ç—Ä–æ–∫–∞ 171)

#### üìÑ highlight.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `escapeHtml(text: s): string` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapeHtmlCache = new LRUCache<string, string>({ max: 500 })` (—Å—Ç—Ä–æ–∫–∞ 4)
- `cached = escapeHtmlCache.get(text)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `escaped = text` (—Å—Ç—Ä–æ–∫–∞ 14)
- `escapedText = escapeHtml(part.text)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ getLanguageFromPath.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extension = path.split(".").pop()?.toLowerCase() || ""` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ formatPrice.ts

#### üìÑ format.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `date = new Date(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `locale = i18next.language || "en"` (—Å—Ç—Ä–æ–∫–∞ 18)
- `dateStr = date.toLocaleString(locale, {` (—Å—Ç—Ä–æ–∫–∞ 21)

#### üìÑ docLinks.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cleanPath = path.replace(/^\//, "")` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ context-mentions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getModeDescription(mode: M): string` - Gets the description for a mode, prioritizing description > whenToUse > roleDefinition and taking only the first line (—Å—Ç—Ä–æ–∫–∞ 14)
- `getBasename(filepath: s): string` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `afterCursor = text.slice(position)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `lastAtIndex = beforeCursor.lastIndexOf("@")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `beforeMention = text.slice(0, lastAtIndex)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `afterCursorContent = /^[a-zA-Z0-9\s]*$/.test(afterCursor)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `afterCursor = text.slice(position)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `matchEnd = beforeCursor.match(new RegExp(mentionRegex.source + "$"))` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mentionLength = matchEnd[0].length` (—Å—Ç—Ä–æ–∫–∞ 89)
- `newText = text.slice(0, position - mentionLength) + afterCursor.replace(/^\s/, "")` (—Å—Ç—Ä–æ–∫–∞ 91)
- `newPosition = position - mentionLength` (—Å—Ç—Ä–æ–∫–∞ 92)
- `slashQuery = query.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `searchableCommands = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 142)
- `fzf = new Fzf(searchableCommands, {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `matchingCommands = slashQuery` (—Å—Ç—Ä–æ–∫–∞ 153)
- `searchableItems = modes.map((mode) => ({` (—Å—Ç—Ä–æ–∫–∞ 181)
- `fzf = new Fzf(searchableItems, {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `matchingModes = slashQuery` (—Å—Ç—Ä–æ–∫–∞ 192)
- `files = queryItems` (—Å—Ç—Ä–æ–∫–∞ 228)
- `folders = queryItems` (—Å—Ç—Ä–æ–∫–∞ 241)
- `commits = queryItems.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `lowerQuery = query.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `exactMatches = queryItems.filter(` (—Å—Ç—Ä–æ–∫–∞ 288)
- `searchableItems = queryItems.map((item) => ({` (—Å—Ç—Ä–æ–∫–∞ 305)
- `fzf = new Fzf(searchableItems, {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `matchingItems = query ? fzf.find(query).map((result) => result.item.original) : []` (—Å—Ç—Ä–æ–∫–∞ 316)
- `openedFileMatches = matchingItems.filter((item) => item.type === ContextMenuOptionType.OpenedFile)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `gitMatches = matchingItems.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `searchResultItems = dynamicSearchResults.map((result) => {` (—Å—Ç—Ä–æ–∫–∞ 324)
- `formattedPath = result.path.startsWith("/") ? result.path : `/${result.path}`` (—Å—Ç—Ä–æ–∫–∞ 326)
- `displayPath = formattedPath` (—Å—Ç—Ä–æ–∫–∞ 329)
- `displayName = result.label || getBasename(result.path)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `allItems = [...suggestions, ...openedFileMatches, ...searchResultItems, ...gitMatches]` (—Å—Ç—Ä–æ–∫–∞ 343)
- `seen = new Set()` (—Å—Ç—Ä–æ–∫–∞ 346)
- `deduped = allItems.filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 347)
- `normalizedValue = item.value` (—Å—Ç—Ä–æ–∫–∞ 349)
- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 369)
- `atIndex = beforeCursor.lastIndexOf("@")` (—Å—Ç—Ä–æ–∫–∞ 377)
- `textAfterAt = beforeCursor.slice(atIndex + 1)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `hasUnescapedSpace = /(?<!\\)\s/.test(textAfterAt)` (—Å—Ç—Ä–æ–∫–∞ 388)

#### üìÑ command-validation.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseCommandLine(command: s): string[]` - Parse a single line of commands (internal helper function) (—Å—Ç—Ä–æ–∫–∞ 184)

**–¢–∏–ø—ã:**

- `type ShellToken` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commandSubstitutionPatterns = /(\$\()|`|(<\(|>\()|(\$\(\()|(\$\[)/.test(source)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `subshellGroupingPattern = /\([^)]*[` (—Å—Ç—Ä–æ–∫–∞ 114)
- `lines = command.split(/\r\n|\r|\n/)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `lineCommands = parseCommandLine(line)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `fallbackCommands = processedCommand` (—Å—Ç—Ä–æ–∫–∞ 266)
- `subshellMatch = token.match(/__SUBSH_(\d+)__/)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `trimmedCommand = command.trim().toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 367)
- `lowerPrefix = prefix.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 371)
- `hasWildcard = allowedCommands.some((cmd) => cmd.toLowerCase() === "*")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `trimmedCommand = command.trim().toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `lowerPrefix = prefix.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 408)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands)` (—Å—Ç—Ä–æ–∫–∞ 416)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 448)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 516)
- `cmdWithoutRedirection = cmd.replace(/\d*>&\d*/, "").trim()` (—Å—Ç—Ä–æ–∫–∞ 521)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 593)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 594)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `hasSubshells = containsSubshell(command)` (—Å—Ç—Ä–æ–∫–∞ 687)
- `allowedMatches = subCommands.map((cmd) => ({` (—Å—Ç—Ä–æ–∫–∞ 689)
- `deniedMatches = subCommands.map((cmd) => ({` (—Å—Ç—Ä–æ–∫–∞ 694)
- `results = new Map<string, CommandDecision>()` (—Å—Ç—Ä–æ–∫–∞ 713)

#### üìÑ command-parser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `extractFromTokens(tokens: s, patterns: S): void` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `patterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `parsed = parse(command)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `commandSeparators = new Set(["|", "&&", "||", "` (—Å—Ç—Ä–æ–∫–∞ 15)
- `firstWord = command.trim().split(/\s+/)[0]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mainCmd = tokens[0]` (—Å—Ç—Ä–æ–∫–∞ 47)
- `breakingExps = [/^-/, /[\\/:.~ ]/]` (—Å—Ç—Ä–æ–∫–∞ 55)
- `maxLevels = Math.min(tokens.length, 3)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `arg = tokens[i]` (—Å—Ç—Ä–æ–∫–∞ 61)
- `pattern = tokens.slice(0, i + 1).join(" ")` (—Å—Ç—Ä–æ–∫–∞ 65)

#### üìÑ clipboard.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CopyOptions` - Options for copying text to clipboard (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `err = error instanceof Error ? error : new Error("Failed to copy to clipboard")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `copyWithFeedback = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 38)
- `success = await copyToClipboard(text, {` (—Å—Ç—Ä–æ–∫–∞ 47)

#### üìÑ test-utils.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AllTheProviders()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `customRender(ui: R)` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AllTheProvidersProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `AllTheProviders = ({ children }: AllTheProvidersProps) => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `customRender = (ui: React.ReactElement, options?: Omit<RenderOptions, "wrapper">) =>` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ webview-ui/src/oauth

#### üìÑ urls.ts

### üìÇ webview-ui/src/lib

#### üìÑ utils.ts

### üìÇ webview-ui/src/i18n

#### üìÑ setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `localeFiles = import.meta.glob("./locales/**/*.json", { eager: true })` (—Å—Ç—Ä–æ–∫–∞ 8)
- `match = path.match(/\.\/locales\/([^/]+)\/([^/]+)\.json/)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ TranslationContext.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionState = useExtensionState()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `translate = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 36)

### üìÇ webview-ui/src/hooks

#### üìÑ useTooltip.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UseTooltipOptions` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handleMouseEnter = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `handleMouseLeave = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `cleanup = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ useEscapeKey.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useEscapeKey.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 19)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 28)
- `event = new KeyboardEvent("keydown", { key: "Enter" })` (—Å—Ç—Ä–æ–∫–∞ 37)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 46)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 56)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 66)
- `stopPropagationSpy = vi.spyOn(event, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 76)
- `stopPropagationSpy = vi.spyOn(event, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 84)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 117)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 152)
- `newMockOnEscape = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ useAutoApprovalToggles.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ useAutoApprovalState.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AutoApprovalToggles` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasEnabledOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `effectiveAutoApprovalEnabled = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 21)

### üìÇ webview-ui/src/__tests__

#### üìÑ command-autocomplete.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockQueryItems = [` (—Å—Ç—Ä–æ–∫–∞ 15)
- `options = getContextMenuOptions("/", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `commandNames = commandOptions.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `options = getContextMenuOptions("/set", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], [])` (—Å—Ç—Ä–æ–∫–∞ 61)
- `options = getContextMenuOptions("/nonexistent", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `options = getContextMenuOptions("setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], specialCommands)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `setupDevOption = options.find((option) => option.value === "setup-dev")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `options = getContextMenuOptions("/test", null, mockQueryItems, [], [], commandsWithSimilarNames)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `options = getContextMenuOptions("/te", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `mockModes = [` (—Å—Ç—Ä–æ–∫–∞ 129)
- `options = getContextMenuOptions("/", null, mockQueryItems, [], mockModes, mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `modeOptions = options.filter((option) => option.type === ContextMenuOptionType.Mode)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `options = getContextMenuOptions("/co", null, mockQueryItems, [], mockModes, mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `modeOptions = options.filter((option) => option.type === ContextMenuOptionType.Mode)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 161)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `options = getContextMenuOptions("/release", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `releaseOption = options.find((option) => option.value === "release")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `options = getContextMenuOptions("/rel", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `releaseOption = options.find((option) => option.value === "release")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `options = getContextMenuOptions("/test", null, mockQueryItems, [], [], commandsWithEmptyHint)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `testOption = options.find((option) => option.value === "test-command")` (—Å—Ç—Ä–æ–∫–∞ 216)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], undefined)` (—Å—Ç—Ä–æ–∫–∞ 224)
- `options = getContextMenuOptions("", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `options = getContextMenuOptions("/very", null, mockQueryItems, [], [], longNameCommands)` (—Å—Ç—Ä–æ–∫–∞ 243)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 247)
- `options = getContextMenuOptions("/v", null, mockQueryItems, [], [], numericCommands)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 260)

#### üìÑ TelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `constructor = Object.getPrototypeOf(telemetryClient).constructor` (—Å—Ç—Ä–æ–∫–∞ 27)
- `API_KEY = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `DISTINCT_ID = "test-user-id"` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ ContextWindowProgressLogic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 33)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 34)
- `defaultResult = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `customMaxTokens = 1500 // Custom maxTokens instead of default 8192` (—Å—Ç—Ä–æ–∫–∞ 40)
- `customResult = calculateTokenDistribution(contextWindow, contextTokens, customMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `defaultReserved = 8192 // ANTHROPIC_DEFAULT_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 44)
- `defaultTooltip = `Reserved for model response: ${defaultReserved} tokens`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `customTooltip = `Reserved for model response: ${customMaxTokens} tokens`` (—Å—Ç—Ä–æ–∫–∞ 50)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 69)
- `contextTokens = -500 // Negative tokens should be handled gracefully` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `contextWindow = 0` (—Å—Ç—Ä–æ–∫–∞ 85)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `totalPercentage = result.currentPercent + result.reservedPercent + result.availablePercent` (—Å—Ç—Ä–æ–∫–∞ 96)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 101)
- `contextTokens = 12000 // More tokens than the window size` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 104)

#### üìÑ SearchableSelect.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 56)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `option = screen.getByText("Option 2")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `disabledOption = screen.getByText("Option 3")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `clearTimeoutSpy = vi.spyOn(global, "clearTimeout")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 182)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 186)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `dropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `newDropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 240)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 241)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `dropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 258)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 296)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 300)
- `escapeEvent = new KeyboardEvent("keydown", {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `preventDefaultSpy = vi.spyOn(escapeEvent, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `stopPropagationSpy = vi.spyOn(escapeEvent, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 310)

#### üìÑ ErrorBoundary.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedComponent(props: a)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `ErrorThrower()` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedComponent = (props: any) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `ErrorThrower = ({ shouldThrow = false, message = "Test error" }: { shouldThrow?: boolean` (—Å—Ç—Ä–æ–∫–∞ 27)
- `spy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 60)
- `githubLink = screen.getByRole("link", { name: /errorBoundary.githubText/ })` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ ContextWindowProgress.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderComponent(props: R)` (—Å—Ç—Ä–æ–∫–∞ 48)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalModule = await vi.importActual("@src/components/chat/TaskHeader")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `renderComponent = (props: Record<string, any>) => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `tokenCount = screen.getByTestId("context-tokens-count")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `windowSize = screen.getByTestId("context-window-size")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `progressBarContainer = screen.getByTestId("context-tokens-count").parentElement` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ App.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `MockedComponent(props: a)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `triggerMessage(action: s)` (—Å—Ç—Ä–æ–∫–∞ 200)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseExtensionState = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 116)
- `i18n = {` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 127)
- `MockedComponent = (props: any) => {` (—Å—Ç—Ä–æ–∫–∞ 130)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 155)
- `triggerMessage = (action: string) => {` (—Å—Ç—Ä–æ–∫–∞ 200)
- `messageEvent = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 201)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `settingsView = await screen.findByTestId("settings-view")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 228)
- `historyView = await screen.findByTestId("history-view")` (—Å—Ç—Ä–æ–∫–∞ 239)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `mcpView = await screen.findByTestId("mcp-view")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 256)
- `promptsView = await screen.findByTestId("prompts-view")` (—Å—Ç—Ä–æ–∫–∞ 267)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `settingsView = await screen.findByTestId("settings-view")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 287)
- `viewElement = await screen.findByTestId(`${view}-view`)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 305)
- `marketplaceView = await screen.findByTestId("marketplace-view")` (—Å—Ç—Ä–æ–∫–∞ 317)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `marketplaceView = await screen.findByTestId("marketplace-view")` (—Å—Ç—Ä–æ–∫–∞ 331)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 337)

### üìÇ src/utils/logging

#### üìÑ types.ts

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `noopLogger = {` - No-operation logger implementation for production environments (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ CompactTransport.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isLevelEnabled(configLevel: L, entryLevel: s): boolean` - Determines if a log entry should be processed based on configured minimum level (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `configIdx = LOG_LEVELS.indexOf(configLevel)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `entryIdx = LOG_LEVELS.indexOf(entryLevel as LogLevel)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `sessionStart = {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `deltaT = entry.t - this.lastTimestamp` (—Å—Ç—Ä–æ–∫–∞ 86)
- `compact = {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `output = JSON.stringify(compact) + "\n"` (—Å—Ç—Ä–æ–∫–∞ 94)
- `sessionEnd = {` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ CompactLogger.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `combinedMeta = this.parentMeta ? { ...this.parentMeta, ...meta } : meta` (—Å—Ç—Ä–æ–∫–∞ 77)

### üìÇ src/utils/__tests__

#### üìÑ xml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 15)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 29)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 36)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 47)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 53)
- `attributes = result.root.node` (—Å—Ç—Ä–æ–∫–∞ 54)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 88)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 94)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = parseXml(xml, ["nestedXml"]) as any` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ xml-matcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 5)
- `chunks = [...matcher.update("<think>data</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 6)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `chunks = [...matcher.update("< think >data</ think >"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 17)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `chunks = [...matcher.update("< think 1>data</ think >"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `chunks = [...matcher.update("<>data</>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 41)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `chunks = [` (—Å—Ç—Ä–æ–∫–∞ 53)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `chunks = [...matcher.update("<think>X<think>Y</think>Z</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 75)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `chunks = [...matcher.update("<think>X<think>Y</thxink>Z</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `chunks = [...matcher.update("1<think>data</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 103)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `chunks = [...matcher.update("<think>data"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 115)

#### üìÑ tiktoken.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await tiktoken([])` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `content = [{ type: "text" }] as any as Anthropic.Messages.ContentBlockParam[]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `expectedMinTokens = Math.ceil(Math.sqrt(base64Data.length))` (—Å—Ç—Ä–æ–∫–∞ 54)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 61)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `expectedMinTokens = 300` (—Å—Ç—Ä–æ–∫–∞ 74)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `result2 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result1 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result2 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ text-normalization.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "Keep \u201Csmart quotes\u201D but normalize   whitespace"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `input = "Let\u2019s test this\u2014with some \u201Cfancy\u201D punctuation\u2026 and   spaces"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `original = "Plain text without entities"` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ shell.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockVsCodeConfig(platformKey: s, defaultProfileName: s, profiles: R)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ safeWriteJson.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async readFileContent(filePath: s): Promise<any>` (—Å—Ç—Ä–æ–∫–∞ 85)
- `async fileExists(filePath: s): Promise<boolean>` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalFsPromisesRename = actualFsPromises.rename` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalFsPromisesUnlink = actualFsPromises.unlink` (—Å—Ç—Ä–æ–∫–∞ 10)
- `originalFsPromisesWriteFile = actualFsPromises.writeFile` (—Å—Ç—Ä–æ–∫–∞ 11)
- `_originalFsPromisesAccess = actualFsPromises.access` (—Å—Ç—Ä–æ–∫–∞ 12)
- `originalFsPromisesMkdir = actualFsPromises.mkdir` (—Å—Ç—Ä–æ–∫–∞ 13)
- `actual = await vi.importActual<typeof import("fs/promises")>("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockedFs = { ...actual }` (—Å—Ç—Ä–æ–∫–∞ 18)
- `actualFs = await vi.importActual<typeof import("fs")>("fs")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `readContent = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `data = { message: "Hello, new world!" }` (—Å—Ç—Ä–æ–∫–∞ 104)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 113)
- `newData = { message: "Updated content" }` (—Å—Ç—Ä–æ–∫–∞ 114)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `data = { message: "test write failure" }` (—Å—Ç—Ä–æ–∫–∞ 128)
- `mockErrorStream = new Writable() as any` (—Å—Ç—Ä–æ–∫–∞ 130)
- `exists = await fileExists(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `initialData = { message: "Initial content, should remain" }` (—Å—Ç—Ä–æ–∫–∞ 157)
- `newData = { message: "New content, should not be written" }` (—Å—Ç—Ä–æ–∫–∞ 158)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `initialData = { message: "Initial content, should be restored" }` (—Å—Ç—Ä–æ–∫–∞ 178)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 179)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `subDir = path.join(tempDir, "new-subdir")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `filePath = path.join(subDir, "file.json")` (—Å—Ç—Ä–æ–∫–∞ 218)
- `data = { test: "directory creation" }` (—Å—Ç—Ä–æ–∫–∞ 219)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `deepDir = path.join(tempDir, "level1", "level2", "level3")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `filePath = path.join(deepDir, "deep-file.json")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `data = { nested: "deeply" }` (—Å—Ç—Ä–æ–∫–∞ 239)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `mkdirSpy = vi.spyOn(fs, "mkdir")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `error = new Error("EACCES: permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 261)
- `subDir = path.join(tempDir, "forbidden-dir")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `filePath = path.join(subDir, "file.json")` (—Å—Ç—Ä–æ–∫–∞ 267)
- `data = { test: "permission error" }` (—Å—Ç—Ä–æ–∫–∞ 268)
- `subDir = path.join(tempDir, "existing-dir")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `filePath = path.join(subDir, "new-file.json")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `data = { fresh: "file" }` (—Å—Ç—Ä–æ–∫–∞ 283)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 297)
- `newData = { message: "Successfully written new content" }` (—Å—Ç—Ä–æ–∫–∞ 298)
- `unlinkSpy = vi.spyOn(fs, "unlink")` (—Å—Ç—Ä–æ–∫–∞ 303)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 314)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Suppress console.error` (—Å—Ç—Ä–æ–∫–∞ 320)
- `initialData = { message: "Initial" }` (—Å—Ç—Ä–æ–∫–∞ 321)
- `newData = { message: "New" }` (—Å—Ç—Ä–æ–∫–∞ 322)
- `unlinkSpy = vi.spyOn(fs, "unlink")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 347)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 348)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 352)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `data = { message: "test lock failure" }` (—Å—Ç—Ä–æ–∫–∞ 380)
- `lockTestFilePath = path.join(tempDir, "lock-test-file.json")` (—Å—Ç—Ä–æ–∫–∞ 383)
- `data = { message: "test lock release on error" }` (—Å—Ç—Ä–æ–∫–∞ 401)
- `createWriteStreamSpy = vi.spyOn(fsSyncActual, "createWriteStream")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `errorStream = new Writable() as any` (—Å—Ç—Ä–æ–∫–∞ 406)
- `data = { message: "access error test" }` (—Å—Ç—Ä–æ–∫–∞ 430)
- `accessSpy = vi.spyOn(fs, "access").mockImplementationOnce(async () => {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `error = new Error("EACCES: permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 432)
- `testPath = path.join(tempDir, "access-error-test.json")` (—Å—Ç—Ä–æ–∫–∞ 438)
- `initialData = { message: "Initial, should be lost if rollback fails" }` (—Å—Ç—Ä–æ–∫–∞ 448)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 449)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 453)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Suppress console.error` (—Å—Ç—Ä–æ–∫–∞ 454)

#### üìÑ path.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPlatform = process.platform` (—Å—Ç—Ä–æ–∫–∞ 34)
- `windowsPath = "C:\\Users\\test\\file.txt"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `unixPath = "/home/user/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `extendedPath = "\\\\?\\C:\\Very\\Long\\Path"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `workspacePath = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 61)
- `path1 = path.normalize("C:\\Users\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `path2 = path.normalize("C:/Users/Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `path1 = path.normalize("C:\\Users\\Test\\..\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `path2 = path.normalize("C:\\Users\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `desktop = path.join(homeDir, "Desktop")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `cwd = process.platform === "win32" ? "C:\\Users\\test\\project" : "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `filePath = path.join(desktop, "file.txt")` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ outputChannelLogger.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOutputChannel = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `error = new Error("test error")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `obj = { key: "value", number: 42 }` (—Å—Ç—Ä–æ–∫–∞ 51)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `consoleSpy = vitest.spyOn(console, "log").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 73)
- `outputChannelLogger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `dualLogger = createDualLogger(outputChannelLogger)` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ object.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `obj = Object.create(null)` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ git.spec.ts

**–¢–∏–ø—ã:**

- `type ExecFunction` (—Å—Ç—Ä–æ–∫–∞ 20)
- `type PromisifiedExec` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockWorkspaceFolders = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `cwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockCommitData = [` (—Å—Ç—Ä–æ–∫–∞ 136)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 209)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 215)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 235)
- `result = await searchCommits("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 259)
- `mockCommitInfo = [` (—Å—Ç—Ä–æ–∫–∞ 272)
- `mockStats = "1 file changed, 2 insertions(+), 1 deletion(-)"` (—Å—Ç—Ä–æ–∫–∞ 280)
- `mockDiff = "@@ -1,1 +1,2 @@\n-old line\n+new line"` (—Å—Ç—Ä–æ–∫–∞ 281)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 284)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 329)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `mockStatus = " M src/file1.ts\n?? src/file2.ts"` (—Å—Ç—Ä–æ–∫–∞ 354)
- `mockDiff = "@@ -1,1 +1,2 @@\n-old line\n+new line"` (—Å—Ç—Ä–æ–∫–∞ 355)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 376)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 401)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 420)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 426)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 439)
- `workspaceRoot = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 446)
- `gitDir = path.join(workspaceRoot, ".git")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `configPath = path.join(gitDir, "config")` (—Å—Ç—Ä–æ–∫–∞ 448)
- `headPath = path.join(gitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 476)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 492)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 504)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 530)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 537)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 549)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 561)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 576)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 588)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 606)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 619)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 625)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 638)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 650)
- `url = "https://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 663)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 670)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 671)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 677)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 678)
- `url = "ssh://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 684)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 685)
- `url = "not-a-valid-url"` (—Å—Ç—Ä–æ–∫–∞ 691)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 692)
- `url = "https://username:password@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 700)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 701)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 707)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 708)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 714)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `url = "https://oauth2:ghp_abcdef1234567890abcdef1234567890abcdef@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 722)
- `url = "not-a-valid-url"` (—Å—Ç—Ä–æ–∫–∞ 728)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 729)
- `url = "https://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 737)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 738)
- `url = "https://github.com/NeiraCoderInc/Roo-Code"` (—Å—Ç—Ä–æ–∫–∞ 744)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 745)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 751)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 752)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 758)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 759)
- `url = "not-a-valid-git-url"` (—Å—Ç—Ä–æ–∫–∞ 765)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 766)
- `url = "https://username:password@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 772)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 773)
- `workspaceRoot = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 780)
- `result = await getWorkspaceGitInfo()` (—Å—Ç—Ä–æ–∫–∞ 790)
- `gitSpy = vitest.spyOn(fs.promises, "access")` (—Å—Ç—Ä–æ–∫–∞ 803)
- `readFileSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 804)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 810)
- `result = await getWorkspaceGitInfo()` (—Å—Ç—Ä–æ–∫–∞ 826)

#### üìÑ enhance-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await singleCompletionHandler(mockApiConfig, "Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handler = buildApiHandler(mockApiConfig)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `customEnhancePrompt = "You are a custom prompt enhancer"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `customEnhancePromptWithTemplate = customEnhancePrompt + "\n\n${userInput}"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = await singleCompletionHandler(` (—Å—Ç—Ä–æ–∫–∞ 52)
- `handler = buildApiHandler(mockApiConfig)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = await singleCompletionHandler(openRouterConfig, "Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ cost.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, 2000)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, undefined, 3000)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `cost = calculateApiCostAnthropic(modelWithoutPrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `cost = calculateApiCostAnthropic(mockModelInfo, 0, 0, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `cost = calculateApiCostAnthropic(modelWithoutCachePrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `cost = calculateApiCostOpenAI(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `cost = calculateApiCostOpenAI(mockModelInfo, 3000, 500, 2000)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `cost = calculateApiCostOpenAI(mockModelInfo, 4000, 500, undefined, 3000)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `cost = calculateApiCostOpenAI(mockModelInfo, 6000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `cost = calculateApiCostOpenAI(modelWithoutPrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `cost = calculateApiCostOpenAI(mockModelInfo, 0, 0, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `cost = calculateApiCostOpenAI(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `cost = calculateApiCostOpenAI(modelWithoutCachePrices, 6000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 184)

#### üìÑ config.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalEnv = process.env` (—Å—Ç—Ä–æ–∫–∞ 6)
- `configString = "Hello ${env:TEST_VAR}"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `expectedString = "Hello testValue"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `configObject = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `expectedObject = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await injectEnv(configObject)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `consoleWarnSpy = vitest.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 79)
- `configString = "Value: ${env:EXISTING_VAR}, Missing: ${env:MISSING_VAR}"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `expectedString = "Value: exists, Missing: NOT_FOUND"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = await injectEnv(configString, "NOT_FOUND")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `consoleWarnSpy = vitest.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 92)
- `configString = "Missing: ${env:ANOTHER_MISSING}"` (—Å—Ç—Ä–æ–∫–∞ 93)
- `expectedString = "Missing: "` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `configString = "Just a regular string"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `configObject = { key: "value", number: 123 }` (—Å—Ç—Ä–æ–∫–∞ 110)
- `result = await injectEnv(configObject)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `originalObject = { value: "${env:MUTATE_TEST}" }` (—Å—Ç—Ä–æ–∫–∞ 117)
- `copyOfOriginal = { ...originalObject } // Shallow copy for comparison` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await injectEnv("")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await injectEnv({})` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await injectVariables("Hello ${v}", { v: "Hola" })` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await injectVariables("Hello ${v}", { v: undefined })` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = await injectVariables("Hello ${v}", { v: "" })` (—Å—Ç—Ä–æ–∫–∞ 146)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await injectVariables(config, { workspaceFolder: "C:\\Users\\project" })` (—Å—Ç—Ä–æ–∫–∞ 155)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `result = await injectVariables(config, { workspaceFolder: "C:\\Program Files\\My Project" })` (—Å—Ç—Ä–æ–∫–∞ 171)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `result = await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await injectVariables("Path: ${path}", { path: "C:\\Users\\test" })` (—Å—Ç—Ä–æ–∫–∞ 206)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 211)
- `result = await injectVariables(config, { testPath: "C:\\Users/test/mixed\\path" })` (—Å—Ç—Ä–æ–∫–∞ 214)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 221)
- `result = await injectVariables(config, { myValue: "test" })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `result = await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 238)

#### üìÑ autoImportSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalModule = await importOriginal()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `settingsPath = "~/Documents/roo-config.json"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `settingsPath = "/absolute/path/to/config.json"` (—Å—Ç—Ä–æ–∫–∞ 164)
- `mockSettings = {` (—Å—Ç—Ä–æ–∫–∞ 173)
- `settingsPath = "~/config.json"` (—Å—Ç—Ä–æ–∫–∞ 208)
- `settingsPath = "~/Documents/config.json"` (—Å—Ç—Ä–æ–∫–∞ 235)
- `settingsPath = "Documents/config.json"` (—Å—Ç—Ä–æ–∫–∞ 255)
- `settingsPath = "~/config.json"` (—Å—Ç—Ä–æ–∫–∞ 275)

### üìÇ src/shared/__tests__

#### üìÑ vsCodeSelectorUtils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ support-prompts.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFilePath = "test/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 4)
- `testCode = "function test() { return true` (—Å—Ç—Ä–æ–∫–∞ 5)
- `prompt = supportPrompt.create("EXPLAIN", {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `prompt = supportPrompt.create("FIX", {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 34)
- `prompt = supportPrompt.create("FIX", {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `prompt = supportPrompt.create("IMPROVE", {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `prompt = supportPrompt.create("ENHANCE", {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 91)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 100)
- `diagnostics = [{ message: "Error 1" }, { source: "Linter", message: "Warning 2" }]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `expected = `${testFilePath}:10-20\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 113)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `expected = `${testFilePath}:5-15\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 126)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 138)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 143)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 150)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 161)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 174)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 187)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${bashText}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 201)
- `template = supportPrompt.get(undefined, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `customTemplate = "Custom template for explaining code"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `template = supportPrompt.get(customSupportPrompts, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `template = supportPrompt.get(customSupportPrompts, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `customTemplate = "Custom template for ${filePath}"` (—Å—Ç—Ä–æ–∫–∞ 232)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 233)
- `prompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 237)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 251)
- `prompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ modes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mdResult = isToolAllowedForMode("write_to_file", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `cssResult = isToolAllowedForMode("write_to_file", "css-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `writeResult = isToolAllowedForMode("write_to_file", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `diffResult = isToolAllowedForMode("apply_diff", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `toolRequirements = {` (—Å—Ç—Ä–æ–∫–∞ 361)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", undefined, "test.js")` (—Å—Ç—Ä–æ–∫–∞ 371)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", undefined, "test.js", "write_to_file")` (—Å—Ç—Ä–æ–∫–∞ 379)
- `debugMode = modes.find((mode) => mode.slug === "debug")` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result = await getFullModeDetails("debug")` (—Å—Ç—Ä–æ–∫–∞ 410)
- `result = await getFullModeDetails("debug", customModes)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 439)
- `result = await getFullModeDetails("debug", undefined, customModePrompts)` (—Å—Ç—Ä–æ–∫–∞ 446)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 452)
- `result = await getFullModeDetails("non-existent")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", "Markdown files only", "test.js")` (—Å—Ç—Ä–æ–∫–∞ 479)
- `error = new FileRestrictionError(` (—Å—Ç—Ä–æ–∫–∞ 487)
- `builtInAskMode = modes.find((m) => m.slug === "ask")!` (—Å—Ç—Ä–æ–∫–∞ 502)
- `selection = getModeSelection("ask")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `selection = getModeSelection("ask", promptComponentAsk) // "ask" is not in customModesList` (—Å—Ç—Ä–æ–∫–∞ 537)
- `selection = getModeSelection("code", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `customCode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 544)
- `selection = getModeSelection("code", promptComponentCode, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 550)
- `customCode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 551)
- `selection = getModeSelection("new-custom", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 557)
- `newCustom = customModesList.find((m) => m.slug === "new-custom")!` (—Å—Ç—Ä–æ–∫–∞ 558)
- `selection = getModeSelection("new-custom", promptComponentNew, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 568)
- `newCustomMode = customModesList.find((m) => m.slug === "new-custom")!` (—Å—Ç—Ä–æ–∫–∞ 569)
- `selection = getModeSelection("non-existent-mode", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 575)
- `defaultMode = modes[0] // First mode is the default` (—Å—Ç—Ä–æ–∫–∞ 576)
- `selection = getModeSelection(` (—Å—Ç—Ä–æ–∫–∞ 582)
- `customCodeMode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 587)
- `selection = getModeSelection("no-instr", undefined, modesWithoutCustomInstructions)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `selection = getModeSelection("empty-role", undefined, modesWithEmptyRoleDef)` (—Å—Ç—Ä–æ–∫–∞ 617)
- `selection2 = getModeSelection("undefined-role", undefined, modesWithUndefinedRoleDef)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `selection = getModeSelection("role-custom", promptComponentInstrOnly, customModeRoleOnlyList)` (—Å—Ç—Ä–æ–∫–∞ 647)
- `selection = getModeSelection("instr-custom", promptComponentRoleOnly, customModeInstrOnlyList)` (—Å—Ç—Ä–æ–∫–∞ 666)
- `selection = getModeSelection("ask", promptComponentMinimal, customModeMinimal)` (—Å—Ç—Ä–æ–∫–∞ 681)
- `selection = getModeSelection("ask", promptComponentAsk, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 689)
- `selection = getModeSelection("ask", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 696)
- `selection = getModeSelection("ask", promptComponentAsk, undefined)` (—Å—Ç—Ä–æ–∫–∞ 702)

#### üìÑ modes-empty-prompt-component.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `architectMode = modes.find((m) => m.slug === "architect")!` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = getModeSelection("architect", undefined, [])` (—Å—Ç—Ä–æ–∫–∞ 10)
- `debugMode = modes.find((m) => m.slug === "debug")!` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = getModeSelection("debug", null as any, [])` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = getModeSelection("architect", validPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 36)
- `architectMode = modes.find((m) => m.slug === "architect")!` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = getModeSelection("architect", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 50)
- `debugMode = modes.find((m) => m.slug === "debug")!` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = getModeSelection("debug", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 64)
- `result = getModeSelection("architect", fullPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 77)
- `defaultMode = modes[0] // First mode is the default` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = getModeSelection("non-existent-mode", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ language.spec.ts

#### üìÑ getApiMetrics.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createApiReqStartedMessage = (` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createCondenseContextMessage = (` (—Å—Ç—Ä–æ–∫–∞ 20)
- `createOtherMessage = (` (—Å—Ç—Ä–æ–∫–∞ 38)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `result = getApiMetrics([])` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 291)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 313)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 320)

#### üìÑ experiments.spec.ts

#### üìÑ experiments-preventFocusDisruption.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `disabledConfig = { preventFocusDisruption: false }` (—Å—Ç—Ä–æ–∫–∞ 20)
- `enabledConfig = { preventFocusDisruption: true }` (—Å—Ç—Ä–æ–∫–∞ 24)
- `emptyConfig = {}` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ context-mentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 5)
- `match = input.match(mentionRegex)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `firstExpected = expected ? expected[0] : null` (—Å—Ç—Ä–æ–∫–∞ 57)
- `globalMatches = Array.from(input.matchAll(mentionRegexGlobal)).map((m) => m[0])` (—Å—Ç—Ä–æ–∫–∞ 69)
- `input = "Mention @/path/to/escaped\\ file.txt and @problems"` (—Å—Ç—Ä–æ–∫–∞ 79)
- `matches = Array.from(input.matchAll(mentionRegexGlobal))` (—Å—Ç—Ä–æ–∫–∞ 80)

#### üìÑ combineCommandSequences.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 164)

#### üìÑ combineApiRequests.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createStartMessage(text: s, ts: n): ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createFinishMessage(text: s, ts: n): ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createStartMessage = (text: string = '{"request":"GET /api/data"}', ts: number = 1000): ClineMessage => ({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createFinishMessage = (text: string = '{"cost":0.005}', ts: number = 1001): ClineMessage => ({` (—Å—Ç—Ä–æ–∫–∞ 17)
- `createOtherMessage = (` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `otherMessage = createOtherMessage()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `otherMessage1 = createOtherMessage("text", "Message 1", 999)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `otherMessage2 = createOtherMessage("text", "Message 2", 1500)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `parsedText1 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 115)
- `parsedText2 = JSON.parse(result[3].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = combineApiRequests([])` (—Å—Ç—Ä–æ–∫–∞ 133)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `startMessage = createStartMessage()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `finishMessage = createFinishMessage()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 180)
- `startMessage = createStartMessage()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 243)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `finishMessage = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 297)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 303)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 326)
- `finishMessage = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 339)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 375)
- `startMessage = createStartMessage(` (—Å—Ç—Ä–æ–∫–∞ 383)
- `finishMessage = createFinishMessage(` (—Å—Ç—Ä–æ–∫–∞ 387)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 400)
- `startMessage = createStartMessage(` (—Å—Ç—Ä–æ–∫–∞ 413)
- `finishMessage = createFinishMessage(` (—Å—Ç—Ä–æ–∫–∞ 417)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 424)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 430)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 463)
- `startMessage = createStartMessage("{}", 1000)` (—Å—Ç—Ä–æ–∫–∞ 470)
- `finishMessage = createFinishMessage("{}", 1001)` (—Å—Ç—Ä–æ–∫–∞ 471)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 481)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `otherMessage = createOtherMessage()` (—Å—Ç—Ä–æ–∫–∞ 512)
- `startMessage1 = createStartMessage('{"request":"GET /api/data1"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 513)
- `finishMessage1 = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 514)
- `startMessage2 = createStartMessage('{"request":"GET /api/data2"}', 2000)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 520)
- `parsedText1 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 549)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 568)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 574)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 581)
- `startMessage = createStartMessage('{"request":"GET /api/data", "cost": 0.001}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `finishMessage = createFinishMessage('{"cost":0.005, "request": "OVERWRITTEN"}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 597)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 603)
- `startMessage = createStartMessage('{"request":"GET /api/data", "tags": ["api", "get"]}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 611)
- `finishMessage = createFinishMessage('{"cost":0.005, "results": [1, 2, 3]}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 612)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 616)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 622)

#### üìÑ checkExistApiConfig.spec.ts

#### üìÑ api.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 33)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 85)
- `anthropicModelId = "claude-sonnet-4-20250514"` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = getModelMaxOutputTokens({ modelId: anthropicModelId, model, settings })` (—Å—Ç—Ä–æ–∫–∞ 108)
- `geminiModelId = "gemini-2.5-flash-preview-04-17"` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = getModelMaxOutputTokens({ modelId: geminiModelId, model, settings })` (—Å—Ç—Ä–æ–∫–∞ 126)
- `settings = {}` (—Å—Ç—Ä–æ–∫–∞ 153)

#### üìÑ ProfileValidator.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiModelProviders = [` (—Å—Ç—Ä–æ–∫–∞ 184)

### üìÇ src/services/tree-sitter

#### üìÑ markdownParser.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MockNode` - Interface to mimic tree-sitter node structure (—Å—Ç—Ä–æ–∫–∞ 12)

- `interface MockCapture` - Interface to mimic tree-sitter capture structure (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `atxHeaderRegex = /^(#{1,6})\s+(.+)$/` (—Å—Ç—Ä–æ–∫–∞ 47)
- `setextH1Regex = /^={3,}\s*$/` (—Å—Ç—Ä–æ–∫–∞ 49)
- `setextH2Regex = /^-{3,}\s*$/` (—Å—Ç—Ä–æ–∫–∞ 50)
- `validSetextTextRegex = /^\s*[^#<>!\[\]`\t]+[^\n]$/` (—Å—Ç—Ä–æ–∫–∞ 52)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 56)
- `atxMatch = line.match(atxHeaderRegex)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `level = atxMatch[1].length` (—Å—Ç—Ä–æ–∫–∞ 61)
- `text = atxMatch[2].trim()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `text = lines[i - 1].trim()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `text = lines[i - 1].trim()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `headerPair = headerCaptures[i]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `nextHeaderStartRow = headerCaptures[i + 1][0].node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 168)
- `capture = captures[i]` (—Å—Ç—Ä–æ–∫–∞ 203)
- `startLine = capture.node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 204)
- `endLine = capture.node.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 205)
- `sectionLength = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 208)
- `headerMatch = capture.name.match(/\.h(\d)$/)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `headerPrefix = "#".repeat(headerLevel)` (—Å—Ç—Ä–æ–∫–∞ 219)

#### üìÑ languageParser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async loadLanguage(langName: s)` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseDir = sourceDirectory || __dirname` (—Å—Ç—Ä–æ–∫–∞ 41)
- `wasmPath = path.join(baseDir, `tree-sitter-${langName}.wasm`)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `extensionsToLoad = new Set(filesToParse.map((file) => path.extname(file).toLowerCase().slice(1)))` (—Å—Ç—Ä–æ–∫–∞ 91)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 225)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `processCaptures(captures: Q, lines: s, language: s): string | null` - Process captures from tree-sitter or markdown parser (—Å—Ç—Ä–æ–∫–∞ 266)
- `isNotHtmlElement(line: s): boolean` (—Å—Ç—Ä–æ–∫–∞ 271)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_MIN_COMPONENT_LINES_VALUE = 4` (—Å—Ç—Ä–æ–∫–∞ 11)
- `extensions = [` (—Å—Ç—Ä–æ–∫–∞ 30)
- `fileExists = await fileExistsAtPath(path.resolve(filePath))` (—Å—Ç—Ä–æ–∫–∞ 101)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `markdownCaptures = parseMarkdown(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `markdownDefinitions = processCaptures(markdownCaptures, lines, "markdown")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `languageParsers = await loadRequiredLanguageParsers([filePath])` (—Å—Ç—Ä–æ–∫–∞ 139)
- `definitions = await parseFile(filePath, languageParsers, rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `dirExists = await fileExistsAtPath(path.resolve(dirPath))` (—Å—Ç—Ä–æ–∫–∞ 156)
- `allowedFilesToParse = rooIgnoreController ? rooIgnoreController.filterPaths(filesToParse) : filesToParse` (—Å—Ç—Ä–æ–∫–∞ 170)
- `ext = path.extname(file).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `languageParsers = await loadRequiredLanguageParsers(otherFiles)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `fileContent = await fs.readFile(file, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `markdownCaptures = parseMarkdown(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `markdownDefinitions = processCaptures(markdownCaptures, lines, "markdown")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `definitions = await parseFile(file, languageParsers, rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `filesToParse = allFiles.filter((file) => extensions.includes(path.extname(file))).slice(0, 50) // 50 files max` (—Å—Ç—Ä–æ–∫–∞ 228)
- `remainingFiles = allFiles.filter((file) => !filesToParse.includes(file))` (—Å—Ç—Ä–æ–∫–∞ 229)
- `needsHtmlFiltering = ["jsx", "tsx"].includes(language)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `isNotHtmlElement = (line: string): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `HTML_ELEMENTS = /^[^A-Z]*<\/?(?:div|span|button|input|h[1-6]|p|a|img|ul|li|form)\b/` (—Å—Ç—Ä–æ–∫–∞ 274)
- `trimmedLine = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 275)
- `processedLines = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 290)
- `definitionNode = name.includes("name") ? node.parent : node` (—Å—Ç—Ä–æ–∫–∞ 302)
- `startLine = definitionNode.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 306)
- `endLine = definitionNode.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 307)
- `lineCount = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 308)
- `lineKey = `${startLine}-${endLine}`` (—Å—Ç—Ä–æ–∫–∞ 317)
- `startLineContent = lines[startLine].trim()` (—Å—Ç—Ä–æ–∫–∞ 325)
- `componentName = node.text` (—Å—Ç—Ä–æ–∫–∞ 330)
- `contextEnd = node.parent.lastChild.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 345)
- `contextSpan = contextEnd - node.parent.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 346)
- `rangeKey = `${node.parent.startPosition.row}-${contextEnd}`` (—Å—Ç—Ä–æ–∫–∞ 351)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 387)
- `extLang = path.extname(filePath).toLowerCase().slice(1)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `tree = parser.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 398)
- `captures = tree ? query.captures(tree.rootNode) : []` (—Å—Ç—Ä–æ–∫–∞ 401)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 404)

### üìÇ src/services/roo-config

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homeDir = os.homedir()` - Gets the global .neira directory path based on the current platform (—Å—Ç—Ä–æ–∫–∞ 27)
- `stat = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stat = await fs.stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `globalDir = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 218)
- `projectDir = getProjectRooDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `globalFilePath = path.join(globalDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `projectFilePath = path.join(projectDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `globalContent = await readFileIfExists(globalFilePath)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `projectContent = await readFileIfExists(projectFilePath)` (—Å—Ç—Ä–æ–∫–∞ 228)

### üìÇ src/services/search

#### üìÑ file-search.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rgPath = await getBinPath(vscode.env.appRoot)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `rgProcess = childProcess.spawn(rgPath, args)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `rl = readline.createInterface({ input: rgProcess.stdout, crlfDelay: Infinity })` (—Å—Ç—Ä–æ–∫–∞ 28)
- `dirSet = new Set<string>() // Track unique directory paths.` (—Å—Ç—Ä–æ–∫–∞ 30)
- `relativePath = path.relative(workspacePath, line)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `dirResults = Array.from(dirSet).map((dirPath) => ({` (—Å—Ç—Ä–æ–∫–∞ 71)
- `args = [` (—Å—Ç—Ä–æ–∫–∞ 92)
- `allItems = await executeRipgrepForFiles(workspacePath, 5000)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `searchItems = allItems.map((item) => ({` (—Å—Ç—Ä–æ–∫–∞ 125)
- `fzf = new Fzf(searchItems, {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fzfResults = fzf.find(query).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `verifiedResults = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 141)
- `fullPath = path.join(workspacePath, result.path)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `isDirectory = fs.lstatSync(fullPath).isDirectory()` (—Å—Ç—Ä–æ–∫–∞ 146)

### üìÇ src/services/ripgrep

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async checkPath(pkgFolder: s)` - Get the path to the ripgrep binary within the VSCode installation (—Å—Ç—Ä–æ–∫–∞ 86)
- `async execRipgrep(bin: s, args: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 99)
- `formatResults(fileResults: S, cwd: s): string` (—Å—Ç—Ä–æ–∫–∞ 223)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SearchFileResult` (—Å—Ç—Ä–æ–∫–∞ 54)

- `interface SearchResult` (—Å—Ç—Ä–æ–∫–∞ 59)

- `interface SearchLineResult` (—Å—Ç—Ä–æ–∫–∞ 63)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `results = await regexSearchFiles('/path/to/cwd', '/path/to/search', 'TODO:', '*.ts')` (—Å—Ç—Ä–æ–∫–∞ 30)
- `isWindows = process.platform.startsWith("win")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `binName = isWindows ? "rg.exe" : "rg"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `MAX_RESULTS = 300` (—Å—Ç—Ä–æ–∫–∞ 70)
- `MAX_LINE_LENGTH = 500` (—Å—Ç—Ä–æ–∫–∞ 71)
- `checkPath = async (pkgFolder: string) => {` - Get the path to the ripgrep binary within the VSCode installation (—Å—Ç—Ä–æ–∫–∞ 86)
- `fullPath = path.join(vscodeAppRoot, pkgFolder, binName)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `rgProcess = childProcess.spawn(bin, args)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `maxLines = MAX_RESULTS * 5 // limiting ripgrep output with max lines since there's no other way to limit results. it's okay that we're outputting as json, since we're parsing it line by line and ignore anything that's not part of a match. This assumes each result is at most 5 lines.` (—Å—Ç—Ä–æ–∫–∞ 110)
- `vscodeAppRoot = vscode.env.appRoot` (—Å—Ç—Ä–æ–∫–∞ 146)
- `rgPath = await getBinPath(vscodeAppRoot)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `args = ["--json", "-e", regex, "--glob", filePattern || "*", "--context", "1", directoryPath]` (—Å—Ç—Ä–æ–∫–∞ 153)
- `parsed = JSON.parse(line)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `line = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `lastResult = currentFile.searchResults[currentFile.searchResults.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `lastLine = lastResult.lines[lastResult.lines.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 189)
- `filteredResults = rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 216)
- `relativeFilePath = path.relative(cwd, file.file)` (—Å—Ç—Ä–æ–∫–∞ 236)
- `lineNumber = String(line.line).padStart(3, " ")` (—Å—Ç—Ä–æ–∫–∞ 252)

### üìÇ src/services/neira-config

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homeDir = os.homedir()` - Gets the global .neira directory path (—Å—Ç—Ä–æ–∫–∞ 18)
- `stat = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `stat = await fs.stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `globalDir = getGlobalNeiraDirectory()` (—Å—Ç—Ä–æ–∫–∞ 206)
- `projectDir = getProjectNeiraDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `globalFilePath = path.join(globalDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `projectFilePath = path.join(projectDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `globalContent = await readFileIfExists(globalFilePath)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `projectContent = await readFileIfExists(projectFilePath)` (—Å—Ç—Ä–æ–∫–∞ 216)

### üìÇ src/services/mdm

#### üìÑ MdmService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mdmConfigSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `requiredOrgId = this.getRequiredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `storedOrgId = CloudService.instance.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `configPath = this.getMdmConfigPath()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `configContent = fs.readFileSync(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `parsedConfig = JSON.parse(configContent)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `platform = os.platform()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `isProduction = getClerkBaseUrl() === PRODUCTION_CLERK_BASE_URL` (—Å—Ç—Ä–æ–∫–∞ 147)
- `configFileName = isProduction ? "mdm.json" : "mdm.dev.json"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `programData = process.env.PROGRAMDATA || "C:\\ProgramData"` (—Å—Ç—Ä–æ–∫–∞ 153)

### üìÇ src/services/mcp

#### üìÑ McpServerManager.ts

#### üìÑ McpHub.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createServerTypeSchema()` (—Å—Ç—Ä–æ–∫–∞ 65)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BaseConfigSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 43)
- `typeErrorMessage = "Server type must be 'stdio', 'sse', or 'streamable-http'"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `createServerTypeSchema = () => {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `McpSettingsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `hasStdioFields = config.command !== undefined` (—Å—Ç—Ä–æ–∫–∞ 177)
- `hasUrlFields = config.url !== undefined // Covers sse and streamable-http` (—Å—Ç—Ä–æ–∫–∞ 178)
- `errorMessages = validationError.errors` (—Å—Ç—Ä–æ–∫–∞ 222)
- `key = `${source}-${filePath}`` (—Å—Ç—Ä–æ–∫–∞ 262)
- `existingTimer = this.configChangeDebounceTimers.get(key)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `timer = setTimeout(async () => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 296)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 333)
- `projectMcpPattern = new vscode.RelativePattern(workspaceFolder, ".neira/mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 334)
- `changeDisposable = this.projectMcpWatcher.onDidChange((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 340)
- `createDisposable = this.projectMcpWatcher.onDidCreate((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `deleteDisposable = this.projectMcpWatcher.onDidDelete(async () => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 364)
- `content = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 367)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 373)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 380)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 385)
- `projectConnections = this.connections.filter((conn) => conn.server.source === "project")` (—Å—Ç—Ä–æ–∫–∞ 398)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mcpServersPath = await provider.ensureMcpServersDirectoryExists()` (—Å—Ç—Ä–æ–∫–∞ 423)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 428)
- `mcpSettingsFilePath = path.join(` (—Å—Ç—Ä–æ–∫–∞ 432)
- `fileExists = await fileExistsAtPath(mcpSettingsFilePath)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `settingsPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 462)
- `settingsUri = vscode.Uri.file(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 463)
- `settingsPattern = new vscode.RelativePattern(path.dirname(settingsPath), path.basename(settingsPath))` (—Å—Ç—Ä–æ–∫–∞ 464)
- `changeDisposable = this.settingsWatcher.onDidChange((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 470)
- `createDisposable = this.settingsWatcher.onDidCreate((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 477)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 495)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 497)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 502)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 519)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 538)
- `projectMcpDir = path.join(workspaceFolder.uri.fsPath, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 539)
- `projectMcpPath = path.join(projectMcpDir, "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 540)
- `client = new Client(` (—Å—Ç—Ä–æ–∫–∞ 564)
- `configInjected = (await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 577)
- `isWindows = process.platform === "win32"` (—Å—Ç—Ä–æ–∫–∞ 587)
- `command = isWindows && !isAlreadyWrapped ? "cmd.exe" : configInjected.command` (—Å—Ç—Ä–æ–∫–∞ 593)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 622)
- `stderrStream = transport.stderr` (—Å—Ç—Ä–æ–∫–∞ 632)
- `output = data.toString()` (—Å—Ç—Ä–æ–∫–∞ 635)
- `isInfoLog = /INFO/i.test(output)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 645)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 668)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 677)
- `sseOptions = {` (—Å—Ç—Ä–æ–∫–∞ 685)
- `reconnectingEventSourceOptions = {` (—Å—Ç—Ä–æ–∫–∞ 691)
- `headers = new Headers({ ...(init?.headers || {}), ...(configInjected.headers || {}) })` (—Å—Ç—Ä–æ–∫–∞ 695)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 711)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 720)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 763)
- `MAX_ERROR_LENGTH = 1000` (—Å—Ç—Ä–æ–∫–∞ 773)
- `projectConn = this.connections.find(` (—Å—Ç—Ä–æ–∫–∞ 813)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 827)
- `response = await connection.client.request({ method: "tools/list" }, ListToolsResultSchema)` (—Å—Ç—Ä–æ–∫–∞ 833)
- `actualSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 836)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 846)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 849)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 855)
- `tools = (response?.tools || []).map((tool) => ({` (—Å—Ç—Ä–æ–∫–∞ 868)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 883)
- `response = await connection.client.request({ method: "resources/list" }, ListResourcesResultSchema)` (—Å—Ç—Ä–æ–∫–∞ 887)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 900)
- `response = await connection.client.request(` (—Å—Ç—Ä–æ–∫–∞ 904)
- `connections = source` (—Å—Ç—Ä–æ–∫–∞ 917)
- `currentConnections = this.connections.filter(` (—Å—Ç—Ä–æ–∫–∞ 948)
- `currentNames = new Set(currentConnections.map((conn) => conn.server.name))` (—Å—Ç—Ä–æ–∫–∞ 951)
- `newNames = new Set(Object.keys(newServers))` (—Å—Ç—Ä–æ–∫–∞ 952)
- `currentConnection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 964)
- `watchers = this.fileWatchers.get(name) || []` (—Å—Ç—Ä–æ–∫–∞ 1011)
- `watchPathsWatcher = chokidar.watch(config.watchPaths, {` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `filePath = config.args?.find((arg: string) => arg.includes("build/index.js"))` (—Å—Ç—Ä–æ–∫–∞ 1036)
- `indexJsWatcher = chokidar.watch(filePath, {` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1071)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1077)
- `config = connection?.server.config` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `parsedConfig = JSON.parse(config)` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `validatedConfig = this.validateServerConfig(parsedConfig, serverName)` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `globalPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 1118)
- `globalContent = await fs.readFile(globalPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `globalConfig = JSON.parse(globalContent)` (—Å—Ç—Ä–æ–∫–∞ 1122)
- `globalServerNames = Object.keys(globalServers)` (—Å—Ç—Ä–æ–∫–∞ 1124)
- `projectPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1134)
- `projectContent = await fs.readFile(projectPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1138)
- `projectConfig = JSON.parse(projectContent)` (—Å—Ç—Ä–æ–∫–∞ 1139)
- `projectServerNames = Object.keys(projectServers)` (—Å—Ç—Ä–æ–∫–∞ 1141)
- `existingConnections = [...this.connections]` (—Å—Ç—Ä–æ–∫–∞ 1153)
- `settingsPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `content = await fs.readFile(settingsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1179)
- `globalServerOrder = Object.keys(config.mcpServers || {})` (—Å—Ç—Ä–æ–∫–∞ 1180)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1183)
- `projectContent = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1187)
- `projectConfig = JSON.parse(projectContent)` (—Å—Ç—Ä–æ–∫–∞ 1188)
- `sortedConnections = [...this.connections].sort((a, b) => {` (—Å—Ç—Ä–æ–∫–∞ 1197)
- `aIsGlobal = a.server.source === "global" || !a.server.source` (—Å—Ç—Ä–æ–∫–∞ 1198)
- `bIsGlobal = b.server.source === "global" || !b.server.source` (—Å—Ç—Ä–æ–∫–∞ 1199)
- `indexA = globalServerOrder.indexOf(a.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1203)
- `indexB = globalServerOrder.indexOf(b.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1204)
- `indexA = projectServerOrder.indexOf(a.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1207)
- `indexB = projectServerOrder.indexOf(b.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1208)
- `serversToSend = sortedConnections.map((connection) => connection.server)` (—Å—Ç—Ä–æ–∫–∞ 1220)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 1222)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `serverSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1251)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1295)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1313)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1314)
- `serverConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1330)
- `updatedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1357)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1375)
- `serverSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1380)
- `isProjectServer = serverSource === "project"` (—Å—Ç—Ä–æ–∫–∞ 1382)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1387)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1404)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `updatedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1421)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1441)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1465)
- `parsedConfig = ServerConfigSchema.parse(JSON.parse(connection.server.config))` (—Å—Ç—Ä–æ–∫–∞ 1477)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1518)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1528)
- `normalizedPath = process.platform === "win32" ? configPath.replace(/\\/g, "/") : configPath` (—Å—Ç—Ä–æ–∫–∞ 1540)
- `content = await fs.readFile(normalizedPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1544)
- `targetList = config.mcpServers[serverName][listName]` (—Å—Ç—Ä–æ–∫–∞ 1562)
- `toolIndex = targetList.indexOf(toolName)` (—Å—Ç—Ä–æ–∫–∞ 1563)
- `addToolToDisabledList = !isEnabled` (—Å—Ç—Ä–æ–∫–∞ 1605)

### üìÇ src/services/marketplace

#### üìÑ index.ts

#### üìÑ SimpleInstaller.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `importData = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `importYaml = yaml.stringify(importData)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await this.customModesManager.importModeWithRules(importYaml, target)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `filePath = await this.getModeFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `fileContent = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `modeData = yaml.parse(item.content)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `slugLineIndex = lines.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 79)
- `filePath = await this.getModeFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `modeData = yaml.parse(item.content)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `parsed = yaml.parse(existing)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `fileName = target === "project" ? ".neira-modes" : "custom-modes.yaml"` (—Å—Ç—Ä–æ–∫–∞ 110)
- `addedModeIndex = existingData.customModes.length - 1` (—Å—Ç—Ä–æ–∫–∞ 136)
- `yamlContent = yaml.stringify(existingData, { lineWidth: 0 })` (—Å—Ç—Ä–æ–∫–∞ 140)
- `lines = yamlContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `addedMode = existingData.customModes[addedModeIndex]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `slugLineIndex = lines.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 150)
- `index = options?.selectedIndex ?? 0` (—Å—Ç—Ä–æ–∫–∞ 175)
- `method = item.content[index] || item.content[0]` (—Å—Ç—Ä–æ–∫–∞ 176)
- `index = options?.selectedIndex ?? 0` (—Å—Ç—Ä–æ–∫–∞ 185)
- `method = item.content[index] || item.content[0]` (—Å—Ç—Ä–æ–∫–∞ 186)
- `itemParameters = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 191)
- `allParameters = [...itemParameters, ...methodParameters]` (—Å—Ç—Ä–æ–∫–∞ 192)
- `uniqueParameters = Array.from(new Map(allParameters.map((p) => [p.key, p])).values())` (—Å—Ç—Ä–æ–∫–∞ 193)
- `value = options.parameters[param.key]` (—Å—Ç—Ä–æ–∫–∞ 198)
- `index = options.parameters._selectedIndex` (—Å—Ç—Ä–æ–∫–∞ 207)
- `method = item.content[index]` (—Å—Ç—Ä–æ–∫–∞ 210)
- `itemParametersForNewMethod = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 215)
- `allParametersForNewMethod = [...itemParametersForNewMethod, ...methodParameters]` (—Å—Ç—Ä–æ–∫–∞ 216)
- `uniqueParametersForNewMethod = Array.from(` (—Å—Ç—Ä–æ–∫–∞ 217)
- `value = options.parameters[param.key]` (—Å—Ç—Ä–æ–∫–∞ 223)
- `filePath = await this.getMcpFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `mcpData = JSON.parse(contentToUse)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `fileName = target === "project" ? ".neira/mcp.json" : "mcp-settings.json"` (—Å—Ç—Ä–æ–∫–∞ 245)
- `serverName = item.id` (—Å—Ç—Ä–æ–∫–∞ 262)
- `jsonContent = JSON.stringify(existingData, null, 2)` (—Å—Ç—Ä–æ–∫–∞ 269)
- `lines = jsonContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `serverLineIndex = lines.findIndex((l) => l.includes(`"${serverName}"`))` (—Å—Ç—Ä–æ–∫–∞ 277)
- `modeData = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `modes = await this.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 328)
- `mode = modes.find((m) => m.slug === modeSlug)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `filePath = await this.getMcpFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 340)
- `existingData = JSON.parse(existing)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `serverName = item.id` (—Å—Ç—Ä–æ–∫–∞ 353)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 366)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 372)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 379)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 385)

#### üìÑ RemoteConfigLoader.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modeMarketplaceResponse = z.object({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mcpMarketplaceResponse = z.object({` (—Å—Ç—Ä–æ–∫–∞ 13)
- `modesPromise = this.fetchModes()` (—Å—Ç—Ä–æ–∫–∞ 29)
- `mcpsPromise = hideMarketplaceMcps ? Promise.resolve([]) : this.fetchMcps()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `cacheKey = "modes"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `cached = this.getFromCache(cacheKey)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `data = await this.fetchWithRetry<string>(`${this.apiBaseUrl}/api/marketplace/modes`)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `yamlData = yaml.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `validated = modeMarketplaceResponse.parse(yamlData)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `cacheKey = "mcps"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `cached = this.getFromCache(cacheKey)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `data = await this.fetchWithRetry<string>(`${this.apiBaseUrl}/api/marketplace/mcps`)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `yamlData = yaml.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `validated = mcpMarketplaceResponse.parse(yamlData)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `response = await axios.get(url, {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `delay = Math.pow(2, i) * 1000` (—Å—Ç—Ä–æ–∫–∞ 95)
- `items = await this.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `cached = this.cache.get(key)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ MarketplaceManager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `orgErrorMessage = orgError instanceof Error ? orgError.message : String(orgError)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `allMarketplaceItems = await this.configLoader.loadAllItems(orgSettings?.hideMarketplaceMcps)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `hiddenMcpIds = new Set(orgSettings.hiddenMcps)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await this.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `searchTerm = filters.search.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `searchableText = `${item.name} ${item.description}`.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `allItems = await this.getCurrentItems()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await this.installer.installItem(item, { target, parameters })` (—Å—Ç—Ä–æ–∫–∞ 150)
- `selectedMethod = item.content[parameters._selectedIndex]` (—Å—Ç—Ä–æ–∫–∞ 159)
- `document = await vscode.workspace.openTextDocument(result.filePath)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `metadata = {` (—Å—Ç—Ä–æ–∫–∞ 230)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `projectModesPath = path.join(workspaceFolder.uri.fsPath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 255)
- `content = await fs.readFile(projectModesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `data = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `projectMcpPath = path.join(workspaceFolder.uri.fsPath, ".neira", "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 273)
- `content = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `data = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 297)
- `globalModesPath = path.join(globalSettingsPath, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `content = await fs.readFile(globalModesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `data = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `globalMcpPath = path.join(globalSettingsPath, GlobalFileNames.mcpSettings)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `content = await fs.readFile(globalMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `data = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 321)

### üìÇ src/services/glob

#### üìÑ list-files.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getFirstLevelDirectories(dirPath: s, ignoreInstance: R): Promise<string[]>` - Get only the first-level directories in a path (—Å—Ç—Ä–æ–∫–∞ 77)
- `async handleSpecialDirectories(dirPath: s): Promise<[string[], boolean] | null>` - Handle special directories (root, home) that should not be fully listed (—Å—Ç—Ä–æ–∫–∞ 159)
- `async getRipgrepPath(): Promise<string>` - Get the path to the ripgrep binary (—Å—Ç—Ä–æ–∫–∞ 182)
- `buildRipgrepArgs(dirPath: s, recursive: b): string[]` - Build appropriate ripgrep arguments based on whether we're doing a recursive search (—Å—Ç—Ä–æ–∫–∞ 215)
- `buildRecursiveArgs(dirPath: s): string[]` - Build ripgrep arguments for recursive directory traversal (—Å—Ç—Ä–æ–∫–∞ 229)
- `buildNonRecursiveArgs(): string[]` - Build ripgrep arguments for non-recursive directory listing (—Å—Ç—Ä–æ–∫–∞ 294)
- `async createIgnoreInstance(dirPath: s): Promise<ReturnType<typeof ignore>>` - Create an ignore instance that handles .gitignore files properly This replaces the custom gitignore parsing with the proper ignore library (—Å—Ç—Ä–æ–∫–∞ 326)
- `async findGitignoreFiles(startPath: s): Promise<string[]>` - Find all .gitignore files from the given directory up to the workspace root (—Å—Ç—Ä–æ–∫–∞ 353)
- `async scanDirectory(currentPath: s, context: S): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 404)
- `matchesIgnorePattern(dirName: s, patterns: s): boolean` - Check if a directory matches any of the given patterns (—Å—Ç—Ä–æ–∫–∞ 488)
- `shouldIncludeTargetDirectory(dirName: s): boolean` - Check if a target directory should be included (—Å—Ç—Ä–æ–∫–∞ 513)
- `shouldIncludeInsideHiddenTarget(dirName: s, fullDirPath: s, context: S): boolean` - Check if a directory inside an explicitly targeted hidden directory should be included (—Å—Ç—Ä–æ–∫–∞ 522)
- `shouldIncludeRegularDirectory(dirName: s, fullDirPath: s, context: S): boolean` - Check if a regular directory should be included (—Å—Ç—Ä–æ–∫–∞ 535)
- `shouldIncludeDirectory(dirName: s, fullDirPath: s, context: S): boolean` - Determine if a directory should be included in results based on filters (—Å—Ç—Ä–æ–∫–∞ 549)
- `isDirectoryExplicitlyIgnored(dirName: s): boolean` - Check if a directory is in our explicit ignore list (—Å—Ç—Ä–æ–∫–∞ 569)
- `formatAndCombineResults(files: s, directories: s, limit: n): [string[], boolean]` - Combine file and directory results and format them properly (—Å—Ç—Ä–æ–∫–∞ 596)
- `async execRipgrep(rgPath: s, args: s, limit: n): Promise<string[]>` - Execute ripgrep command and return list of files (—Å—Ç—Ä–æ–∫–∞ 621)
- `processRipgrepOutput()` (—Å—Ç—Ä–æ–∫–∞ 678)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ScanContext` - Context object for directory scanning operations (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `specialResult = await handleSpecialDirectories(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `rgPath = await getRipgrepPath()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `files = await listFilesWithRipgrep(rgPath, dirPath, false, limit)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `ignoreInstance = await createIgnoreInstance(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `directories = await listFilteredDirectories(dirPath, false, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `files = await listFilesWithRipgrep(rgPath, dirPath, true, limit)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `ignoreInstance = await createIgnoreInstance(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `directories = await listFilteredDirectories(dirPath, true, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `firstLevelDirs = await getFirstLevelDirectories(dirPath, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `entries = await fs.promises.readdir(absolutePath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 82)
- `fullDirPath = path.join(absolutePath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `formattedPath = fullDirPath.endsWith("/") ? fullDirPath : `${fullDirPath}/`` (—Å—Ç—Ä–æ–∫–∞ 94)
- `existingPaths = new Set(results)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `missingDirs = firstLevelDirs.filter((dir) => !existingPaths.has(dir))` (—Å—Ç—Ä–æ–∫–∞ 118)
- `itemsToRemove = Math.min(missingDirs.length, results.length)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `adjustedResults = results.slice(0, results.length - itemsToRemove)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `resultPaths = adjustedResults.map((r) => path.resolve(r))` (—Å—Ç—Ä–æ–∫–∞ 132)
- `basePath = path.resolve(firstLevelDirs[0]).split(path.sep).slice(0, -1).join(path.sep)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `resolvedPath = resultPaths[i]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `relativePath = path.relative(basePath, resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `depth = relativePath.split(path.sep).length` (—Å—Ç—Ä–æ–∫–∞ 141)
- `finalResults = [...firstLevelResults, ...missingDirs, ...otherResults].slice(0, limit)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `root = process.platform === "win32" ? path.parse(absolutePath).root : "/"` (—Å—Ç—Ä–æ–∫–∞ 163)
- `isRoot = arePathsEqual(absolutePath, root)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `isHomeDir = arePathsEqual(absolutePath, homeDir)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `vscodeAppRoot = vscode.env.appRoot` (—Å—Ç—Ä–æ–∫–∞ 183)
- `rgPath = await getBinPath(vscodeAppRoot)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `rgArgs = buildRipgrepArgs(dirPath, recursive)` (—Å—Ç—Ä–æ–∫–∞ 202)
- `relativePaths = await execRipgrep(rgPath, rgArgs, limit)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `args = ["--files", "--hidden", "--follow"]` (—Å—Ç—Ä–æ–∫–∞ 217)
- `normalizedPath = path.normalize(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `pathParts = normalizedPath.split(path.sep).filter((part) => part.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `isTargetingHiddenDir = pathParts.some((part) => part.startsWith("."))` (—Å—Ç—Ä–æ–∫–∞ 241)
- `targetDirName = path.basename(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `isTargetInIgnoreList = DIRS_TO_IGNORE.includes(targetDirName)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `ignoreInstance = ignore()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `gitignoreFiles = await findGitignoreFiles(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 331)
- `content = await fs.promises.readFile(gitignoreFile, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `gitignorePath = path.join(currentPath, ".gitignore")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `parentPath = path.dirname(currentPath)` (—Å—Ç—Ä–æ–∫–∞ 369)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `isExplicitHiddenTarget = path.basename(absolutePath).startsWith(".")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `entries = await fs.promises.readdir(currentPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 407)
- `dirName = entry.name` (—Å—Ç—Ä–æ–∫–∞ 412)
- `fullDirPath = path.join(currentPath, dirName)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `formattedPath = fullDirPath.endsWith("/") ? fullDirPath : `${fullDirPath}/`` (—Å—Ç—Ä–æ–∫–∞ 426)
- `isHiddenDir = dirName.startsWith(".")` (—Å—Ç—Ä–æ–∫–∞ 433)
- `CRITICAL_IGNORE_PATTERNS = new Set(["node_modules", ".git", "__pycache__", "venv", "env"])` - Critical directories that should always be ignored, even inside explicitly targeted hidden directories (—Å—Ç—Ä–æ–∫–∞ 483)
- `relativePath = path.relative(basePath, fullDirPath)` (—Å—Ç—Ä–æ–∫–∞ 505)
- `normalizedPath = relativePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 506)
- `nonHiddenIgnorePatterns = DIRS_TO_IGNORE.filter((pattern) => pattern !== ".*")` (—Å—Ç—Ä–æ–∫–∞ 515)
- `nonHiddenIgnorePatterns = DIRS_TO_IGNORE.filter((pattern) => pattern !== ".*")` (—Å—Ç—Ä–æ–∫–∞ 537)
- `pathParts = pattern.split("/")` (—Å—Ç—Ä–æ–∫–∞ 583)
- `allPaths = [...directories, ...files]` (—Å—Ç—Ä–æ–∫–∞ 598)
- `uniquePathsSet = new Set(allPaths)` (—Å—Ç—Ä–æ–∫–∞ 601)
- `uniquePaths = Array.from(uniquePathsSet)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `aIsDir = a.endsWith("/")` (—Å—Ç—Ä–æ–∫–∞ 606)
- `bIsDir = b.endsWith("/")` (—Å—Ç—Ä–æ–∫–∞ 607)
- `trimmedPaths = uniquePaths.slice(0, limit)` (—Å—Ç—Ä–æ–∫–∞ 614)
- `searchDir = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 624)
- `rgProcess = childProcess.spawn(rgPath, args)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 631)
- `lines = output.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 679)

#### üìÑ ignore-utils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `normalizedPath = filePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `pathParts = normalizedPath.split("/")` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ constants.ts

### üìÇ src/services/command

#### üìÑ commands.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commands = new Map<string, Command>()` - Get all available commands from both global and project directories (—Å—Ç—Ä–æ–∫–∞ 19)
- `globalDir = path.join(getGlobalRooDirectory(), "commands")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `projectDir = path.join(getProjectRooDirectoryForCwd(cwd), "commands")` (—Å—Ç—Ä–æ–∫–∞ 26)
- `projectDir = path.join(getProjectRooDirectoryForCwd(cwd), "commands")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `globalDir = path.join(getGlobalRooDirectory(), "commands")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `projectCommand = await tryLoadCommand(projectDir, name, "project")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `globalCommand = await tryLoadCommand(globalDir, name, "global")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `commandFileName = `${name}.md`` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filePath = path.join(dirPath, commandFileName)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `commands = await getCommands(cwd)` - Get command names for autocomplete (—Å—Ç—Ä–æ–∫–∞ 118)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `entries = await fs.readdir(dirPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 136)
- `filePath = path.join(dirPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `commandName = getCommandNameFromFile(entry.name)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 144)

### üìÇ src/services/code-index

#### üìÑ state-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `progressChanged = processedItems !== this._processedItems || totalItems !== this._totalItems` (—Å—Ç—Ä–æ–∫–∞ 59)
- `message = `Indexed ${this._processedItems} / ${this._totalItems} ${this._currentItemUnit} found`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `oldStatus = this._systemStatus` (—Å—Ç—Ä–æ–∫–∞ 68)
- `oldMessage = this._statusMessage` (—Å—Ç—Ä–æ–∫–∞ 69)
- `progressChanged = processedFiles !== this._processedItems || totalFiles !== this._totalItems` (—Å—Ç—Ä–æ–∫–∞ 82)
- `oldStatus = this._systemStatus` (—Å—Ç—Ä–æ–∫–∞ 101)
- `oldMessage = this._statusMessage` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ service-factory.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = this.configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `provider = config.embedderProvider as EmbedderProvider` (—Å—Ç—Ä–æ–∫–∞ 34)
- `apiKey = config.openAiOptions?.openAiNativeApiKey` (—Å—Ç—Ä–æ–∫–∞ 37)
- `config = this.configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `provider = config.embedderProvider as EmbedderProvider` (—Å—Ç—Ä–æ–∫–∞ 110)
- `defaultModel = getDefaultModelId(provider)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `modelId = config.modelId ?? defaultModel` (—Å—Ç—Ä–æ–∫–∞ 113)
- `embedder = this.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `vectorStore = this.createVectorStore()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `parser = codeParser` (—Å—Ç—Ä–æ–∫–∞ 189)
- `scanner = this.createDirectoryScanner(embedder, vectorStore, parser, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 190)
- `fileWatcher = this.createFileWatcher(context, embedder, vectorStore, cacheManager, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 191)

#### üìÑ search-service.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `minScore = this.configManager.currentSearchMinScore` (—Å—Ç—Ä–æ–∫–∞ 34)
- `maxResults = this.configManager.currentSearchMaxResults` (—Å—Ç—Ä–æ–∫–∞ 35)
- `currentState = this.stateManager.getCurrentStatus().systemStatus` (—Å—Ç—Ä–æ–∫–∞ 37)
- `embeddingResponse = await this.embedder.createEmbeddings([query])` (—Å—Ç—Ä–æ–∫–∞ 45)
- `vector = embeddingResponse?.embeddings[0]` (—Å—Ç—Ä–æ–∫–∞ 46)
- `results = await this.vectorStore.search(vector, normalizedPrefix, minScore, maxResults)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ orchestrator.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleFileParsed(fileBlockCount: n)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `handleBlocksIndexed(indexedCount: n)` (—Å—Ç—Ä–æ–∫–∞ 144)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `successCount = summary.processedFiles.filter(` (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorCount = summary.processedFiles.filter(` (—Å—Ç—Ä–æ–∫–∞ 73)
- `collectionCreated = await this.vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `handleFileParsed = (fileBlockCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 139)
- `handleBlocksIndexed = (indexedCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `result = await this.scanner.scanDirectory(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 173)
- `failureRate = (cumulativeBlocksFoundSoFar - cumulativeBlocksIndexed) / cumulativeBlocksFoundSoFar` (—Å—Ç—Ä–æ–∫–∞ 181)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 193)

#### üìÑ manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 33)
- `workspacePath = workspaceFolders[0].uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 41)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 125)
- `needsServiceRecreation = !this._serviceFactory || requiresRestart` (—Å—Ç—Ä–æ–∫–∞ 138)
- `ignoreInstance = ignore()` (—Å—Ç—Ä–æ–∫–∞ 239)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 240)
- `ignorePath = path.join(workspacePath, ".gitignore")` (—Å—Ç—Ä–æ–∫–∞ 247)
- `content = await fs.readFile(ignorePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `validationResult = await this._serviceFactory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `errorMessage = validationResult.error || "Embedder configuration validation failed"` (—Å—Ç—Ä–æ–∫–∞ 272)
- `isFeatureEnabled = this.isFeatureEnabled` (—Å—Ç—Ä–æ–∫–∞ 310)
- `isFeatureConfigured = this.isFeatureConfigured` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ config-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseIndexConfig = this.contextProxy?.getGlobalState("codebaseIndexConfig") ?? {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `openAiKey = this.contextProxy?.getSecret("codeIndexOpenAiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 65)
- `qdrantApiKey = this.contextProxy?.getSecret("codeIndexQdrantApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 66)
- `openAiCompatibleBaseUrl = codebaseIndexConfig.codebaseIndexOpenAiCompatibleBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 68)
- `openAiCompatibleApiKey = this.contextProxy?.getSecret("codebaseIndexOpenAiCompatibleApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 69)
- `geminiApiKey = this.contextProxy?.getSecret("codebaseIndexGeminiApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mistralApiKey = this.contextProxy?.getSecret("codebaseIndexMistralApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 71)
- `rawDimension = codebaseIndexConfig.codebaseIndexEmbedderModelDimension` (—Å—Ç—Ä–æ–∫–∞ 81)
- `dimension = Number(rawDimension)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `requiresRestart = this.doesConfigChangeRequireRestart(previousConfigSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `openAiKey = this.openAiOptions?.openAiNativeApiKey` (—Å—Ç—Ä–æ–∫–∞ 200)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 201)
- `ollamaBaseUrl = this.ollamaOptions?.ollamaBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 205)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 206)
- `baseUrl = this.openAiCompatibleOptions?.baseUrl` (—Å—Ç—Ä–æ–∫–∞ 209)
- `apiKey = this.openAiCompatibleOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 210)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 211)
- `isConfigured = !!(baseUrl && apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `apiKey = this.geminiOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 215)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 216)
- `isConfigured = !!(apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 217)
- `apiKey = this.mistralOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 220)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 221)
- `isConfigured = !!(apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `nowConfigured = this.isConfigured()` (—Å—Ç—Ä–æ–∫–∞ 245)
- `prevEnabled = prev?.enabled ?? false` (—Å—Ç—Ä–æ–∫–∞ 248)
- `prevConfigured = prev?.configured ?? false` (—Å—Ç—Ä–æ–∫–∞ 249)
- `prevProvider = prev?.embedderProvider ?? "openai"` (—Å—Ç—Ä–æ–∫–∞ 250)
- `prevOpenAiKey = prev?.openAiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 251)
- `prevOllamaBaseUrl = prev?.ollamaBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 252)
- `prevOpenAiCompatibleBaseUrl = prev?.openAiCompatibleBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 253)
- `prevOpenAiCompatibleApiKey = prev?.openAiCompatibleApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 254)
- `prevModelDimension = prev?.modelDimension` (—Å—Ç—Ä–æ–∫–∞ 255)
- `prevGeminiApiKey = prev?.geminiApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 256)
- `prevMistralApiKey = prev?.mistralApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 257)
- `prevQdrantUrl = prev?.qdrantUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 258)
- `prevQdrantApiKey = prev?.qdrantApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 259)
- `currentOpenAiKey = this.openAiOptions?.openAiNativeApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 288)
- `currentOllamaBaseUrl = this.ollamaOptions?.ollamaBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 289)
- `currentOpenAiCompatibleBaseUrl = this.openAiCompatibleOptions?.baseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 290)
- `currentOpenAiCompatibleApiKey = this.openAiCompatibleOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 291)
- `currentModelDimension = this.modelDimension` (—Å—Ç—Ä–æ–∫–∞ 292)
- `currentGeminiApiKey = this.geminiOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 293)
- `currentMistralApiKey = this.mistralOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 294)
- `currentQdrantUrl = this.qdrantUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 295)
- `currentQdrantApiKey = this.qdrantApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 296)
- `currentProvider = this.embedderProvider` (—Å—Ç—Ä–æ–∫–∞ 342)
- `currentModelId = this.modelId ?? getDefaultModelId(currentProvider)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `resolvedPrevModelId = prevModelId ?? getDefaultModelId(prevProvider)` (—Å—Ç—Ä–æ–∫–∞ 344)
- `prevDimension = getModelDimension(prevProvider, resolvedPrevModelId)` (—Å—Ç—Ä–æ–∫–∞ 352)
- `currentDimension = getModelDimension(currentProvider, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 353)
- `modelId = this.modelId ?? getDefaultModelId(this.embedderProvider)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `modelDimension = getModelDimension(this.embedderProvider, modelId)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `currentModelId = this.modelId ?? getDefaultModelId(this.embedderProvider)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `modelSpecificThreshold = getModelScoreThreshold(this.embedderProvider, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 452)

#### üìÑ cache-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cacheData = await vscode.workspace.fs.readFile(this.cachePath)` (—Å—Ç—Ä–æ–∫–∞ 40)

### üìÇ src/services/checkpoints

#### üìÑ types.ts

#### üìÑ index.ts

#### üìÑ excludes.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getBuildArtifactPatterns()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `getMediaFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getCacheFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `getConfigFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 102)
- `getLargeDataFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `getDatabaseFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 121)
- `getGeospatialPatterns()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `getLogFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 175)
- `async getLfsPatterns(workspacePath: s)` (—Å—Ç—Ä–æ–∫–∞ 186)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getBuildArtifactPatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 6)
- `getMediaFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getCacheFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `getConfigFilePatterns = () => ["*.env*", "*.local", "*.development", "*.production"]` (—Å—Ç—Ä–æ–∫–∞ 102)
- `getLargeDataFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 104)
- `getDatabaseFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 121)
- `getGeospatialPatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 145)
- `getLogFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 175)
- `getLfsPatterns = async (workspacePath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `attributesPath = join(workspacePath, ".gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 188)

#### üìÑ ShadowCheckpointService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homedir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `desktopPath = path.join(homedir, "Desktop")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `documentsPath = path.join(homedir, "Documents")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `downloadsPath = path.join(homedir, "Downloads")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `protectedPaths = [homedir, desktopPath, documentsPath, downloadsPath]` (—Å—Ç—Ä–æ–∫–∞ 48)
- `hasNestedGitRepos = await this.hasNestedGitRepositories()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `git = simpleGit(this.checkpointsDir)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `gitVersion = await git.version()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `startTime = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `worktree = await this.getShadowGitConfigWorktree(git)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `duration = Date.now() - startTime` (—Å—Ç—Ä–æ–∫–∞ 110)
- `patterns = await getExcludePatterns(this.workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `args = ["--files", "--hidden", "--follow", "-g", "**/.git/HEAD", this.workspaceDir]` (—Å—Ç—Ä–æ–∫–∞ 155)
- `gitPaths = await executeRipgrep({ args, workspacePath: this.workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 157)
- `nestedGitPaths = gitPaths.filter(` (—Å—Ç—Ä–æ–∫–∞ 160)
- `startTime = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 210)
- `commitArgs = options?.allowEmpty ? { "--allow-empty": null } : undefined` (—Å—Ç—Ä–æ–∫–∞ 212)
- `result = await this.git.commit(message, commitArgs)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `isFirst = this._checkpoints.length === 0` (—Å—Ç—Ä–æ–∫–∞ 214)
- `fromHash = this._checkpoints[this._checkpoints.length - 1] ?? this.baseHash!` (—Å—Ç—Ä–æ–∫–∞ 215)
- `toHash = result.commit || fromHash` (—Å—Ç—Ä–æ–∫–∞ 216)
- `duration = Date.now() - startTime` (—Å—Ç—Ä–æ–∫–∞ 218)
- `error = e instanceof Error ? e : new Error(String(e))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `start = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `checkpointIndex = this._checkpoints.indexOf(commitHash)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `duration = Date.now() - start` (—Å—Ç—Ä–æ–∫–∞ 260)
- `error = e instanceof Error ? e : new Error(String(e))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = []` (—Å—Ç—Ä–æ–∫–∞ 276)
- `cwdPath = (await this.getShadowGitConfigWorktree(this.git)) || this.workspaceDir || ""` (—Å—Ç—Ä–æ–∫–∞ 288)
- `relPath = file.file` (—Å—Ç—Ä–æ–∫–∞ 291)
- `absPath = path.join(cwdPath, relPath)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `before = await this.git.show([`${from}:${relPath}`]).catch(() => "")` (—Å—Ç—Ä–æ–∫–∞ 293)
- `after = to` (—Å—Ç—Ä–æ–∫–∞ 295)
- `workspaceRepoDir = this.workspaceRepoDir({ globalStorageDir, workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 356)
- `branchName = `roo-${taskId}`` (—Å—Ç—Ä–æ–∫–∞ 357)
- `git = simpleGit(workspaceRepoDir)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `success = await this.deleteBranch(git, branchName)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `branches = await git.branchLocal()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `currentBranch = await git.revparse(["--abbrev-ref", "HEAD"])` (—Å—Ç—Ä–æ–∫–∞ 376)
- `worktree = await git.getConfig("core.worktree")` (—Å—Ç—Ä–æ–∫–∞ 379)
- `defaultBranch = branches.all.includes("main") ? "main" : "master"` (—Å—Ç—Ä–æ–∫–∞ 385)
- `newBranch = await git.revparse(["--abbrev-ref", "HEAD"])` (—Å—Ç—Ä–æ–∫–∞ 390)

#### üìÑ RepoPerTaskCheckpointService.ts

### üìÇ src/services/browser

#### üìÑ browserDiscovery.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async discoverChromeHosts(port: n): Promise<string | null>` (—Å—Ç—Ä–æ–∫–∞ 109)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `socket = new net.Socket()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `networkPrefix = baseIP.split(".").slice(0, 3).join(".") + "."` (—Å—Ç—Ä–æ–∫–∞ 85)
- `priorityIPs = [` (—Å—Ç—Ä–æ–∫–∞ 88)
- `isOpen = await isPortOpen(ip, port)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `discoverChromeHosts = async (port: number): Promise<string | null> => {` (—Å—Ç—Ä–æ–∫–∞ 109)
- `ipAddresses = []` (—Å—Ç—Ä–æ–∫–∞ 111)
- `hostIP = await getDockerHostIP()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `uniqueIPs = [...new Set(ipAddresses)]` (—Å—Ç—Ä–æ–∫–∞ 121)
- `hostEndpoint = `http://${ip}:${port}`` (—Å—Ç—Ä–æ–∫–∞ 126)
- `hostIsValid = await tryChromeHostUrl(hostEndpoint)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `hostsToTry = [`http://localhost:${port}`, `http://127.0.0.1:${port}`]` (—Å—Ç—Ä–æ–∫–∞ 150)
- `hostIsValid = await tryChromeHostUrl(hostUrl)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `discoveredHostUrl = await discoverChromeHosts(port)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `hostIsValid = await tryChromeHostUrl(discoveredHostUrl)` (—Å—Ç—Ä–æ–∫–∞ 170)

#### üìÑ UrlContentFetcher.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PCRStats` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `URL_FETCH_TIMEOUT = 30_000 // 30 seconds` (—Å—Ç—Ä–æ–∫–∞ 13)
- `URL_FETCH_FALLBACK_TIMEOUT = 20_000 // 20 seconds for fallback` (—Å—Ç—Ä–æ–∫–∞ 14)
- `globalStoragePath = this.context?.globalStorageUri?.fsPath` (—Å—Ç—Ä–æ–∫–∞ 31)
- `puppeteerDir = path.join(globalStoragePath, "puppeteer")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `dirExists = await fileExistsAtPath(puppeteerDir)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `stats = await this.ensureChromiumExists()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `serializedError = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `errorMessage = serializedError.message || String(error)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `errorName = serializedError.name` (—Å—Ç—Ä–æ–∫–∞ 101)
- `content = await this.page.content()` (—Å—Ç—Ä–æ–∫–∞ 126)
- `$ = cheerio.load(content)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `turndownService = new TurndownService()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `markdown = turndownService.turndown($.html())` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ BrowserSession.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `consoleListener(msg: a)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `errorListener(err: E)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `requestListener()` (—Å—Ç—Ä–æ–∫–∞ 468)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PCRStats` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BROWSER_NAVIGATION_TIMEOUT = 15_000 // 15 seconds` (—Å—Ç—Ä–æ–∫–∞ 14)
- `globalStoragePath = this.context?.globalStorageUri?.fsPath` (—Å—Ç—Ä–æ–∫–∞ 34)
- `puppeteerDir = path.join(globalStoragePath, "puppeteer")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `dirExists = await fileExistsAtPath(puppeteerDir)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `size = (this.context.globalState.get("browserViewportSize") as string | undefined) || "900x600"` (—Å—Ç—Ä–æ–∫–∞ 58)
- `stats = await this.ensureChromiumExists()` (—Å—Ç—Ä–æ–∫–∞ 68)
- `cachedChromeHostUrl = this.context.globalState.get("cachedChromeHostUrl") as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 112)
- `hostIsValid = await tryChromeHostUrl(remoteBrowserHost)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `chromeHostUrl = await discoverChromeHostUrl()` (—Å—Ç—Ä–æ–∫–∞ 152)
- `remoteBrowserEnabled = this.context.globalState.get("remoteBrowserEnabled") as boolean | undefined` (—Å—Ç—Ä–æ–∫–∞ 169)
- `remoteConnected = await this.connectToRemoteBrowser()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `consoleListener = (msg: any) => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `errorListener = (err: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 240)
- `urlObj = new URL(url)` (—Å—Ç—Ä–æ–∫–∞ 313)
- `newPage = await this.browser.newPage()` (—Å—Ç—Ä–æ–∫–∞ 339)
- `result = await this.doAction(async (page) => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `normalizedNewUrl = url.replace(/\/$/, "")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `rootDomain = this.getRootDomain(normalizedNewUrl)` (—Å—Ç—Ä–æ–∫–∞ 360)
- `pages = await this.browser.pages()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `pageUrl = page.url()` (—Å—Ç—Ä–æ–∫–∞ 370)
- `currentUrl = existingPage.url().replace(/\/$/, "") // Remove trailing / if present` (—Å—Ç—Ä–æ–∫–∞ 391)
- `checkDurationMsecs = 500 // 1000` (—Å—Ç—Ä–æ–∫–∞ 426)
- `maxChecks = timeout / checkDurationMsecs` (—Å—Ç—Ä–æ–∫–∞ 427)
- `minStableSizeIterations = 3` (—Å—Ç—Ä–æ–∫–∞ 431)
- `requestListener = () => {` (—Å—Ç—Ä–æ–∫–∞ 468)
- `scrollAmount = direction === "down" ? height : -height` (—Å—Ç—Ä–æ–∫–∞ 514)
- `session = await page.createCDPSession()` (—Å—Ç—Ä–æ–∫–∞ 551)

### üìÇ src/integrations/workspace

#### üìÑ WorkspaceTracker.ts

**–ö–ª–∞—Å—Å—ã:**

- `class WorkspaceTracker (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_INITIAL_FILES = 1_000` (—Å—Ç—Ä–æ–∫–∞ 8)
- `tempCwd = this.cwd` (—Å—Ç—Ä–æ–∫–∞ 32)
- `watcher = vscode.workspace.createFileSystemWatcher("**")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `groupTabs = group.tabs` (—Å—Ç—Ä–æ–∫–∞ 79)
- `relativeFilePaths = Array.from(this.filePaths).map((file) => toRelativePath(file, this.cwd))` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resolvedPath = this.cwd ? path.resolve(this.cwd, filePath) : path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `normalizedPath = this.normalizeFilePath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stat = await vscode.workspace.fs.stat(vscode.Uri.file(normalizedPath))` (—Å—Ç—Ä–æ–∫–∞ 144)
- `isDirectory = (stat.type & vscode.FileType.Directory) !== 0` (—Å—Ç—Ä–æ–∫–∞ 145)
- `pathWithSlash = isDirectory && !normalizedPath.endsWith("/") ? normalizedPath + "/" : normalizedPath` (—Å—Ç—Ä–æ–∫–∞ 146)
- `normalizedPath = this.normalizeFilePath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 157)

### üìÇ src/integrations/theme

#### üìÑ getTheme.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseThemeString(themeString: s): any` (—Å—Ç—Ä–æ–∫–∞ 25)
- `getExtensionUri(): vscode.Uri` (—Å—Ç—Ä–æ–∫–∞ 145)

**–¢–∏–ø—ã:**

- `type JsonObject` (—Å—Ç—Ä–æ–∫–∞ 93)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `colorTheme = vscode.workspace.getConfiguration("workbench").get<string>("colorTheme") || "Default Dark Modern"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `extension = vscode.extensions.all[i]` (—Å—Ç—Ä–æ–∫–∞ 44)
- `themePath = path.join(extension.extensionPath, theme.path)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `filename = `${defaultThemes[colorTheme]}.json`` (—Å—Ç—Ä–æ–∫–∞ 57)
- `includeThemeString = await fs.readFile(` (—Å—Ç—Ä–æ–∫–∞ 68)
- `includeTheme = parseThemeString(includeThemeString)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `converted = convertTheme(parsed)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `copyOfFirst = JSON.parse(JSON.stringify(first))` (—Å—Ç—Ä–æ–∫–∞ 100)
- `secondValue = second[key]` (—Å—Ç—Ä–æ–∫–∞ 104)
- `firstValue = copyOfFirst[key]` (—Å—Ç—Ä–æ–∫–∞ 112)

### üìÇ src/integrations/terminal

#### üìÑ types.ts

#### üìÑ mergePromise.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async nativePromisePrototype()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nativePromisePrototype = (async () => {})().constructor.prototype` (—Å—Ç—Ä–æ–∫–∞ 7)
- `descriptors = ["then", "catch", "finally"].map(` (—Å—Ç—Ä–æ–∫–∞ 9)
- `value = descriptor.value.bind(promise)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ TerminalRegistry.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `closeDisposable = vscode.window.onDidCloseTerminal((vsceTerminal) => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `terminal = this.getTerminalByVSCETerminal(vsceTerminal)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `startDisposable = vscode.window.onDidStartTerminalShellExecution?.(` (—Å—Ç—Ä–æ–∫–∞ 49)
- `stream = e.execution.read()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `terminal = this.getTerminalByVSCETerminal(e.terminal)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `endDisposable = vscode.window.onDidEndTerminalShellExecution?.(` (—Å—Ç—Ä–æ–∫–∞ 76)
- `terminal = this.getTerminalByVSCETerminal(e.terminal)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `process = terminal?.process` (—Å—Ç—Ä–æ–∫–∞ 79)
- `exitDetails = TerminalProcess.interpretExitCode(e.exitCode)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `terminals = this.getAllTerminals()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `terminalCwd = t.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `terminalCwd = t.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `terminal = this.terminals.find((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `found = this.terminals.find((t) => t instanceof Terminal && t.terminal === vsceTerminal)` (—Å—Ç—Ä–æ–∫–∞ 322)

#### üìÑ TerminalProcess.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = this.terminalRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `terminal = this.terminal.terminal` (—Å—Ç—Ä–æ–∫–∞ 50)
- `isShellIntegrationAvailable = terminal.shellIntegration && terminal.shellIntegration.executeCommand` (—Å—Ç—Ä–æ–∫–∞ 52)
- `streamAvailable = new Promise<AsyncIterable<string>>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `shellExecutionComplete = new Promise<ExitCodeDetails>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `defaultWindowsShellProfile = vscode.workspace` (—Å—Ç—Ä–æ–∫–∞ 108)
- `match = this.matchAfterVsceStartMarkers(data)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 198)
- `inspectPreOutput = inspect(preOutput, { colors: false, breakLength: Infinity })` (—Å—Ç—Ä–æ–∫–∞ 223)
- `match = this.matchBeforeVsceEndMarkers(this.fullOutput)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `index633 = outputToProcess.indexOf("\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 284)
- `index133 = outputToProcess.indexOf("\x1b]133` (—Å—Ç—Ä–æ–∫–∞ 285)
- `remainingBuffer = this.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `bellIndex = data.indexOf(bell, startIndex + prefix.length)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `distanceToBell = bellIndex - startIndex` (—Å—Ç—Ä–æ–∫–∞ 363)
- `contentStart = startIndex + prefixLength` (—Å—Ç—Ä–æ–∫–∞ 370)
- `match633 = this.stringIndexMatch(data, prefix633, suffix633)` (—Å—Ç—Ä–æ–∫–∞ 455)

#### üìÑ Terminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `env = Terminal.getEnv()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `iconPath = new vscode.ThemeIcon("rocket")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `process = new TerminalProcess(this)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `promise = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `tempCopyBuffer = await vscode.env.clipboard.readText()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `lines = terminalContents.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `lastLine = lines.pop()?.trim()` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ ShellIntegrationManager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `os = require("os")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `tmpDir = path.join(os.tmpdir(), `roo-zdotdir-${Math.random().toString(36).substring(2, 15)}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `zshrcPath = `${tmpDir}/.zshrc`` (—Å—Ç—Ä–æ–∫–∞ 32)
- `shellIntegrationPath = this.getShellIntegrationPath("zsh")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `zshrcContent = `` (—Å—Ç—Ä–æ–∫–∞ 37)
- `tmpDir = this.terminalTmpDirs.get(terminalId)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `logPrefix = `[TerminalRegistry] Cleaning up temporary directory for terminal ${terminalId}`` (—Å—Ç—Ä–æ–∫–∞ 76)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `zshrcPath = path.join(tmpDir, ".zshrc")` (—Å—Ç—Ä–æ–∫–∞ 85)

#### üìÑ ExecaTerminalProcess.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `performKill()` (—Å—Ç—Ä–æ–∫–∞ 163)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = this.terminalRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `actualPid = parseInt(children[0].PID)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `rawStream = this.subprocess.iterable({ from: "all", preserveNewlines: true })` (—Å—Ç—Ä–æ–∫–∞ 74)
- `stream = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `kill = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 105)
- `performKill = () => {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `pids = children.map((p) => parseInt(p.PID))` (—Å—Ç—Ä–æ–∫–∞ 199)
- `output = this.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 248)

#### üìÑ ExecaTerminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `process = new ExecaTerminalProcess(this)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `promise = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ BaseTerminalProcess.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `signal = exitCode - 128` (—Å—Ç—Ä–æ–∫–∞ 25)
- `coreDumpPossible = new Set([3, 4, 6, 7, 8, 11])` (—Å—Ç—Ä–æ–∫–∞ 101)

#### üìÑ BaseTerminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `processOutput = process.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `activeOutput = this.process?.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 143)
- `effectiveCharLimit = characterLimit ?? DEFAULT_TERMINAL_OUTPUT_CHARACTER_LIMIT` (—Å—Ç—Ä–æ–∫–∞ 281)

### üìÇ src/integrations/editor

#### üìÑ detect-omission.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actualLineCount = newFileContent.split("\n").length` (—Å—Ç—Ä–æ–∫–∞ 18)
- `lengthRatio = actualLineCount / predictedLineCount` (—Å—Ç—Ä–æ–∫–∞ 19)
- `originalLines = originalFileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `newLines = newFileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `omissionKeywords = [` (—Å—Ç—Ä–æ–∫–∞ 23)
- `commentPatterns = [` (—Å—Ç—Ä–æ–∫–∞ 35)
- `words = line.toLowerCase().split(/\s+/)` (—Å—Ç—Ä–æ–∫–∞ 48)

#### üìÑ EditorUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `selectedText = document.getText(range)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `currentLine = document.lineAt(range.start.line)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `startLineIndex = Math.max(0, currentLine.lineNumber - 1)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `endLineIndex = Math.min(document.lineCount - 1, currentLine.lineNumber + 1)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `effectiveRange = new vscode.Range(` (—Å—Ç—Ä–æ–∫–∞ 83)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(document.uri)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `relativePath = path.relative(workspaceFolder.uri.fsPath, document.uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `document = editor.document` (—Å—Ç—Ä–æ–∫–∞ 184)
- `selection = editor.selection` (—Å—Ç—Ä–æ–∫–∞ 185)
- `effectiveRange = this.getEffectiveRange(document, selection)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `filePath = this.getFilePath(document)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `diagnostics = vscode.languages` (—Å—Ç—Ä–æ–∫–∞ 193)

#### üìÑ DiffViewProvider.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 490)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `absolutePath = path.resolve(this.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `existingDocument = vscode.workspace.textDocuments.find((doc) =>` (—Å—Ç—Ä–æ–∫–∞ 57)
- `tabs = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 90)
- `accumulatedLines = accumulatedContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `diffEditor = this.activeDiffEditor` (—Å—Ç—Ä–æ–∫–∞ 125)
- `document = diffEditor?.document` (—Å—Ç—Ä–æ–∫–∞ 126)
- `beginningOfDocument = new vscode.Position(0, 0)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `endLine = accumulatedLines.length` (—Å—Ç—Ä–æ–∫–∞ 137)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 139)
- `rangeToReplace = new vscode.Range(0, 0, endLine, 0)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `ranges = this.activeDiffEditor?.visibleRanges` (—Å—Ç—Ä–æ–∫–∞ 149)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 161)
- `hasEmptyLastLine = this.originalContent?.endsWith("\n")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `finalEdit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `absolutePath = path.resolve(this.cwd, this.relPath)` (—Å—Ç—Ä–æ–∫–∞ 202)
- `updatedDocument = this.activeDiffEditor.document` (—Å—Ç—Ä–æ–∫–∞ 203)
- `editedContent = updatedDocument.getText()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `safeDelayMs = Math.max(0, writeDelayMs)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `postDiagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `task = this.taskRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 247)
- `state = await task?.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `includeDiagnosticMessages = state?.includeDiagnosticMessages ?? true` (—Å—Ç—Ä–æ–∫–∞ 249)
- `maxDiagnosticMessages = state?.maxDiagnosticMessages ?? 50` (—Å—Ç—Ä–æ–∫–∞ 250)
- `newProblems = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 252)
- `newContentEOL = this.newContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 268)
- `normalizedEditedContent = editedContent.replace(/\r\n|\n/g, newContentEOL)` (—Å—Ç—Ä–æ–∫–∞ 271)
- `normalizedNewContent = this.newContent.replace(/\r\n|\n/g, newContentEOL)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `userEdits = formatResponse.createPrettyPatch(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `xmlObj = {` (—Å—Ç—Ä–æ–∫–∞ 325)
- `builder = new XMLBuilder({` (—Å—Ç—Ä–æ–∫–∞ 345)
- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 374)
- `updatedDocument = this.activeDiffEditor.document` (—Å—Ç—Ä–æ–∫–∞ 375)
- `absolutePath = path.resolve(this.cwd, this.relPath)` (—Å—Ç—Ä–æ–∫–∞ 376)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 392)
- `fullRange = new vscode.Range(` (—Å—Ç—Ä–æ–∫–∞ 394)
- `closeOps = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 422)
- `uri = vscode.Uri.file(path.resolve(this.cwd, this.relPath))` (—Å—Ç—Ä–æ–∫–∞ 462)
- `diffTab = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 467)
- `editor = await vscode.window.showTextDocument(diffTab.input.modified, { preserveFocus: true })` (—Å—Ç—Ä–æ–∫–∞ 477)
- `fileName = path.basename(uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `DIFF_EDITOR_TIMEOUT = 10_000 // ms` (—Å—Ç—Ä–æ–∫–∞ 485)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 490)
- `editor = vscode.window.visibleTextEditors.find((e) =>` (—Å—Ç—Ä–æ–∫–∞ 517)
- `editor = editors.find((e) => arePathsEqual(e.document.uri.fsPath, uri.fsPath))` (—Å—Ç—Ä–æ–∫–∞ 532)
- `scrollLine = line + 4` (—Å—Ç—Ä–æ–∫–∞ 570)
- `currentContent = this.activeDiffEditor.document.getText()` (—Å—Ç—Ä–æ–∫–∞ 584)
- `diffs = diff.diffLines(this.originalContent || "", currentContent)` (—Å—Ç—Ä–æ–∫–∞ 585)
- `absolutePath = path.resolve(this.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `doc = await vscode.workspace.openTextDocument(vscode.Uri.file(absolutePath))` (—Å—Ç—Ä–æ–∫–∞ 671)
- `safeDelayMs = Math.max(0, writeDelayMs)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `postDiagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 694)
- `task = this.taskRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 697)
- `state = await task?.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 698)
- `includeDiagnosticMessages = state?.includeDiagnosticMessages ?? true` (—Å—Ç—Ä–æ–∫–∞ 699)
- `maxDiagnosticMessages = state?.maxDiagnosticMessages ?? 50` (—Å—Ç—Ä–æ–∫–∞ 700)
- `newProblems = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 702)

#### üìÑ DecorationController.ts

**–¢–∏–ø—ã:**

- `type DecorationType` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fadedOverlayDecorationType = vscode.window.createTextEditorDecorationType({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `activeLineDecorationType = vscode.window.createTextEditorDecorationType({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `lastRange = this.ranges[this.ranges.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 43)
- `endLine = startIndex + numLines - 1` (—Å—Ç—Ä–æ–∫–∞ 47)

### üìÇ src/integrations/misc

#### üìÑ read-lines.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `outOfRangeError(filepath: s, n: n)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `outOfRangeError = (filepath: string, n: number) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `effectiveStartLine = startLine === undefined ? 0 : startLine` (—Å—Ç—Ä–æ–∫–∞ 46)
- `input = createReadStream(filepath)` (—Å—Ç—Ä–æ–∫–∞ 56)

#### üìÑ process-images.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMimeType(filePath: s): string` (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileUris = await vscode.window.showOpenDialog(options)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `imagePath = uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 22)
- `buffer = await fs.readFile(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `base64 = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mimeType = getMimeType(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `dataUrl = `data:${mimeType}` (—Å—Ç—Ä–æ–∫–∞ 26)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ open-file.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface OpenFileOptions` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalFilePathForError = filePath` (—Å—Ç—Ä–æ–∫–∞ 16)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `relativePart = filePath.slice(2)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `homePath = path.join(homeDir, relativePart)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `tempUri = vscode.Uri.file(p)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `relativePart = originalFilePathForError.slice(2)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `contentToCreate = options.content || ""` (—Å—Ç—Ä–æ–∫–∞ 106)
- `existingTab = group.tabs.find(` (—Å—Ç—Ä–æ–∫–∞ 119)
- `activeColumn = vscode.window.activeTextEditor?.viewColumn` (—Å—Ç—Ä–æ–∫–∞ 125)
- `tabColumn = vscode.window.tabGroups.all.find((group) =>` (—Å—Ç—Ä–æ–∫–∞ 126)
- `document = await vscode.workspace.openTextDocument(uriToProcess)` (—Å—Ç—Ä–æ–∫–∞ 137)

#### üìÑ line-counter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `readStream = createReadStream(filePath)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `rl = createInterface({` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ image-handler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `matches = dataUri.match(/^data:image\/([a-zA-Z]+)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `imageBuffer = Buffer.from(base64Data, "base64")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `tempFilePath = path.join(os.tmpdir(), `temp_image_${Date.now()}.${format}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `imageData = await vscode.workspace.fs.readFile(vscode.Uri.file(tempFilePath))` (—Å—Ç—Ä–æ–∫–∞ 24)
- `base64Image = Buffer.from(imageData).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `dataUri = `data:image/${format}` (—Å—Ç—Ä–æ–∫–∞ 28)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `matches = dataUri.match(/^data:image\/([a-zA-Z]+)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `imageBuffer = Buffer.from(base64Data, "base64")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `defaultPath = workspacePath || os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `defaultFileName = `mermaid_diagram_${Date.now()}.${format}`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `defaultUri = vscode.Uri.file(path.join(defaultPath, defaultFileName))` (—Å—Ç—Ä–æ–∫–∞ 68)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 71)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ extract-text.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async extractTextFromPDF(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 11)
- `async extractTextFromDOCX(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async extractTextFromIPYNB(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dataBuffer = await fs.readFile(filePath)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `data = await pdf(dataBuffer)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = await mammoth.extractRawText({ path: filePath })` (—Å—Ç—Ä–æ–∫–∞ 18)
- `data = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `notebook = JSON.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `SUPPORTED_BINARY_FORMATS = {` - Map of supported binary file formats to their extraction functions (—Å—Ç—Ä–æ–∫–∞ 39)
- `fileExtension = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `extractor = SUPPORTED_BINARY_FORMATS[fileExtension as keyof typeof SUPPORTED_BINARY_FORMATS]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `isBinary = await isBinaryFile(filePath).catch(() => false)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `totalLines = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `lastLineEmpty = lines[lines.length - 1] === ""` (—Å—Ç—Ä–æ–∫–∞ 122)
- `maxLineNumberWidth = String(startLine + lines.length - 1).length` (—Å—Ç—Ä–æ–∫–∞ 127)
- `numberedContent = lines` (—Å—Ç—Ä–æ–∫–∞ 128)
- `lineNumber = String(startLine + index).padStart(maxLineNumberWidth, " ")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `lines = content.split(/\r?\n/) // Handles both CRLF (carriage return (\r) + line feed (\n)) and LF (line feed (\n)) line endings` (—Å—Ç—Ä–æ–∫–∞ 140)
- `lines = content.split(/\r?\n/)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `processedLines = lines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 158)
- `match = aggressive ? line.match(/^\s*(?:\d+\s)?\|\s(.*)$/) : line.match(/^\s*\d+\s+\|(?!\|)\s?(.*)$/)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `lineEnding = content.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 165)
- `beforeLimit = Math.floor(characterLimit * 0.2) // 20% of characters before` (—Å—Ç—Ä–æ–∫–∞ 215)
- `afterLimit = characterLimit - beforeLimit // remaining 80% after` (—Å—Ç—Ä–æ–∫–∞ 216)
- `startSection = content.slice(0, beforeLimit)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `endSection = content.slice(-afterLimit)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `omittedChars = content.length - characterLimit` (—Å—Ç—Ä–æ–∫–∞ 220)
- `beforeLimit = Math.floor(lineLimit * 0.2) // 20% of lines before` (—Å—Ç—Ä–æ–∫–∞ 242)
- `afterLimit = lineLimit - beforeLimit // remaining 80% after` (—Å—Ç—Ä–æ–∫–∞ 243)
- `omittedLines = totalLines - lineLimit` (—Å—Ç—Ä–æ–∫–∞ 264)
- `startSection = content.slice(0, startEndPos + 1)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `endSection = content.slice(endStartPos)` (—Å—Ç—Ä–æ–∫–∞ 266)
- `nextNewlineIdx = content.indexOf("\n", pos) // Find next line feed (\n) index` (—Å—Ç—Ä–æ–∫–∞ 288)
- `currentLine = nextNewlineIdx === -1 ? content.slice(pos) : content.slice(pos, nextNewlineIdx + 1)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `compressionDesc = `<previous line repeated ${repeatCount} additional times>\n`` (—Å—Ç—Ä–æ–∫–∞ 297)
- `compressionDesc = `<previous line repeated ${repeatCount} additional times>\n`` (—Å—Ç—Ä–æ–∫–∞ 316)
- `len = input.length` (—Å—Ç—Ä–æ–∫–∞ 352)
- `potentialPartialChar = curLine.charAt(segment.length)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `segmentLastCharCode = segment.length > 0 ? segment.charCodeAt(segment.length - 1) : 0` (—Å—Ç—Ä–æ–∫–∞ 469)
- `partialCharCode = potentialPartialChar.charCodeAt(0)` (—Å—Ç—Ä–æ–∫–∞ 470)
- `remainPart = curLine.substring(segment.length + 1)` (—Å—Ç—Ä–æ–∫–∞ 479)

#### üìÑ extract-text-from-xlsx.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatCellValue(cell: E): string` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ROW_LIMIT = 50000` (—Å—Ç—Ä–æ–∫–∞ 3)
- `value = cell.value` (—Å—Ç—Ä–æ–∫–∞ 6)
- `cellText = formatCellValue(cell)` (—Å—Ç—Ä–æ–∫–∞ 71)

#### üìÑ export-markdown.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `date = new Date(dateTs)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `month = date.toLocaleString("en-US", { month: "short" }).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `day = date.getDate()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `year = date.getFullYear()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `minutes = date.getMinutes().toString().padStart(2, "0")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `seconds = date.getSeconds().toString().padStart(2, "0")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `ampm = hours >= 12 ? "pm" : "am"` (—Å—Ç—Ä–æ–∫–∞ 15)
- `fileName = `roo_task_${month}-${day}-${year}_${hours}-${minutes}-${seconds}-${ampm}.md`` (—Å—Ç—Ä–æ–∫–∞ 18)
- `markdownContent = conversationHistory` (—Å—Ç—Ä–æ–∫–∞ 21)
- `role = message.role === "user" ? "**User:**" : "**Assistant:**"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `content = Array.isArray(message.content)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `toolName = "Tool"` (—Å—Ç—Ä–æ–∫–∞ 64)

### üìÇ src/integrations/diagnostics

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `oldMap = new Map(oldDiagnostics)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `oldDiags = oldMap.get(uri) || []` (—Å—Ç—Ä–æ–∫–∞ 13)
- `newProblemsForUri = newDiags.filter((newDiag) => !oldDiags.some((oldDiag) => deepEqual(oldDiag, newDiag)))` (—Å—Ç—Ä–æ–∫–∞ 14)
- `documents = new Map<vscode.Uri, vscode.TextDocument>()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `fileStats = new Map<vscode.Uri, vscode.FileStat>()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `filtered = fileDiagnostics.filter((d) => severities.includes(d.severity))` (—Å—Ç—Ä–æ–∫–∞ 97)
- `severityDiff = a.diagnostic.severity - b.diagnostic.severity` (—Å—Ç—Ä–æ–∫–∞ 106)
- `line = item.diagnostic.range.start.line + 1` (—Å—Ç—Ä–æ–∫–∞ 137)
- `source = item.diagnostic.source ? `${item.diagnostic.source} ` : ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `document = documents.get(item.uri) || (await vscode.workspace.openTextDocument(item.uri))` (—Å—Ç—Ä–æ–∫–∞ 149)
- `lineContent = document.lineAt(item.diagnostic.range.start.line).text` (—Å—Ç—Ä–æ–∫–∞ 151)
- `groupedDiagnostics = new Map<string, { uri: vscode.Uri` (—Å—Ç—Ä–æ–∫–∞ 166)
- `key = item.uri.toString()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `sortedDiagnostics = fileDiagnostics.sort(` (—Å—Ç—Ä–æ–∫–∞ 177)
- `problems = fileDiagnostics` (—Å—Ç—Ä–æ–∫–∞ 195)
- `line = diagnostic.range.start.line + 1 // VSCode lines are 0-indexed` (—Å—Ç—Ä–æ–∫–∞ 218)
- `source = diagnostic.source ? `${diagnostic.source} ` : ""` (—Å—Ç—Ä–æ–∫–∞ 219)
- `document = documents.get(uri) || (await vscode.workspace.openTextDocument(uri))` (—Å—Ç—Ä–æ–∫–∞ 227)
- `lineContent = document.lineAt(diagnostic.range.start.line).text` (—Å—Ç—Ä–æ–∫–∞ 229)

### üìÇ src/integrations/claude-code

#### üìÑ types.ts

**–¢–∏–ø—ã:**

- `type InitMessage` (—Å—Ç—Ä–æ–∫–∞ 3)
- `type AssistantMessage` (—Å—Ç—Ä–æ–∫–∞ 12)
- `type ErrorMessage` (—Å—Ç—Ä–æ–∫–∞ 18)
- `type ResultMessage` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ run.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseChunk(data: s, processState: P)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `attemptParseChunk(data: s): ClaudeCodeMessage | null` (—Å—Ç—Ä–æ–∫–∞ 250)
- `createClaudeCodeNotFoundError(claudePath: s, originalError: E): Error` - Creates a user-friendly error message for Claude Code ENOENT errors (—Å—Ç—Ä–æ–∫–∞ 262)

**–¢–∏–ø—ã:**

- `type ClaudeCodeOptions` (—Å—Ç—Ä–æ–∫–∞ 15)
- `type ProcessState` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cwd = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CLAUDE_CODE_INSTALLATION_URL = "https://docs.anthropic.com/en/docs/claude-code/setup"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `claudePath = options.path || "claude"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 45)
- `chunk = parseChunk(line, processState)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `errorOutput = (processState.error as any)?.message || processState.stderrLogs?.trim()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `claudeCodeTools = [` (—Å—Ç—Ä–æ–∫–∞ 125)
- `CLAUDE_CODE_TIMEOUT = 600000 // 10 minutes` (—Å—Ç—Ä–æ–∫–∞ 144)
- `claudePath = path || "claude"` (—Å—Ç—Ä–æ–∫–∞ 153)
- `isWindows = os.platform() === "win32"` (—Å—Ç—Ä–æ–∫–∞ 154)
- `args = ["-p"]` (—Å—Ç—Ä–æ–∫–∞ 157)
- `child = execa(claudePath, args, {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `chunk = attemptParseChunk(processState.partialData)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `chunk = attemptParseChunk(data)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `errorMessage = t("errors.claudeCode.notFound", {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `error = new Error(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 269)

#### üìÑ message-filter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filteredContent = message.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `sourceType = block.source?.type || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mediaType = block.source?.media_type || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 21)

### üìÇ src/core/webview

#### üìÑ webviewMessageHandler.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `findMessageIndices(messageTs: n, currentCline: a)` - Shared utility to find message indices based on timestamp (—Å—Ç—Ä–æ–∫–∞ 71)
- `async handleDeleteOperation(messageTs: n): Promise<void>` - Handles message deletion operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 101)
- `async handleDeleteMessageConfirm(messageTs: n): Promise<void>` - Handles confirmed message deletion from webview dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `async handleEditOperation(messageTs: n, editedContent: s): Promise<void>` - Handles message editing operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 140)
- `async safeGetModels(options: G): Promise<ModelRecord>` (—Å—Ç—Ä–æ–∫–∞ 531)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ALLOWED_VSCODE_SETTINGS = new Set(["terminal.integrated.inheritEnv"])` (—Å—Ç—Ä–æ–∫–∞ 53)
- `getGlobalState = <K extends keyof GlobalState>(key: K) => provider.contextProxy.getValue(key)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `updateGlobalState = async <K extends keyof GlobalState>(key: K, value: GlobalState[K]) =>` (—Å—Ç—Ä–æ–∫–∞ 65)
- `findMessageIndices = (messageTs: number, currentCline: any) => {` - Shared utility to find message indices based on timestamp (—Å—Ç—Ä–æ–∫–∞ 71)
- `timeCutoff = messageTs - 1000 // 1 second buffer before the message` (—Å—Ç—Ä–æ–∫–∞ 72)
- `messageIndex = currentCline.clineMessages.findIndex((msg: ClineMessage) => msg.ts && msg.ts >= timeCutoff)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `apiConversationHistoryIndex = currentCline.apiConversationHistory.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `removeMessagesThisAndSubsequent = async (` - Removes the target message and all subsequent messages (—Å—Ç—Ä–æ–∫–∞ 83)
- `handleDeleteOperation = async (messageTs: number): Promise<void> => {` - Handles message deletion operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 101)
- `handleDeleteMessageConfirm = async (messageTs: number): Promise<void> => {` - Handles confirmed message deletion from webview dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `currentCline = provider.getCurrentCline()!` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handleEditOperation = async (messageTs: number, editedContent: string, images?: string[]): Promise<void> => {` - Handles message editing operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 140)
- `handleEditMessageConfirm = async (` - Handles confirmed message editing from webview dialog (—Å—Ç—Ä–æ–∫–∞ 153)
- `currentCline = provider.getCurrentCline()!` (—Å—Ç—Ä–æ–∫–∞ 160)
- `handleMessageModificationsOperation = async (` - Handles message modification operations (delete or edit) with confirmation dialog (—Å—Ç—Ä–æ–∫–∞ 198)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `mcpHub = provider.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 224)
- `currentConfigName = getGlobalState("currentApiConfigName")` (—Å—Ç—Ä–æ–∫–∞ 251)
- `name = listApiConfig[0]?.name` (—Å—Ç—Ä–æ–∫–∞ 256)
- `isOptedIn = telemetrySetting === "enabled"` (—Å—Ç—Ä–æ–∫–∞ 280)
- `currentTask = provider.getCurrentCline()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `images = await selectImages()` (—Å—Ç—Ä–æ–∫–∞ 380)
- `currentTaskId = provider.getCurrentCline()?.taskId` (—Å—Ç—Ä–æ–∫–∞ 389)
- `shareTaskId = provider.getCurrentCline()?.taskId` (—Å—Ç—Ä–æ–∫–∞ 395)
- `clineMessages = provider.getCurrentCline()?.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 396)
- `visibility = message.visibility || "organization"` (—Å—Ç—Ä–æ–∫–∞ 403)
- `result = await CloudService.instance.shareTask(shareTaskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 404)
- `errorMessage = result.error || "Failed to create share link"` (—Å—Ç—Ä–æ–∫–∞ 422)
- `ids = message.ids` (—Å—Ç—Ä–æ–∫–∞ 448)
- `batchSize = 20` (—Å—Ç—Ä–æ–∫–∞ 452)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 453)
- `batch = ids.slice(i, i + batchSize)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `batchPromises = batch.map(async (id) => {` (—Å—Ç—Ä–æ–∫–∞ 461)
- `batchResults = await Promise.all(batchPromises)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `successCount = results.filter((r) => r.success).length` (—Å—Ç—Ä–æ–∫–∞ 483)
- `failCount = results.length - successCount` (—Å—Ç—Ä–æ–∫–∞ 484)
- `safeGetModels = async (options: GetModelsOptions): Promise<ModelRecord> => {` (—Å—Ç—Ä–æ–∫–∞ 531)
- `litellmApiKey = apiConfiguration.litellmApiKey || message?.values?.litellmApiKey` (—Å—Ç—Ä–æ–∫–∞ 553)
- `litellmBaseUrl = apiConfiguration.litellmBaseUrl || message?.values?.litellmBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 554)
- `results = await Promise.allSettled(` (—Å—Ç—Ä–æ–∫–∞ 562)
- `models = await safeGetModels(options)` (—Å—Ç—Ä–æ–∫–∞ 564)
- `routerName = modelFetchPromises[index].key // Get RouterName using index` (—Å—Ç—Ä–æ–∫–∞ 577)
- `errorMessage = result.reason instanceof Error ? result.reason.message : String(result.reason)` (—Å—Ç—Ä–æ–∫–∞ 596)
- `ollamaModels = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 623)
- `lmStudioModels = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 647)
- `openAiModels = await getOpenAiModels(` (—Å—Ç—Ä–æ–∫–∞ 666)
- `vsCodeLmModels = await getVsCodeLmModels()` (—Å—Ç—Ä–æ–∫–∞ 677)
- `huggingFaceModelsResponse = await getHuggingFaceModelsWithMetadata()` (—Å—Ç—Ä–æ–∫–∞ 684)
- `result = checkoutDiffPayloadSchema.safeParse(message.payload)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `result = checkoutRestorePayloadSchema.safeParse(message.payload)` (—Å—Ç—Ä–æ–∫–∞ 723)
- `commands = message.commands ?? []` (—Å—Ç—Ä–æ–∫–∞ 748)
- `validCommands = Array.isArray(commands)` (—Å—Ç—Ä–æ–∫–∞ 749)
- `commands = message.commands ?? []` (—Å—Ç—Ä–æ–∫–∞ 764)
- `validCommands = Array.isArray(commands)` (—Å—Ç—Ä–æ–∫–∞ 765)
- `customModesFilePath = await provider.customModesManager.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 779)
- `mcpSettingsFilePath = await provider.getMcpHub()?.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 788)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 802)
- `rooDir = path.join(workspaceFolder.uri.fsPath, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 803)
- `mcpPath = path.join(rooDir, "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 804)
- `exists = await fileExistsAtPath(mcpPath)` (—Å—Ç—Ä–æ–∫–∞ 808)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 834)
- `mcpEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 901)
- `mcpHub = provider.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 910)
- `soundEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 918)
- `soundVolume = message.value ?? 0.5` (—Å—Ç—Ä–æ–∫–∞ 923)
- `ttsEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 928)
- `ttsSpeed = message.value ?? 1.0` (—Å—Ç—Ä–æ–∫–∞ 934)
- `diffEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 951)
- `enableCheckpoints = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 956)
- `browserViewportSize = message.text ?? "900x600"` (—Å—Ç—Ä–æ–∫–∞ 961)
- `chromeHostUrl = await discoverChromeHostUrl()` (—Å—Ç—Ä–æ–∫–∞ 983)
- `customHostUrl = message.text` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `hostIsValid = await tryChromeHostUrl(message.text)` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `lineLimit = message.value` (—Å—Ç—Ä–æ–∫–∞ 1073)
- `charLimit = message.value` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `existingPrompts = getGlobalState("customModePrompts") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1180)
- `updatedPrompts = { ...existingPrompts, [message.promptMode]: message.customPrompt }` (—Å—Ç—Ä–æ–∫–∞ 1181)
- `currentState = await provider.getStateToPostToWebview()` (—Å—Ç—Ä–æ–∫–∞ 1183)
- `stateWithPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1184)
- `oldPrompt = existingPrompts[message.promptMode] || {}` (—Å—Ç—Ä–æ–∫–∞ 1193)
- `newPrompt = message.customPrompt` (—Å—Ç—Ä–æ–∫–∞ 1194)
- `changedSettings = Object.keys(newPrompt).filter(` (—Å—Ç—Ä–æ–∫–∞ 1195)
- `tabCount = Math.min(Math.max(0, message.value ?? 20), 500)` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `fileCount = Math.min(Math.max(0, message.value ?? 200), 500)` (—Å—Ç—Ä–æ–∫–∞ 1239)
- `valueToSave = message.value // Capture the value intended for saving` (—Å—Ç—Ä–æ–∫–∞ 1281)
- `includeValue = message.bool !== undefined ? message.bool : true` (—Å—Ç—Ä–æ–∫–∞ 1287)
- `currentPinned = getGlobalState("pinnedApiConfigs") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1301)
- `currentSupportPrompts = getGlobalState("customSupportPrompts") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1328)
- `updatedSupportPrompts = { ...currentSupportPrompts, CONDENSE: message.text }` (—Å—Ç—Ä–æ–∫–∞ 1329)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 1346)
- `currentCline = provider.getCurrentCline()` (—Å—Ç—Ä–æ–∫–∞ 1355)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 1356)
- `systemPrompt = await generateSystemPrompt(provider, message)` (—Å—Ç—Ä–æ–∫–∞ 1386)
- `systemPrompt = await generateSystemPrompt(provider, message)` (—Å—Ç—Ä–æ–∫–∞ 1402)
- `cwd = provider.cwd` (—Å—Ç—Ä–æ–∫–∞ 1414)
- `commits = await searchCommits(message.query || "", cwd)` (—Å—Ç—Ä–æ–∫–∞ 1417)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 1432)
- `results = await searchWorkspaceFiles(` (—Å—Ç—Ä–æ–∫–∞ 1446)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `payload = message.payload as { todos?: any[] }` (—Å—Ç—Ä–æ–∫–∞ 1472)
- `todos = payload?.todos` (—Å—Ç—Ä–æ–∫–∞ 1473)
- `listApiConfig = await provider.providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 1483)
- `answer = await vscode.window.showInformationMessage(` (—Å—Ç—Ä–æ–∫–∞ 1554)
- `oldName = message.text` (—Å—Ç—Ä–æ–∫–∞ 1564)
- `newName = (await provider.providerSettingsManager.listConfig()).filter(` (—Å—Ç—Ä–æ–∫–∞ 1566)
- `listApiConfig = await provider.providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 1599)
- `updatedExperiments = {` (—Å—Ç—Ä–æ–∫–∞ 1614)
- `existingModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `isNewMode = !existingModes.some((mode) => mode.slug === message.modeConfig?.slug)` (—Å—Ç—Ä–æ–∫–∞ 1646)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1650)
- `existingMode = existingModes.find((mode) => mode.slug === message.modeConfig?.slug)` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `changedSettings = existingMode` (—Å—Ç—Ä–æ–∫–∞ 1666)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1684)
- `modeToDelete = customModes.find((mode) => mode.slug === message.slug)` (—Å—Ç—Ä–æ–∫–∞ 1685)
- `scope = modeToDelete.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1692)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 1697)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 1705)
- `rulesFolderExists = await fileExistsAtPath(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 1710)
- `customModePrompts = getGlobalState("customModePrompts") || {}` (—Å—Ç—Ä–æ–∫–∞ 1752)
- `customPrompt = customModePrompts[message.slug]` (—Å—Ç—Ä–æ–∫–∞ 1753)
- `result = await provider.customModesManager.exportModeWithRules(message.slug, customPrompt)` (—Å—Ç—Ä–æ–∫–∞ 1756)
- `lastExportPath = getGlobalState("lastModeExportPath")` (—Å—Ç—Ä–æ–∫–∞ 1760)
- `lastDir = path.dirname(lastExportPath)` (—Å—Ç—Ä–æ–∫–∞ 1765)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 1769)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 1780)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1823)
- `lastImportPath = getGlobalState("lastModeImportPath")` (—Å—Ç—Ä–æ–∫–∞ 1839)
- `lastDir = path.dirname(lastImportPath)` (—Å—Ç—Ä–æ–∫–∞ 1844)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 1848)
- `fileUri = await vscode.window.showOpenDialog({` (—Å—Ç—Ä–æ–∫–∞ 1855)
- `yamlContent = await fs.readFile(fileUri[0].fsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1871)
- `result = await provider.customModesManager.importModeWithRules(` (—Å—Ç—Ä–æ–∫–∞ 1874)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1881)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1913)
- `hasContent = await provider.customModesManager.checkRulesDirectoryHasContent(message.slug)` (—Å—Ç—Ä–æ–∫–∞ 1929)
- `telemetrySetting = message.text as TelemetrySetting` (—Å—Ç—Ä–æ–∫–∞ 1958)
- `isOptedIn = telemetrySetting === "enabled"` (—Å—Ç—Ä–æ–∫–∞ 1960)
- `settings = message.codeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 1999)
- `currentConfig = getGlobalState("codebaseIndexConfig") || {}` (—Å—Ç—Ä–æ–∫–∞ 2003)
- `globalStateConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2008)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2139)
- `status = manager.getCurrentStatus()` (—Å—Ç—Ä–æ–∫–∞ 2154)
- `hasOpenAiKey = !!(await provider.context.secrets.get("codeIndexOpenAiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2163)
- `hasQdrantApiKey = !!(await provider.context.secrets.get("codeIndexQdrantApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2164)
- `hasOpenAiCompatibleApiKey = !!(await provider.context.secrets.get(` (—Å—Ç—Ä–æ–∫–∞ 2165)
- `hasGeminiApiKey = !!(await provider.context.secrets.get("codebaseIndexGeminiApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2168)
- `hasMistralApiKey = !!(await provider.context.secrets.get("codebaseIndexMistralApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2169)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2185)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2215)
- `configFilePath = await marketplaceManager.installMarketplaceItem(` (—Å—Ç—Ä–æ–∫–∞ 2272)
- `errorMessage = !marketplaceManager` (—Å—Ç—Ä–æ–∫–∞ 2329)
- `configFilePath = await marketplaceManager.installMarketplaceItem(message.payload.item, {` (—Å—Ç—Ä–æ–∫–∞ 2351)
- `commands = await getCommands(provider.cwd || "")` (—Å—Ç—Ä–æ–∫–∞ 2380)
- `commandList = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 2383)
- `command = await getCommand(provider.cwd || "", message.text)` (—Å—Ç—Ä–æ–∫–∞ 2409)
- `command = await getCommand(provider.cwd || "", message.text)` (—Å—Ç—Ä–æ–∫–∞ 2429)
- `source = message.values?.source as "global" | "project"` (—Å—Ç—Ä–æ–∫–∞ 2447)
- `fileName = message.text // Custom filename from user input` (—Å—Ç—Ä–æ–∫–∞ 2448)
- `globalConfigDir = path.join(os.homedir(), ".neira")` (—Å—Ç—Ä–æ–∫–∞ 2458)
- `workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 2462)
- `filePath = path.join(commandsDir, `${commandName}.md`)` (—Å—Ç—Ä–æ–∫–∞ 2518)
- `templateContent = t("common:errors.command_template_content")` (—Å—Ç—Ä–æ–∫–∞ 2532)
- `commands = await getCommands(provider.cwd || "")` (—Å—Ç—Ä–æ–∫–∞ 2542)
- `commandList = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 2543)
- `text = message.text` (—Å—Ç—Ä–æ–∫–∞ 2561)

#### üìÑ messageEnhancer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskHistory = this.extractTaskHistory(currentClineMessages)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `enhancementPrompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 73)
- `enhancedText = await singleCompletionHandler(configToUse, enhancementPrompt)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `relevantMessages = messages` (—Å—Ç—Ä–æ–∫–∞ 101)
- `role = msg.type === "ask" ? "User" : "Assistant"` (—Å—Ç—Ä–æ–∫–∞ 116)
- `content = msg.text || ""` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ getUri.ts

#### üìÑ getNonce.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ generateSystemPrompt.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isMultiFileApplyDiffEnabled = experimentsModule.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 31)
- `diffStrategy = isMultiFileApplyDiffEnabled` (—Å—Ç—Ä–æ–∫–∞ 36)
- `cwd = provider.cwd` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mode = message.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 42)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `rooIgnoreInstructions = provider.getCurrentCline()?.rooIgnoreController?.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `tempApiHandler = buildApiHandler(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `modeConfig = getModeBySlug(mode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `modeSupportsBrowser = modeConfig?.groups.some((group) => getGroupName(group) === "browser") ?? false` (—Å—Ç—Ä–æ–∫–∞ 61)
- `canUseBrowserTool = modelSupportsComputerUse && modeSupportsBrowser && (browserToolEnabled ?? true)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `systemPrompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 67)

### üìÇ src/core/task-persistence

#### üìÑ taskMetadata.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskSizeCache = new NodeCache({ stdTTL: 30, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 13)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `hasMessages = messages && messages.length > 0` (—Å—Ç—Ä–æ–∫–∞ 35)
- `cachedSize = taskSizeCache.get<number>(taskDir)` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ taskMessages.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filePath = path.join(taskDir, GlobalFileNames.uiMessages)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `fileExists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `filePath = path.join(taskDir, GlobalFileNames.uiMessages)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ index.ts

#### üìÑ apiMessages.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filePath = path.join(taskDir, GlobalFileNames.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `parsedData = JSON.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `oldPath = path.join(taskDir, "claude_messages.json")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `fileContent = await fs.readFile(oldPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `parsedData = JSON.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `filePath = path.join(taskDir, GlobalFileNames.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 81)

### üìÇ src/core/tools

#### üìÑ writeToFileTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 63)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `fullPath = relPath ? path.resolve(cline.cwd, removeClosingTag("path", relPath)) : ""` (—Å—Ç—Ä–æ–∫–∞ 91)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 107)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `actualLineCount = newContent.split("\n").length` (—Å—Ç—Ä–æ–∫–∞ 137)
- `isNewFile = !fileExists` (—Å—Ç—Ä–æ–∫–∞ 140)
- `diffStrategyEnabled = !!cline.diffStrategy` (—Å—Ç—Ä–æ–∫–∞ 143)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 167)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 168)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 169)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 205)
- `didApprove = await askApproval("tool", completeMessage, undefined, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 278)
- `didApprove = await askApproval("tool", completeMessage, undefined, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 305)

#### üìÑ validateToolUse.ts

#### üìÑ useMcpToolTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async sendExecutionStatus(cline: T, status: M): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 84)
- `processToolContent(toolResult: a): string` (—Å—Ç—Ä–æ–∫–∞ 92)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface McpToolParams` (—Å—Ç—Ä–æ–∫–∞ 8)

**–¢–∏–ø—ã:**

- `type ValidationResult` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 28)
- `clineProvider = await cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `toolResult = await cline.providerRef.deref()?.getMcpHub()?.callTool(serverName, toolName, parsedArguments)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `outputText = processToolContent(toolResult)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `validation = await validateParams(cline, params, pushToolResult)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 200)
- `executionId = cline.lastMessageTs?.toString() ?? Date.now().toString()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `didApprove = await askApproval("use_mcp_server", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 208)

#### üìÑ updateTodoListTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `todoListToMarkdown(todos: T): string` - Convert TodoItem[] to markdown checklist string. (—Å—Ç—Ä–æ–∫–∞ 86)
- `normalizeStatus(status: s): TodoStatus` (—Å—Ç—Ä–æ–∫–∞ 97)
- `parseMarkdownChecklist(md: s): TodoItem[]` (—Å—Ç—Ä–æ–∫–∞ 103)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `idx = cline.todoList.findIndex((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `current = cline.todoList[idx]` (—Å—Ç—Ä–æ–∫–∞ 33)
- `idx = cline.todoList.findIndex((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `lines = md` (—Å—Ç—Ä–æ–∫–∞ 105)
- `match = line.match(/^\[\s*([ xX\-~])\s*\]\s+(.+)$/)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `id = crypto` (—Å—Ç—Ä–æ–∫–∞ 116)
- `todosRaw = block.params.todos` (—Å—Ç—Ä–æ–∫–∞ 171)
- `approvalMsg = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 197)
- `didApprove = await askApproval("tool", approvalMsg)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `md = todoListToMarkdown(normalizedTodos)` (—Å—Ç—Ä–æ–∫–∞ 228)

#### üìÑ switchModeTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `targetMode = getModeBySlug(mode_slug, (await cline.providerRef.deref()?.getState())?.customModes)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `currentMode = (await cline.providerRef.deref()?.getState())?.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 49)
- `completeMessage = JSON.stringify({ tool: "switchMode", mode: mode_slug, reason })` (—Å—Ç—Ä–æ–∫–∞ 57)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ searchFilesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = relDirPath ? path.resolve(cline.cwd, relDirPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 22)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `results = await regexSearchFiles(` (—Å—Ç—Ä–æ–∫–∞ 55)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: results } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 64)

#### üìÑ searchAndReplaceTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `escapeRegExp(input: s): string` - Escapes special regex characters in a string (—Å—Ç—Ä–æ–∫–∞ 279)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessageProps = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `validRelPath = relPath as string` (—Å—Ç—Ä–æ–∫–∞ 105)
- `validSearch = search as string` (—Å—Ç—Ä–æ–∫–∞ 106)
- `validReplace = replace as string` (—Å—Ç—Ä–æ–∫–∞ 107)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(validRelPath)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(validRelPath) || false` (—Å—Ç—Ä–æ–∫–∞ 129)
- `absolutePath = path.resolve(cline.cwd, validRelPath)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `formattedError = formatResponse.toolError(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `errorMessage = `Error reading file: ${absolutePath}\nFailed to read the file content: ${` (—Å—Ç—Ä–æ–∫–∞ 155)
- `formattedError = formatResponse.toolError(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 158)
- `flags = ignoreCase ? "gi" : "g"` (—Å—Ç—Ä–æ–∫–∞ 165)
- `searchPattern = useRegex ? new RegExp(validSearch, flags) : new RegExp(escapeRegExp(validSearch), flags)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `start = Math.max((startLine ?? 1) - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `end = Math.min((endLine ?? lines.length) - 1, lines.length - 1)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `beforeLines = lines.slice(0, start)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `afterLines = lines.slice(end + 1)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `targetContent = lines.slice(start, end + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modifiedContent = targetContent.replace(searchPattern, validReplace)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `modifiedLines = modifiedContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `diff = formatResponse.createPrettyPatch(validRelPath, fileContent, newContent)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 206)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 207)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 208)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `didApprove = await cline` (—Å—Ç—Ä–æ–∫–∞ 226)
- `message = await cline.diffViewProvider.pushToolWriteResult(` (—Å—Ç—Ä–æ–∫–∞ 257)

#### üìÑ readFileTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `updateFileResult(path: s, updates: P)` (—Å—Ç—Ä–æ–∫–∞ 202)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LineRange` (—Å—Ç—Ä–æ–∫–∞ 58)

- `interface FileEntry` (—Å—Ç—Ä–æ–∫–∞ 63)

- `interface FileResult` (—Å—Ç—Ä–æ–∫–∞ 69)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsed = parseXml(blockParams.args) as any` (—Å—Ç—Ä–æ–∫–∞ 30)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `paths = files.map((f: any) => f?.path).filter(Boolean) as string[]` (—Å—Ç—Ä–æ–∫–∞ 32)
- `pathList = paths.map((p) => `'${p}'`).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `modelInfo = cline.api.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 96)
- `supportsImages = modelInfo.supportsImages ?? false` (—Å—Ç—Ä–æ–∫–∞ 97)
- `match = argsXmlTag.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `fullPath = filePath ? path.resolve(cline.cwd, filePath) : ""` (—Å—Ç—Ä–æ–∫–∞ 112)
- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 118)
- `parsed = parseXml(argsXmlTag) as any` (—Å—Ç—Ä–æ–∫–∞ 131)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `ranges = Array.isArray(file.line_range) ? file.line_range : [file.line_range]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `match = String(range).match(/(\d+)-(\d+)/) // Ensure range is treated as string` (—Å—Ç—Ä–æ–∫–∞ 145)
- `errorMessage = `Failed to parse read_file XML args: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 157)
- `start = parseInt(legacyStartLineStr, 10)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `end = parseInt(legacyEndLineStr, 10)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `errorMsg = await cline.sayAndCreateMissingParamError("read_file", "args (containing valid file paths)")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `updateFileResult = (path: string, updates: Partial<FileResult>) => {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `index = fileResults.findIndex((result) => result.path === path)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `fileResult = fileResults[i]` (—Å—Ç—Ä–æ–∫–∞ 214)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 215)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `errorMsg = "Invalid line range: end line cannot be less than start line"` (—Å—Ç—Ä–æ–∫–∞ 223)
- `errorMsg = "Invalid line range values"` (—Å—Ç—Ä–æ–∫–∞ 234)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `errorMsg = formatResponse.rooIgnoreError(relPath)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `batchFiles = filesToApprove.map((fileResult) => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 273)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 275)
- `ranges = fileResult.lineRanges.map((range) =>` (—Å—Ç—Ä–æ–∫–∞ 280)
- `readablePath = getReadablePath(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `key = `${readablePath}${lineSnippet ? ` (${lineSnippet})` : ""}`` (—Å—Ç—Ä–æ–∫–∞ 291)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 302)
- `individualPermissions = JSON.parse(text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `fileResult = filesToApprove[index]` (—Å—Ç—Ä–æ–∫–∞ 347)
- `approved = individualPermissions[batchFile.key] === true` (—Å—Ç—Ä–æ–∫–∞ 348)
- `fileResult = filesToApprove[0]` (—Å—Ç—Ä–æ–∫–∞ 380)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 381)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `ranges = fileResult.lineRanges.map((range) =>` (—Å—Ç—Ä–æ–∫–∞ 389)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 399)
- `imageMemoryTracker = new ImageMemoryTracker()` (—Å—Ç—Ä–æ–∫–∞ 437)
- `state = await cline.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 438)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 452)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 453)
- `fileExtension = path.extname(relPath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `supportedBinaryFormats = getSupportedBinaryFormats()` (—Å—Ç—Ä–æ–∫–∞ 462)
- `validationResult = await validateImageForProcessing(` (—Å—Ç—Ä–æ–∫–∞ 468)
- `imageResult = await processImageFile(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 502)
- `fileFormat = fileExtension.slice(1) || "bin" // Remove the dot, fallback to "bin"` (—Å—Ç—Ä–æ–∫–∞ 522)
- `content = addLineNumbers(` (—Å—Ç—Ä–æ–∫–∞ 535)
- `lineRangeAttr = ` lines="${range.start}-${range.end}"`` (—Å—Ç—Ä–æ–∫–∞ 539)
- `defResult = await parseSourceCodeDefinitionsForFile(fullPath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 551)
- `content = addLineNumbers(await readLines(fullPath, maxReadFileLine - 1, 0))` (—Å—Ç—Ä–æ–∫–∞ 572)
- `lineRangeAttr = ` lines="1-${maxReadFileLine}"`` (—Å—Ç—Ä–æ–∫–∞ 573)
- `defResult = await parseSourceCodeDefinitionsForFile(fullPath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 577)
- `content = await extractTextFromFile(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `lineRangeAttr = ` lines="1-${totalLines}"`` (—Å—Ç—Ä–æ–∫–∞ 599)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `xmlResults = fileResults.filter((result) => result.xmlContent).map((result) => result.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 624)
- `filesXml = `<files>\n${xmlResults.join("\n")}\n</files>`` (—Å—Ç—Ä–æ–∫–∞ 625)
- `fileImageUrls = fileResults` (—Å—Ç—Ä–æ–∫–∞ 628)
- `deniedWithFeedback = fileResults.find((result) => result.status === "denied" && result.feedbackText)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `approvedWithFeedback = fileResults.find(` (—Å—Ç—Ä–æ–∫–∞ 649)
- `allImages = [...feedbackImages, ...fileImageUrls]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `finalModelSupportsImages = cline.api.getModel().info.supportsImages ?? false` (—Å—Ç—Ä–æ–∫–∞ 663)
- `imagesToInclude = finalModelSupportsImages ? allImages : []` (—Å—Ç—Ä–æ–∫–∞ 664)
- `result = formatResponse.toolResult(` (—Å—Ç—Ä–æ–∫–∞ 669)
- `textBlock = { type: "text" as const, text: filesXml }` (—Å—Ç—Ä–æ–∫–∞ 684)
- `relPath = fileEntries[0]?.path || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 696)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 697)
- `xmlResults = fileResults.filter((result) => result.xmlContent).map((result) => result.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 711)

#### üìÑ newTaskTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `unescapedMessage = message.replace(/\\\\@/g, "\\@")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `targetMode = getModeBySlug(mode, (await cline.providerRef.deref()?.getState())?.customModes)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `toolMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 58)
- `didApprove = await askApproval("tool", toolMessage)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newCline = await provider.initClineWithTask(unescapedMessage, undefined, cline)` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ multiApplyDiffTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `updateOperationResult(path: s, updates: P)` (—Å—Ç—Ä–æ–∫–∞ 219)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DiffOperation` (—Å—Ç—Ä–æ–∫–∞ 19)

- `interface OperationResult` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface ParsedFile` (—Å—Ç—Ä–æ–∫–∞ 39)

- `interface ParsedDiff` (—Å—Ç—Ä–æ–∫–∞ 44)

- `interface ParsedXmlResult` (—Å—Ç—Ä–æ–∫–∞ 49)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `isMultiFileApplyDiffEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 65)
- `match = argsXmlTag.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `parsed = parseXml(argsXmlTag, ["file.diff.content"]) as ParsedXmlResult` (—Å—Ç—Ä–æ–∫–∞ 111)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `filePath = file.path` (—Å—Ç—Ä–æ–∫–∞ 117)
- `diffs = Array.isArray(file.diff) ? file.diff : [file.diff]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `diff = diffs[i]` (—Å—Ç—Ä–æ–∫–∞ 131)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `detailedError = `Failed to parse apply_diff XML. This usually means:` (—Å—Ç—Ä–æ–∫–∞ 146)
- `errorMsg = await cline.sayAndCreateMissingParamError(` (—Å—Ç—Ä–æ–∫–∞ 186)
- `operations = Object.values(operationsMap)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `updateOperationResult = (path: string, updates: Partial<OperationResult>) => {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `index = operationResults.findIndex((result) => result.path === path)` (—Å—Ç—Ä–æ–∫–∞ 220)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 246)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `opResult = operationResults.find((r) => r.path === relPath)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `hasProtectedFiles = operationsToApprove.some(` (—Å—Ç—Ä–æ–∫–∞ 271)
- `batchDiffs = operationsToApprove.map((opResult) => {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `readablePath = getReadablePath(cline.cwd, opResult.path)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `changeCount = opResult.diffItems?.length || 0` (—Å—Ç—Ä–æ–∫–∞ 278)
- `changeText = changeCount === 1 ? "1 change" : `${changeCount} changes`` (—Å—Ç—Ä–æ–∫–∞ 279)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 293)
- `parsedResponse = JSON.parse(text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 325)
- `approvedFiles = parsedResponse.approvedFiles` (—Å—Ç—Ä–æ–∫–∞ 328)
- `approved = approvedFiles[opResult.path] === true` (—Å—Ç—Ä–æ–∫–∞ 332)
- `individualPermissions = parsedResponse` (—Å—Ç—Ä–æ–∫–∞ 350)
- `opResult = operationsToApprove[index]` (—Å—Ç—Ä–æ–∫–∞ 354)
- `approved = individualPermissions[batchDiff.key] === true` (—Å—Ç—Ä–æ–∫–∞ 355)
- `opResult = operationsToApprove[0]` (—Å—Ç—Ä–æ–∫–∞ 386)
- `relPath = opResult.path` (—Å—Ç—Ä–æ–∫–∞ 404)
- `diffItems = opResult.diffItems || []` (—Å—Ç—Ä–æ–∫–∞ 405)
- `absolutePath = opResult.absolutePath!` (—Å—Ç—Ä–æ–∫–∞ 406)
- `fileExists = opResult.fileExists!` (—Å—Ç—Ä–æ–∫–∞ 407)
- `processedDiffItems = !cline.api.getModel().id.includes("claude")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `diffResult = (await cline.diffStrategy?.applyDiff(originalContent, processedDiffItems)) ?? {` (—Å—Ç—Ä–æ–∫–∞ 423)
- `currentCount = (cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0) + 1` (—Å—Ç—Ä–æ–∫–∞ 433)
- `failPart = diffResult.failParts[i]` (—Å—Ç—Ä–æ–∫–∞ 440)
- `errorDetails = failPart.details ? JSON.stringify(failPart.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 448)
- `errorDetails = diffResult.details ? JSON.stringify(diffResult.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 463)
- `currentCount = cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0` (—Å—Ç—Ä–æ–∫–∞ 486)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 511)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 512)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 513)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 514)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 515)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 521)
- `diffContents = diffItems.map((item) => item.content).join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 532)
- `operationMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 533)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 563)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `searchBlocks = (diffItem.content.match(/<<<<<<< SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 659)

#### üìÑ listFilesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `recursive = recursiveRaw?.toLowerCase() === "true"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `absolutePath = relDirPath ? path.resolve(cline.cwd, relDirPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 39)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 66)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: result } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ listCodeDefinitionNamesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = relPath ? path.resolve(cline.cwd, relPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 23)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `stats = await fs.stat(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `fileResult = await parseSourceCodeDefinitionsForFile(absolutePath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: result } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 65)

#### üìÑ insertContentTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 72)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `lineNumber = parseInt(line, 10)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `formattedError = `Cannot insert content at line ${lineNumber} into a non-existent file. For new files, 'line' must be 0 (to append) or 1 (to insert at the beginning).`` (—Å—Ç—Ä–æ–∫–∞ 89)
- `lines = fileExists ? fileContent.split("\n") : []` (—Å—Ç—Ä–æ–∫–∞ 102)
- `updatedContent = insertGroups(lines, [` (—Å—Ç—Ä–æ–∫–∞ 104)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 114)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 115)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 140)
- `didApprove = await cline` (—Å—Ç—Ä–æ–∫–∞ 156)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 187)

#### üìÑ fetchInstructionsTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: undefined } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: task } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mcpHub = provider?.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `diffStrategy = cline.diffStrategy` (—Å—Ç—Ä–æ–∫–∞ 47)
- `context = provider?.context` (—Å—Ç—Ä–æ–∫–∞ 48)
- `content = await fetchInstructions(task, { mcpHub, diffStrategy, context })` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ codebaseSearchTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolName = "codebase_search"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `sharedMessageProps = {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `didApprove = await askApproval("tool", JSON.stringify(sharedMessageProps))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `context = cline.providerRef.deref()?.context` (—Å—Ç—Ä–æ–∫–∞ 67)
- `manager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `jsonResult = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `relativePath = vscode.workspace.asRelativePath(result.payload.filePath, false)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `payload = { tool: "codebaseSearch", content: jsonResult }` (—Å—Ç—Ä–æ–∫–∞ 123)
- `output = `Query: ${query}` (—Å—Ç—Ä–æ–∫–∞ 127)

#### üìÑ browserActionTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `didApprove = await askApproval("browser_action_launch", url)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ attemptCompletionTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `preventCompletionWithOpenTodos = vscode.workspace` (—Å—Ç—Ä–æ–∫–∞ 34)
- `hasIncompleteTodos = cline.todoList && cline.todoList.some((todo) => todo.status !== "completed")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lastMessage = cline.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `didApprove = await askFinishSubTaskApproval()` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ askFollowupQuestionTool.ts

**–¢–∏–ø—ã:**

- `type Suggest` (—Å—Ç—Ä–æ–∫–∞ 29)
- `type ParsedSuggestion` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rawSuggestions = Array.isArray(parsedSuggest?.suggest)` (—Å—Ç—Ä–æ–∫–∞ 56)

#### üìÑ applyDiffTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `formattedError = `File does not exist at path: ${absolutePath}\n\n<error_details>\nThe specified file could not be found. Please verify the file path and try again.\n</error_details>`` (—Å—Ç—Ä–æ–∫–∞ 85)
- `diffResult = (await cline.diffStrategy?.applyDiff(` (—Å—Ç—Ä–æ–∫–∞ 94)
- `currentCount = (cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0) + 1` (—Å—Ç—Ä–æ–∫–∞ 105)
- `errorDetails = failPart.details ? JSON.stringify(failPart.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 116)
- `errorDetails = diffResult.details ? JSON.stringify(diffResult.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 123)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 144)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 146)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 147)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 148)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 154)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `didApprove = await askApproval("tool", completeMessage, toolProgressStatus, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `didApprove = await askApproval("tool", completeMessage, toolProgressStatus, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `searchBlocks = (diffContent.match(/<<<<<<< SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 234)

#### üìÑ accessMcpResourceTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 19)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 44)
- `didApprove = await askApproval("use_mcp_server", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `resourceResult = await cline.providerRef.deref()?.getMcpHub()?.readResource(server_name, uri)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ ToolRepetitionDetector.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentToolCallJson = this.serializeToolUse(currentToolCallBlock)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `sortedKeys = Object.keys(toolUse.params).sort()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `toolObject = {` (—Å—Ç—Ä–æ–∫–∞ 90)

### üìÇ src/core/task

#### üìÑ Task.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `agoText(): string` (—Å—Ç—Ä–æ–∫–∞ 1155)
- `updateApiReqMsg()` (—Å—Ç—Ä–æ–∫–∞ 1462)
- `async abortStream(cancelReason: C)` (—Å—Ç—Ä–æ–∫–∞ 1484)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_EXPONENTIAL_BACKOFF_SECONDS = 600 // 10 minutes` (—Å—Ç—Ä–æ–∫–∞ 97)
- `isMultiFileApplyDiffEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 343)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 392)
- `errorMessage = `Failed to initialize task mode: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 398)
- `instance = new Task({ ...options, startTask: false })` (—Å—Ç—Ä–æ–∫–∞ 493)
- `messageWithTs = { ...message, ts: Date.now() }` (—Å—Ç—Ä–æ–∫–∞ 515)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 546)
- `shouldCaptureMessage = message.partial !== true && CloudService.isEnabled()` (—Å—Ç—Ä–æ–∫–∞ 551)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 568)
- `shouldCaptureMessage = message.partial !== true && CloudService.isEnabled()` (—Å—Ç—Ä–æ–∫–∞ 572)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 632)
- `result = { response: this.askResponse!, text: this.askResponseText, images: this.askResponseImages }` (—Å—Ç—Ä–æ–∫–∞ 714)
- `systemPrompt = await this.getSystemPrompt()` (—Å—Ç—Ä–æ–∫–∞ 737)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 741)
- `customCondensingPrompt = state ? (state as any).customCondensingPrompt : undefined` (—Å—Ç—Ä–æ–∫–∞ 742)
- `condensingApiConfigId = state ? (state as any).condensingApiConfigId : undefined` (—Å—Ç—Ä–æ–∫–∞ 743)
- `listApiConfigMeta = state ? (state as any).listApiConfigMeta : undefined` (—Å—Ç—Ä–æ–∫–∞ 744)
- `matchingConfig = listApiConfigMeta.find((config: any) => config.id === condensingApiConfigId)` (—Å—Ç—Ä–æ–∫–∞ 750)
- `profile = await this.providerRef.deref()?.providerSettingsManager.getProfile({` (—Å—Ç—Ä–æ–∫–∞ 752)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 822)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 837)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 875)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `modifiedClineMessages = await this.getSavedClineMessages()` (—Å—Ç—Ä–æ–∫–∞ 972)
- `lastRelevantMessageIndex = findLastIndex(` (—Å—Ç—Ä–æ–∫–∞ 975)
- `lastApiReqStartedIndex = findLastIndex(` (—Å—Ç—Ä–æ–∫–∞ 985)
- `lastApiReqStarted = modifiedClineMessages[lastApiReqStartedIndex]` (—Å—Ç—Ä–æ–∫–∞ 991)
- `lastClineMessage = this.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 1009)
- `conversationWithoutToolBlocks = existingApiConversationHistory.map((message) => {` (—Å—Ç—Ä–æ–∫–∞ 1037)
- `newContent = message.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `inputAsXml = Object.entries(block.input as Record<string, string>)` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `contentAsTextBlocks = Array.isArray(block.content)` (—Å—Ç—Ä–æ–∫–∞ 1053)
- `textContent = contentAsTextBlocks.map((item) => item.text).join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `toolName = findToolName(block.tool_use_id, existingApiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `lastMessage = existingApiConversationHistory[existingApiConversationHistory.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 1082)
- `content = Array.isArray(lastMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `hasToolUse = content.some((block) => block.type === "tool_use")` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `toolUseBlocks = content.filter(` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `assistantContent = Array.isArray(previousAssistantMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 1113)
- `toolUseBlocks = assistantContent.filter(` (—Å—Ç—Ä–æ–∫–∞ 1117)
- `existingToolResults = existingUserContent.filter(` (—Å—Ç—Ä–æ–∫–∞ 1122)
- `agoText = ((): string => {` (—Å—Ç—Ä–æ–∫–∞ 1155)
- `timestamp = lastClineMessage?.ts ?? Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1156)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1157)
- `diff = now - timestamp` (—Å—Ç—Ä–æ–∫–∞ 1158)
- `minutes = Math.floor(diff / 60000)` (—Å—Ç—Ä–æ–∫–∞ 1159)
- `hours = Math.floor(minutes / 60)` (—Å—Ç—Ä–æ–∫–∞ 1160)
- `days = Math.floor(hours / 24)` (—Å—Ç—Ä–æ–∫–∞ 1161)
- `didEndLoop = await this.recursivelyMakeClineRequests(nextUserContent, includeFileDetails)` (—Å—Ç—Ä–æ–∫–∞ 1309)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1367)
- `currentMode = (await provider.getState())?.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 1373)
- `modelId = getModelId(this.apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 1394)
- `apiProtocol = getApiProtocol(this.apiConfiguration.apiProvider, modelId)` (—Å—Ç—Ä–æ–∫–∞ 1395)
- `parsedUserContent = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 1413)
- `environmentDetails = await getEnvironmentDetails(this, includeFileDetails)` (—Å—Ç—Ä–æ–∫–∞ 1425)
- `finalUserContent = [...parsedUserContent, { type: "text" as const, text: environmentDetails }]` (—Å—Ç—Ä–æ–∫–∞ 1429)
- `lastApiReqIndex = findLastIndex(this.clineMessages, (m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 1438)
- `updateApiReqMsg = (cancelReason?: ClineApiReqCancelReason, streamingFailedMessage?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1462)
- `existingData = JSON.parse(this.clineMessages[lastApiReqIndex].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 1463)
- `abortStream = async (cancelReason: ClineApiReqCancelReason, streamingFailedMessage?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1484)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 1490)
- `stream = this.attemptApiRequest()` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `prevLength = this.assistantMessageContent.length` (—Å—Ç—Ä–æ–∫–∞ 1572)
- `cancelReason = this.abort ? "user_cancelled" : "streaming_failed"` (—Å—Ç—Ä–æ–∫–∞ 1635)
- `streamingFailedMessage = this.abort` (—Å—Ç—Ä–æ–∫–∞ 1636)
- `history = await provider?.getTaskWithId(this.taskId)` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `partialBlocks = this.assistantMessageContent.filter((block) => block.partial)` (—Å—Ç—Ä–æ–∫–∞ 1689)
- `didToolUse = this.assistantMessageContent.some((block) => block.type === "tool_use")` (—Å—Ç—Ä–æ–∫–∞ 1742)
- `recDidEndLoop = await this.recursivelyMakeClineRequests(this.userMessageContent)` (—Å—Ç—Ä–æ–∫–∞ 1749)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1782)
- `rooIgnoreInstructions = this.rooIgnoreController?.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 1801)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 1803)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1821)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 1854)
- `customCondensingPrompt = state?.customCondensingPrompt` (—Å—Ç—Ä–æ–∫–∞ 1868)
- `condensingApiConfigId = state?.condensingApiConfigId` (—Å—Ç—Ä–æ–∫–∞ 1869)
- `listApiConfigMeta = state?.listApiConfigMeta` (—Å—Ç—Ä–æ–∫–∞ 1870)
- `matchingConfig = listApiConfigMeta.find((config: any) => config.id === condensingApiConfigId)` (—Å—Ç—Ä–æ–∫–∞ 1877)
- `profile = await this.providerRef.deref()?.providerSettingsManager.getProfile({` (—Å—Ç—Ä–æ–∫–∞ 1880)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1896)
- `timeSinceLastRequest = now - Task.lastGlobalApiRequestTime` (—Å—Ç—Ä–æ–∫–∞ 1897)
- `rateLimit = apiConfiguration?.rateLimitSeconds || 0` (—Å—Ç—Ä–æ–∫–∞ 1898)
- `delayMessage = `Rate limiting for ${i} seconds...`` (—Å—Ç—Ä–æ–∫–∞ 1906)
- `systemPrompt = await this.getSystemPrompt()` (—Å—Ç—Ä–æ–∫–∞ 1916)
- `modelInfo = this.api.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 1920)
- `maxTokens = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 1922)
- `contextWindow = modelInfo.contextWindow` (—Å—Ç—Ä–æ–∫–∞ 1928)
- `truncateResult = await truncateConversationIfNeeded({` (—Å—Ç—Ä–æ–∫–∞ 1934)
- `messagesSinceLastSummary = getMessagesSinceLastSummary(this.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 1970)
- `cleanConversationHistory = maybeRemoveImageBlocks(messagesSinceLastSummary, this.api).map(` (—Å—Ç—Ä–æ–∫–∞ 1971)
- `approvalResult = await this.autoApprovalHandler.checkAutoApprovalLimits(` (—Å—Ç—Ä–æ–∫–∞ 1976)
- `stream = this.api.createMessage(systemPrompt, cleanConversationHistory, metadata)` (—Å—Ç—Ä–æ–∫–∞ 1992)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 1993)
- `firstChunk = await iterator.next()` (—Å—Ç—Ä–æ–∫–∞ 1998)
- `baseDelay = requestDelaySeconds || 5` (—Å—Ç—Ä–æ–∫–∞ 2015)
- `geminiRetryDetails = error.errorDetails?.find(` (—Å—Ç—Ä–æ–∫–∞ 2023)
- `match = geminiRetryDetails?.retryDelay?.match(/^(\d+)s$/)` (—Å—Ç—Ä–æ–∫–∞ 2027)
- `finalDelay = Math.max(exponentialDelay, rateLimitDelay)` (—Å—Ç—Ä–æ–∫–∞ 2035)

#### üìÑ AutoApprovalHandler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestResult = await this.checkRequestLimit(state, askForApproval)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `costResult = await this.checkCostLimit(state, messages, askForApproval)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `maxRequests = state?.allowedMaxRequests || Infinity` (—Å—Ç—Ä–æ–∫–∞ 48)
- `maxCost = state?.allowedMaxCost || Infinity` (—Å—Ç—Ä–æ–∫–∞ 92)
- `EPSILON = 0.0001` (—Å—Ç—Ä–æ–∫–∞ 98)

### üìÇ src/core/sliding-window

#### üìÑ index.ts

**–¢–∏–ø—ã:**

- `type TruncateOptions` (—Å—Ç—Ä–æ–∫–∞ 66)
- `type TruncateResponse` (—Å—Ç—Ä–æ–∫–∞ 82)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `truncatedMessages = [messages[0]]` (—Å—Ç—Ä–æ–∫–∞ 43)
- `rawMessagesToRemove = Math.floor((messages.length - 1) * fracToRemove)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `messagesToRemove = rawMessagesToRemove - (rawMessagesToRemove % 2)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `remainingMessages = messages.slice(messagesToRemove + 1)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `reservedTokens = maxTokens || ANTHROPIC_DEFAULT_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 109)
- `lastMessage = messages[messages.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lastMessageContent = lastMessage.content` (—Å—Ç—Ä–æ–∫–∞ 113)
- `lastMessageTokens = Array.isArray(lastMessageContent)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `prevContextTokens = totalTokens + lastMessageTokens` (—Å—Ç—Ä–æ–∫–∞ 119)
- `allowedTokens = contextWindow * (1 - TOKEN_BUFFER_PERCENTAGE) - reservedTokens` (—Å—Ç—Ä–æ–∫–∞ 123)
- `profileThreshold = profileThresholds[currentProfileId]` (—Å—Ç—Ä–æ–∫–∞ 127)
- `contextPercent = (100 * prevContextTokens) / contextWindow` (—Å—Ç—Ä–æ–∫–∞ 146)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `truncatedMessages = truncateConversation(messages, 0.5, taskId)` (—Å—Ç—Ä–æ–∫–∞ 170)

### üìÇ src/core/protect

#### üìÑ RooProtectedController.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = path.resolve(this.cwd, filePath)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `relativePath = path.relative(this.cwd, absolutePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `protectedFiles = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `patterns = RooProtectedController.PROTECTED_PATTERNS.join(", ")` (—Å—Ç—Ä–æ–∫–∞ 95)

### üìÇ src/core/prompts

#### üìÑ types.ts

#### üìÑ system.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `component = customModePrompts?.[mode]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `effectiveDiffStrategy = diffEnabled ? diffStrategy : undefined` (—Å—Ç—Ä–æ–∫–∞ 70)
- `modeConfig = getModeBySlug(mode, customModeConfigs) || modes.find((m) => m.slug === mode) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 73)
- `hasMcpGroup = modeConfig.groups.some((groupEntry) => getGroupName(groupEntry) === "mcp")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `hasMcpServers = mcpHub && mcpHub.getServers().length > 0` (—Å—Ç—Ä–æ–∫–∞ 78)
- `shouldIncludeMcp = hasMcpGroup && hasMcpServers` (—Å—Ç—Ä–æ–∫–∞ 79)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `basePrompt = `${roleDefinition}` (—Å—Ç—Ä–æ–∫–∞ 90)
- `fileCustomSystemPrompt = await loadSystemPromptFile(cwd, mode, variablesForPrompt)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `promptComponent = getPromptComponent(customModePrompts, mode)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `currentMode = getModeBySlug(mode, customModes) || modes.find((m) => m.slug === mode) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 171)
- `customInstructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 181)
- `effectiveDiffStrategy = diffEnabled ? diffStrategy : undefined` (—Å—Ç—Ä–æ–∫–∞ 202)

#### üìÑ responses.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatImagesIntoBlocks(): Anthropic.ImageBlockParam[]` (—Å—Ç—Ä–æ–∫–∞ 182)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `truncationMessage = `–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í–∞—à –æ—Ç–≤–µ—Ç –º–æ–≥ –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø—Ä–µ–≤—ã—Å–∏–ª –≤–∞—à –ª–∏–º–∏—Ç –≤—ã–≤–æ–¥–∞. –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ ${actualLineCount} —Å—Ç—Ä–æ–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ, –Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä line_count –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª, –ª–∏–±–æ –Ω–µ –±—ã–ª –≤–∫–ª—é—á–µ–Ω –≤ –≤–∞—à –æ—Ç–≤–µ—Ç.`` (—Å—Ç—Ä–æ–∫–∞ 41)
- `sorted = files` (—Å—Ç—Ä–æ–∫–∞ 104)
- `relativePath = path.relative(absolutePath, file).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `aParts = a.split("/") // —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º toPosix` (—Å—Ç—Ä–æ–∫–∞ 112)
- `bParts = b.split("/")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `absoluteFilePath = path.resolve(absolutePath, filePath)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `isIgnored = !rooIgnoreController.validateAccess(absoluteFilePath)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `isWriteProtected = rooProtectedController?.isWriteProtected(absoluteFilePath) || false` (—Å—Ç—Ä–æ–∫–∞ 152)
- `patch = diff.createPatch(filename.toPosix(), oldStr || "", newStr || "")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `lines = patch.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `prettyPatchLines = lines.slice(4)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `formatImagesIntoBlocks = (images?: string[]): Anthropic.ImageBlockParam[] => {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `mimeType = rest.split(":")[1].split("` (—Å—Ç—Ä–æ–∫–∞ 187)
- `toolUseInstructionsReminder = `# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤` (—Å—Ç—Ä–æ–∫–∞ 196)

### üìÇ src/core/mentions

#### üìÑ processUserContentMentions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `shouldProcessMentions(text: s)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `shouldProcessMentions = (text: string) =>` (—Å—Ç—Ä–æ–∫–∞ 42)
- `parsedContent = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 88)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getUrlErrorMessage(error: u): string` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `cwd = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `relPath = unescapeSpaces(mention.slice(1))` (—Å—Ç—Ä–æ–∫–∞ 61)
- `absPath = path.resolve(cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commandMatches = Array.from(text.matchAll(commandRegexGlobal))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `uniqueCommandNames = new Set(commandMatches.map(([, commandName]) => commandName))` (—Å—Ç—Ä–æ–∫–∞ 93)
- `commandExistenceChecks = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 95)
- `command = await getCommand(cwd, commandName)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `mentionPath = mention.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `urlMention = Array.from(mentions).find((mention) => mention.startsWith("http"))` (—Å—Ç—Ä–æ–∫–∞ 144)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `markdown = await urlContentFetcher.urlToMarkdown(mention)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `rawErrorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `localizedErrorMessage = getUrlErrorMessage(error)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `mentionPath = mention.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `content = await getFileOrFolderContent(` (—Å—Ç—Ä–æ–∫–∞ 188)
- `problems = await getWorkspaceProblems(cwd, includeDiagnosticMessages, maxDiagnosticMessages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `workingState = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `commitInfo = await getCommitInfo(mention, cwd)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `terminalOutput = await getLatestTerminalOutput()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `unescapedPath = unescapeSpaces(mentionPath)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `absPath = path.resolve(cwd, unescapedPath)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `stats = await fs.stat(absPath)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `content = await extractTextFromFile(absPath, maxReadFileLine)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `entries = await fs.readdir(absPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 290)
- `LOCK_SYMBOL = "üîí"` (—Å—Ç—Ä–æ–∫–∞ 293)
- `entry = entries[index]` (—Å—Ç—Ä–æ–∫–∞ 296)
- `isLast = index === entries.length - 1` (—Å—Ç—Ä–æ–∫–∞ 297)
- `linePrefix = isLast ? "‚îî‚îÄ‚îÄ " : "‚îú‚îÄ‚îÄ "` (—Å—Ç—Ä–æ–∫–∞ 298)
- `entryPath = path.join(absPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `displayName = isIgnored ? `${LOCK_SYMBOL} ${entry.name}` : entry.name` (—Å—Ç—Ä–æ–∫–∞ 310)
- `filePath = path.join(mentionPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `absoluteFilePath = path.resolve(absPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 316)
- `isBinary = await isBinaryFile(absoluteFilePath).catch(() => false)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `content = await extractTextFromFile(absoluteFilePath, maxReadFileLine)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `fileContents = (await Promise.all(fileContentPromises)).filter((content) => content)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `diagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 353)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 354)
- `originalClipboard = await vscode.env.clipboard.readText()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `lines = terminalContents.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `lastLine = lines.pop()?.trim()` (—Å—Ç—Ä–æ–∫–∞ 395)

### üìÇ src/core/ignore

#### üìÑ RooIgnoreController.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rooignorePattern = new vscode.RelativePattern(this.cwd, ".rooignore")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fileWatcher = vscode.workspace.createFileSystemWatcher(rooignorePattern)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ignorePath = path.join(this.cwd, ".rooignore")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `content = await fs.readFile(ignorePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `absolutePath = path.resolve(this.cwd, filePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `relativePath = path.relative(this.cwd, absolutePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `parts = command.trim().split(/\s+/)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `baseCommand = parts[0].toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 119)
- `fileReadingCommands = [` (—Å—Ç—Ä–æ–∫–∞ 122)
- `arg = parts[i]` (—Å—Ç—Ä–æ–∫–∞ 143)

### üìÇ src/core/environment

#### üìÑ reminder.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapedContent = item.content.replace(/\\/g, "\\\\").replace(/\|/g, "\\|")` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ getEnvironmentDetails.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `clineProvider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `state = await clineProvider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `visibleFilePaths = vscode.window.visibleTextEditors` (—Å—Ç—Ä–æ–∫–∞ 39)
- `allowedVisibleFiles = cline.rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 46)
- `maxTabs = maxOpenTabsContext ?? 20` (—Å—Ç—Ä–æ–∫–∞ 58)
- `openTabPaths = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 59)
- `allowedOpenTabs = cline.rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 68)
- `busyTerminals = [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `inactiveTerminals = [` (—Å—Ç—Ä–æ–∫–∞ 84)
- `cwd = busyTerminal.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `terminalsWithOutput = inactiveTerminals.filter((terminal) => {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `completedProcesses = terminal.getProcessesWithOutput()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `completedProcesses = inactiveTerminal.getProcessesWithOutput()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `cwd = inactiveTerminal.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `recentlyModifiedFiles = cline.fileContextTracker.getAndClearRecentlyModifiedFiles()` (—Å—Ç—Ä–æ–∫–∞ 179)
- `now = new Date()` (—Å—Ç—Ä–æ–∫–∞ 194)
- `timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone` (—Å—Ç—Ä–æ–∫–∞ 196)
- `timeZoneOffset = -now.getTimezoneOffset() / 60 // Convert to hours and invert sign to match conventional notation` (—Å—Ç—Ä–æ–∫–∞ 197)
- `timeZoneOffsetHours = Math.floor(Math.abs(timeZoneOffset))` (—Å—Ç—Ä–æ–∫–∞ 198)
- `timeZoneOffsetMinutes = Math.abs(Math.round((Math.abs(timeZoneOffset) - timeZoneOffsetHours) * 60))` (—Å—Ç—Ä–æ–∫–∞ 199)
- `timeZoneOffsetStr = `${timeZoneOffset >= 0 ? "+" : "-"}${timeZoneOffsetHours}:${timeZoneOffsetMinutes.toString().padStart(2, "0")}`` (—Å—Ç—Ä–æ–∫–∞ 200)
- `currentMode = mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 219)
- `modeDetails = await getFullModeDetails(currentMode, customModes, customModePrompts, {` (—Å—Ç—Ä–æ–∫–∞ 221)
- `isDesktop = arePathsEqual(cline.cwd, path.join(os.homedir(), "Desktop"))` (—Å—Ç—Ä–æ–∫–∞ 242)
- `maxFiles = maxWorkspaceFiles ?? 200` (—Å—Ç—Ä–æ–∫–∞ 249)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 258)
- `reminderSection = formatReminderSection(cline.todoList)` (—Å—Ç—Ä–æ–∫–∞ 271)

### üìÇ src/core/diff

#### üìÑ insert-groups.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `appendGroups = insertGroups.filter((group) => group.index === -1)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `normalGroups = insertGroups.filter((group) => group.index !== -1).sort((a, b) => a.index - b.index)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ src/core/context-tracking

#### üìÑ FileContextTrackerTypes.ts

#### üìÑ FileContextTracker.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getLatestDateForField(path: s, field: k): number | null` (—Å—Ç—Ä–æ–∫–∞ 156)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cwd = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `cwd = this.getCwd()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `fileUri = vscode.Uri.file(path.resolve(cwd, filePath))` (—Å—Ç—Ä–æ–∫–∞ 60)
- `watcher = vscode.workspace.createFileSystemWatcher(` (—Å—Ç—Ä–æ–∫–∞ 61)
- `cwd = this.getCwd()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `context = provider.contextProxy` (—Å—Ç—Ä–æ–∫–∞ 103)
- `globalStoragePath = this.getContextProxy()?.globalStorageUri.fsPath ?? ""` (—Å—Ç—Ä–æ–∫–∞ 115)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `filePath = path.join(taskDir, GlobalFileNames.taskMetadata)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `globalStoragePath = this.getContextProxy()!.globalStorageUri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 131)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `filePath = path.join(taskDir, GlobalFileNames.taskMetadata)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `metadata = await this.getTaskMetadata(taskId)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `getLatestDateForField = (path: string, field: keyof FileMetadataEntry): number | null => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `relevantEntries = metadata.files_in_context` (—Å—Ç—Ä–æ–∫–∞ 157)
- `files = Array.from(this.recentlyModifiedFiles)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `files = Array.from(this.checkpointPossibleFiles)` (—Å—Ç—Ä–æ–∫–∞ 210)

### üìÇ src/core/config

#### üìÑ importExport.ts

**–¢–∏–ø—ã:**

- `type ExportOptions` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type ImportWithProviderOptions` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `schema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 43)
- `previousProviderProfiles = await providerSettingsManager.export()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `providerProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `currentProviderName = providerProfiles.currentApiConfigName` (—Å—Ç—Ä–æ–∫–∞ 78)
- `currentProvider = providerProfiles.apiConfigs[currentProviderName]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `uris = await vscode.window.showOpenDialog({` - Import settings from a file using a file dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `uri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 146)
- `providerProfiles = await providerSettingsManager.export()` (—Å—Ç—Ä–æ–∫–∞ 156)
- `globalSettings = await contextProxy.export()` (—Å—Ç—Ä–æ–∫–∞ 157)
- `dirname = path.dirname(uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 170)

#### üìÑ ProviderSettingsManager.ts

**–¢–∏–ø—ã:**

- `type ProviderSettingsWithId` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerSettingsWithIdSchema = providerSettingsSchema.extend({ id: z.string().optional() })` (—Å—Ç—Ä–æ–∫–∞ 14)
- `discriminatedProviderSettingsWithIdSchema = providerSettingsSchemaDiscriminated.and(` (—Å—Ç—Ä–æ–∫–∞ 15)
- `next = this._lock.then(cb)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `currentName = providerProfiles.currentApiConfigName` (—Å—Ç—Ä–æ–∫–∞ 98)
- `configAny = apiConfig as any` (—Å—Ç—Ä–æ–∫–∞ 230)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 280)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 301)
- `existingId = providerProfiles.apiConfigs[name]?.id` (—Å—Ç—Ä–æ–∫–∞ 303)
- `id = config.id || existingId || this.generateId()` (—Å—Ç—Ä–æ–∫–∞ 304)
- `filteredConfig = providerSettingsSchemaDiscriminated.parse(config)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `id = params.id` (—Å—Ç—Ä–æ–∫–∞ 335)
- `entry = Object.entries(providerProfiles.apiConfigs).find(` (—Å—Ç—Ä–æ–∫–∞ 337)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 420)
- `profiles = providerProfilesSchema.parse(await this.load())` (—Å—Ç—Ä–æ–∫–∞ 451)
- `configs = profiles.apiConfigs` (—Å—Ç—Ä–æ–∫–∞ 452)
- `content = await this.context.secrets.get(this.secretsKey)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `providerProfiles = providerProfilesSchema` (—Å—Ç—Ä–æ–∫–∞ 493)
- `apiConfigs = Object.entries(providerProfiles.apiConfigs).reduce(` (—Å—Ç—Ä–æ–∫–∞ 499)
- `result = providerSettingsWithIdSchema.safeParse(apiConfig)` (—Å—Ç—Ä–æ–∫–∞ 501)

#### üìÑ CustomModesManager.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleSettingsChange()` (—Å—Ç—Ä–æ–∫–∞ 272)
- `async handleRoomodesChange()` (—Å—Ç—Ä–æ–∫–∞ 323)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RuleFile` (—Å—Ç—Ä–æ–∫–∞ 22)

- `interface ExportedModeConfig extends ModeConfig` (—Å—Ç—Ä–æ–∫–∞ 27)

- `interface ImportData` (—Å—Ç—Ä–æ–∫–∞ 31)

- `interface ExportResult` (—Å—Ç—Ä–æ–∫–∞ 35)

- `interface ImportResult` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ROOMODES_FILENAME = ".neira-modes"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `operation = this.writeQueue.shift()` (—Å—Ç—Ä–æ–∫–∞ 81)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 93)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `neiraDir = path.join(workspaceRoot, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `roomodesPath = path.join(neiraDir, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `exists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `parsed = yaml.parse(cleanedContent)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `errorMsg = yamlError instanceof Error ? yamlError.message : String(yamlError)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `lineMatch = errorMsg.match(/at line (\d+)/)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `line = lineMatch ? lineMatch[1] : "unknown"` (—Å—Ç—Ä–æ–∫–∞ 168)
- `errorMsg = yamlError instanceof Error ? yamlError.message : String(yamlError)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `settings = this.parseYamlSafely(content, filePath)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `result = customModesSettingsSchema.safeParse(settings)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `issues = result.error.issues` (—Å—Ç—Ä–æ–∫–∞ 200)
- `isRoomodes = filePath.endsWith(ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `source = isRoomodes ? ("project" as const) : ("global" as const)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `errorMsg = `Failed to load modes from ${filePath}: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 219)
- `slugs = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 227)
- `settingsDir = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `filePath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 251)
- `fileExists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `settingsWatcher = vscode.workspace.createFileSystemWatcher(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `handleSettingsChange = async () => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `content = await fs.readFile(settingsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `errorMessage = t("common:customModes.errors.invalidFormat")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `result = customModesSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 299)
- `mergedModes = await this.mergeCustomModes(roomodesModes, result.data.customModes)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 317)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `roomodesPath = path.join(workspaceRoot, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `roomodesWatcher = vscode.workspace.createFileSystemWatcher(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `handleRoomodesChange = async () => {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 325)
- `roomodesModes = await this.loadModesFromFile(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mergedModes = await this.mergeCustomModes(roomodesModes, settingsModes)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 358)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 365)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 366)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 370)
- `projectModes = new Map<string, ModeConfig>()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `globalModes = new Map<string, ModeConfig>()` (—Å—Ç—Ä–æ–∫–∞ 374)
- `mergedModes = [` (—Å—Ç—Ä–æ–∫–∞ 389)
- `validationResult = modeConfigSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 407)
- `errors = validationResult.error.errors.map((e) => e.message).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `isProjectMode = config.source === "project"` (—Å—Ç—Ä–æ–∫–∞ 414)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 418)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `exists = await fileExistsAtPath(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 427)
- `modeWithSource = {` (—Å—Ç—Ä–æ–∫–∞ 439)
- `updatedModes = modes.filter((m) => m.slug !== slug)` (—Å—Ç—Ä–æ–∫–∞ 445)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 492)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 493)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 495)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 496)
- `mergedModes = await this.mergeCustomModes(roomodesModes, settingsModes)` (—Å—Ç—Ä–æ–∫–∞ 497)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 508)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 511)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 512)
- `projectMode = roomodesModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `globalMode = settingsModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 516)
- `modeToDelete = projectMode || globalMode` (—Å—Ç—Ä–æ–∫–∞ 523)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 546)
- `scope = mode.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 559)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 564)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 572)
- `rulesFolderExists = await fileExistsAtPath(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 577)
- `messageKey = fromMarketplace` (—Å—Ç—Ä–æ–∫–∞ 585)
- `filePath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 601)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 607)
- `allModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 620)
- `mode = allModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 621)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 625)
- `roomodesPath = path.join(workspacePath, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `roomodesExists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 632)
- `roomodesContent = await fs.readFile(roomodesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 634)
- `roomodesData = yaml.parse(roomodesContent)` (—Å—Ç—Ä–æ–∫–∞ 635)
- `roomodesModes = roomodesData?.customModes || []` (—Å—Ç—Ä–æ–∫–∞ 636)
- `modeInRoomodes = roomodesModes.find((m: any) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 639)
- `isGlobalMode = mode?.source === "global"` (—Å—Ç—Ä–æ–∫–∞ 653)
- `globalRooDir = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 657)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 661)
- `stats = await fs.stat(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 669)
- `entries = await fs.readdir(modeRulesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 679)
- `filePath = path.join(modeRulesDir, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 684)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 685)
- `allModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 717)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 723)
- `roomodesPath = path.join(workspacePath, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 725)
- `roomodesExists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 727)
- `roomodesContent = await fs.readFile(roomodesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 729)
- `roomodesData = yaml.parse(roomodesContent)` (—Å—Ç—Ä–æ–∫–∞ 730)
- `roomodesModes = roomodesData?.customModes || []` (—Å—Ç—Ä–æ–∫–∞ 731)
- `builtInMode = builtInModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 743)
- `isGlobalMode = mode.source === "global"` (—Å—Ç—Ä–æ–∫–∞ 754)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 761)
- `modeRulesDir = isGlobalMode` (—Å—Ç—Ä–æ–∫–∞ 769)
- `stats = await fs.stat(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 775)
- `entries = await fs.readdir(modeRulesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 778)
- `filePath = path.join(modeRulesDir, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 783)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 784)
- `relativePath = path.relative(modeRulesDir, filePath)` (—Å—Ç—Ä–æ–∫–∞ 788)
- `normalizedRelativePath = relativePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 790)
- `exportData = {` (—Å—Ç—Ä–æ–∫–∞ 821)
- `yamlContent = yaml.stringify(exportData)` (—Å—Ç—Ä–æ–∫–∞ 825)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 829)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 854)
- `normalizedRelativePath = path.normalize(ruleFile.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 878)
- `rulesMatch = normalizedRelativePath.match(/^rules-[^\/\\]+[\/\\]/)` (—Å—Ç—Ä–æ–∫–∞ 888)
- `targetPath = path.join(rulesFolderPath, cleanedRelativePath)` (—Å—Ç—Ä–æ–∫–∞ 896)
- `normalizedTargetPath = path.normalize(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 897)
- `expectedBasePath = path.normalize(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 898)
- `targetDir = path.dirname(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 907)
- `parsed = yaml.parse(yamlContent)` (—Å—Ç—Ä–æ–∫–∞ 930)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 947)
- `validationResult = modeConfigSchema.safeParse(modeConfig)` (—Å—Ç—Ä–æ–∫–∞ 958)
- `existingModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 970)
- `existingMode = existingModes.find((m) => m.slug === importMode.slug)` (—Å—Ç—Ä–æ–∫–∞ 971)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 991)

#### üìÑ ContextProxy.ts

**–¢–∏–ø—ã:**

- `type GlobalStateKey` (—Å—Ç—Ä–æ–∫–∞ 22)
- `type SecretStateKey` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type NeiraCoderSettingsKey` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PASS_THROUGH_STATE_KEYS = ["taskHistory"]` (—Å—Ç—Ä–æ–∫–∞ 26)
- `globalSettingsExportSchema = globalSettingsSchema.omit({` (—Å—Ç—Ä–æ–∫–∞ 30)
- `promises = SECRET_STATE_KEYS.map(async (key) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `value = this.originalContext.globalState.get<GlobalState[K]>(key)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `value = this.stateCache[key]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `promises = SECRET_STATE_KEYS.map(async (key) => {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `values = this.getValues()` (—Å—Ç—Ä–æ–∫–∞ 176)
- `values = this.getValues()` (—Å—Ç—Ä–æ–∫–∞ 194)
- `entries = Object.entries(values) as [NeiraCoderSettingsKey, unknown][]` (—Å—Ç—Ä–æ–∫–∞ 250)
- `globalSettings = globalSettingsExportSchema.parse(this.getValues())` (—Å—Ç—Ä–æ–∫–∞ 260)

### üìÇ src/core/condense

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SUMMARY_PROMPT = `\` (—Å—Ç—Ä–æ–∫–∞ 14)
- `messagesToSummarize = getMessagesSinceLastSummary(messages.slice(0, -N_MESSAGES_TO_KEEP))` (—Å—Ç—Ä–æ–∫–∞ 103)
- `keepMessages = messages.slice(-N_MESSAGES_TO_KEEP)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `recentSummaryExists = keepMessages.some((message) => message.isSummary)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `error = t("common:errors.condensed_recently")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `requestMessages = maybeRemoveImageBlocks([...messagesToSummarize, finalRequestMessage], apiHandler).map(` (—Å—Ç—Ä–æ–∫–∞ 127)
- `promptToUse = customCondensingPrompt?.trim() ? customCondensingPrompt.trim() : SUMMARY_PROMPT` (—Å—Ç—Ä–æ–∫–∞ 133)
- `error = t("common:errors.condense_handler_invalid")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `stream = handlerToUse.createMessage(promptToUse, requestMessages)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `error = t("common:errors.condense_failed")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `newMessages = [...messages.slice(0, -N_MESSAGES_TO_KEEP), summaryMessage, ...keepMessages]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `contextMessages = outputTokens` (—Å—Ç—Ä–æ–∫–∞ 193)
- `contextBlocks = contextMessages.flatMap((message) =>` (—Å—Ç—Ä–æ–∫–∞ 197)
- `newContextTokens = outputTokens + (await apiHandler.countTokens(contextBlocks))` (—Å—Ç—Ä–æ–∫–∞ 201)
- `error = t("common:errors.condense_context_grew")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `lastSummaryIndex = messages.length - lastSummaryIndexReverse - 1` (—Å—Ç—Ä–æ–∫–∞ 217)
- `messagesSinceSummary = messages.slice(lastSummaryIndex)` (—Å—Ç—Ä–æ–∫–∞ 218)

### üìÇ src/core/checkpoints

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `log(message: s)` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `log = (message: string) => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `workspaceDir = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `globalStorageDir = provider?.context.globalStorageUri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 56)
- `service = RepoPerTaskCheckpointService.create(options)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `gitInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `selection = await vscode.window.showWarningMessage(` (—Å—Ç—Ä–æ–∫–∞ 103)
- `service = getCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `service = getCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `service = await getInitializedCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 224)
- `index = cline.clineMessages.findIndex((m) => m.ts === ts)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 236)
- `deletedMessages = cline.clineMessages.slice(index + 1)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `service = await getInitializedCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `previousCheckpoint = cline.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 301)
- `changes = await service.getDiff({ from: previousCommitHash, to: commitHash })` (—Å—Ç—Ä–æ–∫–∞ 310)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 331)

### üìÇ src/core/assistant-message

#### üìÑ presentAssistantMessage.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toolDescription(): string` (—Å—Ç—Ä–æ–∫–∞ 154)
- `pushToolResult(content: T)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `async askFinishSubTaskApproval()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `async handleError(action: s, error: E)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `removeClosingTag(tag: T): string` (—Å—Ç—Ä–æ–∫–∞ 320)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `block = cloneDeep(cline.assistantMessageContent[cline.currentStreamingContentIndex]) // need to create copy bc while stream is updating the array, it could be updating the reference block properties too` (—Å—Ç—Ä–æ–∫–∞ 81)
- `lastOpenBracketIndex = content.lastIndexOf("<")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `possibleTag = content.slice(lastOpenBracketIndex)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `hasCloseBracket = possibleTag.includes(">")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `isLikelyTagName = /^[a-zA-Z_]+$/.test(tagContent)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `isOpeningOrClosing = possibleTag === "<" || possibleTag === "</"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `toolDescription = (): string => {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `match = block.params.args.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `firstPath = match[1]` (—Å—Ç—Ä–æ–∫–∞ 172)
- `fileCount = (block.params.args.match(/<file>/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 174)
- `mode = block.params.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 212)
- `message = block.params.message ?? "(no message)"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `modeName = getModeBySlug(mode, customModes)?.name ?? mode` (—Å—Ç—Ä–æ–∫–∞ 214)
- `pushToolResult = (content: ToolResponse) => {` (—Å—Ç—Ä–æ–∫–∞ 248)
- `askApproval = async (` (—Å—Ç—Ä–æ–∫–∞ 263)
- `askFinishSubTaskApproval = async () => {` (—Å—Ç—Ä–æ–∫–∞ 298)
- `toolMessage = JSON.stringify({ tool: "finishTask" })` (—Å—Ç—Ä–æ–∫–∞ 303)
- `handleError = async (action: string, error: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 307)
- `errorString = `Error ${action}: ${JSON.stringify(serializeError(error))}`` (—Å—Ç—Ä–æ–∫–∞ 308)
- `removeClosingTag = (tag: ToolParamName, text?: string): string => {` (—Å—Ç—Ä–æ–∫–∞ 320)
- `tagRegex = new RegExp(` (—Å—Ç—Ä–æ–∫–∞ 334)
- `repetitionCheck = cline.toolRepetitionDetector.check(block)` (—Å—Ç—Ä–æ–∫–∞ 375)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 421)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `recentlyModifiedFiles = cline.fileContextTracker.getAndClearCheckpointPossibleFile()` (—Å—Ç—Ä–æ–∫–∞ 530)

#### üìÑ parseAssistantMessageV2.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolUseOpenTags = new Map<string, ToolName>()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `toolParamOpenTags = new Map<string, ToolParamName>()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `len = assistantMessage.length` (—Å—Ç—Ä–æ–∫–∞ 62)
- `currentCharIndex = i` (—Å—Ç—Ä–æ–∫–∞ 65)
- `closeTag = `</${currentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 69)
- `value = assistantMessage.slice(` (—Å—Ç—Ä–æ–∫–∞ 79)
- `toolCloseTag = `</${currentToolUse.name}>`` (—Å—Ç—Ä–æ–∫–∞ 116)
- `toolContentSlice = assistantMessage.slice(` (—Å—Ç—Ä–æ–∫–∞ 125)
- `contentStartTag = `<${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 141)
- `contentEndTag = `</${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 142)
- `contentStart = toolContentSlice.indexOf(contentStartTag)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `contentEnd = toolContentSlice.lastIndexOf(contentEndTag)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `contentValue = toolContentSlice` (—Å—Ç—Ä–æ–∫–∞ 150)
- `potentialText = assistantMessage` (—Å—Ç—Ä–æ–∫–∞ 198)
- `value = assistantMessage.slice(currentParamValueStart) // From param start to end of string.` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ parseAssistantMessage.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `char = assistantMessage[i]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `currentParamValue = accumulator.slice(currentParamValueStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `paramClosingTag = `</${currentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 24)
- `paramValue = currentParamValue.slice(0, -paramClosingTag.length)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `currentToolValue = accumulator.slice(currentToolUseStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `toolUseClosingTag = `</${currentToolUse.name}>`` (—Å—Ç—Ä–æ–∫–∞ 45)
- `possibleParamOpeningTags = toolParamNames.map((name) => `<${name}>`)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `toolContent = accumulator.slice(currentToolUseStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `contentStartTag = `<${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 74)
- `contentEndTag = `</${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 75)
- `contentStartIndex = toolContent.indexOf(contentStartTag) + contentStartTag.length` (—Å—Ç—Ä–æ–∫–∞ 76)
- `contentEndIndex = toolContent.lastIndexOf(contentEndTag)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `possibleToolUseOpeningTags = toolNames.map((name) => `<${name}>`)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `paramValue = accumulator.slice(currentParamValueStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 149)

#### üìÑ index.ts

### üìÇ src/api/transform

#### üìÑ vscode-lm-format.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `asObjectSafe(value: a): object` - Safely converts a value into a plain object. (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contentParts = [` (—Å—Ç—Ä–æ–∫–∞ 66)
- `contentParts = [` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ stream.ts

#### üìÑ simple-format.ts

#### üìÑ reasoning.ts

**–¢–∏–ø—ã:**

- `type ReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ r1-format.ts

**–¢–∏–ø—ã:**

- `type ContentPartText` (—Å—Ç—Ä–æ–∫–∞ 4)
- `type ContentPartImage` (—Å—Ç—Ä–æ–∫–∞ 5)
- `type UserMessage` (—Å—Ç—Ä–æ–∫–∞ 6)
- `type AssistantMessage` (—Å—Ç—Ä–æ–∫–∞ 7)
- `type Message` (—Å—Ç—Ä–æ–∫–∞ 8)
- `type AnthropicMessage` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `lastMessage = merged[merged.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 20)
- `lastContent = Array.isArray(lastMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `newContent = Array.isArray(messageContent)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mergedContent = [...lastContent, ...newContent] as AssistantMessage["content"]` (—Å—Ç—Ä–æ–∫–∞ 72)
- `mergedContent = [...lastContent, ...newContent] as UserMessage["content"]` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ openai-format.ts

#### üìÑ model-params.ts

**–¢–∏–ø—ã:**

- `type Format` (—Å—Ç—Ä–æ–∫–∞ 22)
- `type BaseModelParams` (—Å—Ç—Ä–æ–∫–∞ 32)
- `type AnthropicModelParams` (—Å—Ç—Ä–æ–∫–∞ 39)
- `type OpenAiModelParams` (—Å—Ç—Ä–æ–∫–∞ 44)
- `type GeminiModelParams` (—Å—Ç—Ä–æ–∫–∞ 49)
- `type OpenRouterModelParams` (—Å—Ç—Ä–æ–∫–∞ 54)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `maxTokens = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ mistral-format.ts

#### üìÑ image-cleaning.ts

#### üìÑ gemini-format.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolName = block.tool_use_id.split("-")[0]` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ bedrock-converse-format.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BedrockMessageContent` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = anthropicMessage.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `messageBlock = block as BedrockMessageContent & {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `binaryString = atob(messageBlock.source.data)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `format = messageBlock.source.media_type.split("/")[1]` (—Å—Ç—Ä–æ–∫–∞ 73)
- `toolParams = Object.entries(messageBlock.input || {})` (—Å—Ç—Ä–æ–∫–∞ 90)
- `videoContent = messageBlock.s3Location` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ src/api/providers

#### üìÑ xai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `XAI_DEFAULT_TEMPERATURE = 0` (—Å—Ç—Ä–æ–∫–∞ 16)
- `info = xaiModels[id]` (—Å—Ç—Ä–æ–∫–∞ 38)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 39)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 51)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 62)
- `promptDetails = "prompt_tokens_details" in chunk.usage ? chunk.usage.prompt_tokens_details : null` (—Å—Ç—Ä–æ–∫–∞ 81)
- `cachedTokens = promptDetails && "cached_tokens" in promptDetails ? promptDetails.cached_tokens : 0` (—Å—Ç—Ä–æ–∫–∞ 82)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 106)

#### üìÑ vscode-lm.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 96)
- `models = await vscode.lm.selectChatModels(selector)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `countMessage = extractTextCountFromMessage(text)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `selector = this.options?.vsCodeLmModelSelector || {}` (—Å—Ç—Ä–æ–∫–∞ 296)
- `message = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 300)
- `cleanedMessages = messages.map((msg) => ({` (—Å—Ç—Ä–æ–∫–∞ 343)
- `toolCall = {` (—Å—Ç—Ä–æ–∫–∞ 415)
- `toolCallText = JSON.stringify(toolCall)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `errorDetails = JSON.stringify(error, null, 2)` (—Å—Ç—Ä–æ–∫–∞ 473)
- `errorMessage = String(error)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `requiredProps = {` (—Å—Ç—Ä–æ–∫–∞ 489)
- `modelParts = [this.client.vendor, this.client.family, this.client.version].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 505)
- `modelId = this.client.id || modelParts.join(SELECTOR_SEPARATOR)` (—Å—Ç—Ä–æ–∫–∞ 507)
- `fallbackId = this.options.vsCodeLmModelSelector` (—Å—Ç—Ä–æ–∫–∞ 527)
- `client = await this.getClient()` (—Å—Ç—Ä–æ–∫–∞ 544)
- `response = await client.sendRequest(` (—Å—Ç—Ä–æ–∫–∞ 545)
- `models = (await vscode.lm.selectChatModels({})) || []` (—Å—Ç—Ä–æ–∫–∞ 571)

#### üìÑ vertex.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 16)
- `params = getModelParams({ format: "gemini", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ unbound.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UnboundUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 23)

**–¢–∏–ø—ã:**

- `type UnboundChatCompletionCreateParamsStreaming` (—Å—Ç—Ä–æ–∫–∞ 28)
- `type UnboundChatCompletionCreateParamsNonStreaming` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ORIGIN_APP = "roo-code"` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DEFAULT_HEADERS = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 107)
- `usage = chunk.usage as UnboundUsage` (—Å—Ç—Ä–æ–∫–∞ 108)
- `response = await this.client.chat.completions.create(requestOptions, { headers: DEFAULT_HEADERS })` (—Å—Ç—Ä–æ–∫–∞ 155)

#### üìÑ sambanova.ts

#### üìÑ router-provider.ts

**–¢–∏–ø—ã:**

- `type RouterProviderOptions` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.modelId ?? this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 64)

#### üìÑ requesty.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RequestyUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 21)

**–¢–∏–ø—ã:**

- `type RequestyChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.requestyModelId ?? requestyDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 62)
- `info = this.models[id] ?? requestyDefaultModelInfo` (—Å—Ç—Ä–æ–∫–∞ 63)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 65)
- `requestyUsage = usage as RequestyUsage` (—Å—Ç—Ä–æ–∫–∞ 76)
- `inputTokens = requestyUsage?.prompt_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 77)
- `outputTokens = requestyUsage?.completion_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 78)
- `cacheWriteTokens = requestyUsage?.prompt_tokens_details?.caching_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 79)
- `cacheReadTokens = requestyUsage?.prompt_tokens_details?.cached_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 80)
- `totalCost = modelInfo` (—Å—Ç—Ä–æ–∫–∞ 81)
- `stream = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ openrouter.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 40)

**–¢–∏–ø—ã:**

- `type OpenRouterChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseURL = this.options.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `apiKey = this.options.openRouterApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `model = await this.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `transforms = (this.options.openRouterUseMiddleOutTransform ?? true) ? ["middle-out"] : undefined` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `error = chunk.error as { message?: string` (—Å—Ç—Ä–æ–∫–∞ 144)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 149)
- `id = this.options.openRouterModelId ?? openRouterDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 193)
- `isDeepSeekR1 = id.startsWith("deepseek/deepseek-r1") || id === "perplexity/sonar-reasoning"` (—Å—Ç—Ä–æ–∫–∞ 201)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 203)
- `response = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `error = response.error as { message?: string` (—Å—Ç—Ä–æ–∫–∞ 238)
- `completion = response as OpenAI.Chat.ChatCompletion` (—Å—Ç—Ä–æ–∫–∞ 242)

#### üìÑ openai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseURL = this.options.openAiBaseUrl ?? "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `apiKey = this.options.openAiApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `isAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `urlHost = this._getUrlHost(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `isAzureOpenAi = urlHost === "azure.com" || urlHost.endsWith(".azure.com") || options.openAiUseAzure` (—Å—Ç—Ä–æ–∫–∞ 42)
- `headers = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `modelUrl = this.options.openAiBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 81)
- `modelId = this.options.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 82)
- `enabledR1Format = this.options.openAiR1FormatEnabled ?? false` (—Å—Ç—Ä–æ–∫–∞ 83)
- `enabledLegacyFormat = this.options.openAiLegacyFormat ?? false` (—Å—Ç—Ä–æ–∫–∞ 84)
- `isAzureAiInference = this._isAzureAiInference(modelUrl)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `deepseekReasoner = modelId.includes("deepseek-reasoner") || enabledR1Format` (—Å—Ç—Ä–æ–∫–∞ 86)
- `ark = modelUrl.includes(".volces.com")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `lastTwoUserMessages = convertedMessages.filter((msg) => msg.role === "user").slice(-2)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `isGrokXAI = this._isGrokXAI(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `stream = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 164)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 169)
- `delta = chunk.choices[0]?.delta ?? {}` (—Å—Ç—Ä–æ–∫–∞ 181)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 226)
- `id = this.options.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 251)
- `info = this.options.openAiCustomModelInfo ?? openAiModelInfoSaneDefaults` (—Å—Ç—Ä–æ–∫–∞ 252)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 253)
- `isAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 259)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelInfo = model.info` (—Å—Ç—Ä–æ–∫–∞ 261)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 271)
- `modelInfo = this.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 291)
- `methodIsAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `isGrokXAI = this._isGrokXAI(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `stream = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 317)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 342)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 357)
- `urlHost = this._getUrlHost(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 384)
- `urlHost = this._getUrlHost(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `response = await axios.get(`${baseUrl}/models`, config)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `modelsArray = response.data?.data?.map((model: any) => model.id) || []` (—Å—Ç—Ä–æ–∫–∞ 438)

#### üìÑ openai-native.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = this.options.openAiNativeApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `isOriginalO1 = model.id === "o1"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 115)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 131)
- `inputTokens = usage?.prompt_tokens || 0 // sum of cache hits and misses` (—Å—Ç—Ä–æ–∫–∞ 147)
- `outputTokens = usage?.completion_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 148)
- `cacheReadTokens = usage?.prompt_tokens_details?.cached_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 149)
- `cacheWriteTokens = 0` (—Å—Ç—Ä–æ–∫–∞ 150)
- `totalCost = calculateApiCostOpenAI(info, inputTokens, outputTokens, cacheWriteTokens, cacheReadTokens)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `nonCachedInputTokens = Math.max(0, inputTokens - cacheReadTokens - cacheWriteTokens)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 165)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 172)
- `response = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 196)

#### üìÑ ollama.ts

**–¢–∏–ø—ã:**

- `type CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.getModel().id` (—Å—Ç—Ä–æ–∫–∞ 37)
- `useR1Format = modelId.toLowerCase().includes("deepseek-r1")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 44)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 51)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 61)
- `modelId = this.getModel().id` (—Å—Ç—Ä–æ–∫–∞ 94)
- `useR1Format = modelId.toLowerCase().includes("deepseek-r1")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ moonshot.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? moonshotDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 23)
- `info = moonshotModels[id as keyof typeof moonshotModels] || moonshotModels[moonshotDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 24)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ mistral.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiModelId = options.apiModelId || mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 31)
- `response = await this.client.chat.stream({` (—Å—Ç—Ä–æ–∫–∞ 49)
- `delta = chunk.data.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 57)
- `id = this.options.apiModelId ?? mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 82)
- `info = mistralModels[id as MistralModelId] ?? mistralModels[mistralDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `maxTokens = this.options.includeMaxTokens ? info.maxTokens : undefined` (—Å—Ç—Ä–æ–∫–∞ 86)
- `temperature = this.options.modelTemperature ?? MISTRAL_DEFAULT_TEMPERATURE` (—Å—Ç—Ä–æ–∫–∞ 87)
- `response = await this.client.chat.complete({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `content = response.choices?.[0]?.message.content` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ lm-studio.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toContentBlocks = (` (—Å—Ç—Ä–æ–∫–∞ 44)
- `results = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 90)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 100)
- `models = getModelsFromCache("lmstudio")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `response = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `response = await axios.get(`${baseUrl}/v1/models`)` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modelsArray = response.data?.data?.map((model: any) => model.id) || []` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ lite-llm.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LiteLLMUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 206)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openAiMessages = convertToOpenAiMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `userMsgIndices = openAiMessages.reduce(` (—Å—Ç—Ä–æ–∫–∞ 62)
- `lastUserMsgIndex = userMsgIndices[userMsgIndices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 66)
- `secondLastUserMsgIndex = userMsgIndices[userMsgIndices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 67)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 130)
- `usage = chunk.usage as LiteLLMUsage` (—Å—Ç—Ä–æ–∫–∞ 131)
- `response = await this.client.chat.completions.create(requestOptions)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ index.ts

#### üìÑ human-relay.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMessageContent(message: A): string` - Extract text content from message object (—Å—Ç—Ä–æ–∫–∞ 104)
- `async showHumanRelayDialog(promptText: s): Promise<string | undefined>` - Displays the human relay dialog and waits for user response. (—Å—Ç—Ä–æ–∫–∞ 120)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `latestMessage = messages[messages.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 32)
- `response = await showHumanRelayDialog(promptText)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `response = await showHumanRelayDialog(prompt)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `requestId = Date.now().toString()` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ huggingface.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `temperature = this.options.modelTemperature ?? 0.7` (—Å—Ç—Ä–æ–∫–∞ 52)
- `stream = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 70)
- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 109)
- `modelInfo = this.modelCache?.[modelId]` (—Å—Ç—Ä–æ–∫–∞ 112)

#### üìÑ groq.ts

#### üìÑ glama.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `delay(ms: n)` (—Å—Ç—Ä–æ–∫–∞ 87)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_HEADERS = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `completionRequestId = response.headers.get("x-completion-request-id")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 77)
- `delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))` (—Å—Ç—Ä–æ–∫–∞ 87)
- `response = await axios.get(` (—Å—Ç—Ä–æ–∫–∞ 92)
- `completionRequest = response.data` (—Å—Ç—Ä–æ–∫–∞ 97)
- `response = await this.client.chat.completions.create(requestOptions)` (—Å—Ç—Ä–æ–∫–∞ 136)

#### üìÑ gemini.ts

**–¢–∏–ø—ã:**

- `type GeminiHandlerOptions` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `project = this.options.vertexProjectId ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `location = this.options.vertexRegion ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `apiKey = this.options.geminiApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 40)
- `contents = messages.map(convertAnthropicMessageToGemini)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = await this.client.models.generateContentStream(params)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `candidate = chunk.candidates[0]` (—Å—Ç—Ä–æ–∫–∞ 101)
- `citations = this.extractCitationsOnly(pendingGroundingMetadata)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `inputTokens = lastUsageMetadata.promptTokenCount ?? 0` (—Å—Ç—Ä–æ–∫–∞ 142)
- `outputTokens = lastUsageMetadata.candidatesTokenCount ?? 0` (—Å—Ç—Ä–æ–∫–∞ 143)
- `cacheReadTokens = lastUsageMetadata.cachedContentTokenCount` (—Å—Ç—Ä–æ–∫–∞ 144)
- `reasoningTokens = lastUsageMetadata.thoughtsTokenCount` (—Å—Ç—Ä–æ–∫–∞ 145)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 166)
- `params = getModelParams({ format: "gemini", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 169)
- `chunks = groundingMetadata?.groundingChunks` (—Å—Ç—Ä–æ–∫–∞ 179)
- `citationLinks = chunks` (—Å—Ç—Ä–æ–∫–∞ 185)
- `uri = chunk.web?.uri` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = await this.client.models.generateContent({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `candidate = result.candidates?.[0]` (—Å—Ç—Ä–æ–∫–∞ 229)
- `citations = this.extractCitationsOnly(candidate.groundingMetadata)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `response = await this.client.models.countTokens({` (—Å—Ç—Ä–æ–∫–∞ 251)
- `tier = info.tiers.find((tier) => inputTokens <= tier.contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `uncachedInputTokens = inputTokens - cacheReadTokens` (—Å—Ç—Ä–æ–∫–∞ 300)
- `inputTokensCost = inputPrice * (uncachedInputTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `outputTokensCost = outputPrice * (outputTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `totalCost = inputTokensCost + outputTokensCost + cacheReadCost` (—Å—Ç—Ä–æ–∫–∞ 306)

#### üìÑ fake-ai.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FakeAI` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `optionsFakeAi = options.fakeAi as FakeAI | undefined` (—Å—Ç—Ä–æ–∫–∞ 47)
- `id = optionsFakeAi.id` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ doubao.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatCompletionMessageParam` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface ChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 19)

- `interface ChatCompletion` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface ChatCompletionChunk` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? doubaoDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 65)
- `info = doubaoModels[id as keyof typeof doubaoModels] || doubaoModels[doubaoDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 67)

#### üìÑ deepseek.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? deepSeekDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 23)
- `info = deepSeekModels[id as keyof typeof deepSeekModels] || deepSeekModels[deepSeekDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 24)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ constants.ts

#### üìÑ claude-code.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filteredMessages = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `useVertex = process.env.CLAUDE_CODE_USE_VERTEX === "1"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `modelId = model.id in claudeCodeModels ? (model.id as ClaudeCodeModelId) : claudeCodeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 33)
- `claudeProcess = runClaudeCode({` (—Å—Ç—Ä–æ–∫–∞ 35)
- `message = chunk.message` (—Å—Ç—Ä–æ–∫–∞ 72)
- `content = "text" in message.content[0] ? message.content[0] : undefined` (—Å—Ç—Ä–æ–∫–∞ 75)
- `isError = content && content.text.startsWith(`API Error`)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `errorMessageStart = content.text.indexOf("{")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `errorMessage = content.text.slice(errorMessageStart)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `error = this.attemptParse(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 142)
- `id = modelId as ClaudeCodeModelId` (—Å—Ç—Ä–æ–∫–∞ 144)

#### üìÑ chutes.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `temperature = this.options.modelTemperature ?? this.getModel().info.temperature` (—Å—Ç—Ä–æ–∫–∞ 40)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 56)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 61)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 71)
- `model = super.getModel()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `isDeepSeekR1 = model.id.includes("DeepSeek-R1")` (—Å—Ç—Ä–æ–∫–∞ 99)

#### üìÑ cerebras.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `stripThinkingTokens(text: s): string` - Removes thinking tokens from text to prevent model confusion when processing conversation history. This is crucial because models can get confused by their own thinking tokens in input. (—Å—Ç—Ä–æ–∫–∞ 23)
- `flattenMessageContent(content: a): string` - Flattens OpenAI message content to simple strings that Cerebras can handle. Cerebras doesn't support complex content arrays like OpenAI does. (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CEREBRAS_BASE_URL = "https://api.cerebras.ai/v1"` (—Å—Ç—Ä–æ–∫–∞ 16)
- `CEREBRAS_DEFAULT_TEMPERATURE = 0` (—Å—Ç—Ä–æ–∫–∞ 17)
- `modelId = (this.options.apiModelId as CerebrasModelId) || this.defaultProviderModelId` (—Å—Ç—Ä–æ–∫–∞ 101)
- `temperature = this.options.modelTemperature ?? CEREBRAS_DEFAULT_TEMPERATURE` (—Å—Ç—Ä–æ–∫–∞ 117)
- `openaiMessages = convertToOpenAiMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `cerebrasMessages = convertToCerebrasMessages(openaiMessages)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `requestBody = {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `response = await fetch(`${CEREBRAS_BASE_URL}/chat/completions`, {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `errorText = await response.text()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `errorJson = JSON.parse(errorText)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 182)
- `reader = response.body.getReader()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `lines = buffer.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `jsonStr = line.slice(6).trim()` (—Å—Ç—Ä–æ–∫–∞ 211)
- `parsed = JSON.parse(jsonStr)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = parsed.choices[0].delta.content` (—Å—Ç—Ä–æ–∫–∞ 220)
- `inputText = systemPrompt + cerebrasMessages.map((m) => m.content).join("")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `requestBody = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `response = await fetch(`${CEREBRAS_BASE_URL}/chat/completions`, {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `errorText = await response.text()` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ bedrock.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BedrockInferenceConfig` (—Å—Ç—Ä–æ–∫–∞ 43)

- `interface BedrockThinkingConfig` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface BedrockPayload` (—Å—Ç—Ä–æ–∫–∞ 59)

- `interface ContentBlockStartEvent` (—Å—Ç—Ä–æ–∫–∞ 70)

- `interface ContentBlockDeltaEvent` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = modelId.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 290)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 317)
- `usePromptCache = Boolean(this.options.awsUsePromptCache && this.supportsAwsPromptCache(modelConfig))` (—Å—Ç—Ä–æ–∫–∞ 318)
- `formatted = this.convertToBedrockConverseMessages(` (—Å—Ç—Ä–æ–∫–∞ 329)
- `isThinkingExplicitlyEnabled = metadata?.thinking?.enabled` (—Å—Ç—Ä–æ–∫–∞ 343)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 384)
- `command = new ConverseStreamCommand(payload)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `response = await this.client.send(command, {` (—Å—Ç—Ä–æ–∫–∞ 396)
- `usage = (streamEvent.metadata?.usage || {}) as UsageType` (—Å—Ç—Ä–æ–∫–∞ 421)
- `cacheReadTokens = usage.cacheReadInputTokens || usage.cacheReadInputTokenCount || 0` (—Å—Ç—Ä–æ–∫–∞ 424)
- `cacheWriteTokens = usage.cacheWriteInputTokens || usage.cacheWriteInputTokenCount || 0` (—Å—Ç—Ä–æ–∫–∞ 425)
- `routerUsage = streamEvent.trace.promptRouter.usage` (—Å—Ç—Ä–æ–∫–∞ 453)
- `cbStart = streamEvent.contentBlockStart` (—Å—Ç—Ä–æ–∫–∞ 487)
- `contentBlock = cbStart.contentBlock || cbStart.content_block` (—Å—Ç—Ä–æ–∫–∞ 503)
- `cbDelta = streamEvent.contentBlockDelta` (—Å—Ç—Ä–æ–∫–∞ 524)
- `delta = cbDelta.delta` (—Å—Ç—Ä–æ–∫–∞ 525)
- `errorType = this.getErrorType(error)` (—Å—Ç—Ä–æ–∫–∞ 569)
- `errorChunks = this.handleBedrockError(error, true) // true for streaming context` (—Å—Ç—Ä–æ–∫–∞ 584)
- `enhancedErrorMessage = this.formatErrorMessage(error, this.getErrorType(error), true)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `enhancedError = new Error(enhancedErrorMessage)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 617)
- `conversationId = `prompt_${prompt.substring(0, 20)}`` (—Å—Ç—Ä–æ–∫–∞ 633)
- `payload = {` (—Å—Ç—Ä–æ–∫–∞ 635)
- `command = new ConverseCommand(payload)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `response = await this.client.send(command)` (—Å—Ç—Ä–æ–∫–∞ 653)
- `errorResult = this.handleBedrockError(error, false) // false for non-streaming context` (—Å—Ç—Ä–æ–∫–∞ 673)
- `errorMessage = errorResult as string` (—Å—Ç—Ä–æ–∫–∞ 675)
- `enhancedError = new Error(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 678)
- `convertedMessages = sharedConverter(anthropicMessages as Anthropic.Messages.MessageParam[])` (—Å—Ç—Ä–æ–∫–∞ 710)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 737)
- `cacheResult = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 747)
- `messagesWithCache = convertedMessages.map((msg, index) => {` (—Å—Ç—Ä–æ–∫–∞ 755)
- `placement = cacheResult.messageCachePointPlacements?.find((p) => p.index === index)` (—Å—Ç—Ä–æ–∫–∞ 756)
- `arnRegex = /^arn:aws:(?:bedrock|sagemaker):([^:]+):([^:]*):(?:([^\/]+)\/([\w\.\-:]+)|([^\/]+))$/` (—Å—Ç—Ä–æ–∫–∞ 805)
- `originalModelId = match[4]` (—Å—Ç—Ä–æ–∫–∞ 823)
- `arnRegion = match[1]` (—Å—Ç—Ä–æ–∫–∞ 827)
- `baseModelId = this.parseBaseModelId(modelId) as BedrockModelId` (—Å—Ç—Ä–æ–∫–∞ 879)
- `guessed = this.guessModelInfoFromId(modelId)` (—Å—Ç—Ä–æ–∫–∞ 894)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 925)
- `prefix = AwsBedrockHandler.getPrefixForRegion(this.options.awsRegion)` (—Å—Ç—Ä–æ–∫–∞ 951)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 959)
- `errorMessage = error.message.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 1230)
- `errorName = error.name.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 1231)
- `errorTypeOrder = [` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType]` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType] || AwsBedrockHandler.ERROR_TYPES.GENERIC` (—Å—Ç—Ä–æ–∫–∞ 1263)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 1273)
- `errorType = this.getErrorType(error)` (—Å—Ç—Ä–æ–∫–∞ 1304)
- `errorMessage = this.formatErrorMessage(error, errorType, isStreamContext)` (—Å—Ç—Ä–æ–∫–∞ 1307)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType]` (—Å—Ç—Ä–æ–∫–∞ 1310)
- `logMethod = definition.logLevel` (—Å—Ç—Ä–æ–∫–∞ 1311)
- `contextName = isStreamContext ? "createMessage" : "completePrompt"` (—Å—Ç—Ä–æ–∫–∞ 1312)

#### üìÑ base-provider.ts

#### üìÑ base-openai-compatible-provider.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `temperature = this.options.modelTemperature ?? this.defaultTemperature` (—Å—Ç—Ä–æ–∫–∞ 75)
- `stream = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 89)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 112)

#### üìÑ anthropic.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userMsgIndices = messages.reduce(` - The latest message will be the new user message, one before will be the assistant message from a previous request, and the user message before that will be a previously cached user message. So we need to mark the latest user message as ephemeral to cache it for the next request, and mark the second to last user message as ephemeral to let the server know the last message to retrieve from the cache for the current request. (—Å—Ç—Ä–æ–∫–∞ 66)
- `lastUserMsgIndex = userMsgIndices[userMsgIndices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 71)
- `secondLastMsgUserIndex = userMsgIndices[userMsgIndices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 72)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 235)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 239)
- `message = await this.client.messages.create({` (—Å—Ç—Ä–æ–∫–∞ 261)
- `content = message.content.find(({ type }) => type === "text")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `response = await this.client.messages.countTokens({` (—Å—Ç—Ä–æ–∫–∞ 285)

#### üìÑ anthropic-vertex.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `projectId = this.options.vertexProjectId ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 34)
- `region = this.options.vertexRegion ?? "us-east5"` (—Å—Ç—Ä–æ–∫–∞ 35)
- `stream = await this.client.messages.create(params)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `usage = chunk.message!.usage` (—Å—Ç—Ä–æ–∫–∞ 104)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 166)
- `params = getModelParams({ format: "anthropic", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 169)
- `response = await this.client.messages.create(params)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `content = response.content[0]` (—Å—Ç—Ä–æ–∫–∞ 205)

### üìÇ src/activate/__tests__

#### üìÑ registerCommands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProvider = {} as ClineProvider` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = getVisibleProviderOrLog(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = getVisibleProviderOrLog(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 62)

#### üìÑ CodeActionProvider.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `mockGet = vi.fn().mockReturnValue(false)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `mockGetConfiguration = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 105)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 118)
- `mockGet = vi.fn().mockReturnValue(true)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `mockGetConfiguration = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 130)

### üìÇ src/__mocks__/fs

#### üìÑ promises.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `ensureDirectoryExists(path: s)` (—Å—Ç—Ä–æ–∫–∞ 39)

**–¢–∏–ø—ã:**

- `type RuleFiles` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFiles = new Map()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `mockDirectories = new Set()` (—Å—Ç—Ä–æ–∫–∞ 5)
- `baseTestDirs = [` (—Å—Ç—Ä–æ–∫–∞ 8)
- `ensureDirectoryExists = (path: string) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `parts = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockFs = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `fileName = filePath.split("/").pop()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `error = new Error(`ENOENT: no such file or directory, open '${filePath}'`)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `parentDir = path.split("/").slice(0, -1).join("/")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `parts = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `error = new Error(`ENOENT: no such file or directory, mkdir '${path}'`)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `error = new Error(`ENOENT: no such file or directory, access '${path}'`)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `content = mockFiles.get(oldPath)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `error = new Error(`ENOENT: no such file or directory, rename '${oldPath}'`)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `parts = dir.split("/")` (—Å—Ç—Ä–æ–∫–∞ 179)

### üìÇ packages/types/src

#### üìÑ vscode.ts

#### üìÑ type-fu.ts

#### üìÑ tool.ts

#### üìÑ todo.ts

#### üìÑ terminal.ts

#### üìÑ telemetry.ts

#### üìÑ sharing.ts

#### üìÑ provider-settings.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseProviderSettingsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 66)
- `apiModelIdProviderModelSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `anthropicSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 87)
- `claudeCodeSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `glamaSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 98)
- `openRouterSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `bedrockSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `vertexSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 128)
- `openAiSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 135)
- `ollamaSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 149)
- `vsCodeLmSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 154)
- `lmStudioSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 165)
- `geminiSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 172)
- `geminiCliSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 179)
- `openAiNativeSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mistralSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 189)
- `deepSeekSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `doubaoSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 199)
- `moonshotSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 204)
- `unboundSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 211)
- `requestySchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 216)
- `humanRelaySchema = baseProviderSettingsSchema` (—Å—Ç—Ä–æ–∫–∞ 221)
- `fakeAiSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 223)
- `xaiSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `groqSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 231)
- `huggingFaceSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 235)
- `chutesSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `litellmSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 245)
- `cerebrasSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 252)
- `sambaNovaSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 256)
- `defaultSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelIdKey = MODEL_ID_KEYS.find((key) => settings[key])` (—Å—Ç—Ä–æ–∫–∞ 347)

#### üìÑ model.ts

#### üìÑ mode.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `groupEntryArraySchema = z.array(groupEntrySchema).refine(` (—Å—Ç—Ä–æ–∫–∞ 45)
- `seen = new Set()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `groupName = Array.isArray(group) ? group[0] : group` (—Å—Ç—Ä–æ–∫–∞ 51)
- `slugs = new Set()` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ message.ts

#### üìÑ mcp.ts

#### üìÑ marketplace.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseMarketplaceItemSchema = z.object({` - Base schema for common marketplace item fields (—Å—Ç—Ä–æ–∫–∞ 37)

#### üìÑ ipc.ts

#### üìÑ index.ts

#### üìÑ history.ts

#### üìÑ global-settings.ts

#### üìÑ followup.ts

#### üìÑ experiment.ts

**–¢–∏–ø—ã:**

- `type _AssertExperiments` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ codebase-index.ts

#### üìÑ cloud.ts

#### üìÑ api.ts

### üìÇ packages/telemetry/src

#### üìÑ index.ts

#### üìÑ TelemetryService.ts

#### üìÑ PostHogTelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = process.env.POSTHOG_API_KEY` (—Å—Ç—Ä–æ–∫–∞ 29)
- `telemetryLevel = vscode.workspace.getConfiguration("telemetry").get<string>("telemetryLevel", "all")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `globalTelemetryEnabled = telemetryLevel === "all"` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ BaseTelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = this.providerRef?.deref()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mergedProperties = { ...providerProperties, ...(event.properties || {}) }` (—Å—Ç—Ä–æ–∫–∞ 54)
- `requiredFields = {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `finalProperties = { ...requiredFields, ...mergedProperties }` (—Å—Ç—Ä–æ–∫–∞ 68)

### üìÇ packages/ipc/src

#### üìÑ ipc-server.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `clientId = crypto.randomBytes(6).toString("hex")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = ipcMessageSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `payload = result.data` (—Å—Ç—Ä–æ–∫–∞ 90)
- `socket = this._clients.get(client)` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ ipc-client.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = ipcMessageSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `payload = result.data` (—Å—Ç—Ä–æ–∫–∞ 71)

#### üìÑ index.ts

### üìÇ packages/evals/src

#### üìÑ index.ts

### üìÇ packages/cloud/src

#### üìÑ utils.ts

#### üìÑ types.ts

#### üìÑ index.ts

#### üìÑ TelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/${path}`, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `payload = {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `result = neiraCoderTelemetryEventSchema.safeParse(payload)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mergedProperties = await this.getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `formData = new FormData()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/events/backfill`, {` (—Å—Ç—Ä–æ–∫–∞ 126)

#### üìÑ StaticSettingsService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `decodedValue = Buffer.from(envValue, "base64").toString("utf-8")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `parsedJson = JSON.parse(decodedValue)` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ ShareService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sessionToken = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/extension/share`, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `data = shareResponseSchema.parse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ SettingsService.ts

#### üìÑ RefreshTimer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await this.callback()` (—Å—Ç—Ä–æ–∫–∞ 146)

#### üìÑ Config.ts

#### üìÑ CloudSettingsService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ORGANIZATION_SETTINGS_CACHE_KEY = "organization-settings"` (—Å—Ç—Ä–æ–∫–∞ 16)
- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/organization-settings`, {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = organizationSettingsSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `newSettings = result.data` (—Å—Ç—Ä–æ–∫–∞ 107)
- `previousSettings = this.settings` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ CloudService.ts

**–¢–∏–ø—ã:**

- `type AuthStateChangedPayload` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type AuthUserInfoPayload` (—Å—Ç—Ä–æ–∫–∞ 24)
- `type SettingsPayload` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cloudToken = process.env.ROO_CODE_CLOUD_TOKEN` (—Å—Ç—Ä–æ–∫–∞ 63)
- `staticOrgSettings = process.env.ROO_CODE_CLOUD_ORG_SETTINGS` (—Å—Ç—Ä–æ–∫–∞ 77)
- `cloudSettingsService = new CloudSettingsService(this.context, this.authService, this.log)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 140)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 152)

### üìÇ build-src/webview-ui/src

#### üìÑ vite-env.d.ts

#### üìÑ types.d.ts

#### üìÑ index.tsx

#### üìÑ App.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `App()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `AppWithProviders()` (—Å—Ç—Ä–æ–∫–∞ 301)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface HumanRelayDialogState` (—Å—Ç—Ä–æ–∫–∞ 31)

- `interface DeleteMessageDialogState` (—Å—Ç—Ä–æ–∫–∞ 37)

- `interface EditMessageDialogState` (—Å—Ç—Ä–æ–∫–∞ 42)

**–¢–∏–ø—ã:**

- `type Tab` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MemoizedDeleteMessageDialog = React.memo(DeleteMessageDialog)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `MemoizedEditMessageDialog = React.memo(EditMessageDialog)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `MemoizedHumanRelayDialog = React.memo(HumanRelayDialog)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `App = () => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `marketplaceStateManager = useMemo(() => new MarketplaceViewStateManager(), [])` (—Å—Ç—Ä–æ–∫–∞ 80)
- `settingsRef = useRef<SettingsViewRef>(null)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `chatViewRef = useRef<ChatViewRef>(null)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `switchTab = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 128)
- `targetTab = message.tab as Tab` (—Å—Ç—Ä–æ–∫–∞ 135)
- `newTab = tabsByMessageAction[message.action]` (—Å—Ç—Ä–æ–∫–∞ 141)
- `section = message.values?.section as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 142)
- `marketplaceTab = message.values?.marketplaceTab as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 143)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 299)
- `AppWithProviders = () => (` (—Å—Ç—Ä–æ–∫–∞ 301)

### üìÇ build-src/src/workers

#### üìÑ types.ts

#### üìÑ countTokens.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async countTokens(content: A): Promise<CountTokensResult>` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `count = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ build-src/src/utils

#### üìÑ xml.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `_stopNodes = stopNodes ?? []` - Parses an XML string into a JavaScript object (—Å—Ç—Ä–æ–∫–∞ 10)
- `parser = new XMLParser({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 24)

#### üìÑ xml-matcher.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `last = this.chunks.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `data = this.cached.join("")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `matched = this.matched` (—Å—Ç—Ä–æ–∫–∞ 24)
- `chunks = this.chunks` (—Å—Ç—Ä–æ–∫–∞ 36)

#### üìÑ tts.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async processQueue(): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface Say` (—Å—Ç—Ä–æ–∫–∞ 1)

**–¢–∏–ø—ã:**

- `type PlayTtsOptions` (—Å—Ç—Ä–æ–∫–∞ 6)
- `type QueueItem` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `processQueue = async (): Promise<void> => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `item = queue.shift()` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ tiktoken.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TOKEN_FUDGE_FACTOR = 1.5` (—Å—Ç—Ä–æ–∫–∞ 5)
- `text = block.text || ""` (—Å—Ç—Ä–æ–∫–∞ 24)
- `tokens = encoder.encode(text)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `imageSource = block.source` (—Å—Ç—Ä–æ–∫–∞ 32)
- `base64Data = imageSource.data as string` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ text-normalization.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `opts = { ...DEFAULT_OPTIONS, ...options }` - Normalizes a string based on the specified options (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ storage.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `testFile = path.join(customStoragePath, ".write_test")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the storage directory path for a task (—Å—Ç—Ä–æ–∫–∞ 55)
- `taskDir = path.join(basePath, "tasks", taskId)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the settings directory path (—Å—Ç—Ä–æ–∫–∞ 65)
- `settingsDir = path.join(basePath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `basePath = await getStorageBasePath(globalStoragePath)` - Gets the cache directory path (—Å—Ç—Ä–æ–∫–∞ 75)
- `cacheDir = path.join(basePath, "cache")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `currentConfig = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await vscode.window.showInputBox({` (—Å—Ç—Ä–æ–∫–∞ 100)
- `currentConfig = vscode.workspace.getConfiguration(Package.name)` (—Å—Ç—Ä–æ–∫–∞ 128)

#### üìÑ single-completion-handler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handler = buildApiHandler(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ shell.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getWindowsTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `getMacTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `getLinuxTerminalConfig()` (—Å—Ç—Ä–æ–∫–∞ 68)
- `getWindowsShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on Windows. (—Å—Ç—Ä–æ–∫–∞ 84)
- `getMacShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on macOS. (—Å—Ç—Ä–æ–∫–∞ 122)
- `getLinuxShellFromVSCode(): string | null` - Attempts to retrieve a shell path from VS Code config on Linux. (—Å—Ç—Ä–æ–∫–∞ 133)
- `getShellFromUserInfo(): string | null` - Tries to get a user‚Äôs shell from os.userInfo() (works on Unix if the underlying system call is supported). Returns null on error or if not found. (—Å—Ç—Ä–æ–∫–∞ 151)
- `getShellFromEnv(): string | null` - Returns the environment-based shell variable, or null if not set. (—Å—Ç—Ä–æ–∫–∞ 161)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MacTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 23)

- `interface WindowsTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 29)

- `interface LinuxTerminalProfile` (—Å—Ç—Ä–æ–∫–∞ 36)

**–¢–∏–ø—ã:**

- `type MacTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 27)
- `type WindowsTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 34)
- `type LinuxTerminalProfiles` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SHELL_PATHS = {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultProfileName = config.get<string>("defaultProfile.windows")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `profiles = config.get<WindowsTerminalProfiles>("profiles.windows") || {}` (—Å—Ç—Ä–æ–∫–∞ 50)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 59)
- `defaultProfileName = config.get<string>("defaultProfile.osx")` (—Å—Ç—Ä–æ–∫–∞ 60)
- `profiles = config.get<MacTerminalProfiles>("profiles.osx") || {}` (—Å—Ç—Ä–æ–∫–∞ 61)
- `config = vscode.workspace.getConfiguration("terminal.integrated")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `defaultProfileName = config.get<string>("defaultProfile.linux")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `profiles = config.get<LinuxTerminalProfiles>("profiles.linux") || {}` (—Å—Ç—Ä–æ–∫–∞ 72)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 90)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `profile = profiles[defaultProfileName]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `windowsShell = getWindowsShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 189)
- `macShell = getMacShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `linuxShell = getLinuxShellFromVSCode()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `userInfoShell = getShellFromUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `envShell = getShellFromEnv()` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ safeWriteJson.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async safeWriteJson(filePath: s, data: a): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 21)
- `async releaseLock()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `async _streamDataToFile(targetPath: s, data: a): Promise<void>` - Helper function to stream JSON data to a file. (—Å—Ç—Ä–æ–∫–∞ 187)
- `handleError(_streamName: s)` (—Å—Ç—Ä–æ–∫–∞ 196)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absoluteFilePath = path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `dirPath = path.dirname(absoluteFilePath)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `newFileToCleanupWithinCatch = actualTempNewFilePath` (—Å—Ç—Ä–æ–∫–∞ 126)
- `backupFileToRollbackOrCleanupWithinCatch = actualTempBackupFilePath` (—Å—Ç—Ä–æ–∫–∞ 127)
- `fileWriteStream = fsSync.createWriteStream(targetPath, { encoding: "utf8" })` (—Å—Ç—Ä–æ–∫–∞ 189)
- `disassembler = Disassembler.disassembler()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `stringer = Stringer.stringer()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `handleError = (_streamName: string) => (err: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 196)

#### üìÑ pathUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `folderPath = folder.uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ path.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toPosixPath(p: s)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `normalizePath(p: s): string` (—Å—Ç—Ä–æ–∫–∞ 71)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface String` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isExtendedLengthPath = p.startsWith("\\\\?\\")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `absolutePath = path.resolve(cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `normalizedRelPath = path.relative(cwd, absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `relativePath = path.relative(cwd, filePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `cwdPath = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0) || defaultCwdPath` (—Å—Ç—Ä–æ–∫–∞ 110)
- `currentFileUri = vscode.window.activeTextEditor?.document.uri` (—Å—Ç—Ä–æ–∫–∞ 111)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(currentFileUri)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(vscode.Uri.file(contextPath))` (—Å—Ç—Ä–æ–∫–∞ 122)

#### üìÑ outputChannelLogger.ts

#### üìÑ object.ts

#### üìÑ migrateSettings.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async migrateCustomModesToYaml(settingsDir: s, outputChannel: v): Promise<void>` - Special migration function to convert custom_modes.json to YAML format (—Å—Ç—Ä–æ–∫–∞ 69)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `deprecatedCustomModesJSONFilename = "custom_modes.json"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `fileMigrations = [` (—Å—Ç—Ä–æ–∫–∞ 20)
- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `oldPath = path.join(settingsDir, migration.oldName)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `newPath = path.join(settingsDir, migration.newName)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `oldFileExists = await fileExistsAtPath(oldPath)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `newFileExists = await fileExistsAtPath(newPath)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `oldJsonPath = path.join(settingsDir, deprecatedCustomModesJSONFilename)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newYamlPath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `jsonExists = await fileExistsAtPath(oldJsonPath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `yamlExists = await fileExistsAtPath(newYamlPath)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `jsonContent = await fs.readFile(oldJsonPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `customModesData = yaml.parse(jsonContent)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `yamlContent = yaml.stringify(customModesData, { lineWidth: 0 })` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ globalContext.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ git.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async checkGitRepo(cwd: s): Promise<boolean>` (—Å—Ç—Ä–æ–∫–∞ 204)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `execAsync = promisify(exec)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `GIT_OUTPUT_LINE_LIMIT = 500` (—Å—Ç—Ä–æ–∫–∞ 9)
- `gitDir = path.join(workspaceRoot, ".git")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `configPath = path.join(gitDir, "config")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `configContent = await fs.readFile(configPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `urlMatch = configContent.match(/url\s*=\s*(.+?)(?:\r?\n|$)/m)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `url = urlMatch[1].trim()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `repositoryName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `branchMatch = configContent.match(/\[branch "([^"]+)"\]/i)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `headPath = path.join(gitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `headContent = await fs.readFile(headPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `branchMatch = headContent.match(/ref: refs\/heads\/(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `match = url.match(/git@([^:]+):(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `match = url.match(/ssh:\/\/(?:git@)?([^\/]+)\/(.+)/)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `urlObj = new URL(url)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `patterns = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `match = url.match(pattern)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `workspaceFolders = vscode.workspace.workspaceFolders` - Gets git repository information for the current VSCode workspace (—Å—Ç—Ä–æ–∫–∞ 194)
- `workspaceRoot = workspaceFolders[0].uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 200)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `lines = output` (—Å—Ç—Ä–æ–∫–∞ 267)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 291)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `summary = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `output = summary + "\n\n" + diff.trim()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `isInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 332)
- `isRepo = await checkGitRepo(cwd)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `lineLimit = GIT_OUTPUT_LINE_LIMIT` (—Å—Ç—Ä–æ–∫–∞ 350)
- `output = `Working directory changes:\n\n${status}\n\n${diff}`.trim()` (—Å—Ç—Ä–æ–∫–∞ 351)

#### üìÑ fs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `normalizedFilePath = path.normalize(filePath) // Normalize path for cross-platform compatibility` (—Å—Ç—Ä–æ–∫–∞ 13)
- `directoryPath = path.dirname(normalizedFilePath)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ focusPanel.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `panel = tabPanel || sidebarPanel` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ countTokens.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `data = await pool.exec("countTokens", [content])` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = countTokensResultSchema.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ config.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isObject = typeof config === "object"` (—Å—Ç—Ä–æ–∫–∞ 40)
- `nestedValue = value[name]` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ commands.ts

#### üìÑ autoImportSettings.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `resolvePath(settingsPath: s): string` - Resolves a file path, handling home directory expansion and relative paths (—Å—Ç—Ä–æ–∫–∞ 71)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsPath = vscode.workspace.getConfiguration(Package.name).get<string>("autoImportSettingsPath")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `resolvedPath = resolvePath(settingsPath.trim())` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await importSettingsFromPath(resolvedPath, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 60)

### üìÇ build-src/src/shared

#### üìÑ vsCodeSelectorUtils.ts

#### üìÑ tools.ts

#### üìÑ todo.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `todos = clineMessages` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ support-prompt.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `generateDiagnosticText()` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SupportPromptConfig` (—Å—Ç—Ä–æ–∫–∞ 32)

**–¢–∏–ø—ã:**

- `type PromptParams` (—Å—Ç—Ä–æ–∫–∞ 2)
- `type SupportPromptType` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `generateDiagnosticText = (diagnostics?: any[]) => {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `value = params[key]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `template = supportPrompt.get(customSupportPrompts, type)` (—Å—Ç—Ä–æ–∫–∞ 185)

#### üìÑ safeJsonParse.ts

#### üìÑ package.ts

#### üìÑ modes.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGroupOptions(group: G): GroupOptions | undefined` (—Å—Ç—Ä–æ–∫–∞ 47)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `regex = new RegExp(pattern)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `tools = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `groupConfig = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 69)
- `customMode = customModes?.find((mode) => mode.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mode = getModeBySlug(slug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `allModes = [...modes]` (—Å—Ç—Ä–æ–∫–∞ 111)
- `index = allModes.findIndex((mode) => mode.slug === customMode.slug)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `customMode = findModeBySlug(mode, customModes)` - Get the mode selection based on the provided mode slug, prompt component, and custom modes. If a custom mode is found, it takes precedence over the built-in modes. If no custom mode is found, the built-in mode is used with partial merging from promptComponent. If neither is found, the default mode is used. (—Å—Ç—Ä–æ–∫–∞ 147)
- `builtInMode = findModeBySlug(mode, modes)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `baseMode = builtInMode || modes[0] // fallback to default mode` (—Å—Ç—Ä–æ–∫–∞ 160)
- `EDIT_OPERATION_PARAMS = ["diff", "content", "operations", "search", "replace", "args", "line"] as const` (—Å—Ç—Ä–æ–∫–∞ 170)
- `toolInfo = tool ? `Tool '${tool}' in mode '${mode}'` : `This mode (${mode})`` (—Å—Ç—Ä–æ–∫–∞ 175)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `options = getGroupOptions(group)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `groupConfig = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 221)
- `filePath = toolParams?.path` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isEditOperation = EDIT_OPERATION_PARAMS.some((param) => toolParams?.[param])` (—Å—Ç—Ä–æ–∫–∞ 237)
- `filePathMatches = toolParams.args.match(/<path>([^<]+)<\/path>/g)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `pathMatch = match.match(/<path>([^<]+)<\/path>/)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `extractedPath = pathMatch[1].trim()` (—Å—Ç—Ä–æ–∫–∞ 254)
- `customModes = (await context.globalState.get<ModeConfig[]>("customModes")) || []` (—Å—Ç—Ä–æ–∫–∞ 304)
- `customModePrompts = (await context.globalState.get<CustomModePrompts>("customModePrompts")) || {}` (—Å—Ç—Ä–æ–∫–∞ 305)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `baseMode = getModeBySlug(modeSlug, customModes) || modes.find((m) => m.slug === modeSlug) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 329)
- `promptComponent = customModePrompts?.[modeSlug]` (—Å—Ç—Ä–æ–∫–∞ 332)
- `baseCustomInstructions = promptComponent?.customInstructions || baseMode.customInstructions || ""` (—Å—Ç—Ä–æ–∫–∞ 335)
- `baseWhenToUse = promptComponent?.whenToUse || baseMode.whenToUse || ""` (—Å—Ç—Ä–æ–∫–∞ 336)
- `baseDescription = promptComponent?.description || baseMode.description || ""` (—Å—Ç—Ä–æ–∫–∞ 337)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 363)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `mode = getModeBySlug(modeSlug, customModes)` (—Å—Ç—Ä–æ–∫–∞ 393)

#### üìÑ mcp.ts

#### üìÑ language.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formattedLocale = vscodeLocale.replace(/-(\w+)$/, (_, region) => `-${region.toUpperCase()}`)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ globalFileNames.ts

#### üìÑ getApiMetrics.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `message = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ experiments.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ExperimentConfig` (—Å—Ç—Ä–æ–∫–∞ 13)

**–¢–∏–ø—ã:**

- `type _AssertExperimentIds` (—Å—Ç—Ä–æ–∫–∞ 9)
- `type ExperimentKey` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ embeddingModels.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the embedding dimension for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 65)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the score threshold for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 88)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 93)
- `providerProfiles = EMBEDDING_MODEL_PROFILES[provider]` - Retrieves the query prefix for a given provider and model ID. (—Å—Ç—Ä–æ–∫–∞ 104)
- `modelProfile = providerProfiles[modelId]` (—Å—Ç—Ä–æ–∫–∞ 109)
- `ollamaModels = EMBEDDING_MODEL_PROFILES.ollama` (—Å—Ç—Ä–æ–∫–∞ 129)
- `defaultOllamaModel = ollamaModels && Object.keys(ollamaModels)[0]` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ cost.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cacheWritesCost = ((modelInfo.cacheWritesPrice || 0) / 1_000_000) * cacheCreationInputTokens` (—Å—Ç—Ä–æ–∫–∞ 10)
- `cacheReadsCost = ((modelInfo.cacheReadsPrice || 0) / 1_000_000) * cacheReadInputTokens` (—Å—Ç—Ä–æ–∫–∞ 11)
- `baseInputCost = ((modelInfo.inputPrice || 0) / 1_000_000) * inputTokens` (—Å—Ç—Ä–æ–∫–∞ 12)
- `outputCost = ((modelInfo.outputPrice || 0) / 1_000_000) * outputTokens` (—Å—Ç—Ä–æ–∫–∞ 13)
- `totalCost = cacheWritesCost + cacheReadsCost + baseInputCost + outputCost` (—Å—Ç—Ä–æ–∫–∞ 14)
- `cacheCreationInputTokensNum = cacheCreationInputTokens || 0` (—Å—Ç—Ä–æ–∫–∞ 44)
- `cacheReadInputTokensNum = cacheReadInputTokens || 0` (—Å—Ç—Ä–æ–∫–∞ 45)
- `nonCachedInputTokens = Math.max(0, inputTokens - cacheCreationInputTokensNum - cacheReadInputTokensNum)` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ context-mentions.ts

#### üìÑ combineCommandSequences.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `combinedMessages = new Map<number, ClineMessage>()` - Combines sequences of command and command_output messages in an array of ClineMessages. Also combines sequences of use_mcp_server and mcp_server_response messages. This function processes an array of ClineMessages objects, looking for sequences where a 'command' message is followed by one or more 'command_output' messages, or where a 'use_mcp_server' message is followed by one or more 'mcp_server_response' messages. When such a sequence is found, it combines them into a single message, merging their text contents. (—Å—Ç—Ä–æ–∫–∞ 29)
- `processedIndices = new Set<number>()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `msg = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `jsonObj = safeJsonParse<any>(msg.text || "{}", {})` (—Å—Ç—Ä–æ–∫–∞ 57)
- `combinedText = JSON.stringify(jsonObj)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `isDuplicate = previous && previous.type !== type && previous.text === text` (—Å—Ç—Ä–æ–∫–∞ 90)
- `msg = messages[i]` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ combineApiRequests.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `startIndex = startedIndices.length > 0 ? startedIndices.pop() : undefined` (—Å—Ç—Ä–æ–∫–∞ 60)
- `startMessage = result[startIndex]` (—Å—Ç—Ä–æ–∫–∞ 63)

#### üìÑ checkExistApiConfig.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasSecretKey = SECRET_STATE_KEYS.some((key) => config[key] !== undefined)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `hasOtherConfig = [` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ array.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `index = findLastIndex(array, predicate)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ api.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerNames = ["openrouter", "requesty", "glama", "unbound", "litellm", "ollama", "lmstudio"] as const` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ WebviewMessage.ts

#### üìÑ TelemetrySetting.ts

#### üìÑ ProfileValidator.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.getModelIdFromProfile(profile)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `providerAllowList = allowList.providers[providerName]` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ ExtensionMessage.ts

### üìÇ build-src/src/i18n

#### üìÑ setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isTestEnv = process.env.NODE_ENV === "test"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `localesDir = path.join(__dirname, "i18n", "locales")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `languageDirs = fs.readdirSync(localesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 20)
- `languages = languageDirs` (—Å—Ç—Ä–æ–∫–∞ 22)
- `langPath = path.join(localesDir, language)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `files = fs.readdirSync(langPath).filter((file: string) => file.endsWith(".json"))` (—Å—Ç—Ä–æ–∫–∞ 31)
- `namespace = path.basename(file, ".json")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `filePath = path.join(langPath, file)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `content = fs.readFileSync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 45)

#### üìÑ index.ts

### üìÇ build-src/src/extension

#### üìÑ api.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ipc = (this.ipc = new IpcServer(socketPath, this.log))` (—Å—Ç—Ä–æ–∫–∞ 62)
- `data = { eventName: eventName as NeiraCoderEventName, payload: args } as TaskEvent` (—Å—Ç—Ä–æ–∫–∞ 91)
- `cline = await provider.initClineWithTask(text, images, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 152)
- `provider = this.taskMap.get(taskId)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile ?? {}, activate)` (—Å—Ç—Ä–æ–∫–∞ 354)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile, activate)` (—Å—Ç—Ä–æ–∫–∞ 374)
- `id = await this.sidebarProvider.upsertProviderProfile(name, profile, activate)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 398)
- `entry = this.getProfileEntry(name)` (—Å—Ç—Ä–æ–∫–∞ 412)

### üìÇ build-src/src/api

#### üìÑ index.ts

### üìÇ build-src/src/activate

#### üìÑ registerTerminalActions.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `registerTerminalAction = (` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ registerCommands.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCommandsMap(): Record<CommandId, any>` (—Å—Ç—Ä–æ–∫–∞ 75)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `visibleProvider = ClineProvider.getVisibleInstance()` - Helper to get the visible ClineProvider instance or log if not found. (—Å—Ç—Ä–æ–∫–∞ 24)
- `command = getCommand(id as CommandId)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `getCommandsMap = ({ context, outputChannel, provider }: RegisterCommandOptions): Record<CommandId, any> => ({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `panel = getPanel()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 178)
- `visibleProvider = getVisibleProviderOrLog(outputChannel)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `contextProxy = await ContextProxy.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `tabProvider = new ClineProvider(context, outputChannel, "editor", contextProxy, codeIndexManager, mdmService)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `lastCol = Math.max(...vscode.window.visibleTextEditors.map((editor) => editor.viewColumn || 0))` (—Å—Ç—Ä–æ–∫–∞ 257)
- `hasVisibleEditors = vscode.window.visibleTextEditors.length > 0` (—Å—Ç—Ä–æ–∫–∞ 261)
- `targetCol = hasVisibleEditors ? Math.max(lastCol + 1, 1) : vscode.ViewColumn.Two` (—Å—Ç—Ä–æ–∫–∞ 267)
- `newPanel = vscode.window.createWebviewPanel(ClineProvider.tabPanelId, "Neira Coder", targetCol, {` (—Å—Ç—Ä–æ–∫–∞ 269)
- `panel = e.webviewPanel` (—Å—Ç—Ä–æ–∫–∞ 290)

#### üìÑ registerCodeActions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `registerCodeAction(context: v, command: C, promptType: C)` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `registerCodeAction = (context: vscode.ExtensionContext, command: CodeActionId, promptType: CodeActionName) => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `context = EditorUtils.getEditorContext()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `params = {` (—Å—Ç—Ä–æ–∫–∞ 42)

#### üìÑ index.ts

#### üìÑ humanRelay.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `humanRelayCallbacks = new Map<string, (response: string | undefined) => void>()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `callback = humanRelayCallbacks.get(response.requestId)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ handleUri.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `path = uri.path` (—Å—Ç—Ä–æ–∫–∞ 8)
- `query = new URLSearchParams(uri.query.replace(/\+/g, "%2B"))` (—Å—Ç—Ä–æ–∫–∞ 9)
- `visibleProvider = ClineProvider.getVisibleInstance()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 18)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `code = query.get("code")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `state = query.get("state")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `organizationId = query.get("organizationId")` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ handleTask.ts

#### üìÑ CodeActionProvider.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `action = new vscode.CodeAction(title, kind)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `effectiveRange = EditorUtils.getEffectiveRange(document, range)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `filePath = EditorUtils.getFilePath(document)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `relevantDiagnostics = context.diagnostics.filter((d) =>` (—Å—Ç—Ä–æ–∫–∞ 63)

### üìÇ build-src/src/__tests__

#### üìÑ migrateSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = "/mock/storage"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockSettingsDir = path.join(mockStoragePath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `legacyCustomModesJson = path.join(mockSettingsDir, "custom_modes.json")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `legacyClineCustomModesPath = path.join(mockSettingsDir, "cline_custom_modes.json")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `legacyMcpSettingsPath = path.join(mockSettingsDir, "cline_mcp_settings.json")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `newCustomModesYaml = path.join(mockSettingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `newMcpSettingsPath = path.join(mockSettingsDir, GlobalFileNames.mcpSettings)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockRename = vitest.mocked(fs.rename).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `testJsonContent = JSON.stringify({ customModes: [{ slug: "test-mode", name: "Test Mode" }] })` (—Å—Ç—Ä–æ–∫–∞ 143)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `mockWrite = vitest.mocked(fs.writeFile).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `mockUnlink = vitest.mocked(fs.unlink).mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ dist_assets.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `distPath = path.join(__dirname, "../dist")` (—Å—Ç—Ä–æ–∫–∞ 7)
- `treeSitterFiles = [` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ commands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `commands = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `names = await getCommandNames(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `result = await getCommand(testCwd, "non-existent")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `commands1 = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `commands2 = await getCommands(testCwd)` (—Å—Ç—Ä–æ–∫–∞ 83)

#### üìÑ command-mentions.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async callParseMentions(text: s)` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedUrlContentFetcher = vi.mocked(UrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGetCommand = vi.mocked(getCommand)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `callParseMentions = async (text: string) => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `commandContent = "# Setup Environment\n\nRun the following commands:\n```bash\nnpm install\n```"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `input = "/setup Please help me set up the project"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `setupContent = "# Setup Environment\n\nRun the following commands:\n```bash\nnpm install\n```"` (—Å—Ç—Ä–æ–∫–∞ 65)
- `deployContent = "# Deploy Environment\n\nRun the following commands:\n```bash\nnpm run deploy\n```"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `input = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `input = "/nonexistent command"` (—Å—Ç—Ä–æ–∫–∞ 111)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `input = "/error-command test"` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `input = "/error-command test"` (—Å—Ç—Ä–æ–∫–∞ 144)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `input = "/setup-dev for the project"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 161)
- `commandContent = `# Complex Command` (—Å—Ç—Ä–æ–∫–∞ 169)
- `input = "/complex command"` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `input = "/empty command"` (—Å—Ç—Ä–æ–∫–∞ 211)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 222)
- `validPatterns = ["/setup", "/build-prod", "/test_suite", "/my-command", "/command123"]` (—Å—Ç—Ä–æ–∫–∞ 224)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 234)
- `validPatterns = ["Please /setup", "Run /build now", "Use /deploy here"]` (—Å—Ç—Ä–æ–∫–∞ 236)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 246)
- `multilineText = "First line\n/setup the project\nAnother line\n/deploy when ready"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `matches = multilineText.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `commandRegex = /(?:^|\s)\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 259)
- `validText = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `matches = validText.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 262)
- `commandRegex = /\/([a-zA-Z0-9_\.-]+)(?=\s|$)/g` (—Å—Ç—Ä–æ–∫–∞ 271)
- `invalidPatterns = ["/ space", "/with space", "/with/slash", "//double", "/with@symbol"]` (—Å—Ç—Ä–æ–∫–∞ 273)
- `match = pattern.match(commandRegex)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `input = "/setup the project"` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `input = "/nonexistent the project"` (—Å—Ç—Ä–æ–∫–∞ 303)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `input = "/setup the project\nThen /deploy later"` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = await callParseMentions(input)` (—Å—Ç—Ä–æ–∫–∞ 325)

#### üìÑ command-integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testWorkspaceDir = path.join(__dirname, "../../")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `commands = await getCommands(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `commandNames = await getCommandNames(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `commands = await getCommands(testWorkspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `firstCommand = commands[0]` (—Å—Ç—Ä–æ–∫–∞ 41)
- `loadedCommand = await getCommand(testWorkspaceDir, firstCommand.name)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `nonExistentCommand = await getCommand(testWorkspaceDir, "non-existent-command")` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ build-src/packages/types

#### üìÑ vitest.config.ts

#### üìÑ tsup.config.ts

### üìÇ build-src/packages/telemetry

#### üìÑ vitest.config.ts

### üìÇ build-src/packages/evals

#### üìÑ vitest.config.ts

#### üìÑ vitest-global-setup.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async resetTestDatabase()` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `db = testDb` (—Å—Ç—Ä–æ–∫–∞ 6)
- `tables = await db.execute<{ table_name: string }>(sql`` (—Å—Ç—Ä–æ–∫–∞ 14)
- `tableNames = tables.map((t) => t.table_name)` (—Å—Ç—Ä–æ–∫–∞ 21)

#### üìÑ drizzle.config.ts

### üìÇ build-src/packages/cloud

#### üìÑ vitest.config.ts

### üìÇ build-src/apps/web-roo-code

#### üìÑ tailwind.config.ts

#### üìÑ next.config.ts

### üìÇ build-src/apps/web-neira-coder

#### üìÑ tailwind.config.ts

#### üìÑ next.config.ts

### üìÇ build-src/apps/web-evals

#### üìÑ vitest.config.ts

#### üìÑ next.config.ts

#### üìÑ next-env.d.ts

### üìÇ apps/vscode-e2e/src

#### üìÑ runTest.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async main()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionDevelopmentPath = path.resolve(__dirname, "../../../src")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `extensionTestsPath = path.resolve(__dirname, "./suite/index")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `testWorkspace = await fs.mkdtemp(path.join(os.tmpdir(), "roo-test-workspace-"))` (—Å—Ç—Ä–æ–∫–∞ 18)
- `testGrep = process.argv.find((arg, i) => process.argv[i - 1] === "--grep") || process.env.TEST_GREP` (—Å—Ç—Ä–æ–∫–∞ 25)
- `testFile = process.argv.find((arg, i) => process.argv[i - 1] === "--file") || process.env.TEST_FILE` (—Å—Ç—Ä–æ–∫–∞ 26)
- `extensionTestsEnv = {` (—Å—Ç—Ä–æ–∫–∞ 29)

### üìÇ webview-ui/src/utils/__tests__

#### üìÑ validate.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = getModelValidationError(config, mockRouterModels, restrictiveOrganization)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result = getModelValidationError(config, undefined, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = validateApiConfigurationExcludingModelErrors(` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ sourceMapUtils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stackTrace = `Error: Test error` (—Å—Ç—Ä–æ–∫–∞ 13)
- `frames = await parseStackTrace(stackTrace)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `firstFrame = frames[0]` (—Å—Ç—Ä–æ–∫–∞ 25)
- `stackTrace = `Error: Test error` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await applySourceMapsToStack(stackTrace)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `emptyStack = ""` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = await applySourceMapsToStack(emptyStack)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `error = new Error("Test error")` (—Å—Ç—Ä–æ–∫–∞ 65)
- `enhancedError = await enhanceErrorWithSourceMaps(error)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `error = new Error("Test error")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `enhancedError = await enhanceErrorWithSourceMaps(error)` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ path-mentions.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MOCK_CWD_POSIX = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `MOCK_CWD_WIN = "C:\\Users\\test\\project"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `absPath = "C:\\Users\\test\\project\\src\\file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `relPath = "src/another file.js" // Assuming this might be passed somehow` (—Å—Ç—Ä–æ–∫–∞ 56)
- `absPath = "/Users/other/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `winPath = "D:\\another\\folder\\file.txt"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = convertToMentionPath(winPath, MOCK_CWD_WIN)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `absPath = "/Users/test/project/src/normal.ts"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `absPath = "/Users/test/projectfile.txt" // Edge case: file directly in project root` (—Å—Ç—Ä–æ–∫–∞ 83)
- `cwd = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 84)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `cwdWithSlash = MOCK_CWD_POSIX + "/"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `absPath = "/users/test/project/src/file with spaces.ts" // Lowercase path` (—Å—Ç—Ä–æ–∫–∞ 95)
- `absPathUpper = "/USERS/TEST/PROJECT/src/file.ts" // Uppercase path` (—Å—Ç—Ä–æ–∫–∞ 97)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ model-utils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 7)
- `contextTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 8)
- `maxTokens = 2000` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = calculateTokenDistribution(contextWindow, contextTokens, maxTokens)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `contextWindow = 20000` (—Å—Ç—Ä–æ–∫–∞ 21)
- `contextTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = calculateTokenDistribution(-1000, -500)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = calculateTokenDistribution(0, 0)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timestamp = new Date(2023, 0, 15, 10, 30).getTime()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = formatDate(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `timestamp1 = new Date(2023, 1, 28, 15, 45).getTime()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `timestamp2 = new Date(2023, 11, 31, 23, 59).getTime()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `morningTimestamp = new Date(2023, 5, 15, 7, 5).getTime()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `noonTimestamp = new Date(2023, 5, 15, 12, 0).getTime()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `eveningTimestamp = new Date(2023, 5, 15, 20, 15).getTime()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `timestamp = new Date(2023, 3, 10, 9, 5).getTime()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `timestamp = new Date(2023, 8, 21, 16, 45).getTime()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = formatDate(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ context-mentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = insertMention("Hello world", 5, "test")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = insertMention("Hello @wor world", 8, "test")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = insertMention("", 0, "test")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = insertMention("Mention @fi", 11, "/path/to/file.txt") // Cursor after 'i'` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = insertMention("Hello ", 6, "terminal") // Cursor at the end` (—Å—Ç—Ä–æ–∫–∞ 36)
- `result = insertMention("world", 0, "problems")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = insertMention("Hello", 5, "problems")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = insertMention("/mode some", 5, "code", true) // Simulating mode selection` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = insertMention("Hello @abc ", 10, "git commit with spaces") // Not a path` (—Å—Ç—Ä–æ–∫–∞ 61)
- `filePath = "/path/to/file with spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `expectedEscapedPath = "/path/to/file\\ with\\ spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result = insertMention("Mention @old", 11, filePath)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `folderPath = "/my documents/folder name/"` (—Å—Ç—Ä–æ–∫–∞ 77)
- `expectedEscapedPath = "/my\\ documents/folder\\ name/"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = insertMention("Check @dir", 9, folderPath)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `alreadyEscapedPath = "/path/already\\ escaped.txt"` (—Å—Ç—Ä–æ–∫–∞ 87)
- `result = insertMention("Insert @path", 11, alreadyEscapedPath)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `simplePath = "/path/to/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `result = insertMention("Simple @p", 9, simplePath)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result = insertMention("/cod", 4, "code", true)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `result = insertMention("/code @some/file.ts", 5, "debug", true)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `text = "/code @"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `position = 8 // cursor after @` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = insertMention(text, position, "src/file.ts", false)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `text = "/some/path/file.ts @"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `position = 20` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = insertMention(text, position, "another.ts", false)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `text = "/code @"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `position = 8` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = insertMention(text, position, "src/file.ts") // No isSlashCommand parameter` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = removeMention("Hello @problems ", 15)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = removeMention("Hello @test world", 8)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = removeMention("Hello world", 5)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `text = "File @/path/to/file\\ with\\ spaces.txt "` (—Å—Ç—Ä–æ–∫–∞ 176)
- `position = text.length // Cursor at the very end` (—Å—Ç—Ä–æ–∫–∞ 177)
- `text = "File @/path/to/file\\ with\\ spaces.txt next word"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `position = text.indexOf(" next") // Cursor right after the mention + space` (—Å—Ç—Ä–æ–∫–∞ 186)
- `mockDynamicSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = getContextMenuOptions("", null, [])` (—Å—Ç—Ä–æ–∫–∞ 240)
- `result = getContextMenuOptions("", ContextMenuOptionType.File, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `result = getContextMenuOptions("git", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = getContextMenuOptions("abc1234", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `result = getContextMenuOptions("nonexistent", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `testItems = [` (—Å—Ç—Ä–æ–∫–∞ 285)
- `result = getContextMenuOptions("test", null, testItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `result = getContextMenuOptions("t", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `fileResults = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 307)
- `searchResults = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 314)
- `gitResults = result.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `firstFileIndex = result.findIndex((item) => fileResults.some((f) => f === item))` (—Å—Ç—Ä–æ–∫–∞ 321)
- `firstSearchResultIndex = result.findIndex((item) => searchResults.some((s) => s === item))` (—Å—Ç—Ä–æ–∫–∞ 323)
- `firstGitResultIndex = result.findIndex((item) => gitResults.some((g) => g === item))` (—Å—Ç—Ä–æ–∫–∞ 325)
- `result = getContextMenuOptions("open", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = getContextMenuOptions("commit", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 344)
- `duplicateSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = getContextMenuOptions("test", null, mockQueryItems, duplicateSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 365)
- `duplicateCount = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 368)
- `result = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 382)
- `testQuery = "test" // Using "test" as the query to match all items` (—Å—Ç—Ä–æ–∫–∞ 399)
- `testSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 422)
- `result = getContextMenuOptions(testQuery, null, testItems, testSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `firstOpenedFileIndex = result.findIndex((item) => item.type === ContextMenuOptionType.OpenedFile)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `firstSearchResultIndex = result.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 444)
- `firstGitResultIndex = result.findIndex((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `mockModes = [` (—Å—Ç—Ä–æ–∫–∞ 462)
- `result = getContextMenuOptions("/co", null, [], [], mockModes)` (—Å—Ç—Ä–æ–∫–∞ 477)
- `result = getContextMenuOptions("/nonexistentquery", null, [], [])` (—Å—Ç—Ä–æ–∫–∞ 488)
- `options = getContextMenuOptions("@search", null, mockQueryItems, mockSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 498)
- `fileResult = options.find((o) => o.label === "search result spaces.ts")` (—Å—Ç—Ä–æ–∫–∞ 499)
- `options = getContextMenuOptions("open", null, mockQueryItems, [])` (—Å—Ç—Ä–æ–∫–∞ 511)
- `openedFile = options.find((o) => o.label === "open file.ts")` (—Å—Ç—Ä–æ–∫–∞ 512)
- `formattedItems = getContextMenuOptions("spaces", null, [], searchResults)` (—Å—Ç—Ä–æ–∫–∞ 528)

#### üìÑ command-validation.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commandWithNewlineInQuotes = `echo "Hello` (—Å—Ç—Ä–æ–∫–∞ 177)
- `multiLineCommand = `npm install` (—Å—Ç—Ä–æ–∫–∞ 190)
- `allowedCommands = ["npm test", "npm run", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 239)
- `result = parseCommand("echo hello")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `result = parseCommand("echo hello && echo world")` (—Å—Ç—Ä–æ–∫–∞ 286)
- `result = parseCommand('echo "hello world"')` (—Å—Ç—Ä–æ–∫–∞ 291)
- `result = parseCommand("echo hello 2>&1")` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result = parseCommand("echo $(date)")` (—Å—Ç—Ä–æ–∫–∞ 301)
- `commandWithArrayIndex = "value=${array[$index]}"` (—Å—Ç—Ä–æ–∫–∞ 307)
- `commandWithRandom = "level=${levels[$RANDOM % ${#levels[@]}]}"` (—Å—Ç—Ä–æ–∫–∞ 316)
- `commandWithRandom = "echo $RANDOM"` (—Å—Ç—Ä–æ–∫–∞ 325)
- `commandWithRandomIndex = "echo ${array[$RANDOM]}"` (—Å—Ç—Ä–æ–∫–∞ 334)
- `commandWithComplexRandom = "echo ${levels[$RANDOM % ${#levels[@]}]}"` (—Å—Ç—Ä–æ–∫–∞ 343)
- `logGeneratorCommand = `while true` (—Å—Ç—Ä–æ–∫–∞ 352)
- `problematicPart = "level=${levels[$RANDOM"` (—Å—Ç—Ä–æ–∫–∞ 369)
- `bashScript = `jsx_files=$(find resources/js -name "*.jsx" -type f -not -path "*/node_modules/*")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `result = parseCommand("count=$((count + 1)) && echo $count")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `result = parseCommand("result=$((10 * (5 + 3))) && echo $result")` (—Å—Ç—Ä–æ–∫–∞ 400)
- `result = parseCommand("total=$((price * quantity + tax))")` (—Å—Ç—Ä–æ–∫–∞ 405)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 410)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 430)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 444)
- `complexCommand = `` (—Å—Ç—Ä–æ–∫–∞ 464)
- `problematicCommand = "echo ${unclosed"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `result = parseCommand(problematicCommand)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `prefixes = ["npm", "npm test", "npm run"]` (—Å—Ç—Ä–æ–∫–∞ 497)
- `prefixes = ["npm", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 504)
- `prefixes = ["npm test", "Echo"]` (—Å—Ç—Ä–æ–∫–∞ 510)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 523)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 524)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 538)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 539)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 544)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 545)
- `allowedWithWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 552)
- `deniedWithWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 553)
- `allowedWithWildcard2 = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 560)
- `deniedSpecific = ["rm -rf"]` (—Å—Ç—Ä–æ–∫–∞ 561)
- `allowedSpecific = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 570)
- `deniedWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 571)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 595)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 596)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 625)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 626)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 661)
- `allowedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 668)
- `deniedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 669)
- `allowed = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 678)
- `denied = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 679)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 704)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 705)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 724)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 725)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 730)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 731)
- `allowedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 738)
- `deniedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 739)
- `allowedWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 746)
- `deniedSpecific = ["rm -rf"]` (—Å—Ç—Ä–æ–∫–∞ 747)
- `allowedCommands = ["npm", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 766)
- `deniedCommands = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 767)
- `allowed = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 826)
- `denied = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 827)
- `lists = validator.getCommandLists()` (—Å—Ç—Ä–æ–∫–∞ 883)
- `validatorNoDeny = new CommandValidator(["npm"])` (—Å—Ç—Ä–æ–∫–∞ 889)
- `lists = validatorNoDeny.getCommandLists()` (—Å—Ç—Ä–æ–∫–∞ 890)
- `details = validator.getValidationDetails("npm install && echo done")` (—Å—Ç—Ä–æ–∫–∞ 898)
- `details = validator.getValidationDetails("npm install $(echo test)")` (—Å—Ç—Ä–æ–∫–∞ 914)
- `detailsWithDenied = validator.getValidationDetails("npm install $(npm test)")` (—Å—Ç—Ä–æ–∫–∞ 919)
- `details = validator.getValidationDetails("npm test && git push origin")` (—Å—Ç—Ä–æ–∫–∞ 925)
- `commands = ["npm install", "npm test", "dangerous", "echo hello"]` (—Å—Ç—Ä–æ–∫–∞ 936)
- `results = validator.validateCommands(commands)` (—Å—Ç—Ä–æ–∫–∞ 937)
- `results = validator.validateCommands([])` (—Å—Ç—Ä–æ–∫–∞ 947)
- `emptyValidator = new CommandValidator([], [])` (—Å—Ç—Ä–æ–∫–∞ 956)
- `allowOnlyValidator = new CommandValidator(["npm"], [])` (—Å—Ç—Ä–æ–∫–∞ 959)
- `denyOnlyValidator = new CommandValidator([], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 962)
- `stats = validator.getStats()` (—Å—Ç—Ä–æ–∫–∞ 967)
- `wildcardValidator = new CommandValidator(["*", "npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 975)
- `stats = wildcardValidator.getStats()` (—Å—Ç—Ä–æ–∫–∞ 976)
- `details = validator.getValidationDetails("   ")` (—Å—Ç—Ä–æ–∫–∞ 988)
- `validator = createCommandValidator(["npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `validator = createCommandValidator(["npm"])` (—Å—Ç—Ä–æ–∫–∞ 1010)
- `validator = createCommandValidator(["echo", "npm"], ["rm", "sudo"])` (—Å—Ç—Ä–æ–∫–∞ 1018)
- `validator = createCommandValidator(["npm", "git", "echo"], ["git push", "npm publish"])` (—Å—Ç—Ä–æ–∫–∞ 1033)
- `commonCommands = [` (—Å—Ç—Ä–æ–∫–∞ 1063)
- `dangerousCommands = [` (—Å—Ç—Ä–æ–∫–∞ 1081)
- `unknownCommands = ["docker run", "python script.py", "curl https://api.example.com"]` (—Å—Ç—Ä–æ–∫–∞ 1094)
- `blockedCommands = ["npm install", "git push", "rm file", "echo hello", "mkdir test"]` (—Å—Ç—Ä–æ–∫–∞ 1120)
- `largeAllowList = Array.from({ length: 1000 }, (_, i) => `command${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1166)
- `largeDenyList = Array.from({ length: 500 }, (_, i) => `dangerous${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1167)
- `largeValidator = createCommandValidator(largeAllowList, largeDenyList)` (—Å—Ç—Ä–æ–∫–∞ 1169)
- `batchValidator = createCommandValidator(["npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `commands = Array.from({ length: 100 }, (_, i) => `npm test${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1179)
- `results = batchValidator.validateCommands(commands)` (—Å—Ç—Ä–æ–∫–∞ 1180)

#### üìÑ command-parser.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `patterns = extractPatternsFromCommand("ls")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `patterns = extractPatternsFromCommand("git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `patterns = extractPatternsFromCommand("git commit -m 'test'")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `patterns = extractPatternsFromCommand("cd /usr/local/bin")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `patterns = extractPatternsFromCommand("ls -la | grep test")` (—Å—Ç—Ä–æ–∫–∞ 26)
- `patterns = extractPatternsFromCommand("npm install && git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 31)
- `patterns = extractPatternsFromCommand("npm test || npm run test:ci")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `patterns = extractPatternsFromCommand("cd src` (—Å—Ç—Ä–æ–∫–∞ 41)
- `patterns = extractPatternsFromCommand("0 total")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `patterns = extractPatternsFromCommand("")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `patterns = extractPatternsFromCommand("./script.sh --verbose")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `patterns = extractPatternsFromCommand("git add .")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `patterns = extractPatternsFromCommand("cd ~/projects")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `patterns = extractPatternsFromCommand("docker run image:tag")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `patterns = extractPatternsFromCommand("npm run build && git push")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `patterns = extractPatternsFromCommand("npm install && npm test | grep success || echo 'failed'")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `patterns = extractPatternsFromCommand("echo 'unclosed quote")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `patterns = extractPatternsFromCommand("npm run build")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `patterns = extractPatternsFromCommand("git push origin main --force")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `patterns = extractPatternsFromCommand("gh pr checkout 123")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `patterns = extractPatternsFromCommand("git remote add origin https://github.com/user/repo.git")` (—Å—Ç—Ä–æ–∫–∞ 117)
- `patterns = extractPatternsFromCommand("npm run build --production")` (—Å—Ç—Ä–æ–∫–∞ 122)
- `patterns = extractPatternsFromCommand("node scripts test.js")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `patterns = extractPatternsFromCommand("docker run -it ubuntu")` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ TelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `API_KEY = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `DISTINCT_ID = "test-user-id"` (—Å—Ç—Ä–æ–∫–∞ 54)

### üìÇ webview-ui/src/hooks/__tests__

#### üìÑ useAutoApprovalState.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 128)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `initialToggles = {` (—Å—Ç—Ä–æ–∫–∞ 161)
- `firstHasEnabledOptions = result.current.hasEnabledOptions` (—Å—Ç—Ä–æ–∫–∞ 176)
- `firstEffectiveAutoApprovalEnabled = result.current.effectiveAutoApprovalEnabled` (—Å—Ç—Ä–æ–∫–∞ 177)
- `newToggles = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `initialToggles = {` (—Å—Ç—Ä–æ–∫–∞ 193)
- `newToggles = {` (—Å—Ç—Ä–æ–∫–∞ 212)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 224)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `toggles = {}` (—Å—Ç—Ä–æ–∫–∞ 261)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 270)

### üìÇ webview-ui/src/components/ui

#### üìÑ index.ts

#### üìÑ tooltip.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TooltipProvider = TooltipPrimitive.Provider` (—Å—Ç—Ä–æ–∫–∞ 6)
- `Tooltip = TooltipPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `TooltipTrigger = TooltipPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `TooltipContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ toggle-switch.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleKeyDown(e: R)` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dimensions = size === "small" ? { width: 16, height: 8, dotSize: 4 } : { width: 20, height: 10, dotSize: 6 }` (—Å—Ç—Ä–æ–∫–∞ 20)
- `handleKeyDown = (e: React.KeyboardEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ textarea.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<"textarea">>(` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ standard-tooltip.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface StandardTooltipProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `style = maxWidth ? { maxWidth: typeof maxWidth === "number" ? `${maxWidth}px` : maxWidth } : undefined` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ slider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Slider = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ separator.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Separator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Select()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `SelectGroup()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `SelectValue()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `SelectTrigger()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `SelectLabel()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `SelectItem()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `SelectSeparator()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `SelectScrollUpButton()` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ select-dropdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `selectedOption = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 72)
- `displayText = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 78)
- `onOpenChange = React.useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `onClearSearch = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `searchableItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `fzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `filteredOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `matchingItems = fzfInstance.find(searchValue).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `groupedOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleSelect = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 166)
- `option = options.find((opt) => opt.value === optionValue)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `triggerContent = (` (—Å—Ç—Ä–æ–∫–∞ 189)
- `itemKey = `item-${option.value || option.label || index}`` (—Å—Ç—Ä–æ–∫–∞ 271)

#### üìÑ searchable-select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleOpenChange(open: b)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `handleSelect(selectedValue: s)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleClearSearch()` (—Å—Ç—Ä–æ–∫–∞ 102)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SearchableSelectProps` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `searchResetTimeoutRef = React.useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `isMountedRef = React.useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `selectedOption = options.find((option) => option.value === value)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `filteredOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 58)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `handleOpenChange = (open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `handleSelect = (selectedValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleClearSearch = () => {` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ progress.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Progress = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ popover.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Popover = PopoverPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 7)
- `PopoverTrigger = PopoverPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 9)
- `PopoverAnchor = PopoverPrimitive.Anchor` (—Å—Ç—Ä–æ–∫–∞ 11)
- `PopoverContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ input.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ dropdown-menu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DropdownMenuShortcut()` (—Å—Ç—Ä–æ–∫–∞ 131)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DropdownMenu = DropdownMenuPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DropdownMenuTrigger = DropdownMenuPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `DropdownMenuGroup = DropdownMenuPrimitive.Group` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DropdownMenuPortal = DropdownMenuPrimitive.Portal` (—Å—Ç—Ä–æ–∫–∞ 14)
- `DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DropdownMenuContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 18)
- `DropdownMenuItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 40)
- `DropdownMenuCheckboxItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 61)
- `DropdownMenuRadioItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 84)
- `DropdownMenuLabel = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 105)
- `DropdownMenuSeparator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 119)
- `DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 131)

#### üìÑ dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Dialog()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `DialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `DialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `DialogClose()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `DialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DialogContent()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `DialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `DialogDescription()` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ command.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `CommandDialog()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `CommandShortcut()` (—Å—Ç—Ä–æ–∫–∞ 124)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Command = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CommandDialog = ({ children, ...props }: DialogProps) => {` (—Å—Ç—Ä–æ–∫–∞ 25)
- `CommandInput = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 37)
- `CommandList = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 57)
- `CommandEmpty = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 70)
- `CommandGroup = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 77)
- `CommandSeparator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 93)
- `CommandItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 105)
- `CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ collapsible.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Collapsible = CollapsiblePrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 3)
- `CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger` (—Å—Ç—Ä–æ–∫–∞ 5)
- `CollapsibleContent = CollapsiblePrimitive.CollapsibleContent` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ checkbox.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `checkboxVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 10)
- `Checkbox = React.forwardRef<React.ElementRef<typeof CheckboxPrimitive.Root>, CheckboxProps>(` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Button = React.forwardRef<HTMLButtonElement, ButtonProps>(` (—Å—Ç—Ä–æ–∫–∞ 43)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 45)

#### üìÑ badge.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Badge()` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `badgeVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ autosize-textarea.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UseAutosizeTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–¢–∏–ø—ã:**

- `type AutosizeTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `offsetBorder = 6` (—Å—Ç—Ä–æ–∫–∞ 23)
- `textAreaElement = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 24)
- `scrollHeight = textAreaElement.scrollHeight` (—Å—Ç—Ä–æ–∫–∞ 38)
- `textAreaRef = React.useRef<HTMLTextAreaElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 67)

#### üìÑ alert-dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AlertDialog()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `AlertDialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `AlertDialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `AlertDialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `AlertDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `AlertDialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `AlertDialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `AlertDialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `AlertDialogAction()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `AlertDialogCancel()` (—Å—Ç—Ä–æ–∫–∞ 101)

### üìÇ webview-ui/src/components/settings

#### üìÑ types.ts

#### üìÑ transforms.ts

#### üìÑ styles.ts

#### üìÑ constants.ts

#### üìÑ TodoListSettingsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TodoListSettingsControlProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleTodoListEnabledChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ThinkingBudget.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ThinkingBudgetProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isReasoningBudgetSupported = !!modelInfo && modelInfo.supportsReasoningBudget` (—Å—Ç—Ä–æ–∫–∞ 20)
- `isReasoningBudgetRequired = !!modelInfo && modelInfo.requiredReasoningBudget` (—Å—Ç—Ä–æ–∫–∞ 21)
- `isReasoningEffortSupported = !!modelInfo && modelInfo.supportsReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 22)
- `enableReasoningEffort = apiConfiguration.enableReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 24)
- `customMaxOutputTokens = apiConfiguration.modelMaxTokens || DEFAULT_HYBRID_REASONING_MODEL_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 25)
- `modelMaxThinkingTokens = modelInfo?.maxThinkingTokens` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ TerminalSettings.tsx

**–¢–∏–ø—ã:**

- `type TerminalSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ TemperatureControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TemperatureControlProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasCustomTemperature = value !== undefined && value !== null` (—Å—Ç—Ä–æ–∫–∞ 23)
- `isChecked = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ SettingsView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleSubmit()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 458)
- `onSelect()` (—Å—Ç—Ä–æ–∫–∞ 515)

**–¢–∏–ø—ã:**

- `type SectionName` (—Å—Ç—Ä–æ–∫–∞ 95)
- `type SettingsViewProps` (—Å—Ç—Ä–æ–∫–∞ 97)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sectionNames = [` (—Å—Ç—Ä–æ–∫–∞ 81)
- `SettingsView = forwardRef<SettingsViewRef, SettingsViewProps>(({ onDone, targetSection }, ref) => {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `extensionState = useExtensionState()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `prevApiConfigName = useRef(currentApiConfigName)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `confirmDialogHandler = useRef<() => void>()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `apiConfiguration = useMemo(() => cachedState.apiConfiguration ?? {}, [cachedState.apiConfiguration])` (—Å—Ç—Ä–æ–∫–∞ 188)
- `setApiConfigurationField = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 221)
- `previousValue = prevState.apiConfiguration?.[field]` (—Å—Ç—Ä–æ–∫–∞ 228)
- `isInitialSync = previousValue === undefined && value !== undefined` (—Å—Ç—Ä–æ–∫–∞ 232)
- `setTelemetrySetting = useCallback((setting: TelemetrySetting) => {` (—Å—Ç—Ä–æ–∫–∞ 254)
- `setCustomSupportPromptsField = useCallback((prompts: Record<string, string | undefined>) => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `isSettingValid = !errorMessage` (—Å—Ç—Ä–æ–∫–∞ 276)
- `handleSubmit = () => {` (—Å—Ç—Ä–æ–∫–∞ 278)
- `checkUnsaveChanges = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 352)
- `onConfirmDialogResult = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 366)
- `handleTabChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 380)
- `tabRefs = useRef<Record<SectionName, HTMLButtonElement | null>>(` (—Å—Ç—Ä–æ–∫–∞ 389)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `observer = new ResizeObserver((entries) => {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `scrollToActiveTab = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 440)
- `activeTabElement = tabRefs.current[activeTab]` (—Å—Ç—Ä–æ–∫–∞ 441)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 458)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 459)
- `isSelected = id === activeTab` (—Å—Ç—Ä–æ–∫–∞ 514)
- `onSelect = () => handleTabChange(id)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `triggerComponent = (` (—Å—Ç—Ä–æ–∫–∞ 519)

#### üìÑ SectionHeader.tsx

**–¢–∏–ø—ã:**

- `type SectionHeaderProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ Section.tsx

**–¢–∏–ø—ã:**

- `type SectionProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ RateLimitSecondsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RateLimitSecondsControlProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ R1FormatSetting.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface R1FormatSettingProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ PromptsSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `updateSupportPrompt(type: S, value: s)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleSupportReset(type: S)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `getSupportPromptValue(type: S): string` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleTestEnhancement()` (—Å—Ç—Ä–æ–∫–∞ 105)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PromptsSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PromptsSettings = ({` (—Å—Ç—Ä–æ–∫–∞ 29)
- `includeTaskHistoryInEnhance = propsIncludeTaskHistoryInEnhance ?? contextIncludeTaskHistoryInEnhance` (—Å—Ç—Ä–æ–∫–∞ 49)
- `setIncludeTaskHistoryInEnhance = propsSetIncludeTaskHistoryInEnhance ?? contextSetIncludeTaskHistoryInEnhance` (—Å—Ç—Ä–æ–∫–∞ 50)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 58)
- `updateSupportPrompt = (type: SupportPromptType, value: string | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `updatedPrompts = { ...customSupportPrompts, [type]: value }` (—Å—Ç—Ä–æ–∫–∞ 79)
- `handleSupportReset = (type: SupportPromptType) => {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `updatedPrompts = { ...customSupportPrompts }` (—Å—Ç—Ä–æ–∫–∞ 92)
- `getSupportPromptValue = (type: SupportPromptType): string => {` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleTestEnhancement = () => {` (—Å—Ç—Ä–æ–∫–∞ 105)
- `trimmedValue = value.trim()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `newConfigId = value === "-" ? "" : value` (—Å—Ç—Ä–æ–∫–∞ 187)
- `value = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 240)

#### üìÑ NotificationSettings.tsx

**–¢–∏–ø—ã:**

- `type NotificationSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ ModelPicker.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModelPickerProps` (—Å—Ç—Ä–æ–∫–∞ 34)

**–¢–∏–ø—ã:**

- `type ModelIdKey` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isInitialized = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `searchInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `selectTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `closeTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `modelIds = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filteredModels = filterModels(models, apiConfiguration.apiProvider, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `onSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 76)
- `onOpenChange = useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `onClearSearch = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `initialValue = modelIds.includes(selectedModelId) ? selectedModelId : defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ ModelInfoView.tsx

**–¢–∏–ø—ã:**

- `type ModelInfoViewProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `infoItems = [` (—Å—Ç—Ä–æ–∫–∞ 28)
- `ModelInfoSupportsItem = ({` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ ModelDescriptionMarkdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `textContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `textRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ MaxRequestsInput.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MaxRequestsInputProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ MaxLimitInputs.tsx

#### üìÑ MaxCostInput.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MaxCostInputProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ LanguageSettings.tsx

**–¢–∏–ø—ã:**

- `type LanguageSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ExperimentalSettings.tsx

**–¢–∏–ø—ã:**

- `type ExperimentalSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ExperimentalFeature.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ExperimentalFeatureProps` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nameKey = experimentKey ? `settings:experimental.${experimentKey}.name` : ""` (—Å—Ç—Ä–æ–∫–∞ 15)
- `descriptionKey = experimentKey ? `settings:experimental.${experimentKey}.description` : ""` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ DiffSettingsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DiffSettingsControlProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleDiffEnabledChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleThresholdChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ ContextManagementSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCurrentThresholdValue()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `handleThresholdChange(value: n)` (—Å—Ç—Ä–æ–∫–∞ 82)

**–¢–∏–ø—ã:**

- `type ContextManagementSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getCurrentThresholdValue = () => {` (—Å—Ç—Ä–æ–∫–∞ 70)
- `profileThreshold = profileThresholds[selectedThresholdProfile]` (—Å—Ç—Ä–æ–∫–∞ 74)
- `handleThresholdChange = (value: number) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `newThresholds = {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 190)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `profileThreshold = profileThresholds[config.id]` (—Å—Ç—Ä–æ–∫–∞ 394)

#### üìÑ ConsecutiveMistakeLimitControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ConsecutiveMistakeLimitControlProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)
- `validValue = Math.max(0, newValue)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ CheckpointSettings.tsx

**–¢–∏–ø—ã:**

- `type CheckpointSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ BrowserSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `async testConnection()` (—Å—Ç—Ä–æ–∫–∞ 68)

**–¢–∏–ø—ã:**

- `type BrowserSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 52)
- `testConnection = async () => {` (—Å—Ç—Ä–æ–∫–∞ 68)
- `options = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ AutoApproveToggle.tsx

**–¢–∏–ø—ã:**

- `type AutoApproveToggles` (—Å—Ç—Ä–æ–∫–∞ 7)
- `type AutoApproveConfig` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type AutoApproveToggleProps` (—Å—Ç—Ä–æ–∫–∞ 104)

#### üìÑ AutoApproveSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleAddCommand()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handleAddDeniedCommand()` (—Å—Ç—Ä–æ–∫–∞ 104)

**–¢–∏–ø—ã:**

- `type AutoApproveSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `handleAddCommand = () => {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `currentCommands = allowedCommands ?? []` (—Å—Ç—Ä–æ–∫–∞ 94)
- `newCommands = [...currentCommands, commandInput]` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleAddDeniedCommand = () => {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `currentCommands = deniedCommands ?? []` (—Å—Ç—Ä–æ–∫–∞ 105)
- `newCommands = [...currentCommands, deniedCommandInput]` (—Å—Ç—Ä–æ–∫–∞ 108)
- `newValue = !(autoApprovalEnabled ?? false)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `newCommands = (allowedCommands ?? []).filter((_, i) => i !== index)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `newCommands = (deniedCommands ?? []).filter((_, i) => i !== index)` (—Å—Ç—Ä–æ–∫–∞ 377)

#### üìÑ ApiOptions.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ApiOptions = ({` (—Å—Ç—Ä–æ–∫–∞ 106)
- `headers = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 118)
- `propHeaders = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 123)
- `currentConfigHeaders = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 136)
- `newHeadersObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 151)
- `headerObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 191)
- `apiValidationResult = validateApiConfigurationExcludingModelErrors(` (—Å—Ç—Ä–æ–∫–∞ 227)
- `selectedProviderModels = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 235)
- `models = MODELS_BY_PROVIDER[selectedProvider]` (—Å—Ç—Ä–æ–∫–∞ 236)
- `filteredModels = filterModels(models, selectedProvider, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `modelOptions = filteredModels` (—Å—Ç—Ä–æ–∫–∞ 241)
- `onProviderChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 251)
- `validateAndResetModel = (` (—Å—Ç—Ä–æ–∫–∞ 262)
- `shouldSetDefault = !modelId` (—Å—Ç—Ä–æ–∫–∞ 272)
- `config = PROVIDER_MODEL_CONFIG[value]` (—Å—Ç—Ä–æ–∫–∞ 314)
- `modelValidationError = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 326)
- `docs = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `provider = PROVIDERS.find(({ value }) => value === selectedProvider)` (—Å—Ç—Ä–æ–∫–∞ 331)
- `name = provider?.label` (—Å—Ç—Ä–æ–∫–∞ 332)
- `slug = slugs[selectedProvider] || selectedProvider` (—Å—Ç—Ä–æ–∫–∞ 344)
- `providerOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 352)

#### üìÑ ApiErrorMessage.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiErrorMessageProps` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ ApiConfigManager.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `isProfileValid(profile: P): boolean` (—Å—Ç—Ä–æ–∫–∞ 41)
- `validateName(name: s, isNewProfile: b): string | null` (—Å—Ç—Ä–æ–∫–∞ 60)
- `resetCreateState()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `resetRenameState()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `handleSelectConfig(configName: s)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `handleAdd()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `handleStartRename()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleCancel()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `handleSave()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `handleNewProfileSave()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 166)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiConfigManagerProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ApiConfigManager = ({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `inputRef = useRef<any>(null)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `newProfileInputRef = useRef<any>(null)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isProfileValid = (profile: ProviderSettingsEntry): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `provider = profile.apiProvider` (—Å—Ç—Ä–æ–∫–∞ 48)
- `providerConfig = organizationAllowList.providers[provider]` (—Å—Ç—Ä–æ–∫–∞ 51)
- `validateName = (name: string, isNewProfile: boolean): string | null => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `trimmed = name.trim()` (—Å—Ç—Ä–æ–∫–∞ 61)
- `nameExists = listApiConfigMeta?.some((config) => config.name.toLowerCase() === trimmed.toLowerCase())` (—Å—Ç—Ä–æ–∫–∞ 64)
- `resetCreateState = () => {` (—Å—Ç—Ä–æ–∫–∞ 79)
- `resetRenameState = () => {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `timeoutId = setTimeout(() => inputRef.current?.focus(), 0)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `timeoutId = setTimeout(() => newProfileInputRef.current?.focus(), 0)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `handleSelectConfig = (configName: string) => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `handleAdd = () => {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `handleStartRename = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `handleSave = () => {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `trimmedValue = inputValue.trim()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = validateName(trimmedValue, false)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `handleNewProfileSave = () => {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `trimmedValue = newProfileName.trim()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `error = validateName(trimmedValue, true)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `isOnlyProfile = listApiConfigMeta?.length === 1` (—Å—Ç—Ä–æ–∫–∞ 173)
- `target = e as { target: { value: string } }` (—Å—Ç—Ä–æ–∫–∞ 186)
- `valid = isProfileValid(config)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `target = e as { target: { value: string } }` (—Å—Ç—Ä–æ–∫–∞ 311)
- `event = e as { key: string }` (—Å—Ç—Ä–æ–∫–∞ 319)

#### üìÑ About.tsx

**–¢–∏–ø—ã:**

- `type AboutProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `checked = e.target.checked === true` (—Å—Ç—Ä–æ–∫–∞ 45)

### üìÇ webview-ui/src/components/marketplace

#### üìÑ useStateManager.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleStateChange(newState: V)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleStateChange = (newState: ViewState) => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `unsubscribe = manager.onStateChange(handleStateChange)` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ MarketplaceViewStateManager.ts

**–¢–∏–ø—ã:**

- `type TransitionPayloads` (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `allItems = this.state.allItems.length ? [...this.state.allItems] : []` (—Å—Ç—Ä–æ–∫–∞ 102)
- `organizationMcps = this.state.organizationMcps.length ? [...this.state.organizationMcps] : []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `displayItems = this.state.displayItems ? [...this.state.displayItems] : [...allItems]` (—Å—Ç—Ä–æ–∫–∞ 106)
- `displayOrganizationMcps = this.state.displayOrganizationMcps` (—Å—Ç—Ä–æ–∫–∞ 107)
- `tags = this.state.filters.tags.length ? [...this.state.filters.tags] : []` (—Å—Ç—Ä–æ–∫–∞ 110)
- `newState = this.getState() // Use getState to ensure proper copying` (—Å—Ç—Ä–æ–∫–∞ 131)
- `currentTab = newState.activeTab` (—Å—Ç—Ä–æ–∫–∞ 138)
- `safeState = {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `updatedFilters = {` (—Å—Ç—Ä–æ–∫–∞ 250)
- `newDisplayItems = this.filterItems(this.state.allItems)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `newDisplayOrganizationMcps = this.filterItems(this.state.organizationMcps)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `itemCopy = { ...item }` (—Å—Ç—Ä–æ–∫–∞ 296)
- `typeMatch = !type || item.type === type` (—Å—Ç—Ä–æ–∫–∞ 299)
- `nameMatch = search ? item.name.toLowerCase().includes(search.toLowerCase()) : false` (—Å—Ç—Ä–æ–∫–∞ 300)
- `descriptionMatch = search` (—Å—Ç—Ä–æ–∫–∞ 301)
- `tagMatch = tags.length > 0 ? item.tags?.some((tag) => tags.includes(tag)) : false` (—Å—Ç—Ä–æ–∫–∞ 304)
- `hasMatchingSubcomponents = false` (—Å—Ç—Ä–æ–∫–∞ 310)
- `marketplaceItems = message.state.marketplaceItems` (—Å—Ç—Ä–æ–∫–∞ 345)
- `items = [...marketplaceItems]` (—Å—Ç—Ä–æ–∫–∞ 350)
- `isOnMcpTab = this.state.activeTab === "mcp"` (—Å—Ç—Ä–æ–∫–∞ 380)
- `hasCurrentItems = (this.state.allItems || []).length > 0` (—Å—Ç—Ä–æ–∫–∞ 381)
- `preserveTab = !isOnMcpTab && hasCurrentItems` (—Å—Ç—Ä–æ–∫–∞ 382)
- `marketplaceItems = message.marketplaceItems` (—Å—Ç—Ä–æ–∫–∞ 412)
- `organizationMcps = message.organizationMcps || []` (—Å—Ç—Ä–æ–∫–∞ 413)
- `items = [...marketplaceItems]` (—Å—Ç—Ä–æ–∫–∞ 418)
- `orgMcps = [...organizationMcps]` (—Å—Ç—Ä–æ–∫–∞ 419)
- `newDisplayItems = this.isFilterActive() ? this.filterItems(items) : items` (—Å—Ç—Ä–æ–∫–∞ 420)
- `newDisplayOrganizationMcps = this.isFilterActive() ? this.filterItems(orgMcps) : orgMcps` (—Å—Ç—Ä–æ–∫–∞ 421)

#### üìÑ MarketplaceView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleVisibilityMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 74)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarketplaceViewProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionState = useContext(ExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `currentVersion = extensionState?.organizationSettingsVersion ?? -1` (—Å—Ç—Ä–æ–∫–∞ 28)
- `unsubscribe = manager.onStateChange((newState) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleVisibilityMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 75)
- `allTags = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 90)
- `filteredTags = useMemo(() => allTags, [allTags])` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ MarketplaceListView.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `allItems = state.displayItems || []` (—Å—Ç—Ä–æ–∫–∞ 27)
- `organizationMcps = state.displayOrganizationMcps || []` (—Å—Ç—Ä–æ–∫–∞ 28)
- `items = filterByType ? allItems.filter((item) => item.type === filterByType) : allItems` (—Å—Ç—Ä–æ–∫–∞ 31)
- `orgMcps = filterByType === "mcp" ? organizationMcps : []` (—Å—Ç—Ä–æ–∫–∞ 32)
- `isEmpty = items.length === 0 && orgMcps.length === 0` (—Å—Ç—Ä–æ–∫–∞ 34)
- `isSelected = state.filters.tags.includes(tag)` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ IssueFooter.tsx

### üìÇ webview-ui/src/components/history

#### üìÑ useTaskSearch.ts

**–¢–∏–ø—ã:**

- `type SortOption` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `presentableTasks = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `fzf = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `tasks = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `searchResults = fzf.find(searchQuery)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `positions = Array.from(result.positions)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `taskEndIndex = result.item.task.length` (—Å—Ç—Ä–æ–∫–∞ 47)
- `aTokens = (a.tokensIn || 0) + (a.tokensOut || 0) + (a.cacheWrites || 0) + (a.cacheReads || 0)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `bTokens = (b.tokensIn || 0) + (b.tokensOut || 0) + (b.cacheWrites || 0) + (b.cacheReads || 0)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ TaskItemHeader.tsx

#### üìÑ TaskItemFooter.tsx

#### üìÑ TaskItem.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DisplayHistoryItem extends HistoryItem` (—Å—Ç—Ä–æ–∫–∞ 11)

- `interface TaskItemProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TaskItem = ({` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `isCompact = variant === "compact"` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ HistoryView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `HistoryView()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `toggleSelectionMode()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `toggleTaskSelection(taskId: s, isSelected: b)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toggleSelectAll(selectAll: b)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleBatchDelete()` (—Å—Ç—Ä–æ–∫–∞ 75)

**–¢–∏–ø—ã:**

- `type HistoryViewProps` (—Å—Ç—Ä–æ–∫–∞ 24)
- `type SortOption` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `HistoryView = ({ onDone }: HistoryViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `toggleSelectionMode = () => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `toggleTaskSelection = (taskId: string, isSelected: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toggleSelectAll = (selectAll: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleBatchDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `newValue = (e.target as HTMLInputElement)?.value` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ HistoryPreview.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `HistoryPreview()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handleViewAllHistory()` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `HistoryPreview = () => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handleViewAllHistory = () => {` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ ExportButton.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleExportClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ DeleteTaskDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DeleteTaskDialogProps extends AlertDialogProps` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ DeleteButton.tsx

**–¢–∏–ø—ã:**

- `type DeleteButtonProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleDeleteClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ CopyButton.tsx

**–¢–∏–ø—ã:**

- `type CopyButtonProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onCopy = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ BatchDeleteTaskDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BatchDeleteTaskDialogProps extends AlertDialogProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 25)

### üìÇ src/utils/logging/__tests__

#### üìÑ MockTransport.ts

#### üìÑ CompactTransport.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cleanupTestLogs()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `rmDirRecursive(dirPath: s)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `rmDirRecursive(dirPath: s)` (—Å—Ç—Ä–æ–∫–∞ 142)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testDir = "./test-logs"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `testLogPath = path.join(testDir, "test.log")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalWrite = process.stdout.write` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cleanupTestLogs = () => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `rmDirRecursive = (dirPath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `curPath = path.join(dirPath, file)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `entry = {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `lastLine = JSON.parse(lines[lines.length - 1])` (—Å—Ç—Ä–æ–∫–∞ 114)
- `deepDir = path.join(testDir, "deep/nested/path")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `deepPath = path.join(deepDir, "test.log")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `deepTransport = new CompactTransport({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `rmDirRecursive = (dirPath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 142)
- `curPath = path.join(dirPath, file)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `entries = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `baseTime = 1000000000000` (—Å—Ç—Ä–æ–∫–∞ 183)
- `baseTime = Date.now() // Use current fake time` (—Å—Ç—Ä–æ–∫–∞ 197)
- `transport = new CompactTransport({` (—Å—Ç—Ä–æ–∫–∞ 198)
- `entries = output.map((str) => JSON.parse(str))` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ src/services/tree-sitter/queries

#### üìÑ zig.ts

#### üìÑ vue.ts

#### üìÑ typescript.ts

#### üìÑ tsx.ts

#### üìÑ toml.ts

#### üìÑ tlaplus.ts

#### üìÑ systemrdl.ts

#### üìÑ swift.ts

#### üìÑ solidity.ts

#### üìÑ scala.ts

#### üìÑ rust.ts

#### üìÑ ruby.ts

#### üìÑ python.ts

#### üìÑ php.ts

#### üìÑ ocaml.ts

#### üìÑ lua.ts

#### üìÑ kotlin.ts

#### üìÑ javascript.ts

#### üìÑ java.ts

#### üìÑ index.ts

#### üìÑ html.ts

#### üìÑ go.ts

#### üìÑ embedded_template.ts

#### üìÑ elixir.ts

#### üìÑ elisp.ts

#### üìÑ css.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cssQuery = String.raw`` (—Å—Ç—Ä–æ–∫–∞ 4)

#### üìÑ cpp.ts

#### üìÑ c.ts

#### üìÑ c-sharp.ts

### üìÇ src/services/tree-sitter/__tests__

#### üìÑ parseSourceCodeDefinitions.zig.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("file.zig", sampleZig, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.vue.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.vue", sampleVue, {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `lines = parseResult?.split("\n") || []` (—Å—Ç—Ä–æ–∫–∞ 57)
- `templateIndex = lines.findIndex((line) => line.includes("| <template>"))` (—Å—Ç—Ä–æ–∫–∞ 58)
- `scriptIndex = lines.findIndex((line) => line.includes("| <script>"))` (—Å—Ç—Ä–æ–∫–∞ 59)
- `styleIndex = lines.findIndex((line) => line.includes("| <style>"))` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ parseSourceCodeDefinitions.typescript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ts", sampleTypeScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ parseSourceCodeDefinitions.tsx.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parseResult = await testParseSourceCodeDefinitions("test.tsx", sampleTsxContent, {` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ parseSourceCodeDefinitions.toml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.toml", sampleToml, {` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ parseSourceCodeDefinitions.tlaplus.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = await testParseSourceCodeDefinitions("test.tla", sampleTLAPlusContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 29)

#### üìÑ parseSourceCodeDefinitions.systemrdl.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.rdl", sampleSystemRDLContent, {` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ parseSourceCodeDefinitions.swift.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ parseSourceCodeDefinitions.solidity.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.sol", sampleSolidity, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.scala.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `scalaOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.rust.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rustOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("/test/file.rs", sampleRustContent, rustOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.ruby.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rubyOptions = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 103)

#### üìÑ parseSourceCodeDefinitions.python.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pythonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ parseSourceCodeDefinitions.php.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `phpOptions = {` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ parseSourceCodeDefinitions.ocaml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ml", sampleOCaml, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ parseSourceCodeDefinitions.lua.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `luaOptions = {` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ parseSourceCodeDefinitions.kotlin.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleKotlinContent, "kotlin")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("/test/file.kt", sampleKotlinContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ parseSourceCodeDefinitions.json.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `jsonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `testFile = "/test/test.json"` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ parseSourceCodeDefinitions.javascript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `parseResult = await testParseSourceCodeDefinitions("test.js", sampleJavaScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.java.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await testParseSourceCodeDefinitions("/test/file.java", sampleJavaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ parseSourceCodeDefinitions.html.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = await testParseSourceCodeDefinitions("test.html", sampleHtmlContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ parseSourceCodeDefinitions.go.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `lineRanges = parseResult.match(/\d+--\d+ \|/g)` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ parseSourceCodeDefinitions.embedded_template.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.erb", sampleEmbeddedTemplateContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.elixir.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `elixirOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.elisp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await testParseSourceCodeDefinitions("file.el", sampleElispContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `matches = parseResult.match(/\d+--\d+ \|/g) || []` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ parseSourceCodeDefinitions.css.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.cpp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await testParseSourceCodeDefinitions("test.cpp", sampleCppContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ parseSourceCodeDefinitions.c.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.c", sampleCContent, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.c-sharp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `csharpOptions = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `result = await testParseSourceCodeDefinitions("/test/file.cs", sampleCSharpContent, csharpOptions)` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ markdownParser.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `processCaptures(captures: a, lines: s, minComponentLines: n): string | null` (—Å—Ç—Ä–æ–∫–∞ 503)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = `# Heading 1` (—Å—Ç—Ä–æ–∫–∞ 5)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `content = `Heading 1` (—Å—Ç—Ä–æ–∫–∞ 36)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `content = `# Main Title` (—Å—Ç—Ä–æ–∫–∞ 62)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = processCaptures(captures, lines, 4)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `content = `This is just some text.` (—Å—Ç—Ä–æ–∫–∞ 103)
- `content = `# Section 1` (—Å—Ç—Ä–æ–∫–∞ 111)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `content = `# Main Title` (—Å—Ç—Ä–æ–∫–∞ 135)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `content = `# Header with *italic* and **bold**` (—Å—Ç—Ä–æ–∫–∞ 172)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `content = `# First header` (—Å—Ç—Ä–æ–∫–∞ 192)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `lastHeaderIndex = captures.length - 2 // Second-to-last capture is the name of the last header` (—Å—Ç—Ä–æ–∫–∞ 205)
- `content = `# Header 1` (—Å—Ç—Ä–æ–∫–∞ 211)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = `# Header with code block` (—Å—Ç—Ä–æ–∫–∞ 232)
- `x = 1` (—Å—Ç—Ä–æ–∫–∞ 234)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `content = `# Header 1` (—Å—Ç—Ä–æ–∫–∞ 258)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `formatted1 = formatMarkdownCaptures(captures)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `formatted2 = formatMarkdownCaptures(captures, 2)` (—Å—Ç—Ä–æ–∫–∞ 280)
- `formatted3 = formatMarkdownCaptures(captures, 1)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `content = `# ATX Header 1` (—Å—Ç—Ä–æ–∫–∞ 296)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `content = `# Top Level Document` (—Å—Ç—Ä–æ–∫–∞ 323)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `headerLevels = captures` (—Å—Ç—Ä–æ–∫–∞ 364)
- `h1Captures = captures.filter((c) => c.name === "name.definition.header.h1")` (—Å—Ç—Ä–æ–∫–∞ 371)
- `h5Captures = captures.filter((c) => c.name === "name.definition.header.h5")` (—Å—Ç—Ä–æ–∫–∞ 372)
- `content = `#Header without space` (—Å—Ç—Ä–æ–∫–∞ 382)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 400)
- `validHeaders = captures.filter((c) => c.name.startsWith("name."))` (—Å—Ç—Ä–æ–∫–∞ 407)
- `content = `# One line header` (—Å—Ç—Ä–æ–∫–∞ 417)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 444)
- `formatted = formatMarkdownCaptures(captures, minLines)` (—Å—Ç—Ä–æ–∫–∞ 448)
- `headerPrefix = "#".repeat(i)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `content = `## Section Header` (—Å—Ç—Ä–æ–∫–∞ 466)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `formatted = formatMarkdownCaptures(captures)` (—Å—Ç—Ä–æ–∫–∞ 482)
- `licenseCapture = captures.find((c) => c.node.text === "License")` (—Å—Ç—Ä–æ–∫–∞ 488)
- `licenseCaptureIndex = captures.findIndex((c) => c.node.text === "License")` (—Å—Ç—Ä–æ–∫–∞ 492)
- `licenseDefinitionCapture = captures[licenseCaptureIndex + 1]` (—Å—Ç—Ä–æ–∫–∞ 494)
- `processedLines = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `capture = captures[i]` (—Å—Ç—Ä–æ–∫–∞ 516)
- `startLine = capture.node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 517)
- `endLine = capture.node.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 518)
- `sectionLength = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 521)
- `lineKey = `${startLine}-${endLine}`` (—Å—Ç—Ä–æ–∫–∞ 524)
- `headerLevel = parseInt(capture.name.charAt(capture.name.length - 1)) || 1` (—Å—Ç—Ä–æ–∫–∞ 532)
- `headerPrefix = "#".repeat(headerLevel)` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ markdownIntegration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await parseSourceCodeDefinitionsForFile("test.md")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `markdownContent = "This is just some text.\nNo headers here.\nJust plain text."` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = await parseSourceCodeDefinitionsForFile("no-headers.md")` (—Å—Ç—Ä–æ–∫–∞ 55)

#### üìÑ languageParser.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `WASM_DIR = path.join(__dirname, "../../../node_modules/tree-sitter-wasms/out")` (—Å—Ç—Ä–æ–∫–∞ 7)
- `files = ["test.py"]` (—Å—Ç—Ä–æ–∫–∞ 11)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `files = ["test.js", "test.jsx"]` (—Å—Ç—Ä–æ–∫–∞ 17)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `files = ["test.js", "test.py", "test.rs", "test.go"]` (—Å—Ç—Ä–æ–∫–∞ 26)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `files = ["test.c", "test.h", "test.cpp", "test.hpp"]` (—Å—Ç—Ä–æ–∫–∞ 35)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `files = ["test.kt", "test.kts"]` (—Å—Ç—Ä–æ–∫–∞ 44)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `files = ["test.unsupported"]` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ inspectZig.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("file.zig", sampleZig, {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ inspectVue.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.vue", sampleVue, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectTypeScript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ts", sampleTypeScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectTsx.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `result = await inspectTreeStructure(sampleTsxContent, "tsx")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = await testParseSourceCodeDefinitions("test.tsx", sampleTsxContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectTOML.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectTLAPlus.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectSystemRDL.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleSystemRDLContent, "systemrdl")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.rdl", sampleSystemRDLContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectSwift.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = await testParseSourceCodeDefinitions("test.swift", sampleSwiftContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ inspectSolidity.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleSolidity, "solidity")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.sol", sampleSolidity, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectScala.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleScala, "scala")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.scala", sampleScala, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectRust.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleRustContent, "rust")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await testParseSourceCodeDefinitions("test.rs", sampleRustContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ inspectRuby.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectPython.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pythonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `inspectResult = await inspectTreeStructure(samplePythonContent, "python")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `parseResult = await testParseSourceCodeDefinitions("test.py", samplePythonContent, pythonOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectPhp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(samplePhpContent, "php")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.php", samplePhpContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectOCaml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleOCaml, "ocaml")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.ml", sampleOCaml, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectLua.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("file.lua", sampleLuaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectKotlin.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectJson.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectJavaScript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.js", sampleJavaScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectJava.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleJavaContent, "java")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.java", sampleJavaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectHtml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.html", sampleHtmlContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectGo.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `lines = result!.split("\n").filter((line) => line.trim() && !line.startsWith("#"))` (—Å—Ç—Ä–æ–∫–∞ 41)
- `lineRanges = lines` (—Å—Ç—Ä–æ–∫–∞ 44)
- `match = line.match(/^(\d+)--(\d+)/)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `uniqueLineRanges = [...new Set(lineRanges)]` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ inspectEmbeddedTemplate.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleEmbeddedTemplateContent, "embedded_template")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.erb", sampleEmbeddedTemplateContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectElixir.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleElixirContent, "elixir")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.ex", sampleElixirContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectElisp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleElispContent, "elisp")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.el", sampleElispContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectCpp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.cpp", sampleCppContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectCSharp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.cs", sampleCSharpContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectCSS.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.css", sampleCSSContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectC.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.c", sampleCContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ index.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `printTree(node: T): string` (—Å—Ç—Ä–æ–∫–∞ 198)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TreeNode` (—Å—Ç—Ä–æ–∫–∞ 185)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await parseSourceCodeForDefinitionsTopLevel("/non/existent/path")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockFiles = ["/test/path/file1.ts", "/test/path/file2.tsx", "/test/path/readme.md"]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `mockFiles = ["/test/path/file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `fileContent = "class TestClass {\n" + "  constructor() {}\n" + "  testMethod() {}\n" + "}"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `mockFiles = ["/test/path/file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 133)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 151)
- `mockFiles = ["/test/path/jsx-arrow.tsx"]` (—Å—Ç—Ä–æ–∫–∞ 156)
- `fixtureContent = `import React from 'react'` (—Å—Ç—Ä–æ–∫–∞ 160)
- `isChecked = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 166)
- `lines = fixtureContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `printTree = (node: TreeNode, depth = 0): string => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `indent = "  ".repeat(depth)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `capture = mockQuery.captures.mock.results[0].value[0]` (—Å—Ç—Ä–æ–∫–∞ 316)
- `mockFiles = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 332)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 347)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 359)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 365)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 393)
- `mockFiles = ["/test/path/dir\\file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 405)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 414)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 436)

#### üìÑ helpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalLoad = Language.load` (—Å—Ç—Ä–æ–∫–∞ 38)
- `filename = path.basename(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `correctPath = path.join(process.cwd(), "dist", filename)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `wasmFile = options.wasmFile || "tree-sitter-tsx.wasm"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `queryString = options.queryString || tsxQuery` (—Å—Ç—Ä–æ–∫–∞ 69)
- `extKey = options.extKey || "tsx"` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mockedFs = (await vi.importActual("fs/promises")) as typeof import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `mockedLoadRequiredLanguageParsers = loadRequiredLanguageParsers as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `wasmPath = path.join(process.cwd(), `dist/${wasmFile}`)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `lang = await Language.load(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `query = lang.query(queryString)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = await parseSourceCodeDefinitionsForFile(testFilePath)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `wasmPath = path.join(process.cwd(), `dist/tree-sitter-${language}.wasm`)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `lang = await Language.load(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tree = parser.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ src/services/roo-config/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `cwd = "/custom/project/path"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = getProjectRooDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `result = await directoryExists("/some/path")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await directoryExists("/non/existing/path")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = await directoryExists("/not/a/directory")` (—Å—Ç—Ä–æ–∫–∞ 90)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await directoryExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result = await fileExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await fileExists("/non/existing/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 133)
- `result = await fileExists("/not/a/directory/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 143)
- `result = await fileExists("/some/directory")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await readFileIfExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = await readFileIfExists("/non/existing/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = await readFileIfExists("/not/a/directory/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `error = new Error("EISDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 190)
- `result = await readFileIfExists("/is/a/directory")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 200)
- `cwd = "/custom/project/path"` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = getRooDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 260)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 264)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 274)
- `globalError = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 282)
- `projectError = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 284)

### üìÇ src/services/ripgrep/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_LINE_LENGTH = 500` (—Å—Ç—Ä–æ–∫–∞ 7)
- `longLine = "a".repeat(600) // Line longer than MAX_LINE_LENGTH` (—Å—Ç—Ä–æ–∫–∞ 10)
- `truncated = truncateLine(longLine)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `shortLine = "Short line of text"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `truncated = truncateLine(shortLine)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `exactLine = "a".repeat(MAX_LINE_LENGTH)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `exactPlusOne = exactLine + "x"` (—Å—Ç—Ä–æ–∫–∞ 28)
- `customLength = 100` (—Å—Ç—Ä–æ–∫–∞ 42)
- `line = "a".repeat(customLength + 50)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `truncated = truncateLine(line, customLength)` (—Å—Ç—Ä–æ–∫–∞ 45)

### üìÇ src/services/mdm/__tests__

#### üìÑ MdmService.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = fs as any` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockOs = os as any` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockCloudService = CloudService as any` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockVscode = vscode as any` (—Å—Ç—Ä–æ–∫–∞ 68)
- `mockGetClerkBaseUrl = getClerkBaseUrl as any` (—Å—Ç—Ä–æ–∫–∞ 69)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 88)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 143)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 255)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 269)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 276)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 277)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 299)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 310)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 321)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 328)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 336)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `service1 = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 359)
- `service2 = MdmService.getInstance()` (—Å—Ç—Ä–æ–∫–∞ 360)

### üìÇ src/services/mcp/__tests__

#### üìÑ McpHub.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 87)
- `originalPlatform = Object.getOwnPropertyDescriptor(process, "platform")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 172)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 203)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 207)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 252)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 256)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 269)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 301)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 302)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 308)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 346)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 350)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 355)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 363)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 393)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 397)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 410)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 441)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 442)
- `writeCall = writeCalls.find((call) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 445)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 446)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 448)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 456)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 489)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 490)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 493)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 494)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `servers = mcpHub.getServers()` (—Å—Ç—Ä–æ–∫–∞ 525)
- `validConfig = {` (—Å—Ç—Ä–æ–∫–∞ 620)
- `invalidConfigs = [` (—Å—Ç—Ä–æ–∫–∞ 628)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 688)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 722)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 725)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 726)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 728)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 733)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 802)
- `validTimeouts = [1, 60, 3600]` (—Å—Ç—Ä–æ–∫–∞ 831)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 841)
- `stdioModule = await import("@modelcontextprotocol/sdk/client/stdio.js")` (—Å—Ç—Ä–æ–∫–∞ 889)
- `clientModule = await import("@modelcontextprotocol/sdk/client/index.js")` (—Å—Ç—Ä–æ–∫–∞ 890)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 905)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 937)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 973)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 999)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1061)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1130)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1203)

### üìÇ src/services/marketplace/__tests__

#### üìÑ optional-parameters.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `param = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 47)

#### üìÑ nested-parameters.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `method = {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `method = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `method = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 102)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 165)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 223)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 226)

#### üìÑ marketplace-setting-check.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockMarketplaceManager = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `mockInstallMarketplaceItem = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockMarketplaceManagerWithInstall = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 54)

#### üìÑ SimpleInstaller.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await installer.installItem(mockModeItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 81)
- `importCall = (mockCustomModesManager.importModeWithRules as any).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `importedYaml = importCall[0]` (—Å—Ç—Ä–æ–∫–∞ 88)
- `importedData = yaml.parse(importedYaml)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `installerWithoutManager = new SimpleInstaller(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await installerWithoutManager.installItem(mockModeItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result = await installer.installItem(mockMcpItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 160)
- `writtenContent = mockFs.writeFile.mock.calls[0][1] as string` (—Å—Ç—Ä–æ–∫–∞ 166)
- `writtenData = JSON.parse(writtenContent)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `invalidJson = '{ "mcpServers": { invalid json'` (—Å—Ç—Ä–æ–∫–∞ 172)
- `existingContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 185)
- `writtenContent = mockFs.writeFile.mock.calls[0][1] as string` (—Å—Ç—Ä–æ–∫–∞ 196)
- `writtenData = JSON.parse(writtenContent)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `installerWithoutManager = new SimpleInstaller(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 342)

#### üìÑ RemoteConfigLoader.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 34)
- `items = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 100)
- `items1 = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `items2 = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 135)
- `items = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `invalidModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 177)
- `validMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 181)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 205)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 211)
- `modeItem = await loader.getItem("target-mode", "mode" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `mcpItem = await loader.getItem("target-mcp", "mcp" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 229)
- `notFound = await loader.getItem("nonexistent", "mode" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 255)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 298)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ MarketplaceManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `filtered = manager.filterItems(items, { search: "test" })` (—Å—Ç—Ä–æ–∫–∞ 109)
- `filtered = manager.filterItems(items, { type: "mode" })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `filtered = manager.filterItems(items, { search: "nonexistent" })` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 227)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 271)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `result = await manager.installMarketplaceItem(item)` (—Å—Ç—Ä–æ–∫–∞ 322)
- `result = await manager.installMarketplaceItem(item)` (—Å—Ç—Ä–æ–∫–∞ 344)

### üìÇ src/services/glob/__tests__

#### üìÑ list-files.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = await vi.importActual("../list-files")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = await listFiles("/test/path", true, 0)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `testDir = "/test/dir"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `lastArg = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 112)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `testDir = "/test/dir"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `lastArg = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 159)
- `mockReaddir = vi.mocked(fs.promises.readdir)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 180)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `directories = results.filter((r) => r.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 228)
- `hasADir = results.some((r) => r.endsWith("a_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 235)
- `hasBDir = results.some((r) => r.endsWith("b_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 236)
- `hasCDir = results.some((r) => r.endsWith("c_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `directories = result.filter((item) => item.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 299)
- `hasSrcDir = directories.some((dir) => dir.endsWith("/test/src/") || dir.endsWith("src/"))` (—Å—Ç—Ä–æ–∫–∞ 302)
- `hasComponentsDir = directories.some(` (—Å—Ç—Ä–æ–∫–∞ 303)
- `hasGitDir = directories.some((dir) => dir.includes(".git/"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `directories = result.filter((item) => item.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 354)
- `hasTasksDir = directories.some((dir) => dir.includes(".neira-memory/tasks/") || dir.includes("tasks/"))` (—Å—Ç—Ä–æ–∫–∞ 356)
- `hasContextDir = directories.some(` (—Å—Ç—Ä–æ–∫–∞ 357)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 369)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 396)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 410)
- `fileNames = files.map((f) => path.basename(f))` (—Å—Ç—Ä–æ–∫–∞ 414)
- `topLevelFile = files.find((f) => f.endsWith("teste1.md"))` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 459)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 464)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 493)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 499)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 527)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ gitignore-test.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 141)

#### üìÑ gitignore-integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `files = [path.join(tempDir, "src"), path.join(tempDir, "allowed-dir")].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 174)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 200)

### üìÇ src/services/glob/__mocks__

#### üìÑ list-files.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockResolve(dirPath: s): string` - Mock function for path resolving without importing path module Provides basic path resolution for testing (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockResolve = (dirPath: string): string => {` - Mock function for path resolving without importing path module Provides basic path resolution for testing (—Å—Ç—Ä–æ–∫–∞ 20)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ src/services/command/__tests__

#### üìÑ frontmatter-commands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `commandContent = `# Setup Command` (—Å—Ç—Ä–æ–∫–∞ 51)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 105)
- `projectCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 118)
- `globalCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `globalCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await getCommand("/test/cwd", "release")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = await getCommand("/test/cwd", "deploy")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 233)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 263)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 269)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `setupContent = `---` (—Å—Ç—Ä–æ–∫–∞ 289)
- `deployContent = `---` (—Å—Ç—Ä–æ–∫–∞ 297)
- `buildContent = `# Build Command` (—Å—Ç—Ä–æ–∫–∞ 305)
- `result = await getCommands("/test/cwd")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `releaseContent = `---` (—Å—Ç—Ä–æ–∫–∞ 347)
- `deployContent = `---` (—Å—Ç—Ä–æ–∫–∞ 356)
- `result = await getCommands("/test/cwd")` (—Å—Ç—Ä–æ–∫–∞ 372)

### üìÇ src/services/code-index/vector-store

#### üìÑ qdrant-client.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsedUrl = this.parseQdrantUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `urlObj = new URL(parsedUrl)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `hash = createHash("sha256").update(workspacePath).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `trimmedUrl = url.trim()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `parsedUrl = new URL(trimmedUrl)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `collectionInfo = await this.client.getCollection(this.collectionName)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `collectionInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `vectorsConfig = collectionInfo.config?.params?.vectors` (—Å—Ç—Ä–æ–∫–∞ 163)
- `errorMessage = error?.message || error` (—Å—Ç—Ä–æ–∫–∞ 191)
- `verificationInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `errorMessage = recreationError instanceof Error ? recreationError.message : String(recreationError)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `dimensionMismatchError = new Error(` (—Å—Ç—Ä–æ–∫–∞ 269)
- `errorMessage = (indexError?.message || "").toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `processedPoints = points.map((point) => {` (—Å—Ç—Ä–æ–∫–∞ 315)
- `segments = point.payload.filePath.split(path.sep).filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `pathSegments = segments.reduce(` (—Å—Ç—Ä–æ–∫–∞ 318)
- `validKeys = ["filePath", "codeChunk", "startLine", "endLine"]` (—Å—Ç—Ä–æ–∫–∞ 355)
- `hasValidKeys = validKeys.every((key) => key in payload)` (—Å—Ç—Ä–æ–∫–∞ 356)
- `segments = directoryPrefix.split(path.sep).filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 378)
- `searchRequest = {` (—Å—Ç—Ä–æ–∫–∞ 388)
- `operationResult = await this.client.query(this.collectionName, searchRequest)` (—Å—Ç—Ä–æ–∫–∞ 402)
- `filteredPoints = operationResult.points.filter((p) => this.isPayloadValid(p.payload))` (—Å—Ç—Ä–æ–∫–∞ 403)
- `collectionExists = await this.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 427)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 435)
- `filters = filePaths.map((filePath) => {` (—Å—Ç—Ä–æ–∫–∞ 438)
- `relativePath = path.isAbsolute(filePath) ? path.relative(workspaceRoot, filePath) : filePath` (—Å—Ç—Ä–æ–∫–∞ 441)
- `normalizedRelativePath = path.normalize(relativePath)` (—Å—Ç—Ä–æ–∫–∞ 444)
- `segments = normalizedRelativePath.split(path.sep).filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `mustConditions = segments.map((segment, index) => ({` (—Å—Ç—Ä–æ–∫–∞ 451)
- `filter = filters.length === 1 ? filters[0] : { should: filters }` (—Å—Ç—Ä–æ–∫–∞ 460)
- `errorMessage = error?.message || String(error)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 469)
- `errorDetails = error?.response?.data || error?.data || ""` (—Å—Ç—Ä–æ–∫–∞ 470)
- `collectionInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 523)

### üìÇ src/services/code-index/shared

#### üìÑ validation-helpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `match = error.message.match(/HTTP (\d+):/)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `serialized = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `serialized = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `serializedError = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `customResult = customHandlers.beforeStandardHandling(error)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `statusCode = extractStatusCode(serializedError)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `errorMessage = extractErrorMessage(serializedError)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `statusError = getErrorMessageForStatus(statusCode, embedderType)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `errorMessage = extractErrorMessage(error)` - Formats an embedding error message based on the error type and context (—Å—Ç—Ä–æ–∫–∞ 219)
- `statusCode = extractStatusCode(error)` (—Å—Ç—Ä–æ–∫–∞ 220)

#### üìÑ supported-extensions.ts

#### üìÑ get-relative-path.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `resolvedPath = path.resolve(workspaceRoot, filePath)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `relativePath = path.relative(workspaceRoot, normalizedAbsolutePath)` (—Å—Ç—Ä–æ–∫–∞ 28)

### üìÇ src/services/code-index/processors

#### üìÑ scanner.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `directoryPath = directory` (—Å—Ç—Ä–æ–∫–∞ 56)
- `scanWorkspace = getWorkspacePathForContext(directoryPath)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `filePaths = allPaths.filter((p) => !p.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 64)
- `ignoreController = new RooIgnoreController(directoryPath)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `allowedPaths = ignoreController.filterPaths(filePaths)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `supportedPaths = allowedPaths.filter((filePath) => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `relativeFilePath = generateRelativeFilePath(filePath, scanWorkspace)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `processedFiles = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `parseLimiter = pLimit(PARSING_CONCURRENCY) // Concurrency for file parsing` (—Å—Ç—Ä–æ–∫–∞ 93)
- `batchLimiter = pLimit(BATCH_PROCESSING_CONCURRENCY) // Concurrency for batch processing` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mutex = new Mutex()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `activeBatchPromises = new Set<Promise<void>>()` (—Å—Ç—Ä–æ–∫–∞ 101)
- `parsePromises = supportedPaths.map((filePath) =>` (—Å—Ç—Ä–æ–∫–∞ 108)
- `stats = await stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `content = await vscode.workspace.fs` (—Å—Ç—Ä–æ–∫–∞ 119)
- `currentFileHash = createHash("sha256").update(content).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `cachedFileHash = this.cacheManager.getHash(filePath)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `isNewFile = !cachedFileHash` (—Å—Ç—Ä–æ–∫–∞ 129)
- `blocks = await this.codeParser.parseFile(filePath, { content, fileHash: currentFileHash })` (—Å—Ç—Ä–æ–∫–∞ 137)
- `fileBlockCount = blocks.length` (—Å—Ç—Ä–æ–∫–∞ 138)
- `trimmedContent = block.content.trim()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 149)
- `batchBlocks = [...currentBatchBlocks]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `batchTexts = [...currentBatchTexts]` (—Å—Ç—Ä–æ–∫–∞ 165)
- `batchFileInfos = [...currentBatchFileInfos]` (—Å—Ç—Ä–æ–∫–∞ 166)
- `batchPromise = batchLimiter(() =>` (—Å—Ç—Ä–æ–∫–∞ 175)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 243)
- `batchBlocks = [...currentBatchBlocks]` (—Å—Ç—Ä–æ–∫–∞ 246)
- `batchTexts = [...currentBatchTexts]` (—Å—Ç—Ä–æ–∫–∞ 247)
- `batchFileInfos = [...currentBatchFileInfos]` (—Å—Ç—Ä–æ–∫–∞ 248)
- `batchPromise = batchLimiter(() =>` (—Å—Ç—Ä–æ–∫–∞ 257)
- `oldHashes = this.cacheManager.getAllHashes()` (—Å—Ç—Ä–æ–∫–∞ 276)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 285)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `uniqueFilePaths = [` (—Å—Ç—Ä–æ–∫–∞ 348)
- `errorMessage = deleteError instanceof Error ? deleteError.message : String(deleteError)` (—Å—Ç—Ä–æ–∫–∞ 361)
- `points = batchBlocks.map((block, index) => {` (—Å—Ç—Ä–æ–∫–∞ 392)
- `normalizedAbsolutePath = generateNormalizedAbsolutePath(block.file_path, scanWorkspace)` (—Å—Ç—Ä–æ–∫–∞ 393)
- `pointId = uuidv5(block.segmentHash, QDRANT_CODE_BLOCK_NAMESPACE)` (—Å—Ç—Ä–æ–∫–∞ 396)
- `delay = INITIAL_RETRY_DELAY_MS * Math.pow(2, attempts - 1)` (—Å—Ç—Ä–æ–∫–∞ 435)
- `errorMessage = lastError.message || "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 445)

#### üìÑ parser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `finalizeChunk(endLineIndex: n)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `createSegmentBlock(segment: s, originalLineNumber: n, startCharIndex: n)` (—Å—Ç—Ä–æ–∫–∞ 273)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `ext = path.extname(filePath).slice(1).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `seenSegmentHashes = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `pendingLoad = this.pendingLoads.get(ext)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `loadPromise = loadRequiredLanguageParsers([filePath])` (—Å—Ç—Ä–æ–∫–∞ 120)
- `newParsers = await loadPromise` (—Å—Ç—Ä–æ–∫–∞ 123)
- `language = this.loadedParsers[ext]` (—Å—Ç—Ä–æ–∫–∞ 141)
- `tree = language.parser.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `captures = tree ? language.query.captures(tree.rootNode) : []` (—Å—Ç—Ä–æ–∫–∞ 151)
- `blocks = this._performFallbackChunking(filePath, content, fileHash, seenSegmentHashes)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `currentNode = queue.shift()!` (—Å—Ç—Ä–æ–∫–∞ 171)
- `chunkedBlocks = this._chunkLeafNodeByLines(` (—Å—Ç—Ä–æ–∫–∞ 183)
- `type = currentNode.type` (—Å—Ç—Ä–æ–∫–∞ 197)
- `start_line = currentNode.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 198)
- `end_line = currentNode.endPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 199)
- `content = currentNode.text` (—Å—Ç—Ä–æ–∫–∞ 200)
- `contentPreview = content.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `effectiveMaxChars = MAX_BLOCK_CHARS * MAX_CHARS_TOLERANCE_FACTOR` (—Å—Ç—Ä–æ–∫–∞ 242)
- `finalizeChunk = (endLineIndex: number) => {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `chunkContent = currentChunkLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 246)
- `startLine = baseStartLine + chunkStartLineIndex` (—Å—Ç—Ä–æ–∫–∞ 247)
- `endLine = baseStartLine + endLineIndex` (—Å—Ç—Ä–æ–∫–∞ 248)
- `contentPreview = chunkContent.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `createSegmentBlock = (segment: string, originalLineNumber: number, startCharIndex: number) => {` (—Å—Ç—Ä–æ–∫–∞ 273)
- `segmentPreview = segment.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 297)
- `lineLength = line.length + (i < lines.length - 1 ? 1 : 0) // +1 for newline, except last line` (—Å—Ç—Ä–æ–∫–∞ 298)
- `originalLineNumber = baseStartLine + i` (—Å—Ç—Ä–æ–∫–∞ 299)
- `segment = remainingLineContent.substring(0, MAX_BLOCK_CHARS)` (—Å—Ç—Ä–æ–∫–∞ 312)
- `potentialChunkLines = lines.slice(chunkStartLineIndex, k + 1)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `potentialChunkLength = potentialChunkLines.join("\n").length + 1` (—Å—Ç—Ä–æ–∫–∞ 338)
- `potentialNextChunkLines = lines.slice(k + 1)` (—Å—Ç—Ä–æ–∫–∞ 339)
- `potentialNextChunkLength = potentialNextChunkLines.join("\n").length + 1` (—Å—Ç—Ä–æ–∫–∞ 340)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `lines = node.text.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 391)
- `baseStartLine = node.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 392)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `chunks = this._chunkTextByLines(lines, filePath, fileHash, type, seenSegmentHashes, startLine)` (—Å—Ç—Ä–æ–∫–∞ 428)
- `endLine = startLine + lines.length - 1` (—Å—Ç—Ä–æ–∫–∞ 439)
- `contentPreview = content.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 440)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 441)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `markdownCaptures = parseMarkdown(content) || []` (—Å—Ç—Ä–æ–∫–∞ 471)
- `firstHeaderLine = markdownCaptures[0].node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 483)
- `preHeaderLines = lines.slice(0, firstHeaderLine)` (—Å—Ç—Ä–æ–∫–∞ 485)
- `preHeaderBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 486)
- `nameCapture = markdownCaptures[i]` (—Å—Ç—Ä–æ–∫–∞ 500)
- `definitionCapture = markdownCaptures[i + 1]` (—Å—Ç—Ä–æ–∫–∞ 503)
- `startLine = definitionCapture.node.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 507)
- `endLine = definitionCapture.node.endPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 508)
- `sectionLines = lines.slice(startLine - 1, endLine)` (—Å—Ç—Ä–æ–∫–∞ 509)
- `headerMatch = nameCapture.name.match(/\.h(\d)$/)` (—Å—Ç—Ä–æ–∫–∞ 512)
- `headerLevel = headerMatch ? parseInt(headerMatch[1]) : 1` (—Å—Ç—Ä–æ–∫–∞ 513)
- `headerText = nameCapture.node.text` (—Å—Ç—Ä–æ–∫–∞ 514)
- `sectionBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 516)
- `remainingLines = lines.slice(lastProcessedLine)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `remainingBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ index.ts

#### üìÑ file-watcher.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePattern = new vscode.RelativePattern(` (—Å—Ç—Ä–æ–∫–∞ 93)
- `eventsToProcess = new Map(this.accumulatedEvents)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `filePathsInBatch = Array.from(eventsToProcess.keys())` (—Å—Ç—Ä–æ–∫–∞ 167)
- `allPathsToClearFromDB = new Set<string>(pathsToExplicitlyDelete)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 208)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `filesToProcessConcurrently = [...filesToUpsertDetails]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `chunkToProcess = filesToProcessConcurrently.slice(i, i + this.FILE_PROCESSING_CONCURRENCY_LIMIT)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `chunkProcessingPromises = chunkToProcess.map(async (fileDetail) => {` (—Å—Ç—Ä–æ–∫–∞ 254)
- `result = await this.processFile(fileDetail.path)` (—Å—Ç—Ä–æ–∫–∞ 261)
- `error = e as Error` (—Å—Ç—Ä–æ–∫–∞ 264)
- `settledChunkResults = await Promise.allSettled(chunkProcessingPromises)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `error = settledResult.reason as Error` (—Å—Ç—Ä–æ–∫–∞ 308)
- `rejectedPath = (settledResult.reason as any)?.path || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 309)
- `batch = pointsForBatchUpsert.slice(i, i + BATCH_SEGMENT_THRESHOLD)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `err = error as Error` (—Å—Ç—Ä–æ–∫–∞ 382)
- `totalFilesInBatch = eventsToProcess.size` (—Å—Ç—Ä–æ–∫–∞ 409)
- `relativeFilePath = generateRelativeFilePath(filePath, this.workspacePath)` (—Å—Ç—Ä–æ–∫–∞ 504)
- `fileStat = await vscode.workspace.fs.stat(vscode.Uri.file(filePath))` (—Å—Ç—Ä–æ–∫–∞ 517)
- `fileContent = await vscode.workspace.fs.readFile(vscode.Uri.file(filePath))` (—Å—Ç—Ä–æ–∫–∞ 527)
- `content = fileContent.toString()` (—Å—Ç—Ä–æ–∫–∞ 528)
- `newHash = createHash("sha256").update(content).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `blocks = await codeParser.parseFile(filePath, { content, fileHash: newHash })` (—Å—Ç—Ä–æ–∫–∞ 543)
- `texts = blocks.map((block) => block.content)` (—Å—Ç—Ä–æ–∫–∞ 548)
- `normalizedAbsolutePath = generateNormalizedAbsolutePath(block.file_path, this.workspacePath)` (—Å—Ç—Ä–æ–∫–∞ 552)
- `stableName = `${normalizedAbsolutePath}:${block.start_line}`` (—Å—Ç—Ä–æ–∫–∞ 553)
- `pointId = uuidv5(stableName, QDRANT_CODE_BLOCK_NAMESPACE)` (—Å—Ç—Ä–æ–∫–∞ 554)

### üìÇ src/services/code-index/interfaces

#### üìÑ vector-store.ts

#### üìÑ manager.ts

#### üìÑ index.ts

#### üìÑ file-processor.ts

#### üìÑ embedder.ts

#### üìÑ config.ts

#### üìÑ cache.ts

### üìÇ src/services/code-index/embedders

#### üìÑ openai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = this.options.openAiNativeApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 42)
- `queryPrefix = getModelQueryPrefix("openai", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 46)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 52)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `usage = { promptTokens: 0, totalTokens: 0 }` (—Å—Ç—Ä–æ–∫–∞ 70)
- `remainingTexts = [...processedTexts]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `text = remainingTexts[i]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `itemTokens = Math.ceil(text.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `batchResult = await this._embedBatchWithRetries(currentBatch, modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `response = await this.embeddingsClient.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 131)
- `hasMoreAttempts = attempts < MAX_RETRIES - 1` (—Å—Ç—Ä–æ–∫–∞ 144)
- `httpError = error as HttpError` (—Å—Ç—Ä–æ–∫–∞ 147)
- `delayMs = INITIAL_DELAY_MS * Math.pow(2, attempts)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `response = await this.embeddingsClient.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 188)

#### üìÑ openai-compatible.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface EmbeddingItem` (—Å—Ç—Ä–æ–∫–∞ 16)

- `interface OpenAIEmbeddingResponse` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 86)
- `queryPrefix = getModelQueryPrefix("openai-compatible", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 90)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 96)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `usage = { promptTokens: 0, totalTokens: 0 }` (—Å—Ç—Ä–æ–∫–∞ 114)
- `remainingTexts = [...processedTexts]` (—Å—Ç—Ä–æ–∫–∞ 115)
- `text = remainingTexts[i]` (—Å—Ç—Ä–æ–∫–∞ 123)
- `itemTokens = Math.ceil(text.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `batchResult = await this._embedBatchWithRetries(currentBatch, modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `patterns = [` (—Å—Ç—Ä–æ–∫–∞ 171)
- `response = await fetch(url, {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `status = response?.status || 0` (—Å—Ç—Ä–æ–∫–∞ 215)
- `error = new Error(`HTTP ${status}: ${errorText}`) as HttpError` (—Å—Ç—Ä–æ–∫–∞ 227)
- `error = new Error(`Failed to parse response JSON`) as HttpError` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isFullUrl = this.isFullUrl` (—Å—Ç—Ä–æ–∫–∞ 252)
- `processedEmbeddings = response.data.map((item: EmbeddingItem) => {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `buffer = Buffer.from(item.embedding, "base64")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `float32Array = new Float32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 4)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `embeddings = response.data.map((item) => item.embedding as number[])` (—Å—Ç—Ä–æ–∫–∞ 295)
- `hasMoreAttempts = attempts < MAX_RETRIES - 1` (—Å—Ç—Ä–æ–∫–∞ 313)
- `httpError = error as HttpError` (—Å—Ç—Ä–æ–∫–∞ 316)
- `baseDelay = INITIAL_DELAY_MS * Math.pow(2, attempts)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `globalDelay = await this.getGlobalRateLimitDelay()` (—Å—Ç—Ä–æ–∫–∞ 324)
- `delayMs = Math.max(baseDelay, globalDelay)` (—Å—Ç—Ä–æ–∫–∞ 325)
- `testTexts = ["test"]` (—Å—Ç—Ä–æ–∫–∞ 358)
- `modelToUse = this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 359)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 409)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 411)
- `waitTime = state.rateLimitResetTime - Date.now()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 440)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 442)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 443)
- `baseDelay = 5000 // 5 seconds base` (—Å—Ç—Ä–æ–∫–∞ 456)
- `maxDelay = 300000 // 5 minutes max` (—Å—Ç—Ä–æ–∫–∞ 457)
- `exponentialDelay = Math.min(baseDelay * Math.pow(2, state.consecutiveRateLimitErrors - 1), maxDelay)` (—Å—Ç—Ä–æ–∫–∞ 458)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 474)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 476)

#### üìÑ ollama.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `OLLAMA_EMBEDDING_TIMEOUT_MS = 60000 // 60 seconds for embedding requests` (—Å—Ç—Ä–æ–∫–∞ 11)
- `OLLAMA_VALIDATION_TIMEOUT_MS = 30000 // 30 seconds for validation requests` (—Å—Ç—Ä–æ–∫–∞ 12)
- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 39)
- `url = `${this.baseUrl}/api/embed` // Endpoint as specified` (—Å—Ç—Ä–æ–∫–∞ 40)
- `queryPrefix = getModelQueryPrefix("ollama", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 44)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 50)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `timeoutId = setTimeout(() => controller.abort(), OLLAMA_EMBEDDING_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `response = await fetch(url, {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `embeddings = data.embeddings` (—Å—Ç—Ä–æ–∫–∞ 107)
- `modelsUrl = `${this.baseUrl}/api/tags`` (—Å—Ç—Ä–æ–∫–∞ 148)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `timeoutId = setTimeout(() => controller.abort(), OLLAMA_VALIDATION_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `modelsResponse = await fetch(modelsUrl, {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `modelsData = await modelsResponse.json()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `models = modelsData.models || []` (—Å—Ç—Ä–æ–∫–∞ 181)
- `modelExists = models.some((m: any) => {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `modelName = m.name || ""` (—Å—Ç—Ä–æ–∫–∞ 185)
- `availableModels = models.map((m: any) => m.name).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `testUrl = `${this.baseUrl}/api/embed`` (—Å—Ç—Ä–æ–∫–∞ 205)
- `testController = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `testTimeoutId = setTimeout(() => testController.abort(), OLLAMA_VALIDATION_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `testResponse = await fetch(testUrl, {` (—Å—Ç—Ä–æ–∫–∞ 211)

#### üìÑ mistral.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.modelId` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ gemini.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.modelId` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ src/services/code-index/constants

#### üìÑ index.ts

### üìÇ src/services/code-index/__tests__

#### üìÑ service-factory.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAiEmbedder = OpenAiEmbedder as MockedClass<typeof OpenAiEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 31)
- `MockedCodeIndexOllamaEmbedder = CodeIndexOllamaEmbedder as MockedClass<typeof CodeIndexOllamaEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 32)
- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 33)
- `MockedGeminiEmbedder = GeminiEmbedder as MockedClass<typeof GeminiEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 34)
- `MockedQdrantVectorStore = QdrantVectorStore as MockedClass<typeof QdrantVectorStore>` (—Å—Ç—Ä–æ–∫–∞ 35)
- `mockGetDefaultModelId = getDefaultModelId as MockedFunction<typeof getDefaultModelId>` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockGetModelDimension = getModelDimension as MockedFunction<typeof getModelDimension>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `testModelId = "nomic-embed-text:latest"` (—Å—Ç—Ä–æ–∫–∞ 84)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 225)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 270)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 305)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 331)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 350)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 351)
- `testModelId = "nomic-embed-text:latest"` (—Å—Ç—Ä–æ–∫–∞ 375)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 376)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 400)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 425)
- `manualDimension = 1024` (—Å—Ç—Ä–æ–∫–∞ 426)
- `modelDimension = 768` (—Å—Ç—Ä–æ–∫–∞ 427)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 428)
- `testModelId = "unknown-model"` (—Å—Ç—Ä–æ–∫–∞ 457)
- `manualDimension = 1024` (—Å—Ç—Ä–æ–∫–∞ 458)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 459)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 488)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 489)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 517)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 518)
- `testModelId = "unknown-model"` (—Å—Ç—Ä–æ–∫–∞ 540)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 541)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 562)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 586)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 635)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 650)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 675)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 688)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 697)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 712)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 713)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 724)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 736)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 746)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 759)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 760)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 769)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 780)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 781)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 790)
- `networkError = new Error("Network error")` (—Å—Ç—Ä–æ–∫–∞ 799)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 803)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 804)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 816)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 828)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 835)

#### üìÑ manager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedCodeIndexServiceFactory = CodeIndexServiceFactory as MockedClass<typeof CodeIndexServiceFactory>` (—Å—Ç—Ä–æ–∫–∞ 42)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mockCacheManager = {` (—Å—Ç—Ä–æ–∫–∞ 105)
- `mockServiceFactoryInstance = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockCacheManager = {` (—Å—Ç—Ä–æ–∫–∞ 172)
- `mockServiceFactoryInstance = {` (—Å—Ç—Ä–æ–∫–∞ 190)
- `recreateServicesSpy = vi.spyOn(manager as any, "_recreateServices")` (—Å—Ç—Ä–æ–∫–∞ 221)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 281)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 307)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 326)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 349)

#### üìÑ config-manager.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `setupSecretMocks(secrets: R)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedGetDefaultModelId = vi.mocked(getDefaultModelId)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockedGetModelDimension = vi.mocked(getModelDimension)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockedGetModelScoreThreshold = vi.mocked(getModelScoreThreshold)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `setupSecretMocks = (secrets: Record<string, string>) => {` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 101)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 117)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 240)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 321)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 348)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 432)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 459)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 486)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 511)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 550)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 581)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 664)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 705)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 746)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 769)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 793)
- `newManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 949)
- `anotherManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 962)
- `newManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 991)
- `minManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `maxManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1046)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1068)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1093)
- `mockPrevConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1116)
- `requiresRestart = configManager.doesConfigChangeRequireRestart(mockPrevConfig)` (—Å—Ç—Ä–æ–∫–∞ 1127)
- `config = configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 1290)
- `secondResult = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `newConfigManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1360)
- `result = await newConfigManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1363)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1387)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1498)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1521)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1541)
- `mockConfigValues = {` (—Å—Ç—Ä–æ–∫–∞ 1555)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1571)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1607)
- `config = configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 1625)

#### üìÑ cache-manager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `expectedHash = createHash("sha256").update(mockWorkspacePath).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockCache = { "file1.ts": "hash1", "file2.ts": "hash2" }` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockBuffer = Buffer.from(JSON.stringify(mockCache))` (—Å—Ç—Ä–æ–∫–∞ 83)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 113)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 114)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 124)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 125)
- `hashes = cacheManager.getAllHashes()` (—Å—Ç—Ä–æ–∫–∞ 128)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 141)
- `savedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `consoleErrorSpy = vitest.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 153)
- `consoleErrorSpy = vitest.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 182)

### üìÇ src/services/checkpoints/__tests__

#### üìÑ excludes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testWorkspacePath = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `gitAttributesContent = `*.psd filter=lfs diff=lfs merge=lfs -text` (—Å—Ç—Ä–æ–∫–∞ 33)
- `expectedLfsPatterns = ["*.psd", "*.zip", "*.mp4"]` (—Å—Ç—Ä–æ–∫–∞ 42)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `gitAttributesContent = `*.md text` (—Å—Ç—Ä–æ–∫–∞ 67)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `gitAttributesLines = gitAttributesContent.split("\n").map((line) => line.split(" ")[0].trim())` (—Å—Ç—Ä–æ–∫–∞ 84)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ ShadowCheckpointService.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tmpDir = path.join(os.tmpdir(), "CheckpointService")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `initWorkspaceRepo = async ({` (—Å—Ç—Ä–æ–∫–∞ 17)
- `git = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `testFile = path.join(workspaceDir, testFileName)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `taskId = "test-task"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `shadowDir = path.join(tmpDir, `${prefix}-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `workspaceDir = path.join(tmpDir, `workspace-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `repo = await initWorkspaceRepo({ workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commit1 = await service.saveCheckpoint("Ahoy, world!")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `commit2 = await service.saveCheckpoint("Goodbye, world!")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `diff1 = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 89)
- `diff2 = await service.getDiff({ from: service.baseHash, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 96)
- `diff12 = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 103)
- `newFile = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `commit = await service.saveCheckpoint("Add new file")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `changes = await service.getDiff({ to: commit!.commit })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `change = changes.find((c) => c.paths.relative === "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `fileToDelete = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `commit1 = await service.saveCheckpoint("Add file")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `commit2 = await service.saveCheckpoint("Delete file")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `changes = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `change = changes.find((c) => c.paths.relative === "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `details1 = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 147)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `details2 = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 154)
- `unstagedFile = path.join(service.workspaceDir, "unstaged.txt")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `stagedFile = path.join(service.workspaceDir, "staged.txt")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `mixedFile = path.join(service.workspaceDir, "mixed.txt")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = await workspaceGit.commit("Add initial files")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `commit = await service.saveCheckpoint("Test checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `status = await workspaceGit.status()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `stagedDiff = await workspaceGit.diff(["--cached", "mixed.txt"])` (—Å—Ç—Ä–æ–∫–∞ 217)
- `unstagedDiff = await workspaceGit.diff(["mixed.txt"])` (—Å—Ç—Ä–æ–∫–∞ 222)
- `commit0 = await service.saveCheckpoint("Zeroth checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 228)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 232)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `untrackedFile = path.join(service.workspaceDir, "untracked.txt")` (—Å—Ç—Ä–æ–∫–∞ 241)
- `commit1 = await service.saveCheckpoint("Checkpoint with untracked file")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `details = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 249)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 255)
- `untrackedFile = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 272)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `ignoredFile = path.join(service.workspaceDir, "ignored.log")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `commit = await service.saveCheckpoint("Ignored file checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `commit2 = await service.saveCheckpoint("Ignored file modified checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 307)
- `gitattributesPath = path.join(service.workspaceDir, ".gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `excludesPath = path.join(service.checkpointsDir, ".git", "info", "exclude")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `commit0 = await service.saveCheckpoint("Add gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 325)
- `lfsFile = path.join(service.workspaceDir, "foo.lfs")` (—Å—Ç—Ä–æ–∫–∞ 329)
- `commit = await service.saveCheckpoint("LFS file checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `commit2 = await service.saveCheckpoint("LFS file modified checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `shadowDir = path.join(tmpDir, `${prefix}2-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 346)
- `workspaceDir = path.join(tmpDir, `workspace2-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 347)
- `newTestFile = path.join(workspaceDir, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `newService = await klass.create({ taskId, shadowDir, workspaceDir, log: () => {} })` (—Å—Ç—Ä–æ–∫–∞ 355)
- `gitDir = path.join(newService.checkpointsDir, ".git")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `commit1 = await newService.saveCheckpoint("Ahoy, world!")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `shadowDir = path.join(tmpDir, `${prefix}-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 384)
- `workspaceDir = path.join(tmpDir, `workspace-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `mainGit = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `nestedRepoPath = path.join(workspaceDir, "nested-project")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `nestedGit = simpleGit(nestedRepoPath)` (—Å—Ç—Ä–æ–∫–∞ 397)
- `nestedFile = path.join(nestedRepoPath, "nested-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 403)
- `mainFile = path.join(workspaceDir, "main-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `nestedGitDir = path.join(nestedRepoPath, ".git")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `headFile = path.join(nestedGitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 416)
- `searchPattern = args[4]` (—Å—Ç—Ä–æ–∫–∞ 421)
- `service = new klass(taskId, shadowDir, workspaceDir, () => {})` (—Å—Ç—Ä–æ–∫–∞ 436)
- `shadowDir = path.join(tmpDir, `${prefix}-no-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `workspaceDir = path.join(tmpDir, `workspace-no-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 452)
- `mainGit = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `mainFile = path.join(workspaceDir, "main-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 462)
- `service = new klass(taskId, shadowDir, workspaceDir, () => {})` (—Å—Ç—Ä–æ–∫–∞ 472)
- `shadowDir = path.join(tmpDir, `${prefix}3-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `workspaceDir = path.join(tmpDir, `workspace3-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 488)
- `newTestFile = path.join(workspaceDir, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 491)
- `emitSpy = vitest.spyOn(EventEmitter.prototype, "emit")` (—Å—Ç—Ä–æ–∫–∞ 495)
- `newService = await klass.create({ taskId, shadowDir, workspaceDir, log: () => {} })` (—Å—Ç—Ä–æ–∫–∞ 498)
- `call = emitSpy.mock.calls[i]` (—Å—Ç—Ä–æ–∫–∞ 505)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 538)
- `result = await service.saveCheckpoint("Test checkpoint event")` (—Å—Ç—Ä–æ–∫–∞ 542)
- `eventData = checkpointHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 546)
- `commit = await service.saveCheckpoint("Checkpoint for restore test")` (—Å—Ç—Ä–æ–∫–∞ 556)
- `restoreHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 563)
- `eventData = restoreHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 571)
- `errorHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 581)
- `invalidCommitHash = "invalid-commit-hash"` (—Å—Ç—Ä–æ–∫–∞ 585)
- `eventData = errorHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 596)
- `checkpointHandler1 = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 602)
- `checkpointHandler2 = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 603)
- `result = await service.saveCheckpoint("Testing multiple listeners")` (—Å—Ç—Ä–æ–∫–∞ 609)
- `eventData1 = checkpointHandler1.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 615)
- `eventData2 = checkpointHandler2.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 616)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 624)
- `result = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 652)
- `result = await service.saveCheckpoint("No changes checkpoint", { allowEmpty: false })` (—Å—Ç—Ä–æ–∫–∞ 660)
- `result = await service.saveCheckpoint("Default behavior checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 666)
- `resultWithAllowEmpty = await service.saveCheckpoint("With changes and allowEmpty", {` (—Å—Ç—Ä–æ–∫–∞ 674)
- `resultWithoutAllowEmpty = await service.saveCheckpoint("With changes, no allowEmpty")` (—Å—Ç—Ä–æ–∫–∞ 681)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 686)
- `result = await service.saveCheckpoint("Empty checkpoint event test", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 689)
- `eventData = checkpointHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 692)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 709)
- `result = await service.saveCheckpoint("No changes, no event", { allowEmpty: false })` (—Å—Ç—Ä–æ–∫–∞ 712)
- `commit1 = await service.saveCheckpoint("First empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 719)
- `commit2 = await service.saveCheckpoint("Second empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 722)
- `testService = await klass.create({` (—Å—Ç—Ä–æ–∫–∞ 731)
- `saveCheckpointLogs = logMessages.filter(` (—Å—Ç—Ä–æ–∫–∞ 741)
- `defaultLogs = logMessages.filter(` (—Å—Ç—Ä–æ–∫–∞ 748)
- `regularCommit = await service.saveCheckpoint("Regular checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 757)
- `emptyCommit = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 761)
- `anotherCommit = await service.saveCheckpoint("Another regular checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 766)
- `beforeEmpty = await service.saveCheckpoint("Before empty")` (—Å—Ç—Ä–æ–∫–∞ 784)
- `emptyCommit = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 788)
- `diff = await service.getDiff({` (—Å—Ç—Ä–æ–∫–∞ 792)
- `initialState = await service.saveCheckpoint("Check initial state")` (—Å—Ç—Ä–æ–∫–∞ 806)
- `newTaskCheckpoint = await service.saveCheckpoint("New task checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 810)
- `workCommit = await service.saveCheckpoint("Work in new task")` (—Å—Ç—Ä–æ–∫–∞ 815)

### üìÇ src/services/browser/__tests__

#### üìÑ UrlContentFetcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `$ = vi.fn((selector) => ({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `stats = await vi.mocked(PCR).mock.results[0].value` (—Å—Ç—Ä–æ–∫–∞ 135)
- `initialCallCount = vi.mocked(PCR).mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `timeoutError = new Error("Navigation timeout of 30000 ms exceeded")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `networkError = new Error("net::ERR_CONNECTION_REFUSED")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `timeoutError = new Error("TimeoutError: Navigation timeout")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `otherError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `newFetcher = new UrlContentFetcher(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `errorWithoutMessage = { code: "UNKNOWN_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 238)
- `errorWithMessage = { message: "Custom error", code: "CUSTOM_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 249)
- `errorWithNetworkMessage = { message: "net::ERR_CONNECTION_REFUSED", code: "NETWORK_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 259)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `stringError = "Simple string error"` (—Å—Ç—Ä–æ–∫–∞ 270)

#### üìÑ BrowserSession.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 186)
- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ src/integrations/workspace/__tests__

#### üìÑ WorkspaceTracker.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `registeredTabChangeCallback()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `resolveListFiles(value: [)` (—Å—Ç—Ä–æ–∫–∞ 257)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnDidCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockOnDidDelete = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockDispose = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `relativePath = require("path").relative(cwd, path)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `mockFiles = [["/test/workspace/file1.ts", "/test/workspace/file2.ts"], false]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `lastCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 154)
- `files = Array.from({ length: 1001 }, (_, i) => `/test/workspace/file${i}.ts`)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `expectedFiles = Array.from({ length: 1000 }, (_, i) => `file${i}.ts`).sort()` (—Å—Ç—Ä–æ–∫–∞ 167)
- `calls = (mockProvider.postMessageToWebview as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 168)
- `lastCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `finalCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 191)
- `mockFiles = [["/test/new-workspace/file1.ts"], false]` (—Å—Ç—Ä–æ–∫–∞ 219)
- `listFilesPromise = new Promise<[string[], boolean]>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 258)
- `initPromise = workspaceTracker.initializeFilePaths()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `actualFilePaths = (mockProvider.postMessageToWebview as Mock).mock.calls[0][0].filePaths` (—Å—Ç—Ä–æ–∫–∞ 288)

### üìÇ src/integrations/terminal/__tests__

#### üìÑ setupTerminalTests.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isPowerShellCoreAvailable()` - Check if PowerShell Core (pwsh) is available on the system (—Å—Ç—Ä–æ–∫–∞ 7)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface Global` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasPwsh = isPowerShellCoreAvailable()` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ TerminalRegistry.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PAGER = process.platform === "win32" ? "" : "cat"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `originalDelay = Terminal.getCommandDelay()` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ TerminalProcessInterpretExitCode.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = TerminalProcess.interpretExitCode(undefined)` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = TerminalProcess.interpretExitCode(130)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `resultTerm = TerminalProcess.interpretExitCode(143)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `resultSegv = TerminalProcess.interpretExitCode(139)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `coreDumpSignals = [3, 4, 6, 7, 8, 11]` (—Å—Ç—Ä–æ–∫–∞ 60)
- `exitCode = 128 + signal` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `nonCoreDumpResult = TerminalProcess.interpretExitCode(128 + 1) // SIGHUP` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = TerminalProcess.interpretExitCode(128 + 99)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = TerminalProcess.interpretExitCode(0)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = TerminalProcess.interpretExitCode(error.status)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = TerminalProcess.interpretExitCode(error.status)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `sigtermExitCode = 128 + 15` (—Å—Ç—Ä–æ–∫–∞ 128)
- `sigtermResult = TerminalProcess.interpretExitCode(sigtermExitCode)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `sigsegvExitCode = 128 + 11` (—Å—Ç—Ä–æ–∫–∞ 135)
- `sigsegvResult = TerminalProcess.interpretExitCode(sigsegvExitCode)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `sigintExitCode = 128 + 2` (—Å—Ç—Ä–æ–∫–∞ 142)
- `sigintResult = TerminalProcess.interpretExitCode(sigintExitCode)` (—Å—Ç—Ä–æ–∫–∞ 143)

#### üìÑ TerminalProcessExec.pwsh.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onLine()` (—Å—Ç—Ä–æ–∫–∞ 169)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasPwsh = isPowerShellCoreAvailable()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `describePlatform = hasPwsh ? describe : describe.skip` (—Å—Ç—Ä–æ–∫–∞ 14)
- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "/test/path")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 151)
- `onLine = () => {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 197)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 210)
- `expectedOutput = "a\nb\n"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `controlSequences = "\x1B[31mRed Text\x1B[0m\n"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 298)
- `command = `foreach ($i in 1..${lines}) { Write-Output "${TEST_TEXT.LARGE_PREFIX}$i" }`` (—Å—Ç—Ä–æ–∫–∞ 301)
- `skipVerification = true` (—Å—Ç—Ä–æ–∫–∞ 308)

#### üìÑ TerminalProcessExec.common.ts

#### üìÑ TerminalProcessExec.cmd.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onLine()` (—Å—Ç—Ä–æ–∫–∞ 168)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isWindows = process.platform === "win32"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `describePlatform = isWindows ? describe : describe.skip` (—Å—Ç—Ä–æ–∫–∞ 14)
- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "C:\\test\\path")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 150)
- `onLine = () => {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 209)
- `expectedOutput = "a\r\nb\r\n"` (—Å—Ç—Ä–æ–∫–∞ 259)
- `expectedOutput = "Red Text\r\n"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 298)
- `command = `cmd /c "for /L %i in (1,1,${lines}) do @echo ${TEST_TEXT.LARGE_PREFIX}%i"`` (—Å—Ç—Ä–æ–∫–∞ 299)

#### üìÑ TerminalProcessExec.bash.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `stderrRedirect = process.platform === "win32" ? " 2>nul" : " 2>/dev/null"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `shell = process.platform === "win32" ? "cmd" : undefined` (—Å—Ç—Ä–æ–∫–∞ 67)
- `signalNum = signals[error.signal]` (—Å—Ç—Ä–æ–∫–∞ 86)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "/test/path")` (—Å—Ç—Ä–æ–∫–∞ 164)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 211)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 257)
- `command = process.platform === "win32" ? "echo a" : "echo a"` (—Å—Ç—Ä–æ–∫–∞ 298)
- `expectedOutput = process.platform === "win32" ? "a\r\n" : "a\n"` (—Å—Ç—Ä–æ–∫–∞ 299)
- `command = process.platform === "win32" ? "echo|set /p=a" : "/bin/echo -n a"` (—Å—Ç—Ä–æ–∫–∞ 307)
- `expectedOutput = "a"` (—Å—Ç—Ä–æ–∫–∞ 308)
- `command = process.platform === "win32" ? "echo a & echo b" : 'printf "a\\nb\\n"'` (—Å—Ç—Ä–æ–∫–∞ 315)
- `expectedOutput = process.platform === "win32" ? "a\r\nb\r\n" : "a\nb\n"` (—Å—Ç—Ä–æ–∫–∞ 316)
- `command = process.platform === "win32" ? "cmd /c exit 0" : "exit 0"` (—Å—Ç—Ä–æ–∫–∞ 323)
- `command = process.platform === "win32" ? "cmd /c exit 1" : "exit 1"` (—Å—Ç—Ä–æ–∫–∞ 330)
- `command = process.platform === "win32" ? "cmd /c exit 2" : "exit 2"` (—Å—Ç—Ä–æ–∫–∞ 337)
- `expectedExitCode = process.platform === "win32" ? 1 : 127 // Windows uses 1, bash uses 127` (—Å—Ç—Ä–æ–∫–∞ 345)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 365)
- `lineSeparator = process.platform === "win32" ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 384)
- `outputLines = capturedOutput.split(lineSeparator)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `TEST_LINES = 1_000_000` (—Å—Ç—Ä–æ–∫–∞ 430)
- `expectedOutput = Array(TEST_LINES).fill("A".repeat(76)).join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 431)
- `lines = capturedOutput.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 444)
- `sampleIndices = [` (—Å—Ç—Ä–æ–∫–∞ 458)

#### üìÑ TerminalProcess.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runPromise = terminalProcess.run("test command")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `consoleWarnSpy = vi.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 89)
- `noShellTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 92)
- `noShellTerminalInfo = new Terminal(2, noShellTerminal, "./")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `noShellProcess = new TerminalProcess(noShellTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `eventPromises = Promise.all([` (—Å—Ç—Ä–æ–∫–∞ 112)
- `completePromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `runPromise = terminalProcess.run("npm run build")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `continueSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 172)
- `unretrieved = terminalProcess.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = TerminalProcess.interpretExitCode(undefined)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = TerminalProcess.interpretExitCode(0)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `result2 = TerminalProcess.interpretExitCode(1)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `result3 = TerminalProcess.interpretExitCode(128)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = TerminalProcess.interpretExitCode(143)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result2 = TerminalProcess.interpretExitCode(139)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = TerminalProcess.interpretExitCode(255)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `process = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `promise = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 245)
- `merged = mergePromise(process, promise)` (—Å—Ç—Ä–æ–∫–∞ 247)

#### üìÑ ExecaTerminalProcess.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPid = 12345` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockKill = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `execa = vitest.fn((options: any) => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `calledOptions = execaMock.mock.calls[0][0] as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `calledOptions = execaMock.mock.calls[0][0] as any` (—Å—Ç—Ä–æ–∫–∞ 90)
- `spy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `spy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ ExecaTerminal.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = new ExecaTerminal(1, "/tmp")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `subprocess = terminal.runCommand("ls -al", callbacks)` (—Å—Ç—Ä–æ–∫–∞ 23)

### üìÇ src/integrations/editor/__tests__

#### üìÑ detect-omission.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `generateLongContent(commentLine: s, length: n)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalContent = `function example() {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `x = 1` (—Å—Ç—Ä–æ–∫–∞ 6)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 7)
- `generateLongContent = (commentLine: string, length: number = 90) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 14)
- `newContent = `// Lines 1-50 remain unchanged` (—Å—Ç—Ä–æ–∫–∞ 18)
- `z = 3` (—Å—Ç—Ä–æ–∫–∞ 19)
- `predictedLineCount = 50` (—Å—Ç—Ä–æ–∫–∞ 20)
- `newContent = generateLongContent("// Adding new functionality")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 26)
- `originalWithComment = `// Content remains unchanged` (—Å—Ç—Ä–æ–∫–∞ 31)
- `newContent = generateLongContent("// Content remains unchanged")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 34)
- `newContent = generateLongContent(`const remains = 'some value'` (—Å—Ç—Ä–æ–∫–∞ 39)
- `unchanged = true` (—Å—Ç—Ä–æ–∫–∞ 40)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 41)
- `newContent = generateLongContent("// Previous content remains here\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 46)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 47)
- `newContent = generateLongContent("// Previous content remains here", 130)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 53)
- `newContent = generateLongContent("# Previous content remains here\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 58)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 59)
- `newContent = generateLongContent("# Previous content remains here", 130)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 65)
- `newContent = generateLongContent("/* Previous content remains the same */\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 70)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 71)
- `newContent = generateLongContent("/* Previous content remains the same */", 130)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 77)
- `newContent = generateLongContent("{/* Rest of the code remains the same */}\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 82)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 83)
- `newContent = generateLongContent("{/* Rest of the code remains the same */}", 130)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 89)
- `newContent = generateLongContent("<!-- Existing content unchanged -->\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 94)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 95)
- `newContent = generateLongContent("<!-- Existing content unchanged -->", 130)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 101)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 109)
- `newContent = generateLongContent("[Previous content from line 1-305 remains exactly the same]", 130)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 115)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 120)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 122)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 126)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 131)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 133)
- `z = 3` (—Å—Ç—Ä–æ–∫–∞ 135)
- `w = 4` (—Å—Ç—Ä–æ–∫–∞ 136)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 139)

#### üìÑ DiffViewProvider.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/mock/cwd"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockEditor = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `mockTabs = [` (—Å—Ç—Ä–æ–∫–∞ 279)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `result = await diffViewProvider.saveDirectly("test.ts", "new content", true, true, 2000)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 397)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 412)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 462)
- `result = await diffViewProvider.saveChanges(true, 3000)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 477)
- `result = await diffViewProvider.saveChanges(false, 2000)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 492)
- `result = await diffViewProvider.saveChanges()` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 507)
- `result = await diffViewProvider.saveChanges(true, 5000)` (—Å—Ç—Ä–æ–∫–∞ 513)

### üìÇ src/integrations/misc/__tests__

#### üìÑ read-lines.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFile = path.join(__dirname, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `content = Array.from({ length: 10 }, (_, i) => `Line ${i + 1}`).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `lines = await readLines(testFile, 2)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `expected = ["Line 1", "Line 2", "Line 3"].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `lines = await readLines(testFile, 3, 1)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `expected = ["Line 2", "Line 3", "Line 4"].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `lines = await readLines(testFile, 2, 2)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `expected = "Line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `lines = await readLines(testFile, 3, -1)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `linesWithNonIntegerStart = await readLines(testFile, 3, 1.5)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `linesWithNonIntegerEnd = await readLines(testFile, 3.5)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `lines = await readLines(testFile, 15, 8)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filepath = path.join(__dirname, filename)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `lines = await readLines(filepath, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `lines = await readLines(filepath, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `content = await readLines(testFile)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `lines = await readLines(filepath, 2)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lines = await readLines(filepath, 1)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `lines = await readLines(filepath, 3, 1)` (—Å—Ç—Ä–æ–∫–∞ 127)

#### üìÑ read-file-tool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePath = path.resolve("/test", "smallFile.txt")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 47)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `filePath = path.resolve("/test", "largeFile.txt")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 70)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `truncationMsg = `\n\n[File truncated: showing ${maxReadFileLine} of ${lineCount} total lines]`` (—Å—Ç—Ä–æ–∫–∞ 82)
- `fullResult = numberedContent + truncationMsg` (—Å—Ç—Ä–æ–∫–∞ 83)
- `filePath = path.resolve("/test", "largeFile.js")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 101)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `fileExt = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `isSourceCode = [` (—Å—Ç—Ä–æ–∫–∞ 109)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `fullResult = numberedContent + truncationMsg` (—Å—Ç—Ä–æ–∫–∞ 138)

#### üìÑ open-file.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nodePath = require("path")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `cwd = process.cwd()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `invalidPath = "test%ZZinvalid.txt" // Invalid percent encoding` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockDocument = { uri: { fsPath: invalidPath } }` (—Å—Ç—Ä–æ–∫–∞ 83)
- `encodedPath = "./%5Btest%5D/file.txt" // [test] encoded` (—Å—Ç—Ä–æ–∫–∞ 107)
- `decodedPath = "./[test]/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 108)
- `mockDocument = { uri: { fsPath: decodedPath } }` (—Å—Ç—Ä–æ–∫–∞ 109)
- `expectedPathSegment = process.platform === "win32" ? "[test]\\file.txt" : "[test]/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `pathWithSpecialChars = "./[brackets]/file with spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 134)
- `mockDocument = { uri: { fsPath: pathWithSpecialChars } }` (—Å—Ç—Ä–æ–∫–∞ 135)
- `normalPath = "./normal/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockDocument = { uri: { fsPath: normalPath } }` (—Å—Ç—Ä–æ–∫–∞ 156)
- `nonExistentPath = "./does/not/exist.txt"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `testPath = "./test.txt"` (—Å—Ç—Ä–æ–∫–∞ 188)
- `dirPath = "./components"` (—Å—Ç—Ä–æ–∫–∞ 200)
- `newFilePath = "./new/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 222)
- `content = "Hello, world!"` (—Å—Ç—Ä–æ–∫–∞ 223)
- `expectedPathSegment = process.platform === "win32" ? "new\\file.txt" : "new/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 232)

#### üìÑ line-counter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 68)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await countFileLines("test-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await countFileLines("empty-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 140)

#### üìÑ extract-text.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "line 1\nline 2\nline 3"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `expected = "1 | line 1\n2 | line 2\n3 | line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 14)
- `input = "line 1\nline 2\nline 3"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `expected = "10 | line 1\n11 | line 2\n12 | line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = "line 1\nline 2"` (—Å—Ç—Ä–æ–∫–∞ 35)
- `expected = " 99 | line 1\n100 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `input = "line 1\nline 2\n"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `expected = "1 | line 1\n2 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = "line 1\n\n\n\nline 2"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `expected = "1 | line 1\n2 | \n3 | \n4 | \n5 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `input = "line 1\nline 2\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `expected = "1 | line 1\n2 | line 2\n3 | \n4 | \n"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `input = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10\n\n"` (—Å—Ç—Ä–æ–∫–∞ 60)
- `input = "\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `expected = "10 | \n11 | \n12 | \n"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `input = "1 | line one\n2 | line two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 75)
- `input = "  1 | line one\n  2 | line two\n  3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `input = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 85)
- `input = "1 | line one\nline two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `input = "a | b\nc | d"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = "1 | line one\n2 | line two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 107)
- `input = "  1 | line one\n  2 | line two\n  3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 112)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 113)
- `input = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 118)
- `input = "a | b\nc | d"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `input = "1 | line one\r\n2 | line two\r\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 132)
- `expected = "line one\r\nline two\r\nline three"` (—Å—Ç—Ä–æ–∫–∞ 133)
- `input = "  1 | line one\n 10 | line two\n100 | line three"` (—Å—Ç—Ä–æ–∫–∞ 138)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `input = "| line one\n| line two\n| line three"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `input = "1 | line one\n| line two\n123 | line three"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `input = "text | more text\nx | y"` (—Å—Ç—Ä–æ–∫–∞ 157)
- `input = "|  line with extra spaces\n1 |  indented content"` (—Å—Ç—Ä–æ–∫–∞ 166)
- `expected = " line with extra spaces\n indented content"` (—Å—Ç—Ä–æ–∫–∞ 167)
- `input = "| line one\r\n| line two\r\n| line three"` (—Å—Ç—Ä–æ–∫–∞ 172)
- `expected = "line one\r\nline two\r\nline three"` (—Å—Ç—Ä–æ–∫–∞ 173)
- `input = "regular line\nanother line\nno pipes here"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `content = "line1\nline2\nline3"` (—Å—Ç—Ä–æ–∫–∞ 186)
- `content = "line1\nline2\nline3"` (—Å—Ç—Ä–æ–∫–∞ 191)
- `lines = Array.from({ length: 25 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `result = truncateOutput(content, 10)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `expectedLines = [` (—Å—Ç—Ä–æ–∫–∞ 207)
- `input = "abc\b\bxy"` (—Å—Ç—Ä–æ–∫–∞ 235)
- `expected = "axy"` (—Å—Ç—Ä–æ–∫–∞ 236)
- `input = "\b\babc"` (—Å—Ç—Ä–æ–∫–∞ 241)
- `expected = "abc"` (—Å—Ç—Ä–æ–∫–∞ 242)
- `input = "abc\b\n123\b\b"` (—Å—Ç—Ä–æ–∫–∞ 247)
- `expected = "ab\n1"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `input = "abcdef\b\b\b\bxy"` (—Å—Ç—Ä–æ–∫–∞ 253)
- `expected = "abxy"` (—Å—Ç—Ä–æ–∫–∞ 254)
- `input = "abc\b\b"` (—Å—Ç—Ä–æ–∫–∞ 259)
- `expected = "a"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `input = "abc\bx\byz\b\b123"` (—Å—Ç—Ä–æ–∫–∞ 265)
- `expected = "ab123"` (—Å—Ç—Ä–æ–∫–∞ 266)
- `input = "abc\b\bdef\b\b\bghi\b\b\b\bjkl"` (—Å—Ç—Ä–æ–∫–∞ 271)
- `expected = "jkl"` (—Å—Ç—Ä–æ–∫–∞ 272)
- `input = "abc\b\b\b\b\b\bdef"` (—Å—Ç—Ä–æ–∫–∞ 277)
- `expected = "def"` (—Å—Ç—Ä–æ–∫–∞ 278)
- `input = "Loading[\b\b\b\b\b\b\b\bProgress[\b\b\b\b\b\b\b\b\bStatus: \b\b\b\b\b\b\b\bDone!"` (—Å—Ç—Ä–æ–∫–∞ 283)
- `expected = "Done!"` (—Å—Ç—Ä–æ–∫–∞ 285)
- `input = "abcüòÄ\b\bdefüéâ\b\b\bghi"` (—Å—Ç—Ä–æ–∫–∞ 290)
- `expected = "abcdeghi"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = Array.from({ length: 15 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 298)
- `content = lines.join("\r\n")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `result = truncateOutput(content, 5)` (—Å—Ç—Ä–æ–∫–∞ 301)
- `resultLines = result.split(/\r?\n/)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `expectedLines = ["line1", "", "[...10 lines omitted...]", "", "line12", "line13", "line14", "line15"]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 312)
- `content = "a".repeat(100)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result = truncateOutput(content, undefined, 100)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `expectedStart = "a".repeat(20)` (—Å—Ç—Ä–æ–∫–∞ 332)
- `expectedEnd = "a".repeat(80)` (—Å—Ç—Ä–æ–∫–∞ 333)
- `expected = expectedStart + "\n[...900 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 334)
- `longLine = "a".repeat(500)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `content = `${longLine}\n${longLine}\n${longLine}`` (—Å—Ç—Ä–æ–∫–∞ 342)
- `result = truncateOutput(content, 10, 100)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `expectedStart = "a".repeat(20)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `expectedEnd = "a".repeat(80)` (—Å—Ç—Ä–æ–∫–∞ 349)
- `expected = expectedStart + "\n[...1402 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 351)
- `lines = Array.from({ length: 25 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `result = truncateOutput(content, 10, 10000)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `expectedLines = [` (—Å—Ç—Ä–æ–∫–∞ 365)
- `content = "exactly100chars".repeat(6) + "1234" // exactly 100 chars` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = truncateOutput(content, undefined, 100)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 390)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 391)
- `expected = "aa\n[...990 characters omitted...]\n" + "a".repeat(8)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `content = "Hello world! This is a test with mixed content including numbers 123 and symbols @#$%"` (—Å—Ç—Ä–æ–∫–∞ 399)
- `result = truncateOutput(content, undefined, 50)` (—Å—Ç—Ä–æ–∫–∞ 400)
- `expectedStart = content.slice(0, 10) // "Hello worl"` (—Å—Ç—Ä–æ–∫–∞ 403)
- `expectedEnd = content.slice(-40) // last 40 chars` (—Å—Ç—Ä–æ–∫–∞ 404)
- `omittedChars = content.length - 50` (—Å—Ç—Ä–æ–∫–∞ 405)
- `expected = expectedStart + `\n[...${omittedChars} characters omitted...]\n` + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 406)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 413)
- `result = truncateOutput(content, undefined, 1)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `expected = "\n[...25 characters omitted...]\nz"` (—Å—Ç—Ä–æ–∫–∞ 419)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 424)
- `result = truncateOutput(content, undefined, 2)` (—Å—Ç—Ä–æ–∫–∞ 425)
- `expected = "\n[...24 characters omitted...]\nyz"` (—Å—Ç—Ä–æ–∫–∞ 430)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 435)
- `result = truncateOutput(content, undefined, 5)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `expected = "a\n[...21 characters omitted...]\nwxyz"` (—Å—Ç—Ä–æ–∫–∞ 441)
- `content = "üöÄüéâüî•üíªüåüüé®üéØüé™üé≠üé¨" // 10 emojis, each is multi-byte` (—Å—Ç—Ä–æ–∫–∞ 446)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `expected = "üöÄ\n[...10 characters omitted...]\nüéØüé™üé≠üé¨"` (—Å—Ç—Ä–æ–∫–∞ 453)
- `content = "line1\nline2\nline3\nline4\nline5"` (—Å—Ç—Ä–æ–∫–∞ 458)
- `result = truncateOutput(content, undefined, 15)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `expected = "lin\n[...14 characters omitted...]\n\nline4\nline5"` (—Å—Ç—Ä–æ–∫–∞ 465)
- `content = "short"` (—Å—Ç—Ä–æ–∫–∞ 471)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 472)
- `content = "a".repeat(100)` (—Å—Ç—Ä–æ–∫–∞ 479)
- `result = truncateOutput(content, undefined, 3)` (—Å—Ç—Ä–æ–∫–∞ 480)
- `expected = "\n[...97 characters omitted...]\naaa"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `result = truncateOutput(content, 999999, 50)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `expectedStart = "a".repeat(10) // 20% of 50` (—Å—Ç—Ä–æ–∫–∞ 493)
- `expectedEnd = "a".repeat(40) // 80% of 50` (—Å—Ç—Ä–æ–∫–∞ 494)
- `expected = expectedStart + "\n[...950 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 495)
- `input = "longerline\nlongerline\nlongerline\nlongerline\nlongerline\nlongerline\n"` (—Å—Ç—Ä–æ–∫–∞ 510)
- `expected = "longerline\n<previous line repeated 5 additional times>\n"` (—Å—Ç—Ä–æ–∫–∞ 511)
- `input = "y\ny\ny\ny\ny\n"` (—Å—Ç—Ä–æ–∫–∞ 516)
- `input = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 523)
- `input = "Progress: [===>---------] 30%\rProgress: [======>------] 60%\rProgress: [==========>] 100%"` (—Å—Ç—Ä–æ–∫–∞ 528)
- `expected = "Progress: [==========>] 100%%"` (—Å—Ç—Ä–æ–∫–∞ 529)
- `input = "Line 1\rUpdated Line 1\nLine 2\rUpdated Line 2\rFinal Line 2"` (—Å—Ç—Ä–æ–∫–∞ 534)
- `expected = "Updated Line 1\nFinal Line 2 2"` (—Å—Ç—Ä–æ–∫–∞ 535)
- `input = "Initial text\rReplacement text\r"` (—Å—Ç—Ä–æ–∫–∞ 542)
- `expected = "Replacement text"` (—Å—Ç—Ä–æ–∫–∞ 545)
- `input = "Hello\rWorld\r"` (—Å—Ç—Ä–æ–∫–∞ 557)
- `expected = "World"` (—Å—Ç—Ä–æ–∫–∞ 558)
- `input = "Line 1\nLine 2\rUpdated Line 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 569)
- `expected = "Line 1\nUpdated Line 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 570)
- `expected = "100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 100/100 [00:10<00:00, 10.00it/s]"` (—Å—Ç—Ä–æ–∫–∞ 577)
- `input = "\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 582)
- `expected = "Loading...\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 583)
- `expected = "Step 1: Donerogress\nStep 2: Donerogress"` (—Å—Ç—Ä–æ–∫–∞ 590)
- `expected = "Progress: 100%9%"` (—Å—Ç—Ä–æ–∫–∞ 606)
- `input = "Initial\r\r\r\rFinal"` (—Å—Ç—Ä–æ–∫–∞ 612)
- `expected = "Finalal"` (—Å—Ç—Ä–æ–∫–∞ 613)
- `input = "\rText after carriage return"` (—Å—Ç—Ä–æ–∫–∞ 618)
- `expected = "Text after carriage return"` (—Å—Ç—Ä–æ–∫–∞ 619)
- `input = "\r\r\r\r"` (—Å—Ç—Ä–æ–∫–∞ 624)
- `expected = ""` (—Å—Ç—Ä–æ–∫–∞ 625)
- `input = "Start\r\r\r\r\rEnd"` (—Å—Ç—Ä–æ–∫–∞ 630)
- `expected = "Endrt"` (—Å—Ç—Ä–æ–∫–∞ 631)
- `input = "Line1\rLine1Updated\nLine2\nLine3\rLine3Updated\rLine3Final\nLine4"` (—Å—Ç—Ä–æ–∫–∞ 636)
- `expected = "Line1Updated\nLine2\nLine3Finaled\nLine4"` (—Å—Ç—Ä–æ–∫–∞ 637)
- `input = "Line with üöÄ emoji\rLine with a"` (—Å—Ç—Ä–æ–∫–∞ 655)
- `expected = "Line with a  emoji"` (—Å—Ç—Ä–æ–∫–∞ 656)
- `input = "Line with not a emoji\rLine with üî• emoji"` (—Å—Ç—Ä–æ–∫–∞ 671)
- `expected = "Line with üî• emojioji"` (—Å—Ç—Ä–æ–∫–∞ 672)
- `input = "‰Ω†Â•Ω‰∏ñÁïåÂïä\r‰Ω†Â•ΩÂú∞ÁêÉ"` (—Å—Ç—Ä–æ–∫–∞ 683)
- `expected = "‰Ω†Â•ΩÂú∞ÁêÉÂïä"` (—Å—Ç—Ä–æ–∫–∞ 684)
- `input = "Line1\r\nLine2\rLine2Updated\nLine3\r\n"` (—Å—Ç—Ä–æ–∫–∞ 695)
- `expected = "Line1\nLine2Updated\nLine3\n"` (—Å—Ç—Ä–æ–∫–∞ 696)
- `input = "Initial text\rnext\r"` (—Å—Ç—Ä–æ–∫–∞ 707)
- `expected = "nextial text"` (—Å—Ç—Ä–æ–∫–∞ 708)

#### üìÑ extract-text-large-files.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockedReadLines = vi.mocked(readLines)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `largeFileContent = Array(150)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = await extractTextFromFile("/test/large-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `smallFileContent = Array(50)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await extractTextFromFile("/test/small-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `exactFileContent = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await extractTextFromFile("/test/exact-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `largeFileContent = Array(200)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await extractTextFromFile("/test/large-file.ts", undefined)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `result = await extractTextFromFile("/test/empty-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `newlineOnlyContent = "\n\n\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await extractTextFromFile("/test/newline-file.ts", 3)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `result = await extractTextFromFile("/test/very-large-file.ts", 500)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `fileContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 156)
- `fileContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await extractTextFromFile("/test/file.ts", -1)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `structuredContent = [` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = await extractTextFromFile("/test/structured.ts", 3)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ extract-text-from-xlsx.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `sheet1 = workbook.addWorksheet("First Sheet")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `sheet2 = workbook.addWorksheet("Second Sheet")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `visibleSheet = workbook.addWorksheet("Visible Sheet")` (—Å—Ç—Ä–æ–∫–∞ 60)
- `hiddenSheet = workbook.addWorksheet("Hidden Sheet")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `visibleSheet = workbook.addWorksheet("Visible Sheet")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `veryHiddenSheet = workbook.addWorksheet("Very Hidden Sheet")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `lines = result.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `dataLines = lines.filter((line) => !line.startsWith("---") && line.trim())` (—Å—Ç—Ä–æ–∫–∞ 110)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `testDate = new Date("2023-12-25")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `lines = result.split("\n").filter((line) => line.trim() && !line.startsWith("---"))` (—Å—Ç—Ä–æ–∫–∞ 201)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `worksheet = workbook.addWorksheet("Test")` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 212)

### üìÇ src/integrations/diagnostics/__tests__

#### üìÑ diagnostics.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = Object.assign(relativePath, {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 101)
- `dirUri = vscode.Uri.file("/path/to/directory/")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `diagnostic = new vscode.Diagnostic(` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 145)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 202)
- `fileUri1 = vscode.Uri.file("/path/to/file1.ts")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `fileUri2 = vscode.Uri.file("/path/to/subdir/file2.ts")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `diagnostics1 = [` (—Å—Ç—Ä–æ–∫–∞ 239)
- `diagnostics2 = [` (—Å—Ç—Ä–æ–∫–∞ 243)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `mockDocument1 = {` (—Å—Ç—Ä–æ–∫–∞ 255)
- `mockDocument2 = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `lineTexts = ["Line 1 content", "Line 2 content for warning", "Line 3 content for info"]` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 272)
- `file1Section = result.split("file1.ts")[1]` (—Å—Ç—Ä–æ–∫–∞ 286)
- `file2Section = result.split("subdir/file2.ts")[1]` (—Å—Ç—Ä–æ–∫–∞ 290)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 308)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 317)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 331)
- `fileUri = vscode.Uri.file("/project/root/src/utils/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 347)
- `diagnostic = new vscode.Diagnostic(` (—Å—Ç—Ä–æ–∫–∞ 350)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 357)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 363)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 371)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 388)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 391)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 397)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 403)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 411)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 428)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 431)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 440)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 446)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 454)
- `fileUri1 = vscode.Uri.file("/path/to/file1.ts")` (—Å—Ç—Ä–æ–∫–∞ 476)
- `fileUri2 = vscode.Uri.file("/path/to/file2.ts")` (—Å—Ç—Ä–æ–∫–∞ 477)
- `diagnostics1 = [` (—Å—Ç—Ä–æ–∫–∞ 480)
- `diagnostics2 = [` (—Å—Ç—Ä–æ–∫–∞ 485)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 502)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 510)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 535)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 538)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 545)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 551)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 559)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 578)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 581)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 587)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 601)

### üìÇ src/integrations/claude-code/__tests__

#### üìÑ run.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `resolveProcess(value: {, exitCode: n)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `resolveProcess(value: {, exitCode: n)` (—Å—Ç—Ä–æ–∫–∞ 473)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `claudePath = options?.claudePath || "claude"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `installationUrl = options?.installationUrl || "https://docs.anthropic.com/en/docs/claude-code/setup"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalError = options?.originalError || "spawn claude ENOENT"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockExeca = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockStdin = {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `createMockProcess = () => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `processPromise = new Promise<{ exitCode: number }>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 54)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `messages = [{ role: "user" as const, content: "Hello world!" }]` (—Å—Ç—Ä–æ–∫–∞ 146)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 147)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `os = await import("os")` (—Å—Ç—Ä–æ–∫–∞ 154)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 158)
- `expectedStdinData = JSON.stringify({ systemPrompt, messages })` (—Å—Ç—Ä–æ–∫–∞ 168)
- `generator2 = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 178)
- `results2 = []` (—Å—Ç—Ä–æ–∫–∞ 179)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 195)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 216)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 245)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `mockProcessWithoutStdin = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 282)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 291)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 321)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 336)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 367)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 372)
- `customPath = "/custom/path/to/claude"` (—Å—Ç—Ä–æ–∫–∞ 381)
- `enoentError = new Error(`spawn ${customPath} ENOENT`)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 388)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `otherError = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 409)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 424)
- `otherError = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 425)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 437)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 454)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 469)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `processPromise = new Promise<{ exitCode: number }>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 474)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 508)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 513)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 518)

#### üìÑ message-filter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 259)

### üìÇ src/core/webview/__tests__

#### üìÑ webviewMessageHandler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetModels = getModels as Mock<typeof getModels>` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockClineProvider = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockRm = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `mockMkdir = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `slug = "test-project-mode"` (—Å—Ç—Ä–æ–∫–∞ 428)
- `rulesFolderPath = path.join("/mock/workspace", ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `slug = "test-global-mode"` (—Å—Ç—Ä–æ–∫–∞ 452)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 453)
- `rulesFolderPath = path.join(homeDir, ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `slug = "test-mode-no-rules"` (—Å—Ç—Ä–æ–∫–∞ 477)
- `slug = "test-mode-error"` (—Å—Ç—Ä–æ–∫–∞ 499)
- `rulesFolderPath = path.join("/mock/workspace", ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 500)
- `error = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 501)

#### üìÑ messageEnhancer.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockListApiConfigMeta = [` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 81)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 110)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 122)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 149)
- `longText = "A".repeat(600) // 600 characters` (—Å—Ç—Ä–æ–∫–∞ 158)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 190)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 197)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 212)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 242)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `mockTaskId = "task-123"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 282)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 293)
- `history = (MessageEnhancer as any).extractTaskHistory(messages)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 327)
- `malformedMessages = [` (—Å—Ç—Ä–æ–∫–∞ 330)
- `history = (MessageEnhancer as any).extractTaskHistory(malformedMessages)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 348)
- `messages = [circularMessage] as ClineMessage[]` (—Å—Ç—Ä–æ–∫–∞ 354)
- `history = (MessageEnhancer as any).extractTaskHistory(messages)` (—Å—Ç—Ä–æ–∫–∞ 357)

#### üìÑ ClineProvider.sticky-mode.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 266)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 272)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 290)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 314)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 356)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 362)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 380)
- `updateGlobalStateSpy = vi.spyOn(provider as any, "updateGlobalState").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 479)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 485)
- `parentTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 532)
- `parentTaskId = (parentTask as any).taskId || "parent-task-id"` (—Å—Ç—Ä–æ–∫–∞ 538)
- `getGlobalStateMock = vi.spyOn(provider as any, "getGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 546)
- `updateTaskHistoryMock = vi.spyOn(provider, "updateTaskHistory")` (—Å—Ç—Ä–æ–∫–∞ 567)
- `subtask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 581)
- `subtaskId = (subtask as any).taskId || "subtask-id"` (—Å—Ç—Ä–æ–∫–∞ 586)
- `getCurrentClineMock = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 592)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 617)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 660)
- `codeApiConfig = { apiProvider: "anthropic" as ProviderName, anthropicApiKey: "code-key" }` (—Å—Ç—Ä–æ–∫–∞ 671)
- `architectApiConfig = { apiProvider: "openai" as ProviderName, openAiApiKey: "architect-key" }` (—Å—Ç—Ä–æ–∫–∞ 672)
- `codeConfigId = provider.getProviderProfileEntry("code-config")?.id` (—Å—Ç—Ä–æ–∫–∞ 679)
- `architectConfigId = provider.getProviderProfileEntry("architect-config")?.id` (—Å—Ç—Ä–æ–∫–∞ 680)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 707)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 746)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 761)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 789)
- `switches = [` (—Å—Ç—Ä–æ–∫–∞ 797)
- `modeCalls = vi.mocked(mockContext.globalState.update).mock.calls.filter((call) => call[0] === "mode")` (—Å—Ç—Ä–æ–∫–∞ 806)
- `lastModeCall = modeCalls[modeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 807)
- `lastCall = updateTaskHistorySpy.mock.calls[updateTaskHistorySpy.mock.calls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 813)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 824)
- `savePromise = mockTask.saveClineMessages()` (—Å—Ç—Ä–æ–∫–∞ 859)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 878)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 904)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 919)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 932)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 963)
- `task1 = {` (—Å—Ç—Ä–æ–∫–∞ 978)
- `task2 = {` (—Å—Ç—Ä–æ–∫–∞ 987)
- `task3 = {` (—Å—Ç—Ä–æ–∫–∞ 996)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 1051)
- `getCurrentClineSpy = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `switch1 = provider.handleModeSwitch("architect")` (—Å—Ç—Ä–æ–∫–∞ 1060)
- `switch2 = provider.handleModeSwitch("debug")` (—Å—Ç—Ä–æ–∫–∞ 1063)
- `switch3 = provider.handleModeSwitch("code")` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `initPromise = provider.initClineWithHistoryItem(historyItem)` (—Å—Ç—Ä–æ–∫–∞ 1116)
- `modeCalls = vi.mocked(mockContext.globalState.update).mock.calls.filter((call) => call[0] === "mode")` (—Å—Ç—Ä–æ–∫–∞ 1125)
- `lastModeCall = modeCalls[modeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 1129)
- `tasks = Array.from({ length: 5 }, (_, i) => ({` (—Å—Ç—Ä–æ–∫–∞ 1137)
- `getCurrentClineSpy = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 1152)
- `mode = ["architect", "debug", "code"][index % 3]` (—Å—Ç—Ä–æ–∫–∞ 1158)

#### üìÑ ClineProvider.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `delayFn(_ms: n)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1346)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockAddCustomInstructions = vi.fn().mockResolvedValue("Combined instructions")` (—Å—Ç—Ä–æ–∫–∞ 101)
- `delayFn = (_ms: number) => Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `content = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 224)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `content = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 297)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 298)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 381)
- `html = mockWebviewView.webview.html` (—Å—Ç—Ä–æ–∫–∞ 482)
- `scriptSrcMatch = html.match(/script-src[^` (—Å—Ç—Ä–æ–∫–∞ 483)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 563)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 574)
- `stackSizeBeforeAbort = provider.getClineStackSize()` (—Å—Ç—Ä–æ–∫–∞ 580)
- `stackSizeAfterAbort = provider.getClineStackSize()` (—Å—Ç—Ä–æ–∫–∞ 586)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 606)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 607)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 608)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 614)
- `parentTask = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 627)
- `childTask = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 628)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 638)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 645)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 660)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 661)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 662)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 665)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 681)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 685)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 695)
- `mockCline1 = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 708)
- `mockCline2 = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 709)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 725)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 745)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 753)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 764)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 770)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 783)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 818)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 826)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 835)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 841)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 854)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 860)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 871)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 893)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 914)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 937)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 967)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 975)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 982)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1018)
- `existingPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1021)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 1070)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1087)
- `existingPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1090)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1144)
- `result = await extractTextFromFile("test.js")` (—Å—Ç—Ä–æ–∫–∞ 1165)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 1176)
- `mockApiHistory = [` (—Å—Ç—Ä–æ–∫–∞ 1185)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 1195)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1209)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1239)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 1258)
- `mockApiHistory = [` (—Å—Ç—Ä–æ–∫–∞ 1267)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 1277)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1295)
- `getMessageHandler = () => {` (—Å—Ç—Ä–æ–∫–∞ 1346)
- `mockCalls = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 1347)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1354)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1432)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1466)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1500)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1532)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1548)
- `contextProxy = (provider as any).contextProxy` (—Å—Ç—Ä–æ–∫–∞ 1639)
- `getValueSpy = vi.spyOn(contextProxy, "getValue")` (—Å—Ç—Ä–æ–∫–∞ 1640)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1696)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1699)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1731)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1765)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1768)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1798)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1820)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1851)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1873)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1898)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1901)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1925)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1987)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2018)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2028)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2055)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 2072)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2075)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2102)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2112)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2148)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2186)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 2270)
- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 2271)
- `fsUtils = await import("../../../utils/fs")` (—Å—Ç—Ä–æ–∫–∞ 2278)
- `openFileModule = await import("../../../integrations/misc/open-file")` (—Å—Ç—Ä–æ–∫–∞ 2282)
- `openFileSpy = vi.spyOn(openFileModule, "openFile").mockClear().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 2283)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2287)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2310)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2324)
- `fs = require("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 2330)
- `result = await provider.getValue("currentApiConfigName")` (—Å—Ç—Ä–æ–∫–∞ 2380)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2454)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2465)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2479)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2489)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2497)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2507)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2522)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2536)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2548)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2630)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2644)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2692)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2705)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2766)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2779)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2803)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2815)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2847)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2856)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 2968)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 2983)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2995)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3022)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3035)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3047)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3084)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3099)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3124)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3139)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3172)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3189)
- `edit1Promise = messageHandler({` (—Å—Ç—Ä–æ–∫–∞ 3192)
- `edit2Promise = messageHandler({` (—Å—Ç—Ä–æ–∫–∞ 3198)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3237)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3250)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3265)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3289)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3315)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3338)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3347)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3373)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3387)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3416)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3429)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3458)
- `cleanupSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3466)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3479)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3503)
- `cleanupSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3511)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3523)
- `largeText = "A".repeat(10000)` (—Å—Ç—Ä–æ–∫–∞ 3552)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3553)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3558)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3570)
- `largeEditedContent = "B".repeat(15000)` (—Å—Ç—Ä–æ–∫–∞ 3572)
- `largeText = "X".repeat(50000)` (—Å—Ç—Ä–æ–∫–∞ 3599)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3600)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3607)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3618)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3641)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3656)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3678)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3690)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3713)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3729)
- `futureTimestamp = Date.now() + 100000 // Future timestamp` (—Å—Ç—Ä–æ–∫–∞ 3747)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3748)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3774)

### üìÇ src/core/tools/helpers

#### üìÑ imageHelpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileBuffer = await fs.readFile(filePath)` - Reads an image file and returns both the data URL and buffer (—Å—Ç—Ä–æ–∫–∞ 76)
- `base64 = fileBuffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mimeType = IMAGE_MIME_TYPES[ext] || "image/png"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `dataUrl = `data:${mimeType}` (—Å—Ç—Ä–æ–∫–∞ 81)
- `imageStats = await fs.stat(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `imageSizeInMB = imageStats.size / (1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `imageSizeFormatted = prettyBytes(imageStats.size)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `currentMemoryFormatted = prettyBytes(currentTotalMemoryUsed * 1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fileMemoryFormatted = prettyBytes(imageStats.size)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `imageStats = await fs.stat(fullPath)` - Processes an image file and returns the result (—Å—Ç—Ä–æ–∫–∞ 151)
- `imageSizeInKB = Math.round(imageStats.size / 1024)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `imageSizeInMB = imageStats.size / (1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `noticeText = t("tools:readFile.imageWithSize", { size: imageSizeInKB })` (—Å—Ç—Ä–æ–∫–∞ 155)

### üìÇ src/core/tools/__tests__

#### üìÑ writeToFileTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPath = await vi.importActual("path")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 97)
- `absoluteFilePath = process.platform === "win32" ? "C:\\test\\file.txt" : "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 98)
- `testContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `testContentWithMarkdown = "```javascript\nLine 1\nLine 2\n```"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `mockedFileExistsAtPath = fileExistsAtPath as MockedFunction<typeof fileExistsAtPath>` (—Å—Ç—Ä–æ–∫–∞ 103)
- `mockedDetectCodeOmission = detectCodeOmission as MockedFunction<typeof detectCodeOmission>` (—Å—Ç—Ä–æ–∫–∞ 104)
- `mockedIsPathOutsideWorkspace = isPathOutsideWorkspace as MockedFunction<typeof isPathOutsideWorkspace>` (—Å—Ç—Ä–æ–∫–∞ 105)
- `mockedGetReadablePath = getReadablePath as MockedFunction<typeof getReadablePath>` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockedUnescapeHtmlEntities = unescapeHtmlEntities as MockedFunction<typeof unescapeHtmlEntities>` (—Å—Ç—Ä–æ–∫–∞ 107)
- `mockedEveryLineHasLineNumbers = everyLineHasLineNumbers as MockedFunction<typeof everyLineHasLineNumbers>` (—Å—Ç—Ä–æ–∫–∞ 108)
- `mockedStripLineNumbers = stripLineNumbers as MockedFunction<typeof stripLineNumbers>` (—Å—Ç—Ä–æ–∫–∞ 109)
- `mockedPathResolve = path.resolve as MockedFunction<typeof path.resolve>` (—Å—Ç—Ä–æ–∫–∞ 110)
- `fileExists = options.fileExists ?? false` (—Å—Ç—Ä–æ–∫–∞ 211)
- `isPartial = options.isPartial ?? false` (—Å—Ç—Ä–æ–∫–∞ 212)
- `accessAllowed = options.accessAllowed ?? true` (—Å—Ç—Ä–æ–∫–∞ 213)
- `contentWithLineNumbers = "1 | line one\n2 | line two"` (—Å—Ç—Ä–æ–∫–∞ 308)
- `userEditsValue = "- old line\n+ new line"` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ validateToolUse.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codeMode = modes.find((m) => m.slug === "code")?.slug || "code"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `architectMode = modes.find((m) => m.slug === "architect")?.slug || "architect"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `askMode = modes.find((m) => m.slug === "ask")?.slug || "ask"` (—Å—Ç—Ä–æ–∫–∞ 12)
- `architectTools = [` (—Å—Ç—Ä–æ–∫–∞ 34)
- `askTools = [...TOOL_GROUPS.read.tools, ...TOOL_GROUPS.browser.tools, ...TOOL_GROUPS.mcp.tools]` (—Å—Ç—Ä–æ–∫–∞ 48)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 96)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 108)
- `enabledRequirements = { apply_diff: true }` (—Å—Ç—Ä–æ–∫–∞ 111)
- `requirements = { some_other_tool: true }` (—Å—Ç—Ä–æ–∫–∞ 116)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 126)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 145)
- `requirements = { apply_diff: true }` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ useMcpToolTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockToolResult = {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `error = new Error("Unexpected error")` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ readFileTool.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockCline(): any` (—Å—Ç—Ä–æ–∫–∞ 179)
- `setImageSupport(mockCline: a, supportsImages: b): void` (—Å—Ç—Ä–æ–∫–∞ 216)
- `async executeReadMultipleImagesTool(imagePaths: s): Promise<ToolResponse | undefined>` (—Å—Ç—Ä–æ–∫–∞ 666)
- `async executeReadImageTool(imagePath: s): Promise<ToolResponse | undefined>` (—Å—Ç—Ä–æ–∫–∞ 1380)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPath = await vi.importActual("path")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `fsPromises = vi.hoisted(() => ({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `addLineNumbersMock = vi.fn().mockImplementation((text, startLine = 1) => {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `lines = typeof text === "string" ? text.split("\n") : [text]` (—Å—Ç—Ä–æ–∫–∞ 52)
- `extractTextFromFileMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `getSupportedBinaryFormatsMock = vi.fn(() => [".pdf", ".docx", ".ipynb"])` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toolResultMock = vi.fn((text: string, images?: string[]) => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `imageBlocksMock = vi.fn((images?: string[]) => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 226)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 227)
- `fileContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 228)
- `numberedFileContent = "1 | Line 1\n2 | Line 2\n3 | Line 3\n4 | Line 4\n5 | Line 5\n"` (—Å—Ç—Ä–æ–∫–∞ 229)
- `sourceCodeDef = "\n\n# file.txt\n1--5 | Content"` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `mockedReadLines = vi.mocked(readLines)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `mockedParseSourceCodeDefinitionsForFile = vi.mocked(parseSourceCodeDefinitionsForFile)` (—Å—Ç—Ä–æ–∫–∞ 236)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 256)
- `maxReadFileLine = options.maxReadFileLine ?? 500` (—Å—Ç—Ä–æ–∫–∞ 296)
- `totalLines = options.totalLines ?? 5` (—Å—Ç—Ä–æ–∫–∞ 297)
- `result = await executeReadFileTool({}, { maxReadFileLine: -1 })` (—Å—Ç—Ä–æ–∫–∞ 340)
- `askCall = mockCline.ask.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 357)
- `completeMessage = JSON.parse(askCall[1])` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = await executeReadFileTool(` (—Å—Ç—Ä–æ–∫–∞ 371)
- `content = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 397)
- `numberedContent = "1 | Line 1\n2 | Line 2\n3 | Line 3"` (—Å—Ç—Ä–æ–∫–∞ 398)
- `result = await executeReadFileTool({}, { maxReadFileLine: 3 })` (—Å—Ç—Ä–æ–∫–∞ 406)
- `result = await executeReadFileTool({}, { maxReadFileLine: 10, totalLines: 5 })` (—Å—Ç—Ä–æ–∫–∞ 423)
- `result = await executeReadFileTool({}, { maxReadFileLine: 5, totalLines: 3 })` (—Å—Ç—Ä–æ–∫–∞ 436)
- `result = await executeReadFileTool({}, { maxReadFileLine: 3, totalLines: 3 })` (—Å—Ç—Ä–æ–∫–∞ 452)
- `rangeResult = await executeReadFileTool(` (—Å—Ç—Ä–æ–∫–∞ 466)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 483)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `fileContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 485)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 488)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `mockedFsReadFile = vi.mocked(fsPromises.readFile)` (—Å—Ç—Ä–æ–∫–∞ 491)
- `imageBuffer = Buffer.from(` (—Å—Ç—Ä–æ–∫–∞ 492)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 517)
- `totalLines = options.totalLines ?? 5` (—Å—Ç—Ä–æ–∫–∞ 555)
- `maxReadFileLine = options.maxReadFileLine ?? 500` (—Å—Ç—Ä–æ–∫–∞ 556)
- `isBinary = options.isBinary ?? false` (—Å—Ç—Ä–æ–∫–∞ 557)
- `validateAccess = options.validateAccess ?? true` (—Å—Ç—Ä–æ–∫–∞ 558)
- `numberedContent = "1 | Line 1\n2 | Line 2\n3 | Line 3\n4 | Line 4\n5 | Line 5"` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await executeReadFileTool()` (—Å—Ç—Ä–æ–∫–∞ 606)
- `result = await executeReadFileTool({}, { maxReadFileLine: -1 })` (—Å—Ç—Ä–æ–∫–∞ 618)
- `xmlStructureRegex = new RegExp(` (—Å—Ç—Ä–æ–∫–∞ 621)
- `result = await executeReadFileTool({}, { totalLines: 0 })` (—Å—Ç—Ä–æ–∫–∞ 639)
- `testImages = [` (—Å—Ç—Ä–æ–∫–∞ 648)
- `imageBuffer = Buffer.from(` (—Å—Ç—Ä–æ–∫–∞ 655)
- `filesXml = imagePaths.map((path) => `<file><path>${path}</path></file>`).join("")` (—Å—Ç—Ä–æ–∫–∞ 671)
- `argsContent = filesXml` (—Å—Ç—Ä–æ–∫–∞ 672)
- `smallImages = [` (—Å—Ç—Ä–æ–∫–∞ 740)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 748)
- `image = smallImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 749)
- `result = await executeReadMultipleImagesTool(smallImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 757)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 761)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 764)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 765)
- `largeImages = [` (—Å—Ç—Ä–æ–∫–∞ 814)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 824)
- `image = largeImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 825)
- `result = await executeReadMultipleImagesTool(largeImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 833)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 837)
- `textPart = Array.isArray(result) ? result.find((p) => p.type === "text")?.text : result` (—Å—Ç—Ä–æ–∫–∞ 839)
- `imageParts = Array.isArray(result) ? result.filter((p) => p.type === "image") : []` (—Å—Ç—Ä–æ–∫–∞ 840)
- `exactLimitImages = [` (—Å—Ç—Ä–æ–∫–∞ 899)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 907)
- `image = exactLimitImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 908)
- `result = await executeReadMultipleImagesTool(exactLimitImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 919)
- `textPart = Array.isArray(result) ? result.find((p) => p.type === "text")?.text : result` (—Å—Ç—Ä–æ–∫–∞ 922)
- `imageParts = Array.isArray(result) ? result.filter((p) => p.type === "image") : []` (—Å—Ç—Ä–æ–∫–∞ 923)
- `mixedImages = [` (—Å—Ç—Ä–æ–∫–∞ 972)
- `fileName = path.basename(filePath)` (—Å—Ç—Ä–æ–∫–∞ 980)
- `baseName = path.parse(fileName).name` (—Å—Ç—Ä–æ–∫–∞ 981)
- `image = mixedImages.find((img) => img.path.includes(baseName))` (—Å—Ç—Ä–æ–∫–∞ 982)
- `result = await executeReadMultipleImagesTool(mixedImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 997)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1001)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `testImages = [` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `file = testImages.find((f) => normalizedFilePath.includes(path.normalize(f.path)))` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `imagePaths = testImages.map((img) => img.path)` (—Å—Ç—Ä–æ–∫–∞ 1042)
- `result = await executeReadMultipleImagesTool(imagePaths)` (—Å—Ç—Ä–æ–∫–∞ 1043)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1046)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1048)
- `firstBatch = [{ path: "test/first.png", sizeKB: 10240 }] // 10MB` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `secondBatch = [{ path: "test/second.png", sizeKB: 15360 }] // 15MB` (—Å—Ç—Ä–æ–∫–∞ 1143)
- `result = await executeReadMultipleImagesTool(secondBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1164)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1168)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1169)
- `manyImages = [` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 1199)
- `image = manyImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 1200)
- `result = await executeReadMultipleImagesTool(manyImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1208)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1212)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1213)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1214)
- `firstBatch = [{ path: "test/large1.png", sizeKB: 15360 }] // 15MB` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `result1 = await executeReadMultipleImagesTool(firstBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1252)
- `parts1 = result1 as any[]` (—Å—Ç—Ä–æ–∫–∞ 1256)
- `imageParts1 = parts1.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1257)
- `secondBatch = [{ path: "test/large2.png", sizeKB: 18432 }] // 18MB` (—Å—Ç—Ä–æ–∫–∞ 1262)
- `result2 = await executeReadMultipleImagesTool(secondBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1274)
- `parts2 = result2 as any[]` (—Å—Ç—Ä–æ–∫–∞ 1278)
- `imageParts2 = parts2.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1279)
- `textPart2 = parts2.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1280)
- `result = await executeReadFileTool({}, { validateAccess: false })` (—Å—Ç—Ä–æ–∫–∞ 1321)
- `testImagePath = "test/image.png"` (—Å—Ç—Ä–æ–∫–∞ 1332)
- `absoluteImagePath = "/test/image.png"` (—Å—Ç—Ä–æ–∫–∞ 1333)
- `imageBuffer = Buffer.from(base64ImageData, "base64")` (—Å—Ç—Ä–æ–∫–∞ 1336)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 1338)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 1340)
- `mockedFsReadFile = vi.mocked(fsPromises.readFile)` (—Å—Ç—Ä–æ–∫–∞ 1341)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 1342)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 1362)
- `argsContent = `<file><path>${imagePath}</path></file>`` (—Å—Ç—Ä–æ–∫–∞ 1381)
- `imagePath = `test/${filename}`` (—Å—Ç—Ä–æ–∫–∞ 1423)
- `absolutePath = `/test/${filename}`` (—Å—Ç—Ä–æ–∫–∞ 1424)
- `result = await executeReadImageTool(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 1431)
- `textPart = (result as any[]).find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1435)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1436)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1453)
- `textPart = (result as any[]).find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1458)
- `callArgs = toolResultMock.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1477)
- `textArg = callArgs[0]` (—Å—Ç—Ä–æ–∫–∞ 1478)
- `imagesArg = callArgs[1]` (—Å—Ç—Ä–æ–∫–∞ 1479)
- `largeBase64 = "A".repeat(1000000) // 1MB of base64 data` (—Å—Ç—Ä–æ–∫–∞ 1490)
- `largeBuffer = Buffer.from(largeBase64, "base64")` (—Å—Ç—Ä–æ–∫–∞ 1491)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1495)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1499)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1510)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1524)
- `callArgs = toolResultMock.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1528)
- `textArg = callArgs[0]` (—Å—Ç—Ä–æ–∫–∞ 1529)
- `imagesArg = callArgs[1]` (—Å—Ç—Ä–æ–∫–∞ 1530)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1544)
- `handleErrorSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1558)
- `argsContent = `<file><path>${testImagePath}</path></file>`` (—Å—Ç—Ä–æ–∫–∞ 1561)
- `binaryPath = "test/document.pdf"` (—Å—Ç—Ä–æ–∫–∞ 1589)
- `absolutePath = "/test/document.pdf"` (—Å—Ç—Ä–æ–∫–∞ 1590)
- `result = await executeReadImageTool(binaryPath)` (—Å—Ç—Ä–æ–∫–∞ 1595)
- `callArgs = mockedExtractTextFromFile.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1601)
- `binaryPath = "test/unknown.bin"` (—Å—Ç—Ä–æ–∫–∞ 1607)
- `absolutePath = "/test/unknown.bin"` (—Å—Ç—Ä–æ–∫–∞ 1608)
- `result = await executeReadImageTool(binaryPath)` (—Å—Ç—Ä–æ–∫–∞ 1613)
- `uppercasePath = "test/IMAGE.PNG"` (—Å—Ç—Ä–æ–∫–∞ 1624)
- `absolutePath = "/test/IMAGE.PNG"` (—Å—Ç—Ä–æ–∫–∞ 1625)
- `result = await executeReadImageTool(uppercasePath)` (—Å—Ç—Ä–æ–∫–∞ 1629)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1633)
- `complexPath = "test/my.photo.backup.png"` (—Å—Ç—Ä–æ–∫–∞ 1640)
- `absolutePath = "/test/my.photo.backup.png"` (—Å—Ç—Ä–æ–∫–∞ 1641)
- `result = await executeReadImageTool(complexPath)` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1649)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1659)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1663)

#### üìÑ newTaskTool.spec.ts

**–¢–∏–ø—ã:**

- `type MockClineInstance` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockAskApproval = vi.fn<AskApproval>()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `mockHandleError = vi.fn<HandleError>()` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockPushToolResult = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockRemoveClosingTag = vi.fn((_name: string, value: string | undefined) => value ?? "")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockInitClineWithTask = vi.fn<() => Promise<MockClineInstance>>().mockResolvedValue({ taskId: "mock-subtask-id" })` (—Å—Ç—Ä–æ–∫–∞ 25)
- `mockEmit = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `mockRecordToolError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `mockSayAndCreateMissingParamError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockCline = {` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ insertContentTool.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toPosix(filePath: s)` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toPosix = (filePath: string) => filePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `mockedFileExistsAtPath = fileExistsAtPath as MockedFunction<typeof fileExistsAtPath>` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mockedFsReadFile = fs.readFile as MockedFunction<typeof fs.readFile>` (—Å—Ç—Ä–æ–∫–∞ 55)
- `fileExists = options.fileExists ?? true` (—Å—Ç—Ä–æ–∫–∞ 135)
- `isPartial = options.isPartial ?? false` (—Å—Ç—Ä–æ–∫–∞ 136)
- `accessAllowed = options.accessAllowed ?? true` (—Å—Ç—Ä–æ–∫–∞ 137)
- `fileContent = options.fileContent ?? ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `contentToInsert = "New Line 1\nNew Line 2"` (—Å—Ç—Ä–æ–∫–∞ 173)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 180)
- `contentToInsert = "Hello World!"` (—Å—Ç—Ä–æ–∫–∞ 189)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 196)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `contentToInsert = "Arbitrary insert"` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = await executeInsertContentTool(` (—Å—Ç—Ä–æ–∫–∞ 218)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 224)

#### üìÑ executeCommandTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExecuteCommand = vitest.fn().mockImplementation(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `errorMessage = await cline.sayAndCreateMissingParamError("execute_command", "command")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `ignoredFileAttemptedToAccess = cline.rooIgnoreController?.validateCommand(block.params.command)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockRooIgnoreError = "RooIgnore error"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `didApprove = await askApproval("command", block.params.command)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `customCwd = block.params.cwd` (—Å—Ç—Ä–æ–∫–∞ 68)
- `input = "echo &lt` (—Å—Ç—Ä–æ–∫–∞ 130)
- `expected = "echo <test>"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `input = "echo test &gt` (—Å—Ç—Ä–æ–∫–∞ 136)
- `expected = "echo test > output.txt"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `input = "echo foo &amp` (—Å—Ç—Ä–æ–∫–∞ 142)
- `expected = "echo foo && echo bar"` (—Å—Ç—Ä–æ–∫–∞ 143)
- `input = "grep -E 'pattern' &lt` (—Å—Ç—Ä–æ–∫–∞ 148)
- `expected = "grep -E 'pattern' <file.txt >output.txt 2>&1"` (—Å—Ç—Ä–æ–∫–∞ 149)
- `lastCall = mockExecuteCommand.mock.calls[mockExecuteCommand.mock.calls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 194)
- `validateCommandMock = vitest.fn().mockReturnValue(".env")` (—Å—Ç—Ä–æ–∫–∞ 247)
- `mockRooIgnoreError = "RooIgnore error"` (—Å—Ç—Ä–æ–∫–∞ 252)
- `timeoutSeconds = 15` (—Å—Ç—Ä–æ–∫–∞ 282)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 283)
- `mockOptions = {` (—Å—Ç—Ä–æ–∫–∞ 297)

#### üìÑ executeCommandTimeout.integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `customTimeoutMs = 15000 // 15 seconds in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 82)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `shortTimeoutMs = 100 // Very short timeout in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 100)
- `longRunningProcess = new Promise(() => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `shortTimeoutMs = 50 // Short timeout in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 127)
- `abortSpy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `neverResolvingPromise = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 138)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 157)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 259)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 287)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 293)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 305)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 320)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 326)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 338)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 353)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 359)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 368)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 371)
- `result1 = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result2 = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 408)

#### üìÑ executeCommand.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `initialCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `currentCwd = "/test/project/subdirectory"` (—Å—Ç—Ä–æ–∫–∞ 83)
- `vscodeTerminal = new Terminal(1, undefined, "/test/project")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `mockVSCodeTerminal = vscodeTerminal as any` (—Å—Ç—Ä–æ–∫–∞ 119)
- `execaTerminal = new ExecaTerminal(1, "/test/project")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `mockExecaTerminal = execaTerminal as any` (—Å—Ç—Ä–æ–∫–∞ 158)
- `customCwd = "/custom/absolute/path"` (—Å—Ç—Ä–æ–∫–∞ 192)
- `relativeCwd = "subdirectory"` (—Å—Ç—Ä–æ–∫–∞ 226)
- `resolvedCwd = path.resolve(mockTask.cwd, relativeCwd)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `nonExistentCwd = "/non/existent/path"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `initialCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 433)
- `updatedCwd = "/test/project/src"` (—Å—Ç—Ä–æ–∫–∞ 434)
- `mockTerminalInstance = {` (—Å—Ç—Ä–æ–∫–∞ 440)

#### üìÑ attemptCompletionTool.spec.ts

#### üìÑ askFollowupQuestionTool.spec.ts

#### üìÑ applyDiffTool.experiment.spec.ts

#### üìÑ ToolRepetitionDetector.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createToolUse(name: s, params: R): ToolUse` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `detector = new ToolRepetitionDetector()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result1 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 36)
- `result2 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 40)
- `result3 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 44)
- `customLimit = 2` (—Å—Ç—Ä–æ–∫–∞ 49)
- `detector = new ToolRepetitionDetector(customLimit)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result1 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result2 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `detector = new ToolRepetitionDetector()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `result1 = detector.check(createToolUse("first", "first-tool"))` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result2 = detector.check(createToolUse("second", "second-tool"))` (—Å—Ç—Ä–æ–∫–∞ 71)
- `result3 = detector.check(createToolUse("third", "third-tool"))` (—Å—Ç—Ä–æ–∫–∞ 75)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = detector.check(createToolUse("same", "same-tool"))` (—Å—Ç—Ä–æ–∫–∞ 90)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result1 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result2 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result3 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `result = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 126)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `limitResult = detector.check(createToolUse("repeat", "repeat-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = detector.check(createToolUse("new", "new-tool"))` (—Å—Ç—Ä–æ–∫–∞ 143)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `limitResult = detector.check(createToolUse("problem", "problem-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result = detector.check(createToolUse("problem", "problem-tool"))` (—Å—Ç—Ä–æ–∫–∞ 159)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `limitResult = detector.check(createToolUse("repeat", "repeat-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 168)
- `result = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 175)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `toolName = "special-tool-name"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = detector.check(createToolUse("test", toolName))` (—Å—Ç—Ä–æ–∫–∞ 189)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = detector.check(createToolUse("empty-tool"))` (—Å—Ç—Ä–æ–∫–∞ 204)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `toolUse1 = createToolUse("tool-name-1", "tool-name-1", { param: "value" })` (—Å—Ç—Ä–æ–∫–∞ 214)
- `toolUse2 = createToolUse("tool-name-2", "tool-name-2", { param: "value" })` (—Å—Ç—Ä–æ–∫–∞ 219)
- `originalSerialize = (detector as any).serializeToolUse` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = detector.check(toolUse2)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `toolUse1 = createToolUse("same-tool", "same-tool", { a: "1", b: "2", c: "3" })` (—Å—Ç—Ä–æ–∫–∞ 247)
- `toolUse2 = createToolUse("same-tool", "same-tool", { c: "3", a: "1", b: "2" })` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = detector.check(toolUse2)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `detector = new ToolRepetitionDetector(1)` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 269)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `result1 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result2 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 283)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `result1 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 292)
- `result2 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result3 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 300)
- `detector = new ToolRepetitionDetector(0)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 310)
- `detector5 = new ToolRepetitionDetector(5)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `tool = createToolUse("tool", "tool-name")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `result = detector5.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result5 = detector5.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 336)
- `tool = createToolUse("tool", "tool-name")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `blocked = detector.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `detector = new ToolRepetitionDetector(-1)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 355)

### üìÇ src/core/task/__tests__

#### üìÑ Task.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = (await importOriginal()) as Record<string, any>` (—Å—Ç—Ä–æ–∫–∞ 34)
- `mockFunctions = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 76)
- `mockEventEmitter = { event: vi.fn(), fire: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 77)
- `mockTextDocument = { uri: { fsPath: "/mock/workspace/path/file.ts" } }` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockTextEditor = { document: mockTextDocument }` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockTab = { input: { uri: { fsPath: "/mock/workspace/path/file.ts" } } }` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockTabGroup = { tabs: [mockTab] }` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `storageUri = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 296)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 308)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 324)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 335)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 347)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 359)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 374)
- `mockStreamForClean = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `cleanMessageSpy = vi.fn().mockReturnValue(mockStreamForClean)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `messageWithExtra = {` (—Å—Ç—Ä–æ–∫–∞ 433)
- `history = cleanMessageSpy.mock.calls[0]?.[1]` (—Å—Ç—Ä–æ–∫–∞ 447)
- `cleanedMessage = history.find((msg: { content?: Array<{ text: string }> }) =>` (—Å—Ç—Ä–æ–∫–∞ 452)
- `configWithImages = {` (—Å—Ç—Ä–æ–∫–∞ 467)
- `configWithoutImages = {` (—Å—Ç—Ä–æ–∫–∞ 471)
- `mockStreamWithImages = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 566)
- `mockStreamWithoutImages = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 570)
- `imagesSpy = vi.fn().mockReturnValue(mockStreamWithImages)` (—Å—Ç—Ä–æ–∫–∞ 575)
- `noImagesSpy = vi.fn().mockReturnValue(mockStreamWithoutImages)` (—Å—Ç—Ä–æ–∫–∞ 576)
- `imagesCalls = imagesSpy.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 603)
- `noImagesCalls = noImagesSpy.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 604)
- `mockDelay = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 634)
- `saySpy = vi.spyOn(cline, "say")` (—Å—Ç—Ä–æ–∫–∞ 638)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 641)
- `mockFailedStream = {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `mockSuccessStream = {` (—Å—Ç—Ä–æ–∫–∞ 662)
- `iterator = cline.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 713)
- `baseDelay = 3 // from requestDelaySeconds` (—Å—Ç—Ä–æ–∫–∞ 717)
- `totalExpectedDelays = baseDelay // One delay per second for countdown` (—Å—Ç—Ä–æ–∫–∞ 737)
- `errorMessage = saySpy.mock.calls.find((call) => call[1]?.includes(mockError.message))?.[1]` (—Å—Ç—Ä–æ–∫–∞ 742)
- `mockDelay = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 759)
- `saySpy = vi.spyOn(cline, "say")` (—Å—Ç—Ä–æ–∫–∞ 763)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 766)
- `mockFailedStream = {` (—Å—Ç—Ä–æ–∫–∞ 767)
- `mockSuccessStream = {` (—Å—Ç—Ä–æ–∫–∞ 787)
- `iterator = cline.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 838)
- `baseDelay = 3 // from requestDelaySeconds` (—Å—Ç—Ä–æ–∫–∞ 842)
- `expectedDelayCount = baseDelay // One delay per second for countdown` (—Å—Ç—Ä–æ–∫–∞ 843)
- `retryMessages = saySpy.mock.calls.filter(` (—Å—Ç—Ä–æ–∫–∞ 848)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 883)
- `processedContent = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 914)
- `toolResult1 = processedContent[2] as Anthropic.ToolResultBlockParam` (—Å—Ç—Ä–æ–∫–∞ 933)
- `content1 = Array.isArray(toolResult1.content) ? toolResult1.content[0] : toolResult1.content` (—Å—Ç—Ä–æ–∫–∞ 934)
- `toolResult2 = processedContent[3] as Anthropic.ToolResultBlockParam` (—Å—Ç—Ä–æ–∫–∞ 941)
- `content2 = Array.isArray(toolResult2.content) ? toolResult2.content[0] : toolResult2.content` (—Å—Ç—Ä–æ–∫–∞ 942)
- `getStateSpy = vi.spyOn(mockProvider, "getState")` (—Å—Ç—Ä–æ–∫–∞ 994)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 997)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1024)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1031)
- `childMockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1060)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1070)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 1101)
- `mockTime = Date.now() + (mockApiConfig.rateLimitSeconds + 1) * 1000` (—Å—Ç—Ä–æ–∫–∞ 1102)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1106)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1118)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1130)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1138)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1157)
- `child1 = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1161)
- `child1Iterator = child1.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1173)
- `firstDelayCount = mockDelay.mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `child2 = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1184)
- `child2Iterator = child2.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1196)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1211)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1219)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1238)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1242)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1254)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1263)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1271)
- `iterator = task.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1290)
- `globalTimestamp = (Task as any).lastGlobalApiRequestTime` (—Å—Ç—Ä–æ–∫–∞ 1294)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1327)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1347)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1369)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1389)
- `anthropicConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `anthropicTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `openrouterClaudeConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1420)
- `openrouterClaudeTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1424)
- `openrouterGptConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1433)
- `openrouterGptTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1437)
- `claudeModelFormats = [` (—Å—Ç—Ä–æ–∫–∞ 1446)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 1455)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `undefinedProviderConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1472)
- `undefinedProviderTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1475)
- `noModelConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1484)
- `noModelTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1487)

#### üìÑ AutoApprovalHandler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetApiMetrics = getApiMetrics as any` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result1 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result2 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result1 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result2 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result3 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 182)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 217)

### üìÇ src/core/protect/__tests__

#### üìÑ RooProtectedController.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TEST_CWD = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 5)
- `absolutePath = path.join(TEST_CWD, ".neiraignore")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `files = ["src/index.ts", ".neiraignore", "package.json", ".neira/config.json", "README.md"]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `protectedFiles = controller.getProtectedFiles(files)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `files = ["src/index.ts", "package.json", "README.md"]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `protectedFiles = controller.getProtectedFiles(files)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `files = ["src/index.ts", ".neiraignore", ".neira/config.json", "package.json"]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `annotated = controller.annotatePathsWithProtection(files)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `message = controller.getProtectionMessage()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `patterns = RooProtectedController.getProtectedPatterns()` (—Å—Ç—Ä–æ–∫–∞ 139)

### üìÇ src/core/prompts/tools

#### üìÑ write-to-file.ts

#### üìÑ use-mcp-tool.ts

#### üìÑ update-todo-list.ts

#### üìÑ types.ts

#### üìÑ switch-mode.ts

#### üìÑ search-files.ts

#### üìÑ search-and-replace.ts

#### üìÑ read-file.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `maxConcurrentReads = args.settings?.maxConcurrentFileReads ?? 5` (—Å—Ç—Ä–æ–∫–∞ 4)
- `isMultipleReadsEnabled = maxConcurrentReads > 1` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ new-task.ts

#### üìÑ list-files.ts

#### üìÑ list-code-definition-names.ts

#### üìÑ insert-content.ts

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = getModeConfig(mode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `tools = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `groupName = getGroupName(groupEntry)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `toolGroup = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 82)
- `descriptions = Array.from(tools).map((toolName) => {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `descriptionFn = toolDescriptionMap[toolName]` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ fetch-instructions.ts

#### üìÑ execute-command.ts

#### üìÑ codebase-search.ts

#### üìÑ browser-action.ts

#### üìÑ attempt-completion.ts

#### üìÑ ask-followup-question.ts

#### üìÑ access-mcp-resource.ts

### üìÇ src/core/prompts/sections

#### üìÑ tool-use.ts

#### üìÑ tool-use-guidelines.ts

#### üìÑ system-info.ts

#### üìÑ rules.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEditingInstructions(): string` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseSearchRule = isCodebaseSearchAvailable` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ objective.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseSearchInstruction = isCodebaseSearchAvailable` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ modes.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `allModes = await getAllModesWithPrompts(context)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ mcp-servers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tools = server.tools` (—Å—Ç—Ä–æ–∫–∞ 19)
- `schemaStr = tool.inputSchema` (—Å—Ç—Ä–æ–∫–∞ 22)
- `templates = server.resourceTemplates` (—Å—Ç—Ä–æ–∫–∞ 31)
- `resources = server.resources` (—Å—Ç—Ä–æ–∫–∞ 35)
- `config = JSON.parse(server.config)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `baseSection = `MCP –°–ï–†–í–ï–†–´` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ markdown-formatting.ts

#### üìÑ index.ts

#### üìÑ custom-system-prompt.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `interpolatePromptContent(content: s, variables: P): string` (—Å—Ç—Ä–æ–∫–∞ 14)
- `async safeReadFile(filePath: s): Promise<string>` - –ë–µ–∑–æ–ø–∞—Å–Ω–æ —á–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª, –≤–æ–∑–≤—Ä–∞—â–∞—è –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å—Ç—Ä–æ–∫–∞ 31)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `placeholder = new RegExp(`\\{\\{${key}\\}\\}`, "g")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 37)
- `filePath = getSystemPromptFilePath(cwd, mode)` - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ –ø—É—Ç–∏ .neira/system-prompt-[slug —Ä–µ–∂–∏–º–∞] –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É (—Å—Ç—Ä–æ–∫–∞ 57)
- `rawContent = await safeReadFile(filePath)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `interpolatedContent = interpolatePromptContent(rawContent, variables)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `rooDir = path.join(cwd, ".neira")` - –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .neira, —Å–æ–∑–¥–∞–≤–∞—è –µ–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ custom-instructions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async safeReadFile(filePath: s): Promise<string>` - Safely read a file and return its trimmed content (—Å—Ç—Ä–æ–∫–∞ 16)
- `async directoryExists(dirPath: s): Promise<boolean>` - Check if a directory exists (—Å—Ç—Ä–æ–∫–∞ 32)
- `formatDirectoryContent(dirPath: s, files: A, filename: s, content: s): string` - Format content from multiple files with filenames as headers (—Å—Ç—Ä–æ–∫–∞ 171)
- `async loadAgentRulesFile(cwd: s): Promise<string>` - Load AGENTS.md file from the project root if it exists (—Å—Ç—Ä–æ–∫–∞ 223)
- `shouldIncludeRuleFile(filename: s): boolean` - Check if a file should be included in rule compilation. Excludes cache files and system files that shouldn't be processed as rules. (—Å—Ç—Ä–æ–∫–∞ 382)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 18)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 21)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `MAX_DEPTH = 5` (—Å—Ç—Ä–æ–∫–∞ 41)
- `fullPath = path.resolve(entry.parentPath || dirPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `linkTarget = await fs.readlink(symlinkPath)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `resolvedTarget = path.resolve(path.dirname(symlinkPath), linkTarget)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `stats = await fs.stat(resolvedTarget)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `anotherEntries = await fs.readdir(resolvedTarget, { withFileTypes: true, recursive: true })` (—Å—Ç—Ä–æ–∫–∞ 91)
- `entries = await fs.readdir(dirPath, { withFileTypes: true, recursive: true })` (—Å—Ç—Ä–æ–∫–∞ 113)
- `fileContents = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 128)
- `stats = await fs.stat(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `content = await safeReadFile(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `filteredFiles = fileContents.filter(` (—Å—Ç—Ä–æ–∫–∞ 150)
- `filenameA = path.basename(a.sortKey).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `filenameB = path.basename(b.sortKey).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `neiraDirectories = getNeiraDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `rulesDir = path.join(neiraDir, "rules")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `files = await readTextFilesFromDirectory(rulesDir)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `content = formatDirectoryContent(rulesDir, files)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `ruleFiles = [".neirarules", ".clinerules"]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `content = await safeReadFile(path.join(cwd, file))` (—Å—Ç—Ä–æ–∫–∞ 211)
- `agentsPath = path.join(cwd, "AGENTS.md")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `stats = await fs.lstat(agentsPath)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `content = await safeReadFile(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 270)
- `neiraDirectories = getNeiraDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 278)
- `modeRulesDir = path.join(neiraDir, `rules-${mode}`)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `files = await readTextFilesFromDirectory(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `content = formatDirectoryContent(modeRulesDir, files)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `rooModeRuleFile = `.neirarules-${mode}`` (—Å—Ç—Ä–æ–∫–∞ 298)
- `clineModeRuleFile = `.clinerules-${mode}`` (—Å—Ç—Ä–æ–∫–∞ 303)
- `languageName = isLanguage(options.language) ? LANGUAGES[options.language] : options.language` (—Å—Ç—Ä–æ–∫–∞ 314)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 331)
- `agentRulesContent = await loadAgentRulesFile(cwd)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `genericRuleContent = await loadRuleFiles(cwd)` (—Å—Ç—Ä–æ–∫–∞ 355)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `basename = path.basename(filename)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `cachePatterns = [` (—Å—Ç—Ä–æ–∫–∞ 385)
- `extension = pattern.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 411)

#### üìÑ capabilities.ts

### üìÇ src/core/prompts/instructions

#### üìÑ instructions.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface InstructionsDetail` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ create-mode.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `customModesPath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ create-mcp-server.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface WeatherData` (—Å—Ç—Ä–æ–∫–∞ 105)

- `interface ForecastData` (—Å—Ç—Ä–æ–∫–∞ 118)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `API_KEY = process.env.OPENWEATHER_API_KEY` (—Å—Ç—Ä–æ–∫–∞ 99)
- `server = new McpServer({` (—Å—Ç—Ä–æ–∫–∞ 125)
- `weatherApi = axios.create({` (—Å—Ç—Ä–æ–∫–∞ 131)
- `response = await weatherApi.get<ForecastData>('forecast', {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `response = weatherApi.get<WeatherData>('weather', {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `response = await weatherApi.get('weather', {` (—Å—Ç—Ä–æ–∫–∞ 228)
- `transport = new StdioServerTransport()` (—Å—Ç—Ä–æ–∫–∞ 263)
- `servers = mcpHub` (—Å—Ç—Ä–æ–∫–∞ 307)

### üìÇ src/core/prompts/__tests__

#### üìÑ utils.ts

#### üìÑ system-prompt.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockMcpHub(withServers: b): McpHub` (—Å—Ç—Ä–æ–∫–∞ 171)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `addCustomInstructions = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `customInstructionsMock = vi.mocked(await import("../sections/custom-instructions"))` (—Å—Ç—Ä–æ–∫–∞ 74)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 84)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 104)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 145)
- `createMockMcpHub = (withServers: boolean = false): McpHub =>` (—Å—Ç—Ä–æ–∫–∞ 171)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 207)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 230)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 255)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 301)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 324)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 348)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 372)
- `vscode = vi.mocked(await import("vscode")) as any` (—Å—Ç—Ä–æ–∫–∞ 397)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 423)
- `modeCustomInstructions = "Custom mode instructions"` (—Å—Ç—Ä–æ–∫–∞ 472)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 484)
- `customInstructionsIndex = prompt.indexOf("Custom mode instructions")` (—Å—Ç—Ä–æ–∫–∞ 507)
- `userInstructionsHeader = prompt.indexOf("USER'S CUSTOM INSTRUCTIONS")` (—Å—Ç—Ä–æ–∫–∞ 508)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 515)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 522)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 548)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 555)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 579)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 585)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 617)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 648)

#### üìÑ sections.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mcpHub = undefined` (—Å—Ç—Ä–æ–∫–∞ 34)
- `result = getCapabilitiesSection(cwd, false, mcpHub, mockDiffStrategy)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = getCapabilitiesSection(cwd, false, mcpHub, undefined)` (—Å—Ç—Ä–æ–∫–∞ 51)

#### üìÑ responses-rooignore.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 15)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `errorMessage = formatResponse.rooIgnoreError("secrets/api-keys.json")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `paths = ["node_modules/package.json", ".git/HEAD", "secrets/credentials.env", "logs/app.log"]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `errorMessage = formatResponse.rooIgnoreError(testPath)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `files = [` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = formatResponse.formatFilesList(TEST_CWD, files, false, controller as any, true)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `files = [` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 181)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = formatResponse.formatFilesList(TEST_CWD, [], false, controller as any, true)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 243)

#### üìÑ get-prompt-component.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = getPromptComponent(undefined, "architect")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ custom-system-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockReadFile = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockMkdir = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 4)
- `mockAccess = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 5)
- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 69)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 75)
- `fileCustomSystemPrompt = "Custom system prompt from file"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 112)
- `fileCustomSystemPrompt = "Custom system prompt from file"` (—Å—Ç—Ä–æ–∫–∞ 142)
- `customRoleDefinition = "Custom role definition"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 152)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ add-custom-instructions.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockMcpHub(withServers: b): McpHub` (—Å—Ç—Ä–æ–∫–∞ 171)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `addCustomInstructions = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `customInstructionsMock = vi.mocked(await import("../sections/custom-instructions"))` (—Å—Ç—Ä–æ–∫–∞ 74)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 84)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 104)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 145)
- `createMockMcpHub = (withServers: boolean = false): McpHub =>` (—Å—Ç—Ä–æ–∫–∞ 171)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 193)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 216)
- `mockMcpHub = createMockMcpHub(true)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 241)
- `mockMcpHub = createMockMcpHub(false)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 267)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 291)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 314)
- `instructions = await addCustomInstructions("", "", "/test/path", modes[2].slug)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `instructions = await addCustomInstructions("", "", "/test/path", modes[1].slug)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `instructions = await addCustomInstructions("", "", "/test/path", "test")` (—Å—Ç—Ä–æ–∫–∞ 329)
- `instructions = await addCustomInstructions("", "", "/test/path", "review")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug, {` (—Å—Ç—Ä–æ–∫–∞ 348)
- `instructions = await addCustomInstructions("Custom test instructions", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 355)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 362)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 375)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 382)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 399)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 411)
- `instructionParts = instructions.split("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 418)
- `globalIndex = instructionParts.findIndex((part) => part.includes("First instruction"))` (—Å—Ç—Ä–æ–∫–∞ 419)
- `modeSpecificIndex = instructionParts.findIndex((part) => part.includes("Second instruction"))` (—Å—Ç—Ä–æ–∫–∞ 420)

### üìÇ src/core/mentions/__tests__

#### üìÑ processUserContentMentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 32)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 62)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 91)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 130)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 186)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 252)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 272)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 297)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 325)

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timeoutError = new Error("Navigation timeout of 30000 ms exceeded")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `dnsError = new Error("net::ERR_NAME_NOT_RESOLVED")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = await parseMentions("Check @https://nonexistent.example", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `networkError = new Error("net::ERR_INTERNET_DISCONNECTED")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `forbiddenError = new Error("403 Forbidden")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `notFoundError = new Error("404 Not Found")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = await parseMentions("Check @https://example.com/missing", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `genericError = new Error("Some unexpected error")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `nonErrorObject = { code: "UNKNOWN", details: "Something went wrong" }` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `launchError = new Error("Failed to launch browser")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `launchError = "String error"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await parseMentions(` (—Å—Ç—Ä–æ–∫–∞ 149)

### üìÇ src/core/ignore/__tests__

#### üìÑ RooIgnoreController.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 144)
- `absolutePath = path.join(TEST_CWD, "node_modules/package.json")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `allowedAbsolutePath = path.join(TEST_CWD, "src/app.ts")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `emptyController = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `emptyController = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `paths = [` (—Å—Ç—Ä–æ–∫–∞ 305)
- `filtered = controller.filterPaths(paths)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 334)
- `result = controller.filterPaths(["file1.txt", "file2.txt"])` (—Å—Ç—Ä–æ–∫–∞ 337)
- `result = controller.filterPaths([])` (—Å—Ç—Ä–æ–∫–∞ 351)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 384)
- `disposeSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 395)
- `onDeleteHandler = mockWatcher.onDidDelete.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 492)

#### üìÑ RooIgnoreController.security.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 14)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `absolutePathToIgnored = path.join(TEST_CWD, "secrets/keys.json")` (—Å—Ç—Ä–æ–∫–∞ 178)
- `absolutePathToAllowed = path.join(TEST_CWD, "src/app.js")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `paths = [` (—Å—Ç—Ä–æ–∫–∞ 280)
- `filtered = controller.filterPaths(paths)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 309)
- `filtered = controller.filterPaths(["src/app.js", "node_modules/package.json"])` (—Å—Ç—Ä–æ–∫–∞ 312)

### üìÇ src/core/ignore/__mocks__

#### üìÑ RooIgnoreController.ts

### üìÇ src/core/environment/__tests__

#### üìÑ getEnvironmentDetails.spec.ts

**–¢–∏–ø—ã:**

- `type MockTerminal` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mockTaskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `mockActiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 246)
- `mockInactiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockActiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `mockInactiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `result2 = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `mockErrorTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 351)

### üìÇ src/core/diff/strategies

#### üìÑ multi-search-replace.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getSimilarity(original: s, search: s): number` (—Å—Ç—Ä–æ–∫–∞ 13)
- `fuzzySearch(lines: s, searchChunk: s, startIndex: n, endIndex: n)` - Performs a "middle-out" search of `lines` (between [startIndex, endIndex]) to find the slice that is most similar to `searchChunk`. Returns the best score, index, and matched text. (—Å—Ç—Ä–æ–∫–∞ 39)
- `reportMergeConflictError(found: s, _expected: s)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `reportInvalidDiffError(found: s, expected: s)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `reportLineMarkerInReplaceError(marker: s)` (—Å—Ç—Ä–æ–∫–∞ 246)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BUFFER_LINES = 40 // Number of extra context lines to show before and after matches` (—Å—Ç—Ä–æ–∫–∞ 11)
- `normalizedOriginal = normalizeString(original)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `normalizedSearch = normalizeString(search)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `dist = distance(normalizedOriginal, normalizedSearch)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `maxLength = Math.max(normalizedOriginal.length, normalizedSearch.length)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `searchLen = searchChunk.split(/\r?\n/).length` (—Å—Ç—Ä–æ–∫–∞ 43)
- `midPoint = Math.floor((startIndex + endIndex) / 2)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `originalChunk = lines.slice(leftIndex, leftIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `originalChunk = lines.slice(rightIndex, rightIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `state = { current: State.START, line: 0 }` (—Å—Ç—Ä–æ–∫–∞ 199)
- `SEARCH = "<<<<<<< SEARCH"` (—Å—Ç—Ä–æ–∫–∞ 201)
- `SEP = "======="` (—Å—Ç—Ä–æ–∫–∞ 202)
- `REPLACE = ">>>>>>> REPLACE"` (—Å—Ç—Ä–æ–∫–∞ 203)
- `SEARCH_PREFIX = "<<<<<<<"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `REPLACE_PREFIX = ">>>>>>>"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `reportMergeConflictError = (found: string, _expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 207)
- `reportInvalidDiffError = (found: string, expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 231)
- `reportLineMarkerInReplaceError = (marker: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 246)
- `lines = diffContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `searchCount = lines.filter((l) => l.trim() === SEARCH).length` (—Å—Ç—Ä–æ–∫–∞ 271)
- `sepCount = lines.filter((l) => l.trim() === SEP).length` (—Å—Ç—Ä–æ–∫–∞ 272)
- `replaceCount = lines.filter((l) => l.trim() === REPLACE).length` (—Å—Ç—Ä–æ–∫–∞ 273)
- `likelyBadStructure = searchCount !== replaceCount || sepCount < searchCount` (—Å—Ç—Ä–æ–∫–∞ 275)
- `marker = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 279)
- `validseq = this.validateMarkerSequencing(diffContent)` (—Å—Ç—Ä–æ–∫–∞ 340)
- `lineEnding = originalContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 392)
- `replacements = matches` (—Å—Ç—Ä–æ–∫–∞ 397)
- `exactStartIndex = startLine - 1` (—Å—Ç—Ä–æ–∫–∞ 468)
- `searchLen = searchLines.length` (—Å—Ç—Ä–æ–∫–∞ 469)
- `exactEndIndex = exactStartIndex + searchLen - 1` (—Å—Ç—Ä–æ–∫–∞ 470)
- `originalChunk = resultLines.slice(exactStartIndex, exactEndIndex + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 473)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 474)
- `aggressiveSearchContent = stripLineNumbers(searchContent, true)` (—Å—Ç—Ä–æ–∫–∞ 501)
- `aggressiveReplaceContent = stripLineNumbers(replaceContent, true)` (—Å—Ç—Ä–æ–∫–∞ 502)
- `aggressiveSearchLines = aggressiveSearchContent ? aggressiveSearchContent.split(/\r?\n/) : []` (—Å—Ç—Ä–æ–∫–∞ 504)
- `aggressiveSearchChunk = aggressiveSearchLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 505)
- `bestMatchSection = bestMatchContent` (—Å—Ç—Ä–æ–∫–∞ 537)
- `lineRange = startLine ? ` at line: ${startLine}` : ""` (—Å—Ç—Ä–æ–∫–∞ 541)
- `matchedLines = resultLines.slice(matchIndex, matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 552)
- `originalIndents = matchedLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 555)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 556)
- `searchIndents = searchLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 561)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 562)
- `indentedReplaceLines = replaceLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 567)
- `matchedIndent = originalIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 569)
- `currentIndentMatch = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `currentIndent = currentIndentMatch ? currentIndentMatch[0] : ""` (—Å—Ç—Ä–æ–∫–∞ 573)
- `searchBaseIndent = searchIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 574)
- `searchBaseLevel = searchBaseIndent.length` (—Å—Ç—Ä–æ–∫–∞ 577)
- `currentLevel = currentIndent.length` (—Å—Ç—Ä–æ–∫–∞ 578)
- `relativeLevel = currentLevel - searchBaseLevel` (—Å—Ç—Ä–æ–∫–∞ 579)
- `beforeMatch = resultLines.slice(0, matchIndex)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `afterMatch = resultLines.slice(matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `finalContent = resultLines.join(lineEnding)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `diffContent = toolUse.params.diff` (—Å—Ç—Ä–æ–∫–∞ 613)
- `icon = "diff-multiple"` (—Å—Ç—Ä–æ–∫–∞ 615)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 618)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 622)

#### üìÑ multi-file-search-replace.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getSimilarity(original: s, search: s): number` (—Å—Ç—Ä–æ–∫–∞ 10)
- `fuzzySearch(lines: s, searchChunk: s, startIndex: n, endIndex: n)` - Performs a "middle-out" search of `lines` (between [startIndex, endIndex]) to find the slice that is most similar to `searchChunk`. Returns the best score, index, and matched text. (—Å—Ç—Ä–æ–∫–∞ 36)
- `reportMergeConflictError(found: s, _expected: s)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `reportInvalidDiffError(found: s, expected: s)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `reportLineMarkerInReplaceError(marker: s)` (—Å—Ç—Ä–æ–∫–∞ 307)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BUFFER_LINES = 40 // Number of extra context lines to show before and after matches` (—Å—Ç—Ä–æ–∫–∞ 8)
- `normalizedOriginal = normalizeString(original)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `normalizedSearch = normalizeString(search)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `dist = distance(normalizedOriginal, normalizedSearch)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `maxLength = Math.max(normalizedOriginal.length, normalizedSearch.length)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `searchLen = searchChunk.split(/\r?\n/).length` (—Å—Ç—Ä–æ–∫–∞ 41)
- `midPoint = Math.floor((startIndex + endIndex) / 2)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `originalChunk = lines.slice(leftIndex, leftIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 50)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `originalChunk = lines.slice(rightIndex, rightIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `state = { current: State.START, line: 0 }` (—Å—Ç—Ä–æ–∫–∞ 260)
- `SEARCH = "<<<<<<< SEARCH"` (—Å—Ç—Ä–æ–∫–∞ 262)
- `SEP = "======="` (—Å—Ç—Ä–æ–∫–∞ 263)
- `REPLACE = ">>>>>>> REPLACE"` (—Å—Ç—Ä–æ–∫–∞ 264)
- `SEARCH_PREFIX = "<<<<<<< "` (—Å—Ç—Ä–æ–∫–∞ 265)
- `REPLACE_PREFIX = ">>>>>>> "` (—Å—Ç—Ä–æ–∫–∞ 266)
- `reportMergeConflictError = (found: string, _expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `reportInvalidDiffError = (found: string, expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 292)
- `reportLineMarkerInReplaceError = (marker: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 307)
- `lines = diffContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 331)
- `searchCount = lines.filter((l) => l.trim() === SEARCH).length` (—Å—Ç—Ä–æ–∫–∞ 332)
- `sepCount = lines.filter((l) => l.trim() === SEP).length` (—Å—Ç—Ä–æ–∫–∞ 333)
- `replaceCount = lines.filter((l) => l.trim() === REPLACE).length` (—Å—Ç—Ä–æ–∫–∞ 334)
- `likelyBadStructure = searchCount !== replaceCount || sepCount < searchCount` (—Å—Ç—Ä–æ–∫–∞ 336)
- `marker = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 340)
- `singleResult = await this.applySingleDiff(resultContent, diffItem.content, diffItem.startLine)` (—Å—Ç—Ä–æ–∫–∞ 409)
- `validseq = this.validateMarkerSequencing(diffContent)` (—Å—Ç—Ä–æ–∫–∞ 449)
- `lineEnding = originalContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 482)
- `replacements = matches` (—Å—Ç—Ä–æ–∫–∞ 488)
- `exactStartIndex = startLine - 1` (—Å—Ç—Ä–æ–∫–∞ 559)
- `searchLen = searchLines.length` (—Å—Ç—Ä–æ–∫–∞ 560)
- `exactEndIndex = exactStartIndex + searchLen - 1` (—Å—Ç—Ä–æ–∫–∞ 561)
- `originalChunk = resultLines.slice(exactStartIndex, exactEndIndex + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 564)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 565)
- `aggressiveSearchContent = stripLineNumbers(searchContent, true)` (—Å—Ç—Ä–æ–∫–∞ 594)
- `aggressiveReplaceContent = stripLineNumbers(replaceContent, true)` (—Å—Ç—Ä–æ–∫–∞ 595)
- `aggressiveSearchLines = aggressiveSearchContent ? aggressiveSearchContent.split(/\r?\n/) : []` (—Å—Ç—Ä–æ–∫–∞ 596)
- `aggressiveSearchChunk = aggressiveSearchLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 597)
- `bestMatchSection = bestMatchContent` (—Å—Ç—Ä–æ–∫–∞ 631)
- `lineRange = startLine ? ` at line: ${startLine}` : ""` (—Å—Ç—Ä–æ–∫–∞ 635)
- `matchedLines = resultLines.slice(matchIndex, matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 654)
- `originalIndents = matchedLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 657)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 658)
- `searchIndents = searchLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 663)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `indentedReplaceLines = replaceLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 669)
- `matchedIndent = originalIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 671)
- `currentIndentMatch = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 674)
- `currentIndent = currentIndentMatch ? currentIndentMatch[0] : ""` (—Å—Ç—Ä–æ–∫–∞ 675)
- `searchBaseIndent = searchIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 676)
- `searchBaseLevel = searchBaseIndent.length` (—Å—Ç—Ä–æ–∫–∞ 679)
- `currentLevel = currentIndent.length` (—Å—Ç—Ä–æ–∫–∞ 680)
- `relativeLevel = currentLevel - searchBaseLevel` (—Å—Ç—Ä–æ–∫–∞ 681)
- `beforeMatch = resultLines.slice(0, matchIndex)` (—Å—Ç—Ä–æ–∫–∞ 694)
- `afterMatch = resultLines.slice(matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `finalContent = resultLines.join(lineEnding)` (—Å—Ç—Ä–æ–∫–∞ 702)
- `diffContent = toolUse.params.diff` (—Å—Ç—Ä–æ–∫–∞ 719)
- `icon = "diff-multiple"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 725)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 729)

### üìÇ src/core/config/__tests__

#### üìÑ importExport.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `map = new Map<string, string>()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 105)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 126)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 150)
- `mockInvalidContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 204)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockInvalidJson = "{ this is not valid JSON }"` (—Å—Ç—Ä–æ–∫–∞ 256)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 259)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 276)
- `providerSettingsManager = new ProviderSettingsManager(mockExtensionContext)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 297)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 309)
- `customModes = [` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 331)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 345)
- `filePath = "/mock/path/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 360)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 361)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 372)
- `result = await importSettingsFromFile(` (—Å—Ç—Ä–æ–∫–∞ 384)
- `filePath = "/nonexistent/path/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 408)
- `accessError = new Error("ENOENT: no such file or directory")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 414)
- `showErrorMessageSpy = vi.spyOn(vscode.window, "showErrorMessage").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 420)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `mockGlobalSettings = { mode: "code", autoApprovalEnabled: true }` (—Å—Ç—Ä–æ–∫–∞ 472)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 508)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 605)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 622)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 655)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 667)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 689)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 702)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 723)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 745)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 762)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 774)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 808)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 820)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 851)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 862)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 896)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 926)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 941)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 960)
- `importedProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 961)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 971)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 995)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1009)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `importedProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1067)
- `testModelDimension = 768` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1081)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1093)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1128)
- `exportedFileContent = JSON.stringify(exportedData)` (—Å—Ç—Ä–æ–∫–∞ 1129)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1146)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1156)
- `testModelDimension = 0` (—Å—Ç—Ä–æ–∫–∞ 1172)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1174)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1186)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1215)
- `exportedFileContent = JSON.stringify(exportedData)` (—Å—Ç—Ä–æ–∫–∞ 1219)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `setValuesCall = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1243)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1249)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1298)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1307)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1337)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1358)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1367)
- `providerA = importedProviderProfiles.apiConfigs["provider-a"]` (—Å—Ç—Ä–æ–∫–∞ 1371)
- `providerB = importedProviderProfiles.apiConfigs["provider-b"]` (—Å—Ç—Ä–æ–∫–∞ 1372)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1386)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1417)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1440)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1449)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1456)
- `openaiCompatibleProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `anthropicProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1458)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1471)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1502)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1526)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1535)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1542)
- `anthropicProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `openaiCompatibleProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1544)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1564)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1577)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1601)

#### üìÑ ProviderSettingsManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSecrets = {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 104)
- `storedConfig = JSON.parse(calls[calls.length - 1][1]) // Get the latest call` (—Å—Ç—Ä–æ–∫–∞ 105)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 142)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 143)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 182)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 183)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 224)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 225)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 289)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[0][1])` (—Å—Ç—Ä–æ–∫–∞ 327)
- `testConfigId = storedConfig.apiConfigs.test.id` (—Å—Ç—Ä–æ–∫–∞ 328)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[mockSecrets.store.mock.calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 377)
- `testConfigId = storedConfig.apiConfigs.test.id` (—Å—Ç—Ä–æ–∫–∞ 378)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 424)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[mockSecrets.store.mock.calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 438)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[0][1])` (—Å—Ç—Ä–æ–∫–∞ 488)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 550)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 551)
- `invalidConfig = {` (—Å—Ç—Ä–æ–∫–∞ 594)
- `storeCalls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 620)
- `finalStoredConfigJson = storeCalls[storeCalls.length - 1][1]` (—Å—Ç—Ä–æ–∫–∞ 622)
- `storedConfig = JSON.parse(finalStoredConfigJson)` (—Å—Ç—Ä–æ–∫–∞ 624)
- `hasConfig = await providerSettingsManager.hasConfig("test")` (—Å—Ç—Ä–æ–∫–∞ 660)
- `hasConfig = await providerSettingsManager.hasConfig("nonexistent")` (—Å—Ç—Ä–æ–∫–∞ 669)

#### üìÑ ModeConfig.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `validateCustomMode(mode: u): asserts mode is ModeConfig` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 25)
- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `invalidModes = [` (—Å—Ç—Ä–æ–∫–∞ 48)
- `invalidMode = {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `emptyNameMode = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `emptyRoleMode = {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `invalidGroupMode = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `invalidInputs = [42, "string", true, [], () => {}]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `modeWithJustRegex = {` (—Å—Ç—Ä–æ–∫–∞ 120)
- `modeWithDescription = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `validPatterns = ["\\.md$", ".*\\.txt$", "[a-z]+\\.js$"]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `invalidPatterns = ["[", "(unclosed", "\\"]` (—Å—Ç—Ä–æ–∫–∞ 144)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `modeWithDuplicates = {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `validBaseMode = {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 205)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 223)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 232)
- `modeWithNull = {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `modeWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 246)

#### üìÑ CustomModesSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `invalidSettings = {} as any` (—Å—Ç—Ä–æ–∫–∞ 54)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `duplicateSettings = {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 114)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 146)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ CustomModesManager.yamlEdgeCases.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockFsReadFile(files: R)` (—Å—Ç—Ä–æ–∫–∞ 46)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `mockRoomodes = `${path.sep}mock${path.sep}workspace${path.sep}.neira${path.sep}.neira-modes`` (—Å—Ç—Ä–æ–∫–∞ 43)
- `mockFsReadFile = (files: Record<string, string>) => {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `yamlWithNonBreakingSpaces = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 155)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `yamlWithZeroWidth = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 175)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 186)
- `yamlWithFancyQuotes = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 212)
- `yamlWithComplexFileRegex = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 224)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `invalidYaml = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 254)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 268)
- `invalidYaml = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 278)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 289)
- `invalidSchema = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 297)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 313)
- `yamlWithEmojis = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 323)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 339)
- `yamlWithInternational = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 347)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 387)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `yamlWithComplexNesting = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 421)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 453)

#### üìÑ CustomModesManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockRoomodes = path.join(mockWorkspacePath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 98)
- `roomodesModes = [{ slug: "mode2", name: "Mode 2", roleDefinition: "Role 2", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 100)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `settingsModes = [` (—Å—Ç—Ä–æ–∫–∞ 118)
- `roomodesModes = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `mode2 = modes.find((m) => m.slug === "mode2")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 151)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 163)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 182)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 191)
- `firstResult = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `secondResult = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 233)
- `updatedSettingsModes = [updatedMode]` (—Å—Ç—Ä–æ–∫–∞ 258)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 279)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 315)
- `updatedSettingsModes = [updatedMode]` (—Å—Ç—Ä–æ–∫–∞ 343)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 376)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 388)
- `roomodesModes = [` (—Å—Ç—Ä–æ–∫–∞ 451)
- `existingModes = [` (—Å—Ç—Ä–æ–∫–∞ 461)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 493)
- `content = yaml.parse(writeCall[1])` (—Å—Ç—Ä–æ–∫–∞ 494)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 563)
- `settingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 641)
- `settingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 648)
- `configPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 666)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 674)
- `createFileSystemWatcherMock = vi.fn().mockReturnValue(mockWatcher)` (—Å—Ç—Ä–æ–∫–∞ 680)
- `originalNodeEnv = process.env.NODE_ENV` (—Å—Ç—Ä–æ–∫–∞ 684)
- `testManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 689)
- `onChangeCall = mockWatcher.onDidChange.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 698)
- `existingMode = {` (—Å—Ç—Ä–æ–∫–∞ 721)
- `mockShowError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 764)
- `corruptedYaml = "customModes: [invalid yaml content"` (—Å—Ç—Ä–æ–∫–∞ 776)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 790)
- `writtenContent = yaml.parse(writeCall[1])` (—Å—Ç—Ä–æ–∫–∞ 791)
- `invalidYaml = "invalid yaml content"` (—Å—Ç—Ä–æ–∫–∞ 805)
- `result = await manager.importModeWithRules(invalidYaml)` (—Å—Ç—Ä–æ–∫–∞ 807)
- `emptyYaml = yaml.stringify({ customModes: [] })` (—Å—Ç—Ä–æ–∫–∞ 814)
- `result = await manager.importModeWithRules(emptyYaml)` (—Å—Ç—Ä–æ–∫–∞ 816)
- `validYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 824)
- `result = await manager.importModeWithRules(validYaml)` (—Å—Ç—Ä–æ–∫–∞ 835)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 842)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 870)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 881)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 923)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md"))` (—Å—Ç—Ä–æ–∫–∞ 944)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md"))` (—Å—Ç—Ä–æ–∫–∞ 945)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 951)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 991)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1000)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `maliciousYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `result = await manager.importModeWithRules(maliciousYaml)` (—Å—Ç—Ä–æ–∫–∞ 1079)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 1084)
- `writtenRuleFiles = writtenFiles.filter((p) => !p.includes(".roomodes"))` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `normalizedPath = path.normalize(filePath)` (—Å—Ç—Ä–æ–∫–∞ 1087)
- `expectedBasePath = path.normalize(path.join(mockWorkspacePath, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `malformedYaml = `` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `result = await manager.importModeWithRules(malformedYaml)` (—Å—Ç—Ä–æ–∫–∞ 1108)
- `invalidModeYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1115)
- `result = await manager.importModeWithRules(invalidModeYaml)` (—Å—Ç—Ä–æ–∫–∞ 1126)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1133)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1163)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1182)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1221)
- `newRulePath = Object.keys(writtenFiles).find((p) => p.includes("new-rule.md"))` (—Å—Ç—Ä–æ–∫–∞ 1235)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1245)
- `roomodesContent = { customModes: [{ slug: "other-mode", name: "Other Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1251)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1262)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1278)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1284)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1296)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1302)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1315)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1321)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `settingsContent = {` (—Å—Ç—Ä–æ–∫–∞ 1345)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1350)
- `result = await freshManager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1369)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1378)
- `result = await freshManager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1391)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1408)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1415)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1429)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1437)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1452)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1488)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1499)
- `result = await manager.exportModeWithRules("code")` (—Å—Ç—Ä–æ–∫–∞ 1530)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1540)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1568)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1577)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1586)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1613)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1623)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1632)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1656)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1695)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1704)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1735)
- `exportedData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 1740)
- `rulesFiles = exportedData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 1741)

#### üìÑ CustomModesManager.exportImportSlugChange.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockRoomodes = path.join(mockWorkspacePath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `exportData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `rulesFiles = exportData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 134)
- `paths = rulesFiles.map((f: any) => f.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await manager.exportModeWithRules("root-mode")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `exportData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `rulesFiles = exportData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 188)
- `paths = rulesFiles.map((f: any) => f.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 247)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 252)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 253)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 308)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `oldFormatPath = Object.keys(writtenFiles).find((p) => p.includes("old-format.md"))` (—Å—Ç—Ä–æ–∫–∞ 367)
- `newFormatPath = Object.keys(writtenFiles).find((p) => p.includes("new-format.md"))` (—Å—Ç—Ä–æ–∫–∞ 368)
- `nestedPath = Object.keys(writtenFiles).find((p) => p.includes(path.join("nested", "file.md")))` (—Å—Ç—Ä–æ–∫–∞ 369)
- `originalMode = {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `exportResult = await manager.exportModeWithRules("original-mode")` (—Å—Ç—Ä–æ–∫–∞ 406)
- `exportData = yaml.parse(exportResult.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 410)
- `modifiedYaml = yaml.stringify(exportData)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `importResult = await manager.importModeWithRules(modifiedYaml)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `ruleFilePath = Object.keys(writtenFiles).find(` (—Å—Ç—Ä–æ–∫–∞ 426)

#### üìÑ ContextProxy.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = proxy.getGlobalState("apiProvider")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = proxy.getGlobalState("apiProvider", "deepseek")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = proxy.getGlobalState("taskHistory")` (—Å—Ç—Ä–æ–∫–∞ 111)
- `historyItems = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = proxy.getGlobalState("taskHistory", historyItems)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `storedValue = await proxy.getGlobalState("apiProvider")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `historyItems = [` (—Å—Ç—Ä–æ–∫–∞ 155)
- `storedValue = proxy.getGlobalState("taskHistory")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `storedValue = await proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 201)
- `storedValue = await proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 212)
- `storeSecretSpy = vi.spyOn(proxy, "storeSecret")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `storedValue = proxy.getSecret("openAiApiKey")` (—Å—Ç—Ä–æ–∫–∞ 229)
- `updateGlobalStateSpy = vi.spyOn(proxy, "updateGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `storedValue = proxy.getGlobalState("apiModelId")` (—Å—Ç—Ä–æ–∫–∞ 244)
- `setValueSpy = vi.spyOn(proxy, "setValue")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `storeSecretSpy = vi.spyOn(proxy, "storeSecret")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `updateGlobalStateSpy = vi.spyOn(proxy, "updateGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `setValuesSpy = vi.spyOn(proxy, "setValues")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `setValuesSpy = vi.spyOn(proxy, "setValues")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `expectedUpdateCalls = 2 + GLOBAL_STATE_KEYS.length` (—Å—Ç—Ä–æ–∫–∞ 390)
- `initializeSpy = vi.spyOn(proxy as any, "initialize")` (—Å—Ç—Ä–æ–∫–∞ 413)

### üìÇ src/core/condense/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `DEFAULT_PREV_CONTEXT_TOKENS = 1000` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = getMessagesSinceLastSummary([])` (—Å—Ç—Ä–æ–∫–∞ 75)
- `defaultSystemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 178)
- `summaryMessage = result.messages[result.messages.length - N_MESSAGES_TO_KEEP - 1]` (—Å—Ç—Ä–æ–∫–∞ 195)
- `lastMessages = messages.slice(-N_MESSAGES_TO_KEEP)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `emptyStream = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 224)
- `createMessageMock = vi.fn().mockReturnValue(emptyStream)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 238)
- `expectedFinalMessage = {` (—Å—Ç—Ä–æ–∫–∞ 268)
- `mockCallArgs = (maybeRemoveImageBlocks as Mock).mock.calls[0][0] as any[]` (—Å—Ç—Ä–æ–∫–∞ 280)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 295)
- `streamWithUsage = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 298)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 306)
- `streamWithLargeTokens = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 336)
- `prevContextTokens = 600` (—Å—Ç—Ä–æ–∫–∞ 348)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 349)
- `streamWithSmallTokens = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 377)
- `prevContextTokens = 200` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 389)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 409)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 437)
- `invalidMainHandler = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `invalidCondensingHandler = {` (—Å—Ç—Ä–æ–∫–∞ 472)
- `originalError = console.error` (—Å—Ç—Ä–æ–∫–∞ 479)
- `mockError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 480)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 483)
- `defaultSystemPrompt = "Default prompt"` (—Å—Ç—Ä–æ–∫–∞ 515)
- `taskId = "test-task"` (—Å—Ç—Ä–æ–∫–∞ 516)
- `customPrompt = "Custom summarization prompt"` (—Å—Ç—Ä–æ–∫–∞ 590)
- `createMessageCalls = (mockMainApiHandler.createMessage as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 603)
- `invalidHandler = {` (—Å—Ç—Ä–æ–∫–∞ 690)
- `originalWarn = console.warn` (—Å—Ç—Ä–æ–∫–∞ 697)
- `mockWarn = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 698)

### üìÇ src/core/assistant-message/__tests__

#### üìÑ parseAssistantMessageBenchmark.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatNumber(num: n): string` (—Å—Ç—Ä–æ–∫–∞ 9)
- `measureExecutionTime(fn: F, input: s, iterations: n): number` (—Å—Ç—Ä–æ–∫–∞ 13)
- `runBenchmark()` (—Å—Ç—Ä–æ–∫–∞ 81)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatNumber = (num: number): string => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `measureExecutionTime = (fn: Function, input: string, iterations: number = 1000): number => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `start = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `end = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `measureMemoryUsage = (` (—Å—Ç—Ä–æ–∫–∞ 28)
- `initialMemory = process.memoryUsage()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `finalMemory = process.memoryUsage()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 54)
- `runBenchmark = () => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `maxNameLength = testCases.reduce((max, testCase) => Math.max(max, testCase.name.length), 0)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `namePadding = maxNameLength + 2` (—Å—Ç—Ä–æ–∫–∞ 83)
- `v1Time = measureExecutionTime(parseAssistantMessageV1, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `v2Time = measureExecutionTime(parseAssistantMessageV2, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `timeRatio = v1Time / v2Time` (—Å—Ç—Ä–æ–∫–∞ 95)
- `v1Memory = measureMemoryUsage(parseAssistantMessageV1, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `v2Memory = measureMemoryUsage(parseAssistantMessageV2, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 98)

#### üìÑ parseAssistantMessage.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isEmptyTextContent(block: A)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `example()` (—Å—Ç—Ä–æ–∫–∞ 167)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isEmptyTextContent = (block: AssistantMessageContent) =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `message = "This is a simple text message"` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `message = "This is a multi-line\ntext message\nwith several lines"` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `message = "This is a partial text"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `message = "<read_file><path>src/file.ts</path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 54)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 67)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 70)
- `message = "<read_file><path>src/file.ts</path>"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 81)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 84)
- `message = "<read_file><path>src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 93)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 96)
- `message = "Here's the file content: <read_file><path>src/file.ts</path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `textContent = result[0] as TextContent` (—Å—Ç—Ä–æ–∫–∞ 111)
- `toolUse = result[1] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 116)
- `message = "<read_file><path>src/file.ts</path></read_file>Here's what I found in the file."` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 125)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 129)
- `textContent = result[1] as TextContent` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `message = `<write_to_file><path>src/file.ts</path><content>` (—Å—Ç—Ä–æ–∫–∞ 166)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 173)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 176)
- `message = ""` (—Å—Ç—Ä–æ–∫–∞ 188)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `message = "This has a <not_a_tool>malformed tag</not_a_tool>"` (—Å—Ç—Ä–æ–∫–∞ 195)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `message = "<browser_action></browser_action>"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 205)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 219)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 222)
- `message = "<search_files><regex><div>.*</div></regex><path>src</path></search_files>"` (—Å—Ç—Ä–æ–∫–∞ 230)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 231)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 245)
- `toolUse1 = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 249)
- `toolUse2 = result[1] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 255)
- `message = "<read_file><path>  src/file.ts  </path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 263)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 267)
- `message = `<write_to_file><path>file.ts</path><content>` (—Å—Ç—Ä–æ–∫–∞ 275)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 280)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 283)
- `message = `I'll help you with that task.` (—Å—Ç—Ä–æ–∫–∞ 295)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 310)

### üìÇ src/api/transform/caching

#### üìÑ vertex.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cachedMessage(message: A): Anthropic.Messages.MessageParam` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `indices = messages.reduce((acc, msg, i) => (msg.role === "user" ? [...acc, i] : acc), [] as number[])` (—Å—Ç—Ä–æ–∫–∞ 7)
- `lastIndex = indices[indices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 10)
- `secondLastIndex = indices[indices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 11)
- `lastTextBlockIndex = message.content.reduce(` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ gemini.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isNthMessage = count % frequency === frequency - 1` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ anthropic.ts

### üìÇ src/api/transform/cache-strategy

#### üìÑ types.ts

#### üìÑ multi-point-strategy.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `supportsSystemCache = this.config.modelInfo.cachableFields.includes("system")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `supportsMessageCache = this.config.modelInfo.cachableFields.includes("messages")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `minTokensPerPoint = this.config.modelInfo.minTokensPerCachePoint` (—Å—Ç—Ä–æ–∫–∞ 22)
- `placements = this.determineMessageCachePoints(minTokensPerPoint, remainingCachePoints)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `messages = this.messagesToContentBlocks(this.config.messages)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `totalMessages = this.config.messages.length` (—Å—Ç—Ä–æ–∫–∞ 72)
- `previousPlacements = this.config.previousCachePointPlacements || []` (—Å—Ç—Ä–æ–∫–∞ 73)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 80)
- `lastPreviousIndex = previousPlacements[previousPlacements.length - 1].index` (—Å—Ç—Ä–æ–∫–∞ 99)
- `newMessagesTokens = this.config.messages` (—Å—Ç—Ä–æ–∫–∞ 100)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tokens = this.config.messages` (—Å—Ç—Ä–æ–∫–∞ 135)
- `gap = tokensBetweenPlacements[i] + tokensBetweenPlacements[i + 1]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `requiredPercentageIncrease = 1.2 // 20% increase required` (—Å—Ç—Ä–æ–∫–∞ 158)
- `requiredTokenThreshold = smallestGap * requiredPercentageIncrease` (—Å—Ç—Ä–æ–∫–∞ 159)
- `combinedEndIndex = previousPlacements[i + 1].index` (—Å—Ç—Ä–æ–∫–∞ 180)
- `startOfRange = i === 0 ? 0 : previousPlacements[i - 1].index + 1` (—Å—Ç—Ä–æ–∫–∞ 183)
- `combinedPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 184)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 201)
- `previousPlacements = this.config.previousCachePointPlacements || []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `tokenStartIndex = previousCachePointIndex + 1` (—Å—Ç—Ä–æ–∫–∞ 283)

#### üìÑ base-strategy.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `text = this.config.systemPrompt` (—Å—Ç—Ä–æ–∫–∞ 32)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `minTokens = this.config.modelInfo.minTokensPerCachePoint` (—Å—Ç—Ä–æ–∫–∞ 88)
- `text = block.text || ""` (—Å—Ç—Ä–æ–∫–∞ 111)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `text = message.content` (—Å—Ç—Ä–æ–∫–∞ 128)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `placement = placements.find((p) => p.index === i)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = {` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ src/api/transform/__tests__

#### üìÑ stream.spec.ts

#### üìÑ simple-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = "Hello world"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 14)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 22)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 37)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 50)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 62)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 84)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 95)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 106)

#### üìÑ reasoning.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = getOpenRouterReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `optionsWithoutBudget = {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = getOpenRouterReasoning(optionsWithoutBudget)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `optionsWithoutEffort = {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `result = getOpenRouterReasoning(optionsWithoutEffort)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `options = { ...baseOptions, model: modelWithEffort, reasoningEffort: effort }` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `optionsWithZeroBudget = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = getOpenRouterReasoning(optionsWithZeroBudget)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 239)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 258)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = getAnthropicReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `optionsWithoutBudget = {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `result = getAnthropicReasoning(optionsWithoutBudget)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `optionsWithZeroBudget = {` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = getAnthropicReasoning(optionsWithZeroBudget)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `optionsWithLargeBudget = {` (—Å—Ç—Ä–æ–∫–∞ 344)
- `result = getAnthropicReasoning(optionsWithLargeBudget)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `optionsWithEffort = {` (—Å—Ç—Ä–æ–∫–∞ 364)
- `result = getAnthropicReasoning(optionsWithEffort)` (—Å—Ç—Ä–æ–∫–∞ 370)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 389)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 412)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 430)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `result = getOpenAiReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 447)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `optionsWithoutEffort = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `result = getOpenAiReasoning(optionsWithoutEffort)` (—Å—Ç—Ä–æ–∫–∞ 471)
- `options = { ...baseOptions, model: modelWithEffort, reasoningEffort: effort }` (—Å—Ç—Ä–æ–∫–∞ 485)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `optionsWithBudget = {` (—Å—Ç—Ä–æ–∫–∞ 497)
- `result = getOpenAiReasoning(optionsWithBudget)` (—Å—Ç—Ä–æ–∫–∞ 503)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 519)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 525)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 538)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 544)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 562)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 569)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 570)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 596)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 597)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 608)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 614)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 615)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 623)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 628)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 629)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 643)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 649)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 650)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 651)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 666)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 682)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 698)

#### üìÑ r1-format.spec.ts

#### üìÑ openai-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `content = openAiMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 58)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `assistantMessage = openAiMessages[0] as OpenAI.Chat.ChatCompletionAssistantMessageParam` (—Å—Ç—Ä–æ–∫–∞ 95)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `toolMessage = openAiMessages[0] as OpenAI.Chat.ChatCompletionToolMessageParam` (—Å—Ç—Ä–æ–∫–∞ 126)

#### üìÑ model-params.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `anthropicParams = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `openaiParams = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `openrouterParams = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 34)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 80)
- `result = getModelParams({ ...anthropicParams, settings: {}, model })` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 119)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 149)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 238)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 400)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 419)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 437)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 454)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 470)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 487)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 504)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 522)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 541)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 553)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 574)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 591)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 606)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 617)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 636)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 657)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 683)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 699)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 714)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 730)

#### üìÑ mistral-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `content = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 57)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `userContent = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 125)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `userContent = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 262)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 296)

#### üìÑ image-cleaning.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockApiHandler(supportsImages: b): ApiHandler` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMockApiHandler = (supportsImages: boolean): ApiHandler => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 317)

#### üìÑ gemini-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 299)

#### üìÑ bedrock-converse-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `imageBlock = result[0].content[1] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 60)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `toolBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resultBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `textBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 164)

### üìÇ src/api/providers/fetchers

#### üìÑ unbound.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await axios.get("https://api.getunbound.ai/models", { headers })` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ requesty.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `url = "https://router.requesty.ai/v1/models"` (—Å—Ç—Ä–æ–∫–∞ 17)
- `response = await axios.get(url, { headers })` (—Å—Ç—Ä–æ–∫–∞ 18)
- `rawModels = response.data.data` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ openrouter.ts

**–¢–∏–ø—ã:**

- `type OpenRouterModelsResponse` (—Å—Ç—Ä–æ–∫–∞ 73)
- `type OpenRouterModelEndpointsResponse` (—Å—Ç—Ä–æ–∫–∞ 90)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterArchitectureSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 20)
- `openRouterPricingSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 25)
- `modelRouterBaseModelSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `openRouterModelsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 69)
- `openRouterModelEndpointsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 79)
- `baseURL = options?.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 98)
- `response = await axios.get<OpenRouterModelsResponse>(`${baseURL}/models`)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result = openRouterModelsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `data = result.success ? result.data.data : response.data.data` (—Å—Ç—Ä–æ–∫–∞ 103)
- `baseURL = options?.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 138)
- `response = await axios.get<OpenRouterModelEndpointsResponse>(`${baseURL}/models/${modelId}/endpoints`)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = openRouterModelEndpointsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `data = result.success ? result.data.data : response.data.data` (—Å—Ç—Ä–æ–∫–∞ 143)
- `cacheWritesPrice = model.pricing?.input_cache_write` (—Å—Ç—Ä–æ–∫–∞ 185)
- `cacheReadsPrice = model.pricing?.input_cache_read ? parseApiPrice(model.pricing?.input_cache_read) : undefined` (—Å—Ç—Ä–æ–∫–∞ 189)
- `supportsPromptCache = typeof cacheWritesPrice !== "undefined" && typeof cacheReadsPrice !== "undefined"` (—Å—Ç—Ä–æ–∫–∞ 191)

#### üìÑ ollama.ts

**–¢–∏–ø—ã:**

- `type OllamaModelsResponse` (—Å—Ç—Ä–æ–∫–∞ 36)
- `type OllamaModelInfoResponse` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `OllamaModelDetailsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 5)
- `OllamaModelSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 14)
- `OllamaModelInfoResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `OllamaModelsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `contextKey = Object.keys(rawModel.model_info).find((k) => k.includes("context_length"))` (—Å—Ç—Ä–æ–∫–∞ 41)
- `response = await axios.get<OllamaModelsResponse>(`${baseUrl}/api/tags`)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `parsedResponse = OllamaModelsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ modelEndpointCache.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCacheKey(router: R, modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async writeModelEndpoints(key: s, data: M)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `async readModelEndpoints(key: s): Promise<ModelRecord | undefined>` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `memoryCache = new NodeCache({ stdTTL: 5 * 60, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 15)
- `getCacheKey = (router: RouterName, modelId: string) => sanitize(`${router}_${modelId}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `filename = `${key}_endpoints.json`` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filename = `${key}_endpoints.json`` (—Å—Ç—Ä–æ–∫–∞ 26)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `filePath = path.join(cacheDir, filename)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `exists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `key = getCacheKey(router, modelId)` (—Å—Ç—Ä–æ–∫–∞ 48)

#### üìÑ modelCache.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async writeModels(router: R, data: M)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `async readModels(router: R): Promise<ModelRecord | undefined>` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `memoryCache = new NodeCache({ stdTTL: 5 * 60, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filename = `${router}_models.json`` (—Å—Ç—Ä–æ–∫–∞ 24)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `filename = `${router}_models.json`` (—Å—Ç—Ä–æ–∫–∞ 30)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `filePath = path.join(cacheDir, filename)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `exists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ lmstudio.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelsWithLoadedDetails = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `lmsUrl = baseUrl.replace(/^http:\/\//, "ws://").replace(/^https:\/\//, "wss://")` (—Å—Ç—Ä–æ–∫–∞ 17)
- `client = new LMStudioClient({ baseUrl: lmsUrl })` (—Å—Ç—Ä–æ–∫–∞ 19)
- `contextLength = "contextLength" in rawModel ? rawModel.contextLength : rawModel.maxContextLength` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lmsUrl = baseUrl.replace(/^http:\/\//, "ws://").replace(/^https:\/\//, "wss://")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `client = new LMStudioClient({ baseUrl: lmsUrl })` (—Å—Ç—Ä–æ–∫–∞ 72)
- `downloadedModels = await client.system.listDownloadedModels("llm")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `loadedModels = (await client.llm.listLoaded().then((models: LLM[]) => {` (—Å—Ç—Ä–æ–∫–∞ 85)

#### üìÑ litellm.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `urlObj = new URL(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `url = urlObj.href` (—Å—Ç—Ä–æ–∫–∞ 31)
- `response = await axios.get(url, { headers, timeout: 5000 })` (—Å—Ç—Ä–æ–∫–∞ 33)
- `computerModels = Array.from(LITELLM_COMPUTER_USE_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `modelName = model.model_name` (—Å—Ç—Ä–æ–∫–∞ 41)
- `modelInfo = model.model_info` (—Å—Ç—Ä–æ–∫–∞ 42)
- `litellmModelName = model?.litellm_params?.model as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ huggingface.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseHuggingFaceModel(model: H): ModelInfo` - Parse a HuggingFace model into ModelInfo format (—Å—Ç—Ä–æ–∫–∞ 95)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CacheEntry` - Cache entry for storing fetched models (—Å—Ç—Ä–æ–∫–∞ 81)

**–¢–∏–ø—ã:**

- `type HuggingFaceApiResponse` - Represents the response from the HuggingFace router API (—Å—Ç—Ä–æ–∫–∞ 74)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `huggingFaceProviderSchema = z.object({` - HuggingFace Provider Schema (—Å—Ç—Ä–æ–∫–∞ 15)
- `huggingFaceModelSchema = z.object({` - HuggingFace Model Schema (—Å—Ç—Ä–æ–∫–∞ 43)
- `huggingFaceApiResponseSchema = z.object({` - HuggingFace API Response Schema (—Å—Ç—Ä–æ–∫–∞ 64)
- `pricing = provider?.pricing || model.providers.find((p) => p.pricing)?.pricing` (—Å—Ç—Ä–æ–∫–∞ 102)
- `description = provider ? `${model.id} via ${provider.provider}` : `${model.id} via HuggingFace`` (—Å—Ç—Ä–æ–∫–∞ 105)
- `now = Date.now()` - Fetches available models from HuggingFace (—Å—Ç—Ä–æ–∫–∞ 126)
- `response = await axios.get<HuggingFaceApiResponse>(HUGGINGFACE_API_URL, {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = huggingFaceApiResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `validModels = result.data.data.filter((model) => model.providers.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `providerKey = `${model.id}:${provider.provider}`` (—Å—Ç—Ä–æ–∫–∞ 166)
- `providerModel = parseHuggingFaceModel(model, provider)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `cachedRawModels = getCachedRawHuggingFaceModels()` (—Å—Ç—Ä–æ–∫–∞ 250)
- `response = await axios.get(HUGGINGFACE_API_URL, {` (—Å—Ç—Ä–æ–∫–∞ 261)
- `models = response.data?.data || []` (—Å—Ç—Ä–æ–∫–∞ 275)

#### üìÑ glama.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await axios.get("https://glama.ai/api/gateway/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `rawModels = response.data` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ src/api/providers/__tests__

#### üìÑ xai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockConstructor = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `xaiApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `testModelId = "grok-3"` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handlerWithModel = new XAIHandler({ apiModelId: testModelId })` (—Å—Ç—Ä–æ–∫–∞ 65)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `miniModelHandler = new XAIHandler({` (—Å—Ç—Ä–æ–∫–∞ 73)
- `messageGenerator = miniModelHandler.createMessage("test prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 90)
- `regularModelHandler = new XAIHandler({` (—Å—Ç—Ä–æ–∫–∞ 102)
- `messageGenerator = regularModelHandler.createMessage("test prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 119)
- `calls = mockCreate.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 123)
- `lastCall = calls[calls.length - 1][0]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `expectedResponse = "This is a test response"` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `errorMessage = "API error"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `testContent = "This is test content"` (—Å—Ç—Ä–æ–∫–∞ 144)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 164)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `testReasoning = "Test reasoning content"` (—Å—Ç—Ä–æ–∫–∞ 176)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 196)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 197)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 232)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `modelId = "grok-3"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `modelInfo = xaiModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `handlerWithModel = new XAIHandler({ apiModelId: modelId })` (—Å—Ç—Ä–æ–∫–∞ 250)
- `systemPrompt = "Test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 264)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 268)

#### üìÑ vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGenerateContentStream = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockGenerateContent = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockGetGenerativeModel = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `testHandler = new VertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `modelInfo = testHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ unbound.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockWithResponse = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 72)
- `result = mockCreate(...args)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 153)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `nonAnthropicHandler = new UnboundHandler({` (—Å—Ç—Ä–æ–∫–∞ 256)
- `openaiHandler = new UnboundHandler({` (—Å—Ç—Ä–æ–∫–∞ 283)
- `modelInfo = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 309)
- `handlerWithInvalidModel = new UnboundHandler({ ...mockOptions, unboundModelId: "invalid/model" })` (—Å—Ç—Ä–æ–∫–∞ 315)
- `modelInfo = await handlerWithInvalidModel.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 316)

#### üìÑ sambanova.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMock = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `sambaNovaApiKey = "test-sambanova-api-key"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `handlerWithModel = new SambaNovaHandler({` (—Å—Ç—Ä–æ–∫–∞ 49)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `expectedResponse = "This is a test response from SambaNova"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `errorMessage = "SambaNova API error"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `testContent = "This is test content from SambaNova stream"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 90)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 112)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `modelInfo = sambaNovaModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 121)
- `handlerWithModel = new SambaNovaHandler({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `systemPrompt = "Test system prompt for SambaNova"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 140)

#### üìÑ requesty.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handler = new RequestyHandler({})` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `systemPrompt = "test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 143)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `generator = handler.createMessage("test", [])` (—Å—Ç—Ä–æ–∫–∞ 188)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `mockResponse = { choices: [{ message: { content: "test completion" } }] }` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 221)

#### üìÑ openrouter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `handler = new OpenRouterHandler({})` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 100)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 107)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `systemPrompt = "test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 149)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 187)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 211)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 216)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 254)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `generator = handler.createMessage("test", [])` (—Å—Ç—Ä–æ–∫–∞ 265)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `mockResponse = { choices: [{ message: { content: "test completion" } }] }` (—Å—Ç—Ä–æ–∫–∞ 273)
- `mockCreate = vitest.fn().mockResolvedValue(mockResponse)` (—Å—Ç—Ä–æ–∫–∞ 275)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 280)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `mockError = {` (—Å—Ç—Ä–æ–∫–∞ 296)
- `mockCreate = vitest.fn().mockResolvedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 312)
- `mockCreate = vitest.fn().mockRejectedValue(new Error("Unexpected error"))` (—Å—Ç—Ä–æ–∫–∞ 313)

#### üìÑ openai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockConstructor = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `customBaseUrl = "https://custom.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handlerWithCustomUrl = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `textChunk = chunks.find((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 159)
- `reasoningHandler = new OpenAiHandler(reasoningOptions)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `stream = reasoningHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 182)
- `noReasoningHandler = new OpenAiHandler(noReasoningOptions)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `stream = noReasoningHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 199)
- `handlerWithMaxTokens = new OpenAiHandler(optionsWithMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `stream = handlerWithMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handlerWithoutMaxTokens = new OpenAiHandler(optionsWithoutMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `stream = handlerWithoutMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 241)
- `handlerWithDefaultMaxTokens = new OpenAiHandler(optionsWithUndefinedMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `stream = handlerWithDefaultMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 262)
- `handlerWithUserMaxTokens = new OpenAiHandler(optionsWithUserMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `stream = handlerWithUserMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 278)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 284)
- `handlerWithoutUserMaxTokens = new OpenAiHandler(optionsWithoutUserMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `stream = handlerWithoutUserMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `stream = handler.createMessage("system prompt", testMessages)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `stream = handler.createMessage("system prompt", testMessages)` (—Å—Ç—Ä–æ–∫–∞ 342)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 381)
- `handlerWithoutModel = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 389)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 393)
- `azureOptions = {` (—Å—Ç—Ä–æ–∫–∞ 400)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 415)
- `stream = azureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 423)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 430)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 450)
- `azureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 455)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 459)
- `stream = azureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 467)
- `textChunk = chunks.find((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 474)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 475)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 496)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 501)
- `result = await azureHandler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 513)
- `grokOptions = {` (—Å—Ç—Ä–æ–∫–∞ 519)
- `grokHandler = new OpenAiHandler(grokOptions)` (—Å—Ç—Ä–æ–∫–∞ 526)
- `grokHandler = new OpenAiHandler(grokOptions)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 533)
- `stream = grokHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 541)
- `mockCalls = mockCreate.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 552)
- `lastCall = mockCalls[mockCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 553)
- `o3Options = {` (—Å—Ç—Ä–æ–∫–∞ 559)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 571)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 577)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 585)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 613)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 618)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 651)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 656)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 662)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 670)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 695)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 700)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 704)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 712)
- `o3AzureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 724)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 729)
- `stream = o3AzureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 748)
- `o3AzureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 753)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 758)
- `stream = o3AzureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 766)

#### üìÑ openai-usage-tracking.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 106)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `lastChunk = chunks[chunks.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 234)

#### üìÑ openai-native.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 72)
- `handlerWithoutKey = new OpenAiNativeHandler({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 154)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 212)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 258)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 308)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 370)
- `o1Models = ["o1", "o1-preview", "o1-mini"]` (—Å—Ç—Ä–æ–∫–∞ 392)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 418)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 437)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 446)
- `handlerWithoutModel = new OpenAiNativeHandler({` (—Å—Ç—Ä–æ–∫–∞ 454)
- `modelInfo = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 457)

#### üìÑ ollama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `handlerWithoutUrl = new OllamaHandler({` (—Å—Ç—Ä–æ–∫–∞ 89)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 98)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 160)

#### üìÑ moonshot.spec.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestMoonshotHandler extends MoonshotHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 248)

- `class TestMoonshotHandler extends MoonshotHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 273)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `handlerWithoutBaseUrl = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `customBaseUrl = "https://api.moonshot.cn/v1"` (—Å—Ç—Ä–æ–∫–∞ 125)
- `handlerWithCustomUrl = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 126)
- `_handler = new MoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 148)
- `handlerWithInvalidModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 162)
- `handlerWithoutModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 185)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 192)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `testHandler = new TestMoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 256)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `testHandler = new TestMoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 281)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 288)

#### üìÑ mistral.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `customBaseUrl = "https://custom.mistral.ai/v1"` (—Å—Ç—Ä–æ–∫–∞ 65)
- `handlerWithCustomUrl = new MistralHandler({` (—Å—Ç—Ä–æ–∫–∞ 66)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 84)
- `iterator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await iterator.next()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `iterator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ lmstudio.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutUrl = new LmStudioHandler({` (—Å—Ç—Ä–æ–∫–∞ 87)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 96)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 160)

#### üìÑ lite-llm.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockCreate = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 93)
- `createCall = mockOpenAIClient.chat.completions.create.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 99)
- `userMessageIndices = createCall.messages` (—Å—Ç—Ä–æ–∫–∞ 114)
- `lastUserIdx = userMessageIndices[userMessageIndices.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 118)
- `secondLastUserIdx = userMessageIndices[userMessageIndices.length - 2]` (—Å—Ç—Ä–æ–∫–∞ 119)
- `usageChunk = results.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 148)

#### üìÑ groq.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMock = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `groqApiKey = "test-groq-api-key"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `handlerWithModel = new GroqHandler({ apiModelId: testModelId, groqApiKey: "test-groq-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 49)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `expectedResponse = "This is a test response from Groq"` (—Å—Ç—Ä–æ–∫–∞ 56)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `errorMessage = "Groq API error"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `testContent = "This is test content from Groq stream"` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 85)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 107)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `modelInfo = groqModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handlerWithModel = new GroqHandler({ apiModelId: modelId, groqApiKey: "test-groq-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `systemPrompt = "Test system prompt for Groq"` (—Å—Ç—Ä–æ–∫–∞ 129)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ glama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockWithResponse = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = mockCreate(...args)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 127)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `nonAnthropicOptions = {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `nonAnthropicHandler = new GlamaHandler(nonAnthropicOptions)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `modelInfo = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 219)
- `handlerWithInvalidModel = new GlamaHandler({ ...mockOptions, glamaModelId: "invalid/model" })` (—Å—Ç—Ä–æ–∫–∞ 227)
- `modelInfo = await handlerWithInvalidModel.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 228)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `GEMINI_20_FLASH_THINKING_NAME = "gemini-2.0-flash-thinking-exp-1219"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGenerateContentStream = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockGenerateContent = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockGetGenerativeModel = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 56)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 69)
- `mockError = new Error("Gemini API error")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockError = new Error("Gemini API error")` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `invalidHandler = new GeminiHandler({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `modelInfo = invalidHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 162)
- `inputTokens = 10000 // Use larger numbers for per-million pricing` (—Å—Ç—Ä–æ–∫–∞ 181)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 182)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens })` (—Å—Ç—Ä–æ–∫–∞ 187)
- `inputTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 198)
- `expectedCost = (inputTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 200)
- `outputTokens = 15000` (—Å—Ç—Ä–æ–∫–∞ 205)
- `expectedCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 207)
- `inputTokens = 10000` (—Å—Ç—Ä–æ–∫–∞ 212)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 213)
- `cacheWriteTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 214)
- `CACHE_TTL = 5 // Match the constant in gemini.ts` (—Å—Ç—Ä–æ–∫–∞ 215)
- `expectedInputCost = (inputTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 218)
- `expectedOutputCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 219)
- `expectedCost = expectedInputCost + expectedOutputCost + expectedCacheWriteCost` (—Å—Ç—Ä–æ–∫–∞ 222)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `inputTokens = 10000 // Total logical input` (—Å—Ç—Ä–æ–∫–∞ 229)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 230)
- `cacheReadTokens = 8000 // Part of inputTokens read from cache` (—Å—Ç—Ä–æ–∫–∞ 231)
- `uncachedReadTokens = inputTokens - cacheReadTokens` (—Å—Ç—Ä–æ–∫–∞ 233)
- `expectedInputCost = (uncachedReadTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 235)
- `expectedOutputCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 236)
- `expectedCacheReadCost = mockInfo.cacheReadsPrice! * (cacheReadTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `expectedCost = expectedInputCost + expectedOutputCost + expectedCacheReadCost` (—Å—Ç—Ä–æ–∫–∞ 238)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens, cacheReadTokens })` (—Å—Ç—Ä–æ–∫–∞ 240)
- `cost = handler.calculateCost({ info: incompleteInfo, inputTokens: 1000, outputTokens: 1000 })` (—Å—Ç—Ä–æ–∫–∞ 247)

#### üìÑ gemini-handler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `options = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `stub = vi.fn().mockReturnValue((async function* () {})())` (—Å—Ç—Ä–æ–∫–∞ 14)
- `config = stub.mock.calls[0][0].config` (—Å—Ç—Ä–æ–∫–∞ 18)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `stub = vi.fn().mockResolvedValue({ text: "ok" })` (—Å—Ç—Ä–æ–∫–∞ 29)
- `res = await handler.completePrompt("hi")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `promptConfig = stub.mock.calls[0][0].config` (—Å—Ç—Ä–æ–∫–∞ 34)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockStream = async function* () {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `stub = vi.fn().mockReturnValue(mockStream())` (—Å—Ç—Ä–æ–∫–∞ 60)
- `messages = []` (—Å—Ç—Ä–æ–∫–∞ 64)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockStream = async function* () {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `stub = vi.fn().mockReturnValue(mockStream())` (—Å—Ç—Ä–æ–∫–∞ 99)
- `messages = []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `sourceMessage = messages.find((m) => m.type === "text" && m.text?.includes("[2]"))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockError = new Error("API rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `stub = vi.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `generator = handler.createMessage("test", [] as any)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ deepseek.spec.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestDeepSeekHandler extends DeepSeekHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 254)

- `class TestDeepSeekHandler extends DeepSeekHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 282)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 109)
- `handlerWithoutBaseUrl = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 117)
- `customBaseUrl = "https://custom.deepseek.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `handlerWithCustomUrl = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 132)
- `_handler = new DeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `handlerWithInvalidModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 164)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `handlerWithoutModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 198)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 219)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 231)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 244)
- `testHandler = new TestDeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `testHandler = new TestDeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 290)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 297)

#### üìÑ constants.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 23)
- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 36)
- `version = userAgent.split("/")[1]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `headerKeys = Object.keys(DEFAULT_HEADERS)` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ claude-code.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockRunClaudeCode = vi.mocked(runClaudeCode)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockFilterMessages = vi.mocked(filterMessagesForClaudeCode)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handlerWithInvalidModel = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `model = handlerWithMaxTokens.getModel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `model = handlerWithMaxTokens.getModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `filteredMessages = [{ role: "user" as const, content: "Hello (filtered)" }]` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 117)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 118)
- `filteredMessages = [{ role: "user" as const, content: "Hello (filtered)" }]` (—Å—Ç—Ä–æ–∫–∞ 119)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `stream = handlerWithMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 150)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 178)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 192)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 193)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 223)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 237)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 238)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 295)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 303)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 321)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 322)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 325)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 378)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 379)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 402)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 406)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 458)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 481)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 482)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 485)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 512)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 513)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 520)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 521)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 522)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 525)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 554)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 555)

#### üìÑ claude-code-caching.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 78)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 80)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 86)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 166)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 168)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 173)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 230)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 232)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 246)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 294)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 296)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 301)

#### üìÑ chutes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `chutesApiKey = "test-chutes-api-key"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 121)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 135)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 143)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 155)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 162)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 173)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 195)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 218)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `expectedResponse = "This is a test response from Chutes"` (—Å—Ç—Ä–æ–∫–∞ 240)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `errorMessage = "Chutes API error"` (—Å—Ç—Ä–æ–∫–∞ 247)
- `testContent = "This is test content from Chutes stream"` (—Å—Ç—Ä–æ–∫–∞ 253)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 269)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 291)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 309)
- `systemPrompt = "Test system prompt for Chutes"` (—Å—Ç—Ä–æ–∫–∞ 314)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `modelInfo = chutesModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 335)
- `handlerWithModel = new ChutesHandler({ apiModelId: modelId, chutesApiKey: "test-chutes-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 336)
- `systemPrompt = "Test system prompt for Chutes"` (—Å—Ç—Ä–æ–∫–∞ 348)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 368)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 372)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 378)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ cerebras.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOptions = {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `handlerWithoutModel = new CerebrasHandler({ cerebrasApiKey: "test" })` (—Å—Ç—Ä–æ–∫–∞ 59)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `generator = handler.createMessage("System prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 96)
- `mockErrorResponse = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `generator = handler.createMessage("System prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handlerWithTemp = new CerebrasHandler({` (—Å—Ç—Ä–æ–∫–∞ 135)
- `requestBody = JSON.parse(vi.mocked(fetch).mock.calls[0][1]?.body as string)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 163)

#### üìÑ bedrock.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFromIni = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockSend = vi.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockConverseStreamCommand = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockConverseStreamCommand = vi.mocked(ConverseStreamCommand)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockBedrockRuntimeClient = vi.mocked(BedrockRuntimeClient)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `customArnHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 63)
- `modelInfo = customArnHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `customArnHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 78)
- `modelInfo = customArnHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 98)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 106)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 114)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 122)
- `isSystemInferenceProfile = (AwsBedrockHandler as any).isSystemInferenceProfile` (—Å—Ç—Ä–æ–∫–∞ 132)
- `isSystemInferenceProfile = (AwsBedrockHandler as any).isSystemInferenceProfile` (—Å—Ç—Ä–æ–∫–∞ 140)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 190)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 214)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `euHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `apacHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 235)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 248)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 256)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 261)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 269)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 276)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 283)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 285)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 295)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 304)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 314)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `euResult = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 323)
- `apacResult = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 326)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 338)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 348)
- `mockImageData = Buffer.from("test-image-data").toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 387)
- `commandArg = mockConverseStreamCommand.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 392)
- `imageBlock = commandArg.messages![0].content![0]` (—Å—Ç—Ä–æ–∫–∞ 395)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `commandArg = mockConverseStreamCommand.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 461)
- `firstImage = commandArg.messages![0].content![0]` (—Å—Ç—Ä–æ–∫–∞ 464)
- `secondImage = commandArg.messages![0].content![2]` (—Å—Ç—Ä–æ–∫–∞ 465)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 513)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 521)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 534)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 543)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 551)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 558)

#### üìÑ bedrock-vpc-endpoint.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFromIni = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockSend = vi.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockBedrockRuntimeClient = vi.fn().mockImplementation(() => ({` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockBedrockRuntimeClient = vi.mocked(BedrockRuntimeClient)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 161)

#### üìÑ bedrock-reasoning.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 86)
- `reasoningChunks = chunks.filter((c) => c.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 101)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `metadata = {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `stream = handler.createMessage("System prompt", messages, metadata)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 135)
- `messages = [{ role: "user" as const, content: "Test" }]` (—Å—Ç—Ä–æ–∫–∞ 168)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 211)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 214)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 255)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 258)
- `reasoningChunks = chunks.filter((c) => c.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 304)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 307)
- `textChunks = chunks.filter((c) => c.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 323)

#### üìÑ bedrock-invokedModelId.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockStream(events: S)` (—Å—Ç—Ä–æ–∫–∞ 78)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSend = vitest.fn().mockImplementation(async () => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `initialModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `getModelByIdSpy = vitest.spyOn(handler, "getModelById")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 156)
- `events = []` (—Å—Ç—Ä–æ–∫–∞ 159)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `usageEvents = events.filter((event) => event.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `lastUsageEvent = usageEvents[usageEvents.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 177)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 198)
- `initialModelConfig = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 230)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 280)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 288)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 301)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 339)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 347)

#### üìÑ bedrock-inference-profiles.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createHandler(options: P)` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createHandler = (options: Partial<ApiHandlerOptions> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `lengths = AWS_INFERENCE_PROFILE_MAPPING.map(([pattern]) => pattern.length)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `sortedLengths = [...lengths].sort((a, b) => b - a)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 119)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 125)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 130)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 136)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 141)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 163)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 169)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 185)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `testModels = [` (—Å—Ç—Ä–æ–∫–∞ 208)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 216)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `govHandler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 229)
- `govModel = govHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `usHandler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 239)
- `usModel = usHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 245)

#### üìÑ bedrock-error-handling.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSend = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `createMockError = (options: {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `error = new Error(options.message || "Test error") as any` (—Å—Ç—Ä–æ–∫–∞ 53)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 79)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `throttlingMessages = [` (—Å—Ç—Ä–æ–∫–∞ 142)
- `throttleError = createMockError({ message })` (—Å—Ç—Ä–æ–∫–∞ 153)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 167)
- `quotaError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 193)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `modelError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `serverError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 234)
- `tokenErrors = [` (—Å—Ç—Ä–æ–∫–∞ 244)
- `tokenError = createMockError({ message })` (—Å—Ç—Ä–æ–∫–∞ 252)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 269)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 274)
- `generator = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 286)
- `genericError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 298)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 303)
- `generator = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 315)
- `mixedError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 336)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 344)
- `specificError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 353)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 361)
- `unknownError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 371)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 388)
- `tokenError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 411)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 421)
- `stream = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 434)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 451)
- `promises = Array.from({ length: 5 }, () => handler.completePrompt("test"))` (—Å—Ç—Ä–æ–∫–∞ 460)
- `results = await Promise.allSettled(promises)` (—Å—Ç—Ä–æ–∫–∞ 463)
- `mixedError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 475)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 504)
- `stream = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 517)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 518)
- `unusualError = {` (—Å—Ç—Ä–æ–∫–∞ 534)

#### üìÑ bedrock-custom-arn.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createHandler(options: P)` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockModule = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `createHandler = (options: Partial<ApiHandlerOptions> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `arn = "arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `arn = "arn:aws:bedrock:us-west-2:123456789012:inference-profile/custom-profile"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `result = (handler as any).parseArn(arn, "us-west-2")` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `arn = "arn:aws:bedrock:eu-west-1:123456789012:prompt-router/custom-router-name"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = (handler as any).parseArn(arn, "eu-west-1")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `arn = "arn:aws:bedrock:eu-west-1::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 154)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 167)
- `arn = "arn:aws:bedrock:us-east-1:123456789012:some-other-resource"` (—Å—Ç—Ä–æ–∫–∞ 168)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 183)
- `arn = "invalid-arn-format"` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = (handler as any).parseArn(arn)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 210)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `infoSpy = vitest.spyOn(logger, "info")` (—Å—Ç—Ä–æ–∫–∞ 233)

#### üìÑ anthropic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockAnthropicConstructor = vitest.fn().mockImplementation(() => ({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockAnthropicConstructor = vitest.mocked(Anthropic)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handlerWithoutKey = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 89)
- `customBaseUrl = "https://custom.anthropic.com"` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 106)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 116)
- `customBaseUrl = "https://custom.anthropic.com"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 128)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 141)
- `stream = handler.createMessage(systemPrompt, [` (—Å—Ç—Ä–æ–∫–∞ 144)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `handlerWithoutModel = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 225)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handler = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `handler = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 255)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 262)

#### üìÑ anthropic-vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 90)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 200)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `mockCreate = vitest.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 279)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 314)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 322)
- `stream = handler.createMessage(systemPrompt, [` (—Å—Ç—Ä–æ–∫–∞ 325)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 346)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 414)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 436)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 444)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 455)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 470)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 479)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 515)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 523)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 526)
- `reasoningChunks = chunks.filter((chunk) => chunk.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 534)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 540)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 553)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 572)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 580)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 583)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 614)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 637)
- `mockCreate = vitest.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 638)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 653)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 658)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 669)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 674)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `handler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 695)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 702)
- `handler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 709)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 716)
- `thinkingHandler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 725)
- `modelInfo = thinkingHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 733)
- `handlerWithBudget = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 742)
- `handlerWithDefaultBudget = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 753)
- `handlerWithSmallMaxTokens = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 763)
- `thinkingHandler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 774)
- `mockCreate = vitest.fn().mockImplementation(async (options) => {` (—Å—Ç—Ä–æ–∫–∞ 782)

### üìÇ packages/types/src/providers

#### üìÑ xai.ts

#### üìÑ vscode-llm.ts

#### üìÑ vertex.ts

#### üìÑ unbound.ts

#### üìÑ sambanova.ts

#### üìÑ requesty.ts

#### üìÑ openrouter.ts

#### üìÑ openai.ts

#### üìÑ ollama.ts

#### üìÑ moonshot.ts

#### üìÑ mistral.ts

#### üìÑ lm-studio.ts

#### üìÑ lite-llm.ts

#### üìÑ index.ts

#### üìÑ huggingface.ts

#### üìÑ groq.ts

#### üìÑ glama.ts

#### üìÑ gemini.ts

#### üìÑ doubao.ts

#### üìÑ deepseek.ts

#### üìÑ claude-code.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `VERTEX_DATE_PATTERN = /-(\d{8})$/` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ chutes.ts

#### üìÑ cerebras.ts

#### üìÑ bedrock.ts

#### üìÑ anthropic.ts

### üìÇ packages/types/src/__tests__

#### üìÑ provider-settings.test.ts

#### üìÑ index.test.ts

### üìÇ packages/telemetry/src/__tests__

#### üìÑ PostHogTelemetryClient.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getPrivateProperty = <T>(instance: any, propertyName: string): T => {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 62)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `isPropertyCapturable = getPrivateProperty<(propertyName: string) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 87)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 173)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 205)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 212)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 237)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 261)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 273)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 285)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 317)
- `captureCall = mockPostHogClient.capture.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 352)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 361)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 374)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 387)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 401)

#### üìÑ PostHogTelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 33)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 46)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 59)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 71)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 85)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 94)

### üìÇ packages/evals/src/exercises

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `__dirname = path.dirname(fileURLToPath(import.meta.url))` (—Å—Ç—Ä–æ–∫–∞ 5)
- `targetPath = path.resolve(basePath, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `entries = await fs.readdir(targetPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ packages/evals/src/db

#### üìÑ schema.ts

#### üìÑ index.ts

#### üìÑ db.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getProductionClient()` (—Å—Ç—Ä–æ–∫–∞ 22)
- `async disconnect()` (—Å—Ç—Ä–æ–∫–∞ 35)

**–¢–∏–ø—ã:**

- `type DatabaseOrTransaction` (—Å—Ç—Ä–æ–∫–∞ 43)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pgClient = postgres(process.env.DATABASE_URL!, { prepare: false })` (—Å—Ç—Ä–æ–∫–∞ 6)
- `client = drizzle({ client: pgClient, schema })` (—Å—Ç—Ä–æ–∫–∞ 7)
- `getProductionClient = () => {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `disconnect = async () => {` (—Å—Ç—Ä–æ–∫–∞ 35)

### üìÇ packages/evals/src/cli

#### üìÑ utils.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LoggerOptions` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timestamp = new Date().toISOString()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `logLine = `[${timestamp} | ${level} | ${this.tag}] ${message} ${` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ runUnitTest.ts

**–¢–∏–ø—ã:**

- `type RunUnitTestOptions` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `UNIT_TEST_TIMEOUT = 2 * 60 * 1_000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cmd = testCommands[task.language]` (—Å—Ç—Ä–æ–∫–∞ 27)
- `cwd = path.resolve(EVALS_REPO_PATH, task.language, task.exercise)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `commands = cmd.commands.map((cs) => parseCommandString(cs))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `subprocess = execa({ cwd, shell: "/bin/bash", reject: false })`${command}`` (—Å—Ç—Ä–æ–∫–∞ 36)
- `timeout = setTimeout(async () => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `descendants = await new Promise<number[]>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = await subprocess` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ runEvals.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await findRun(runId)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `tasks = await getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `containerized = isDockerContainer()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `logger = new Logger({` (—Å—Ç—Ä–æ–∫–∞ 25)
- `heartbeat = await startHeartbeat(run.id)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `queue = new PQueue({ concurrency: run.concurrency })` (—Å—Ç—Ä–æ–∫–∞ 38)
- `result = await finishRun(run.id)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ runCi.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({ model: "anthropic/claude-sonnet-4", socketPath: "", concurrency })` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ redis.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `runnersKey = getRunnersKey(runId)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `pid = process.pid.toString()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `heartbeatKey = getHeartbeatKey(runId)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async main()` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `main = async () => {` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ packages/cloud/src/auth

#### üìÑ index.ts

#### üìÑ StaticTokenAuthService.ts

#### üìÑ AuthService.ts

### üìÇ packages/cloud/src/__tests__

#### üìÑ TelemetryClient.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `getPrivateProperty = <T>(instance: any, propertyName: string): T => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 57)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 71)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 88)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 105)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 120)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 133)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 146)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 176)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `consoleErrorSpy = vi.spyOn(console, "error")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 236)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 240)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 332)
- `providerProperties = {` (—Å—Ç—Ä–æ–∫–∞ 334)
- `eventProperties = {` (—Å—Ç—Ä–æ–∫–∞ 344)
- `mockValidatedData = {` (—Å—Ç—Ä–æ–∫–∞ 348)
- `eventProperties = {` (—Å—Ç—Ä–æ–∫–∞ 383)
- `mockValidatedData = {` (—Å—Ç—Ä–æ–∫–∞ 400)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 442)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 453)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 469)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 471)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `providerProperties = {` (—Å—Ç—Ä–æ–∫–∞ 491)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 507)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 536)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 537)
- `propertiesJson = formData.get("properties") as string` (—Å—Ç—Ä–æ–∫–∞ 542)
- `parsedProperties = JSON.parse(propertiesJson)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 549)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 555)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 560)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 568)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 591)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 592)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 608)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 614)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 619)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 621)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 644)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 645)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 661)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 667)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 672)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 676)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 703)
- `client = new TelemetryClient(mockAuthService, mockSettingsService, true)` (—Å—Ç—Ä–æ–∫–∞ 720)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 722)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 742)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 758)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 759)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 762)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 768)

#### üìÑ StaticSettingsService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `validBase64 = Buffer.from(JSON.stringify(validSettings)).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `invalidJson = Buffer.from("{ invalid json }").toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `invalidSettings = { invalid: "schema" }` (—Å—Ç—Ä–æ–∫–∞ 45)
- `invalidBase64 = Buffer.from(JSON.stringify(invalidSettings)).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `consoleSpy = vi.spyOn(console, "log").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ ShareService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await shareService.shareTask("task-123", "organization")` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = await shareService.shareTask("task-123", "public")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await shareService.shareTask("task-123")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `result = await shareService.shareTask("task-123", "organization")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 242)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 255)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 275)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 293)

#### üìÑ RefreshTimer.test.ts

#### üìÑ CloudSettingsService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `service = new CloudSettingsService(mockContext, mockAuthService as unknown as AuthService)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `cachedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 100)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `cachedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 130)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 172)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 182)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `previousSettings = {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `newSettings = {` (—Å—Ç—Ä–æ–∫–∞ 199)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 222)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 268)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 303)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 310)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 316)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 337)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 355)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 372)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `allowList = cloudSettingsService.getAllowList()` (—Å—Ç—Ä–æ–∫–∞ 388)
- `allowList = cloudSettingsService.getAllowList()` (—Å—Ç—Ä–æ–∫–∞ 393)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 409)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 416)
- `settings = testService.getSettings()` (—Å—Ç—Ä–æ–∫–∞ 423)
- `settings = cloudSettingsService.getSettings()` (—Å—Ç—Ä–æ–∫–∞ 430)
- `removeAllListenersSpy = vi.spyOn(cloudSettingsService, "removeAllListeners")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `authStateChangedHandler = mockAuthService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 451)
- `authStateChangedHandler = mockAuthService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 465)

#### üìÑ CloudService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `cloudService = await CloudService.createInstance(mockContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = cloudService.isAuthenticated()` (—Å—Ç—Ä–æ–∫–∞ 218)
- `result = cloudService.hasActiveSession()` (—Å—Ç—Ä–æ–∫–∞ 224)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 235)
- `result = cloudService.getOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `result = cloudService.getOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `result = cloudService.getOrganizationName()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = cloudService.getOrganizationName()` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result = cloudService.getOrganizationRole()` (—Å—Ç—Ä–æ–∫–∞ 288)
- `result = cloudService.getOrganizationRole()` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result = cloudService.getAuthState()` (—Å—Ç—Ä–æ–∫–∞ 301)
- `result = cloudService.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `result = cloudService.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `result = cloudService.hasStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 334)
- `result = cloudService.hasStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 341)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `mockCloudSettingsService = Object.create(CloudSettingsService.prototype)` (—Å—Ç—Ä–æ–∫–∞ 390)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 403)
- `registeredListener = mockCloudSettingsService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 409)
- `mockStaticSettingsService = {` (—Å—Ç—Ä–æ–∫–∞ 424)
- `_cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 439)
- `settingsListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 459)
- `serviceSettingsListener = mockSettingsService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 463)
- `settingsData = {` (—Å—Ç—Ä–æ–∫–∞ 470)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 505)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 506)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 516)
- `result = await cloudService.shareTask(taskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 519)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 528)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 529)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 539)
- `result = await cloudService.shareTask(taskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 546)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 557)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 558)
- `taskNotFoundError = new TaskNotFoundError(taskId)` (—Å—Ç—Ä–æ–∫–∞ 560)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 570)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 571)
- `genericError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 581)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 591)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 592)
- `result = await cloudService.shareTask(taskId)` (—Å—Ç—Ä–æ–∫–∞ 595)

#### üìÑ CloudService.integration.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 74)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 79)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 101)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 139)

### üìÇ packages/cloud/src/__mocks__

#### üìÑ vscode.ts

### üìÇ build-src/webview-ui/src/vite-plugins

#### üìÑ sourcemapPlugin.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mode = process.env.NODE_ENV` (—Å—Ç—Ä–æ–∫–∞ 21)
- `assetsDir = path.join(outDir, "assets")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `jsFiles = fs.readdirSync(assetsDir).filter((file) => file.endsWith(".js"))` (—Å—Ç—Ä–æ–∫–∞ 47)
- `jsPath = path.join(assetsDir, jsFile)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `mapPath = jsPath + ".map"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mapContent = JSON.parse(fs.readFileSync(mapPath, "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 76)

### üìÇ build-src/webview-ui/src/oauth

#### üìÑ urls.ts

### üìÇ build-src/webview-ui/src/utils

#### üìÑ validate.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `validateModelsAndKeysProvided(apiConfiguration: P): string | undefined` (—Å—Ç—Ä–æ–∫–∞ 28)
- `getModelIdForProvider(apiConfiguration: P, provider: s): string | undefined` (—Å—Ç—Ä–æ–∫–∞ 161)

**–¢–∏–ø—ã:**

- `type ValidationError` (—Å—Ç—Ä–æ–∫–∞ 123)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `keysAndIdsPresentErrorMessage = validateModelsAndKeysProvided(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `organizationAllowListError = validateProviderAgainstOrganizationSettings(` (—Å—Ç—Ä–æ–∫–∞ 17)
- `provider = apiConfiguration.apiProvider` (—Å—Ç—Ä–æ–∫–∞ 133)
- `providerConfig = organizationAllowList.providers[provider]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `modelId = getModelIdForProvider(apiConfiguration, provider)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `allowedModels = providerConfig.models || []` (—Å—Ç—Ä–æ–∫–∞ 146)
- `arnRegex = /^arn:aws:(?:bedrock|sagemaker):([^:]+):([^:]*):(?:([^/]+)\/([\w.\-:]+)|([^/]+))$/` (—Å—Ç—Ä–æ–∫–∞ 196)
- `match = arn.match(arnRegex)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `arnRegion = match[1]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `provider = apiConfiguration.apiProvider ?? ""` (—Å—Ç—Ä–æ–∫–∞ 224)
- `models = routerModels?.[provider]` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelId = getModelIdForProvider(apiConfiguration, apiConfiguration.apiProvider || "")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `configWithModelId = {` (—Å—Ç—Ä–æ–∫–∞ 279)
- `orgError = validateProviderAgainstOrganizationSettings(configWithModelId, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `keysAndIdsPresentErrorMessage = validateModelsAndKeysProvided(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `organizationAllowListError = validateProviderAgainstOrganizationSettings(` (—Å—Ç—Ä–æ–∫–∞ 307)

#### üìÑ useDebounceEffect.ts

**–¢–∏–ø—ã:**

- `type VoidFn` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `callbackRef = useRef<VoidFn>(effect)` - Runs `effectRef.current()` after `delay` ms whenever any of the `deps` change, but cancels/re-schedules if they change again before the delay. (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ url.ts

#### üìÑ textMateToHljs.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `constructTheme(tmTheme: F): Record<string, string>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fallbackTheme()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `parseHexColor(hexColor: s)` (—Å—Ç—Ä–æ–∫–∞ 138)

**–¢–∏–ø—ã:**

- `type FullColorTheme` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rules = tmTheme["rules"] || []` (—Å—Ç—Ä–æ–∫–∞ 41)
- `tokens = hljsToTextMate[className]` (—Å—Ç—Ä–æ–∫–∞ 53)
- `styles = getComputedStyle(document.body)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `backgroundColor = styles.getPropertyValue("--vscode-editor-background")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `avg = (r + g + b) / 3` (—Å—Ç—Ä–æ–∫–∞ 73)
- `r = parseInt(hexColor.substring(0, 2), 16)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `g = parseInt(hexColor.substring(2, 4), 16)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `b = parseInt(hexColor.substring(4, 6), 16)` (—Å—Ç—Ä–æ–∫–∞ 153)

#### üìÑ sourceMapUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tempError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `errorMessage = stack.split("\n")[0]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `stackFrames = await StackTrace.fromError(tempError)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mappedFrames = stackFrames.map((frame: StackTrace.StackFrame) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `functionName = frame.functionName || "<anonymous>"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `fileName = frame.fileName || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lineNumber = frame.lineNumber || 0` (—Å—Ç—Ä–æ–∫–∞ 40)
- `columnNumber = frame.columnNumber || 0` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = [errorMessage, ...mappedFrames].join("\n")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `lines = componentStack.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mappedLines = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 71)
- `match = line.match(/at\s+(.+?)\s+\((.+?):(\d+):(\d+)\)/)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `syntheticError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `stackFrames = await StackTrace.fromError(syntheticError)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `frame = stackFrames[0]` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mappedFileName = frame.fileName || fileName` (—Å—Ç—Ä–æ–∫–∞ 93)
- `mappedLineNumber = frame.lineNumber || parseInt(lineNumber, 10)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mappedColumnNumber = frame.columnNumber || parseInt(columnNumber, 10)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = mappedLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `stackPromise = applySourceMapsToStack(error.stack)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `componentStackPromise = componentStack` (—Å—Ç—Ä–æ–∫–∞ 131)
- `tempError = new Error()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `frames = await StackTrace.fromError(tempError)` (—Å—Ç—Ä–æ–∫–∞ 178)

#### üìÑ sourceMapInitializer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `enhancedError = await enhanceErrorWithSourceMaps(event.error)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `enhancedError = await enhanceErrorWithSourceMaps(event.reason)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `scripts = document.getElementsByTagName("script")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `script = scripts[i]` (—Å—Ç—Ä–æ–∫–∞ 60)
- `possibleMapUrls = [` (—Å—Ç—Ä–æ–∫–∞ 63)
- `link = document.createElement("link")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `sourceMappingURLMatch = content.match(/\/\/[#@]\s*sourceMappingURL=([^\s]+)/)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `sourceMappingURL = sourceMappingURLMatch[1]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `scriptUrlObj = new URL(script.src)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `baseUrl = scriptUrlObj.href.substring(0, scriptUrlObj.href.lastIndexOf("/") + 1)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `fullUrl = new URL(sourceMappingURL, baseUrl).href` (—Å—Ç—Ä–æ–∫–∞ 93)
- `link = document.createElement("link")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `response = await fetch(`${scriptUrl}.map`)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `sourceMap = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 161)

#### üìÑ removeLeadingNonAlphanumeric.ts

#### üìÑ path-mentions.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `protocolStripped = path.substring("vscode-remote://".length)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `firstSlashIndex = protocolStripped.indexOf("/")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `normalizedPath = pathWithoutProtocol.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `lowerPath = normalizedPath.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `lowerCwd = normalizedCwd.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `escapedRelativePath = escapeSpaces(relativePath)` (—Å—Ç—Ä–æ–∫–∞ 74)

#### üìÑ model-utils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `safeContextWindow = Math.max(0, contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `safeContextTokens = Math.max(0, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `availableSize = Math.max(0, safeContextWindow - safeContextTokens - reservedForOutput)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `total = safeContextTokens + reservedForOutput + availableSize` (—Å—Ç—Ä–æ–∫–∞ 61)

#### üìÑ mcp.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pattern = String(template.uriTemplate)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `regex = new RegExp(`^${pattern}$`)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `exactMatch = resources.find((resource) => resource.uri === uri)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ imageUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `imagesToAdd = newImages ?? []` - Utility function to append new images to existing images array while respecting the maximum image limit (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ highlighter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `warnedLanguages = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `normalizedInput = language.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `LANGUAGE_LOAD_DELAY = 0` (—Å—Ç—Ä–æ–∫–∞ 125)
- `shikilang = normalizeLanguage(language)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `instance = await createHighlighter({` (—Å—Ç—Ä–æ–∫–∞ 153)
- `instance = await state.instanceInitPromise` (—Å—Ç—Ä–æ–∫–∞ 171)

#### üìÑ highlight.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `escapeHtml(text: s): string` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapeHtmlCache = new LRUCache<string, string>({ max: 500 })` (—Å—Ç—Ä–æ–∫–∞ 4)
- `cached = escapeHtmlCache.get(text)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `escaped = text` (—Å—Ç—Ä–æ–∫–∞ 14)
- `escapedText = escapeHtml(part.text)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ getLanguageFromPath.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extension = path.split(".").pop()?.toLowerCase() || ""` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ formatPrice.ts

#### üìÑ format.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `date = new Date(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `locale = i18next.language || "en"` (—Å—Ç—Ä–æ–∫–∞ 18)
- `dateStr = date.toLocaleString(locale, {` (—Å—Ç—Ä–æ–∫–∞ 21)

#### üìÑ docLinks.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cleanPath = path.replace(/^\//, "")` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ context-mentions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getModeDescription(mode: M): string` - Gets the description for a mode, prioritizing description > whenToUse > roleDefinition and taking only the first line (—Å—Ç—Ä–æ–∫–∞ 14)
- `getBasename(filepath: s): string` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `afterCursor = text.slice(position)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `lastAtIndex = beforeCursor.lastIndexOf("@")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `beforeMention = text.slice(0, lastAtIndex)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `afterCursorContent = /^[a-zA-Z0-9\s]*$/.test(afterCursor)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `afterCursor = text.slice(position)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `matchEnd = beforeCursor.match(new RegExp(mentionRegex.source + "$"))` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mentionLength = matchEnd[0].length` (—Å—Ç—Ä–æ–∫–∞ 89)
- `newText = text.slice(0, position - mentionLength) + afterCursor.replace(/^\s/, "")` (—Å—Ç—Ä–æ–∫–∞ 91)
- `newPosition = position - mentionLength` (—Å—Ç—Ä–æ–∫–∞ 92)
- `slashQuery = query.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `searchableCommands = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 142)
- `fzf = new Fzf(searchableCommands, {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `matchingCommands = slashQuery` (—Å—Ç—Ä–æ–∫–∞ 153)
- `searchableItems = modes.map((mode) => ({` (—Å—Ç—Ä–æ–∫–∞ 181)
- `fzf = new Fzf(searchableItems, {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `matchingModes = slashQuery` (—Å—Ç—Ä–æ–∫–∞ 192)
- `files = queryItems` (—Å—Ç—Ä–æ–∫–∞ 228)
- `folders = queryItems` (—Å—Ç—Ä–æ–∫–∞ 241)
- `commits = queryItems.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `lowerQuery = query.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `exactMatches = queryItems.filter(` (—Å—Ç—Ä–æ–∫–∞ 288)
- `searchableItems = queryItems.map((item) => ({` (—Å—Ç—Ä–æ–∫–∞ 305)
- `fzf = new Fzf(searchableItems, {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `matchingItems = query ? fzf.find(query).map((result) => result.item.original) : []` (—Å—Ç—Ä–æ–∫–∞ 316)
- `openedFileMatches = matchingItems.filter((item) => item.type === ContextMenuOptionType.OpenedFile)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `gitMatches = matchingItems.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `searchResultItems = dynamicSearchResults.map((result) => {` (—Å—Ç—Ä–æ–∫–∞ 324)
- `formattedPath = result.path.startsWith("/") ? result.path : `/${result.path}`` (—Å—Ç—Ä–æ–∫–∞ 326)
- `displayPath = formattedPath` (—Å—Ç—Ä–æ–∫–∞ 329)
- `displayName = result.label || getBasename(result.path)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `allItems = [...suggestions, ...openedFileMatches, ...searchResultItems, ...gitMatches]` (—Å—Ç—Ä–æ–∫–∞ 343)
- `seen = new Set()` (—Å—Ç—Ä–æ–∫–∞ 346)
- `deduped = allItems.filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 347)
- `normalizedValue = item.value` (—Å—Ç—Ä–æ–∫–∞ 349)
- `beforeCursor = text.slice(0, position)` (—Å—Ç—Ä–æ–∫–∞ 369)
- `atIndex = beforeCursor.lastIndexOf("@")` (—Å—Ç—Ä–æ–∫–∞ 377)
- `textAfterAt = beforeCursor.slice(atIndex + 1)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `hasUnescapedSpace = /(?<!\\)\s/.test(textAfterAt)` (—Å—Ç—Ä–æ–∫–∞ 388)

#### üìÑ command-validation.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseCommandLine(command: s): string[]` - Parse a single line of commands (internal helper function) (—Å—Ç—Ä–æ–∫–∞ 184)

**–¢–∏–ø—ã:**

- `type ShellToken` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commandSubstitutionPatterns = /(\$\()|`|(<\(|>\()|(\$\(\()|(\$\[)/.test(source)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `subshellGroupingPattern = /\([^)]*[` (—Å—Ç—Ä–æ–∫–∞ 114)
- `lines = command.split(/\r\n|\r|\n/)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `lineCommands = parseCommandLine(line)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `fallbackCommands = processedCommand` (—Å—Ç—Ä–æ–∫–∞ 266)
- `subshellMatch = token.match(/__SUBSH_(\d+)__/)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `trimmedCommand = command.trim().toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 367)
- `lowerPrefix = prefix.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 371)
- `hasWildcard = allowedCommands.some((cmd) => cmd.toLowerCase() === "*")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `trimmedCommand = command.trim().toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `lowerPrefix = prefix.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 408)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands)` (—Å—Ç—Ä–æ–∫–∞ 416)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 448)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 516)
- `cmdWithoutRedirection = cmd.replace(/\d*>&\d*/, "").trim()` (—Å—Ç—Ä–æ–∫–∞ 521)
- `longestAllowedMatch = findLongestPrefixMatch(command, allowedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 593)
- `longestDeniedMatch = findLongestPrefixMatch(command, deniedCommands || [])` (—Å—Ç—Ä–æ–∫–∞ 594)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `hasSubshells = containsSubshell(command)` (—Å—Ç—Ä–æ–∫–∞ 687)
- `allowedMatches = subCommands.map((cmd) => ({` (—Å—Ç—Ä–æ–∫–∞ 689)
- `deniedMatches = subCommands.map((cmd) => ({` (—Å—Ç—Ä–æ–∫–∞ 694)
- `results = new Map<string, CommandDecision>()` (—Å—Ç—Ä–æ–∫–∞ 713)

#### üìÑ command-parser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `extractFromTokens(tokens: s, patterns: S): void` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `patterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `parsed = parse(command)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `commandSeparators = new Set(["|", "&&", "||", "` (—Å—Ç—Ä–æ–∫–∞ 15)
- `firstWord = command.trim().split(/\s+/)[0]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mainCmd = tokens[0]` (—Å—Ç—Ä–æ–∫–∞ 47)
- `breakingExps = [/^-/, /[\\/:.~ ]/]` (—Å—Ç—Ä–æ–∫–∞ 55)
- `maxLevels = Math.min(tokens.length, 3)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `arg = tokens[i]` (—Å—Ç—Ä–æ–∫–∞ 61)
- `pattern = tokens.slice(0, i + 1).join(" ")` (—Å—Ç—Ä–æ–∫–∞ 65)

#### üìÑ clipboard.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CopyOptions` - Options for copying text to clipboard (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `err = error instanceof Error ? error : new Error("Failed to copy to clipboard")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `copyWithFeedback = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 38)
- `success = await copyToClipboard(text, {` (—Å—Ç—Ä–æ–∫–∞ 47)

#### üìÑ test-utils.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AllTheProviders()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `customRender(ui: R)` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AllTheProvidersProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `AllTheProviders = ({ children }: AllTheProvidersProps) => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `customRender = (ui: React.ReactElement, options?: Omit<RenderOptions, "wrapper">) =>` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ build-src/webview-ui/src/lib

#### üìÑ utils.ts

### üìÇ build-src/webview-ui/src/i18n

#### üìÑ setup.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `localeFiles = import.meta.glob("./locales/**/*.json", { eager: true })` (—Å—Ç—Ä–æ–∫–∞ 8)
- `match = path.match(/\.\/locales\/([^/]+)\/([^/]+)\.json/)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ TranslationContext.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionState = useExtensionState()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `translate = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 36)

### üìÇ build-src/webview-ui/src/hooks

#### üìÑ useTooltip.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UseTooltipOptions` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handleMouseEnter = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `handleMouseLeave = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `cleanup = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ useEscapeKey.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useEscapeKey.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 19)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 28)
- `event = new KeyboardEvent("keydown", { key: "Enter" })` (—Å—Ç—Ä–æ–∫–∞ 37)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 46)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 56)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 66)
- `stopPropagationSpy = vi.spyOn(event, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 76)
- `stopPropagationSpy = vi.spyOn(event, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 84)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `addEventListenerSpy = vi.spyOn(window, "addEventListener")` (—Å—Ç—Ä–æ–∫–∞ 117)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `event = new KeyboardEvent("keydown", { key: "Escape" })` (—Å—Ç—Ä–æ–∫–∞ 152)
- `newMockOnEscape = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ useAutoApprovalToggles.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ useAutoApprovalState.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AutoApprovalToggles` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasEnabledOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `effectiveAutoApprovalEnabled = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 21)

### üìÇ build-src/webview-ui/src/__tests__

#### üìÑ command-autocomplete.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockQueryItems = [` (—Å—Ç—Ä–æ–∫–∞ 15)
- `options = getContextMenuOptions("/", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `commandNames = commandOptions.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `options = getContextMenuOptions("/set", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], [])` (—Å—Ç—Ä–æ–∫–∞ 61)
- `options = getContextMenuOptions("/nonexistent", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `options = getContextMenuOptions("setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], specialCommands)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `setupDevOption = options.find((option) => option.value === "setup-dev")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `options = getContextMenuOptions("/test", null, mockQueryItems, [], [], commandsWithSimilarNames)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `options = getContextMenuOptions("/te", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `mockModes = [` (—Å—Ç—Ä–æ–∫–∞ 129)
- `options = getContextMenuOptions("/", null, mockQueryItems, [], mockModes, mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `modeOptions = options.filter((option) => option.type === ContextMenuOptionType.Mode)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `options = getContextMenuOptions("/co", null, mockQueryItems, [], mockModes, mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `modeOptions = options.filter((option) => option.type === ContextMenuOptionType.Mode)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 161)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `options = getContextMenuOptions("/release", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `releaseOption = options.find((option) => option.value === "release")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `setupOption = options.find((option) => option.value === "setup")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `options = getContextMenuOptions("/rel", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `releaseOption = options.find((option) => option.value === "release")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `options = getContextMenuOptions("/test", null, mockQueryItems, [], [], commandsWithEmptyHint)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `testOption = options.find((option) => option.value === "test-command")` (—Å—Ç—Ä–æ–∫–∞ 216)
- `options = getContextMenuOptions("/setup", null, mockQueryItems, [], [], undefined)` (—Å—Ç—Ä–æ–∫–∞ 224)
- `options = getContextMenuOptions("", null, mockQueryItems, [], [], mockCommands)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `options = getContextMenuOptions("/very", null, mockQueryItems, [], [], longNameCommands)` (—Å—Ç—Ä–æ–∫–∞ 243)
- `commandOptions = options.filter((option) => option.type === ContextMenuOptionType.Command)` (—Å—Ç—Ä–æ–∫–∞ 247)
- `options = getContextMenuOptions("/v", null, mockQueryItems, [], [], numericCommands)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `commandNames = options.map((option) => option.value)` (—Å—Ç—Ä–æ–∫–∞ 260)

#### üìÑ TelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `constructor = Object.getPrototypeOf(telemetryClient).constructor` (—Å—Ç—Ä–æ–∫–∞ 27)
- `API_KEY = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `DISTINCT_ID = "test-user-id"` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ ContextWindowProgressLogic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 33)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 34)
- `defaultResult = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `customMaxTokens = 1500 // Custom maxTokens instead of default 8192` (—Å—Ç—Ä–æ–∫–∞ 40)
- `customResult = calculateTokenDistribution(contextWindow, contextTokens, customMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `defaultReserved = 8192 // ANTHROPIC_DEFAULT_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 44)
- `defaultTooltip = `Reserved for model response: ${defaultReserved} tokens`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `customTooltip = `Reserved for model response: ${customMaxTokens} tokens`` (—Å—Ç—Ä–æ–∫–∞ 50)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 69)
- `contextTokens = -500 // Negative tokens should be handled gracefully` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `contextWindow = 0` (—Å—Ç—Ä–æ–∫–∞ 85)
- `contextTokens = 1000` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `totalPercentage = result.currentPercent + result.reservedPercent + result.availablePercent` (—Å—Ç—Ä–æ–∫–∞ 96)
- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 101)
- `contextTokens = 12000 // More tokens than the window size` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 104)

#### üìÑ SearchableSelect.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 56)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `option = screen.getByText("Option 2")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `disabledOption = screen.getByText("Option 3")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `clearTimeoutSpy = vi.spyOn(global, "clearTimeout")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 182)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 186)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `dropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `newDropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 240)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 241)
- `searchInput = screen.getByPlaceholderText("Search options...")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `dropdown = screen.getByRole("dialog")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 258)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 296)
- `trigger = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 300)
- `escapeEvent = new KeyboardEvent("keydown", {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `preventDefaultSpy = vi.spyOn(escapeEvent, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `stopPropagationSpy = vi.spyOn(escapeEvent, "stopPropagation")` (—Å—Ç—Ä–æ–∫–∞ 310)

#### üìÑ ErrorBoundary.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedComponent(props: a)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `ErrorThrower()` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedComponent = (props: any) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `ErrorThrower = ({ shouldThrow = false, message = "Test error" }: { shouldThrow?: boolean` (—Å—Ç—Ä–æ–∫–∞ 27)
- `spy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 60)
- `githubLink = screen.getByRole("link", { name: /errorBoundary.githubText/ })` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ ContextWindowProgress.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderComponent(props: R)` (—Å—Ç—Ä–æ–∫–∞ 48)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalModule = await vi.importActual("@src/components/chat/TaskHeader")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `renderComponent = (props: Record<string, any>) => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `tokenCount = screen.getByTestId("context-tokens-count")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `windowSize = screen.getByTestId("context-window-size")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `progressBarContainer = screen.getByTestId("context-tokens-count").parentElement` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ App.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `MockedComponent(props: a)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `tFunction(key: s)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `triggerMessage(action: s)` (—Å—Ç—Ä–æ–∫–∞ 200)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseExtensionState = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 116)
- `i18n = {` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 127)
- `MockedComponent = (props: any) => {` (—Å—Ç—Ä–æ–∫–∞ 130)
- `tFunction = (key: string) => key` (—Å—Ç—Ä–æ–∫–∞ 155)
- `triggerMessage = (action: string) => {` (—Å—Ç—Ä–æ–∫–∞ 200)
- `messageEvent = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 201)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `settingsView = await screen.findByTestId("settings-view")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 228)
- `historyView = await screen.findByTestId("history-view")` (—Å—Ç—Ä–æ–∫–∞ 239)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `mcpView = await screen.findByTestId("mcp-view")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 256)
- `promptsView = await screen.findByTestId("prompts-view")` (—Å—Ç—Ä–æ–∫–∞ 267)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `settingsView = await screen.findByTestId("settings-view")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 287)
- `viewElement = await screen.findByTestId(`${view}-view`)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 305)
- `marketplaceView = await screen.findByTestId("marketplace-view")` (—Å—Ç—Ä–æ–∫–∞ 317)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `marketplaceView = await screen.findByTestId("marketplace-view")` (—Å—Ç—Ä–æ–∫–∞ 331)
- `chatView = screen.getByTestId("chat-view")` (—Å—Ç—Ä–æ–∫–∞ 337)

### üìÇ build-src/src/utils/logging

#### üìÑ types.ts

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `noopLogger = {` - No-operation logger implementation for production environments (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ CompactTransport.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isLevelEnabled(configLevel: L, entryLevel: s): boolean` - Determines if a log entry should be processed based on configured minimum level (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `configIdx = LOG_LEVELS.indexOf(configLevel)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `entryIdx = LOG_LEVELS.indexOf(entryLevel as LogLevel)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `sessionStart = {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `deltaT = entry.t - this.lastTimestamp` (—Å—Ç—Ä–æ–∫–∞ 86)
- `compact = {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `output = JSON.stringify(compact) + "\n"` (—Å—Ç—Ä–æ–∫–∞ 94)
- `sessionEnd = {` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ CompactLogger.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `combinedMeta = this.parentMeta ? { ...this.parentMeta, ...meta } : meta` (—Å—Ç—Ä–æ–∫–∞ 77)

### üìÇ build-src/src/utils/__tests__

#### üìÑ xml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 15)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 29)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 36)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 47)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 53)
- `attributes = result.root.node` (—Å—Ç—Ä–æ–∫–∞ 54)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 88)
- `result = parseXml(xml) as any` (—Å—Ç—Ä–æ–∫–∞ 94)
- `xml = `` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = parseXml(xml, ["nestedXml"]) as any` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ xml-matcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 5)
- `chunks = [...matcher.update("<think>data</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 6)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `chunks = [...matcher.update("< think >data</ think >"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 17)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `chunks = [...matcher.update("< think 1>data</ think >"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `chunks = [...matcher.update("<>data</>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 41)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `chunks = [` (—Å—Ç—Ä–æ–∫–∞ 53)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `chunks = [...matcher.update("<think>X<think>Y</think>Z</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 75)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `chunks = [...matcher.update("<think>X<think>Y</thxink>Z</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `chunks = [...matcher.update("1<think>data</think>"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 103)
- `matcher = new XmlMatcher("think")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `chunks = [...matcher.update("<think>data"), ...matcher.final()]` (—Å—Ç—Ä–æ–∫–∞ 115)

#### üìÑ tiktoken.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await tiktoken([])` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `content = [{ type: "text" }] as any as Anthropic.Messages.ContentBlockParam[]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `expectedMinTokens = Math.ceil(Math.sqrt(base64Data.length))` (—Å—Ç—Ä–æ–∫–∞ 54)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 61)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `expectedMinTokens = 300` (—Å—Ç—Ä–æ–∫–∞ 74)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `result2 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result1 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result2 = await tiktoken(content)` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ text-normalization.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "Keep \u201Csmart quotes\u201D but normalize   whitespace"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `input = "Let\u2019s test this\u2014with some \u201Cfancy\u201D punctuation\u2026 and   spaces"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `original = "Plain text without entities"` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ shell.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockVsCodeConfig(platformKey: s, defaultProfileName: s, profiles: R)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ safeWriteJson.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async readFileContent(filePath: s): Promise<any>` (—Å—Ç—Ä–æ–∫–∞ 85)
- `async fileExists(filePath: s): Promise<boolean>` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalFsPromisesRename = actualFsPromises.rename` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalFsPromisesUnlink = actualFsPromises.unlink` (—Å—Ç—Ä–æ–∫–∞ 10)
- `originalFsPromisesWriteFile = actualFsPromises.writeFile` (—Å—Ç—Ä–æ–∫–∞ 11)
- `_originalFsPromisesAccess = actualFsPromises.access` (—Å—Ç—Ä–æ–∫–∞ 12)
- `originalFsPromisesMkdir = actualFsPromises.mkdir` (—Å—Ç—Ä–æ–∫–∞ 13)
- `actual = await vi.importActual<typeof import("fs/promises")>("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockedFs = { ...actual }` (—Å—Ç—Ä–æ–∫–∞ 18)
- `actualFs = await vi.importActual<typeof import("fs")>("fs")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `readContent = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `data = { message: "Hello, new world!" }` (—Å—Ç—Ä–æ–∫–∞ 104)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 113)
- `newData = { message: "Updated content" }` (—Å—Ç—Ä–æ–∫–∞ 114)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `data = { message: "test write failure" }` (—Å—Ç—Ä–æ–∫–∞ 128)
- `mockErrorStream = new Writable() as any` (—Å—Ç—Ä–æ–∫–∞ 130)
- `exists = await fileExists(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `initialData = { message: "Initial content, should remain" }` (—Å—Ç—Ä–æ–∫–∞ 157)
- `newData = { message: "New content, should not be written" }` (—Å—Ç—Ä–æ–∫–∞ 158)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `initialData = { message: "Initial content, should be restored" }` (—Å—Ç—Ä–æ–∫–∞ 178)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 179)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `subDir = path.join(tempDir, "new-subdir")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `filePath = path.join(subDir, "file.json")` (—Å—Ç—Ä–æ–∫–∞ 218)
- `data = { test: "directory creation" }` (—Å—Ç—Ä–æ–∫–∞ 219)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `deepDir = path.join(tempDir, "level1", "level2", "level3")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `filePath = path.join(deepDir, "deep-file.json")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `data = { nested: "deeply" }` (—Å—Ç—Ä–æ–∫–∞ 239)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `mkdirSpy = vi.spyOn(fs, "mkdir")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `error = new Error("EACCES: permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 261)
- `subDir = path.join(tempDir, "forbidden-dir")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `filePath = path.join(subDir, "file.json")` (—Å—Ç—Ä–æ–∫–∞ 267)
- `data = { test: "permission error" }` (—Å—Ç—Ä–æ–∫–∞ 268)
- `subDir = path.join(tempDir, "existing-dir")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `filePath = path.join(subDir, "new-file.json")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `data = { fresh: "file" }` (—Å—Ç—Ä–æ–∫–∞ 283)
- `content = await readFileContent(filePath)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 297)
- `newData = { message: "Successfully written new content" }` (—Å—Ç—Ä–æ–∫–∞ 298)
- `unlinkSpy = vi.spyOn(fs, "unlink")` (—Å—Ç—Ä–æ–∫–∞ 303)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 314)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Suppress console.error` (—Å—Ç—Ä–æ–∫–∞ 320)
- `initialData = { message: "Initial" }` (—Å—Ç—Ä–æ–∫–∞ 321)
- `newData = { message: "New" }` (—Å—Ç—Ä–æ–∫–∞ 322)
- `unlinkSpy = vi.spyOn(fs, "unlink")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `initialData = { message: "Initial content" }` (—Å—Ç—Ä–æ–∫–∞ 347)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 348)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 352)
- `content = await readFileContent(currentTestFilePath)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `data = { message: "test lock failure" }` (—Å—Ç—Ä–æ–∫–∞ 380)
- `lockTestFilePath = path.join(tempDir, "lock-test-file.json")` (—Å—Ç—Ä–æ–∫–∞ 383)
- `data = { message: "test lock release on error" }` (—Å—Ç—Ä–æ–∫–∞ 401)
- `createWriteStreamSpy = vi.spyOn(fsSyncActual, "createWriteStream")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `errorStream = new Writable() as any` (—Å—Ç—Ä–æ–∫–∞ 406)
- `data = { message: "access error test" }` (—Å—Ç—Ä–æ–∫–∞ 430)
- `accessSpy = vi.spyOn(fs, "access").mockImplementationOnce(async () => {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `error = new Error("EACCES: permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 432)
- `testPath = path.join(tempDir, "access-error-test.json")` (—Å—Ç—Ä–æ–∫–∞ 438)
- `initialData = { message: "Initial, should be lost if rollback fails" }` (—Å—Ç—Ä–æ–∫–∞ 448)
- `newData = { message: "New content" }` (—Å—Ç—Ä–æ–∫–∞ 449)
- `renameSpy = vi.spyOn(fs, "rename")` (—Å—Ç—Ä–æ–∫–∞ 453)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Suppress console.error` (—Å—Ç—Ä–æ–∫–∞ 454)

#### üìÑ path.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPlatform = process.platform` (—Å—Ç—Ä–æ–∫–∞ 34)
- `windowsPath = "C:\\Users\\test\\file.txt"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `unixPath = "/home/user/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `extendedPath = "\\\\?\\C:\\Very\\Long\\Path"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `workspacePath = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 61)
- `path1 = path.normalize("C:\\Users\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `path2 = path.normalize("C:/Users/Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `path1 = path.normalize("C:\\Users\\Test\\..\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `path2 = path.normalize("C:\\Users\\Test").replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `desktop = path.join(homeDir, "Desktop")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `cwd = process.platform === "win32" ? "C:\\Users\\test\\project" : "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `filePath = path.join(desktop, "file.txt")` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ outputChannelLogger.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOutputChannel = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `error = new Error("test error")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `obj = { key: "value", number: 42 }` (—Å—Ç—Ä–æ–∫–∞ 51)
- `logger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `consoleSpy = vitest.spyOn(console, "log").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 73)
- `outputChannelLogger = createOutputChannelLogger(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `dualLogger = createDualLogger(outputChannelLogger)` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ object.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `obj = Object.create(null)` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ git.spec.ts

**–¢–∏–ø—ã:**

- `type ExecFunction` (—Å—Ç—Ä–æ–∫–∞ 20)
- `type PromisifiedExec` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockWorkspaceFolders = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `cwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockCommitData = [` (—Å—Ç—Ä–æ–∫–∞ 136)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 209)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 215)
- `result = await searchCommits("test", cwd)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 235)
- `result = await searchCommits("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 259)
- `mockCommitInfo = [` (—Å—Ç—Ä–æ–∫–∞ 272)
- `mockStats = "1 file changed, 2 insertions(+), 1 deletion(-)"` (—Å—Ç—Ä–æ–∫–∞ 280)
- `mockDiff = "@@ -1,1 +1,2 @@\n-old line\n+new line"` (—Å—Ç—Ä–æ–∫–∞ 281)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 284)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 329)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = await getCommitInfo("abc123", cwd)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `mockStatus = " M src/file1.ts\n?? src/file2.ts"` (—Å—Ç—Ä–æ–∫–∞ 354)
- `mockDiff = "@@ -1,1 +1,2 @@\n-old line\n+new line"` (—Å—Ç—Ä–æ–∫–∞ 355)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 376)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 401)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `responses = new Map([` (—Å—Ç—Ä–æ–∫–∞ 420)
- `response = responses.get(command)` (—Å—Ç—Ä–æ–∫–∞ 426)
- `result = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 439)
- `workspaceRoot = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 446)
- `gitDir = path.join(workspaceRoot, ".git")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `configPath = path.join(gitDir, "config")` (—Å—Ç—Ä–æ–∫–∞ 448)
- `headPath = path.join(gitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 476)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 492)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 504)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 530)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 537)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 549)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 561)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 576)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 588)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 606)
- `gitSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 619)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 625)
- `mockHead = "ref: refs/heads/main"` (—Å—Ç—Ä–æ–∫–∞ 638)
- `result = await getGitRepositoryInfo(workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 650)
- `url = "https://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 663)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 670)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 671)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 677)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 678)
- `url = "ssh://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 684)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 685)
- `url = "not-a-valid-url"` (—Å—Ç—Ä–æ–∫–∞ 691)
- `converted = convertGitUrlToHttps(url)` (—Å—Ç—Ä–æ–∫–∞ 692)
- `url = "https://username:password@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 700)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 701)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 707)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 708)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 714)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `url = "https://oauth2:ghp_abcdef1234567890abcdef1234567890abcdef@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 722)
- `url = "not-a-valid-url"` (—Å—Ç—Ä–æ–∫–∞ 728)
- `sanitized = sanitizeGitUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 729)
- `url = "https://github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 737)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 738)
- `url = "https://github.com/NeiraCoderInc/Roo-Code"` (—Å—Ç—Ä–æ–∫–∞ 744)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 745)
- `url = "git@github.com:NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 751)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 752)
- `url = "ssh://git@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 758)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 759)
- `url = "not-a-valid-git-url"` (—Å—Ç—Ä–æ–∫–∞ 765)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 766)
- `url = "https://username:password@github.com/NeiraCoderInc/Roo-Code.git"` (—Å—Ç—Ä–æ–∫–∞ 772)
- `repoName = extractRepositoryName(url)` (—Å—Ç—Ä–æ–∫–∞ 773)
- `workspaceRoot = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 780)
- `result = await getWorkspaceGitInfo()` (—Å—Ç—Ä–æ–∫–∞ 790)
- `gitSpy = vitest.spyOn(fs.promises, "access")` (—Å—Ç—Ä–æ–∫–∞ 803)
- `readFileSpy = vitest.spyOn(fs.promises, "readFile")` (—Å—Ç—Ä–æ–∫–∞ 804)
- `mockConfig = `` (—Å—Ç—Ä–æ–∫–∞ 810)
- `result = await getWorkspaceGitInfo()` (—Å—Ç—Ä–æ–∫–∞ 826)

#### üìÑ enhance-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await singleCompletionHandler(mockApiConfig, "Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handler = buildApiHandler(mockApiConfig)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `customEnhancePrompt = "You are a custom prompt enhancer"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `customEnhancePromptWithTemplate = customEnhancePrompt + "\n\n${userInput}"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = await singleCompletionHandler(` (—Å—Ç—Ä–æ–∫–∞ 52)
- `handler = buildApiHandler(mockApiConfig)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = await singleCompletionHandler(openRouterConfig, "Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ cost.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, 2000)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, undefined, 3000)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `cost = calculateApiCostAnthropic(modelWithoutPrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `cost = calculateApiCostAnthropic(mockModelInfo, 0, 0, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `cost = calculateApiCostAnthropic(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `cost = calculateApiCostAnthropic(modelWithoutCachePrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `cost = calculateApiCostOpenAI(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `cost = calculateApiCostOpenAI(mockModelInfo, 3000, 500, 2000)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `cost = calculateApiCostOpenAI(mockModelInfo, 4000, 500, undefined, 3000)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `cost = calculateApiCostOpenAI(mockModelInfo, 6000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `cost = calculateApiCostOpenAI(modelWithoutPrices, 1000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `cost = calculateApiCostOpenAI(mockModelInfo, 0, 0, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `cost = calculateApiCostOpenAI(mockModelInfo, 1000, 500)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `cost = calculateApiCostOpenAI(modelWithoutCachePrices, 6000, 500, 2000, 3000)` (—Å—Ç—Ä–æ–∫–∞ 184)

#### üìÑ config.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalEnv = process.env` (—Å—Ç—Ä–æ–∫–∞ 6)
- `configString = "Hello ${env:TEST_VAR}"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `expectedString = "Hello testValue"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `configObject = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `expectedObject = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await injectEnv(configObject)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `consoleWarnSpy = vitest.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 79)
- `configString = "Value: ${env:EXISTING_VAR}, Missing: ${env:MISSING_VAR}"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `expectedString = "Value: exists, Missing: NOT_FOUND"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = await injectEnv(configString, "NOT_FOUND")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `consoleWarnSpy = vitest.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 92)
- `configString = "Missing: ${env:ANOTHER_MISSING}"` (—Å—Ç—Ä–æ–∫–∞ 93)
- `expectedString = "Missing: "` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `configString = "Just a regular string"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = await injectEnv(configString)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `configObject = { key: "value", number: 123 }` (—Å—Ç—Ä–æ–∫–∞ 110)
- `result = await injectEnv(configObject)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `originalObject = { value: "${env:MUTATE_TEST}" }` (—Å—Ç—Ä–æ–∫–∞ 117)
- `copyOfOriginal = { ...originalObject } // Shallow copy for comparison` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await injectEnv("")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await injectEnv({})` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await injectVariables("Hello ${v}", { v: "Hola" })` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await injectVariables("Hello ${v}", { v: undefined })` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = await injectVariables("Hello ${v}", { v: "" })` (—Å—Ç—Ä–æ–∫–∞ 146)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await injectVariables(config, { workspaceFolder: "C:\\Users\\project" })` (—Å—Ç—Ä–æ–∫–∞ 155)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `result = await injectVariables(config, { workspaceFolder: "C:\\Program Files\\My Project" })` (—Å—Ç—Ä–æ–∫–∞ 171)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `result = await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await injectVariables("Path: ${path}", { path: "C:\\Users\\test" })` (—Å—Ç—Ä–æ–∫–∞ 206)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 211)
- `result = await injectVariables(config, { testPath: "C:\\Users/test/mixed\\path" })` (—Å—Ç—Ä–æ–∫–∞ 214)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 221)
- `result = await injectVariables(config, { myValue: "test" })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `result = await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 238)

#### üìÑ autoImportSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalModule = await importOriginal()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `settingsPath = "~/Documents/roo-config.json"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `settingsPath = "/absolute/path/to/config.json"` (—Å—Ç—Ä–æ–∫–∞ 164)
- `mockSettings = {` (—Å—Ç—Ä–æ–∫–∞ 173)
- `settingsPath = "~/config.json"` (—Å—Ç—Ä–æ–∫–∞ 208)
- `settingsPath = "~/Documents/config.json"` (—Å—Ç—Ä–æ–∫–∞ 235)
- `settingsPath = "Documents/config.json"` (—Å—Ç—Ä–æ–∫–∞ 255)
- `settingsPath = "~/config.json"` (—Å—Ç—Ä–æ–∫–∞ 275)

### üìÇ build-src/src/shared/__tests__

#### üìÑ vsCodeSelectorUtils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = stringifyVsCodeLmModelSelector(selector)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ support-prompts.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFilePath = "test/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 4)
- `testCode = "function test() { return true` (—Å—Ç—Ä–æ–∫–∞ 5)
- `prompt = supportPrompt.create("EXPLAIN", {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `prompt = supportPrompt.create("FIX", {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 34)
- `prompt = supportPrompt.create("FIX", {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `prompt = supportPrompt.create("IMPROVE", {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `prompt = supportPrompt.create("ENHANCE", {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 91)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 100)
- `diagnostics = [{ message: "Error 1" }, { source: "Linter", message: "Warning 2" }]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `expected = `${testFilePath}:10-20\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 113)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `expected = `${testFilePath}:5-15\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 126)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 138)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 143)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 150)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 161)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 174)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${testCode}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 187)
- `prompt = supportPrompt.create("ADD_TO_CONTEXT", {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `expected = `${testFilePath}:1-1\n\`\`\`\n${bashText}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 201)
- `template = supportPrompt.get(undefined, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `customTemplate = "Custom template for explaining code"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `template = supportPrompt.get(customSupportPrompts, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `template = supportPrompt.get(customSupportPrompts, "EXPLAIN")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `customTemplate = "Custom template for ${filePath}"` (—Å—Ç—Ä–æ–∫–∞ 232)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 233)
- `prompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 237)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 251)
- `prompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ modes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mdResult = isToolAllowedForMode("write_to_file", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `cssResult = isToolAllowedForMode("write_to_file", "css-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `writeResult = isToolAllowedForMode("write_to_file", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `diffResult = isToolAllowedForMode("apply_diff", "markdown-editor", customModes, undefined, {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `toolRequirements = {` (—Å—Ç—Ä–æ–∫–∞ 361)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", undefined, "test.js")` (—Å—Ç—Ä–æ–∫–∞ 371)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", undefined, "test.js", "write_to_file")` (—Å—Ç—Ä–æ–∫–∞ 379)
- `debugMode = modes.find((mode) => mode.slug === "debug")` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result = await getFullModeDetails("debug")` (—Å—Ç—Ä–æ–∫–∞ 410)
- `result = await getFullModeDetails("debug", customModes)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 439)
- `result = await getFullModeDetails("debug", undefined, customModePrompts)` (—Å—Ç—Ä–æ–∫–∞ 446)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 452)
- `result = await getFullModeDetails("non-existent")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `error = new FileRestrictionError("Markdown Editor", "\\.md$", "Markdown files only", "test.js")` (—Å—Ç—Ä–æ–∫–∞ 479)
- `error = new FileRestrictionError(` (—Å—Ç—Ä–æ–∫–∞ 487)
- `builtInAskMode = modes.find((m) => m.slug === "ask")!` (—Å—Ç—Ä–æ–∫–∞ 502)
- `selection = getModeSelection("ask")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `selection = getModeSelection("ask", promptComponentAsk) // "ask" is not in customModesList` (—Å—Ç—Ä–æ–∫–∞ 537)
- `selection = getModeSelection("code", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `customCode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 544)
- `selection = getModeSelection("code", promptComponentCode, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 550)
- `customCode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 551)
- `selection = getModeSelection("new-custom", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 557)
- `newCustom = customModesList.find((m) => m.slug === "new-custom")!` (—Å—Ç—Ä–æ–∫–∞ 558)
- `selection = getModeSelection("new-custom", promptComponentNew, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 568)
- `newCustomMode = customModesList.find((m) => m.slug === "new-custom")!` (—Å—Ç—Ä–æ–∫–∞ 569)
- `selection = getModeSelection("non-existent-mode", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 575)
- `defaultMode = modes[0] // First mode is the default` (—Å—Ç—Ä–æ–∫–∞ 576)
- `selection = getModeSelection(` (—Å—Ç—Ä–æ–∫–∞ 582)
- `customCodeMode = customModesList.find((m) => m.slug === "code")!` (—Å—Ç—Ä–æ–∫–∞ 587)
- `selection = getModeSelection("no-instr", undefined, modesWithoutCustomInstructions)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `selection = getModeSelection("empty-role", undefined, modesWithEmptyRoleDef)` (—Å—Ç—Ä–æ–∫–∞ 617)
- `selection2 = getModeSelection("undefined-role", undefined, modesWithUndefinedRoleDef)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `selection = getModeSelection("role-custom", promptComponentInstrOnly, customModeRoleOnlyList)` (—Å—Ç—Ä–æ–∫–∞ 647)
- `selection = getModeSelection("instr-custom", promptComponentRoleOnly, customModeInstrOnlyList)` (—Å—Ç—Ä–æ–∫–∞ 666)
- `selection = getModeSelection("ask", promptComponentMinimal, customModeMinimal)` (—Å—Ç—Ä–æ–∫–∞ 681)
- `selection = getModeSelection("ask", promptComponentAsk, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 689)
- `selection = getModeSelection("ask", undefined, customModesList)` (—Å—Ç—Ä–æ–∫–∞ 696)
- `selection = getModeSelection("ask", promptComponentAsk, undefined)` (—Å—Ç—Ä–æ–∫–∞ 702)

#### üìÑ modes-empty-prompt-component.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `architectMode = modes.find((m) => m.slug === "architect")!` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = getModeSelection("architect", undefined, [])` (—Å—Ç—Ä–æ–∫–∞ 10)
- `debugMode = modes.find((m) => m.slug === "debug")!` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = getModeSelection("debug", null as any, [])` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = getModeSelection("architect", validPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 36)
- `architectMode = modes.find((m) => m.slug === "architect")!` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = getModeSelection("architect", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 50)
- `debugMode = modes.find((m) => m.slug === "debug")!` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = getModeSelection("debug", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 64)
- `result = getModeSelection("architect", fullPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 77)
- `defaultMode = modes[0] // First mode is the default` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = getModeSelection("non-existent-mode", partialPromptComponent, [])` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ language.spec.ts

#### üìÑ getApiMetrics.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createApiReqStartedMessage = (` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createCondenseContextMessage = (` (—Å—Ç—Ä–æ–∫–∞ 20)
- `createOtherMessage = (` (—Å—Ç—Ä–æ–∫–∞ 38)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `result = getApiMetrics([])` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 291)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 313)
- `result = getApiMetrics(messages)` (—Å—Ç—Ä–æ–∫–∞ 320)

#### üìÑ experiments.spec.ts

#### üìÑ experiments-preventFocusDisruption.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `disabledConfig = { preventFocusDisruption: false }` (—Å—Ç—Ä–æ–∫–∞ 20)
- `enabledConfig = { preventFocusDisruption: true }` (—Å—Ç—Ä–æ–∫–∞ 24)
- `emptyConfig = {}` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ context-mentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 5)
- `match = input.match(mentionRegex)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `firstExpected = expected ? expected[0] : null` (—Å—Ç—Ä–æ–∫–∞ 57)
- `globalMatches = Array.from(input.matchAll(mentionRegexGlobal)).map((m) => m[0])` (—Å—Ç—Ä–æ–∫–∞ 69)
- `input = "Mention @/path/to/escaped\\ file.txt and @problems"` (—Å—Ç—Ä–æ–∫–∞ 79)
- `matches = Array.from(input.matchAll(mentionRegexGlobal))` (—Å—Ç—Ä–æ–∫–∞ 80)

#### üìÑ combineCommandSequences.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = combineCommandSequences(messages)` (—Å—Ç—Ä–æ–∫–∞ 164)

#### üìÑ combineApiRequests.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createStartMessage(text: s, ts: n): ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createFinishMessage(text: s, ts: n): ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createStartMessage = (text: string = '{"request":"GET /api/data"}', ts: number = 1000): ClineMessage => ({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `createFinishMessage = (text: string = '{"cost":0.005}', ts: number = 1001): ClineMessage => ({` (—Å—Ç—Ä–æ–∫–∞ 17)
- `createOtherMessage = (` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `otherMessage = createOtherMessage()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `otherMessage1 = createOtherMessage("text", "Message 1", 999)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `otherMessage2 = createOtherMessage("text", "Message 2", 1500)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `parsedText1 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 115)
- `parsedText2 = JSON.parse(result[3].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = combineApiRequests([])` (—Å—Ç—Ä–æ–∫–∞ 133)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `startMessage = createStartMessage()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `finishMessage = createFinishMessage()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 180)
- `startMessage = createStartMessage()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 243)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `finishMessage = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 297)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 303)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 326)
- `finishMessage = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 339)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 375)
- `startMessage = createStartMessage(` (—Å—Ç—Ä–æ–∫–∞ 383)
- `finishMessage = createFinishMessage(` (—Å—Ç—Ä–æ–∫–∞ 387)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 400)
- `startMessage = createStartMessage(` (—Å—Ç—Ä–æ–∫–∞ 413)
- `finishMessage = createFinishMessage(` (—Å—Ç—Ä–æ–∫–∞ 417)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 424)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 430)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 463)
- `startMessage = createStartMessage("{}", 1000)` (—Å—Ç—Ä–æ–∫–∞ 470)
- `finishMessage = createFinishMessage("{}", 1001)` (—Å—Ç—Ä–æ–∫–∞ 471)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 481)
- `startMessage = createStartMessage('{"request":"GET /api/data"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `otherMessage = createOtherMessage()` (—Å—Ç—Ä–æ–∫–∞ 512)
- `startMessage1 = createStartMessage('{"request":"GET /api/data1"}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 513)
- `finishMessage1 = createFinishMessage('{"cost":0.005}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 514)
- `startMessage2 = createStartMessage('{"request":"GET /api/data2"}', 2000)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 520)
- `parsedText1 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 549)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 568)
- `parsedText1 = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 574)
- `parsedText2 = JSON.parse(result[1].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 581)
- `startMessage = createStartMessage('{"request":"GET /api/data", "cost": 0.001}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `finishMessage = createFinishMessage('{"cost":0.005, "request": "OVERWRITTEN"}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 597)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 603)
- `startMessage = createStartMessage('{"request":"GET /api/data", "tags": ["api", "get"]}', 1000)` (—Å—Ç—Ä–æ–∫–∞ 611)
- `finishMessage = createFinishMessage('{"cost":0.005, "results": [1, 2, 3]}', 1001)` (—Å—Ç—Ä–æ–∫–∞ 612)
- `result = combineApiRequests(messages)` (—Å—Ç—Ä–æ–∫–∞ 616)
- `parsedText = JSON.parse(result[0].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 622)

#### üìÑ checkExistApiConfig.spec.ts

#### üìÑ api.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 72)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 87)
- `anthropicModelId = "claude-sonnet-4-20250514"` (—Å—Ç—Ä–æ–∫–∞ 97)
- `result = getModelMaxOutputTokens({ modelId: anthropicModelId, model, settings })` (—Å—Ç—Ä–æ–∫–∞ 110)
- `geminiModelId = "gemini-2.5-flash-preview-04-17"` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = getModelMaxOutputTokens({ modelId: geminiModelId, model, settings })` (—Å—Ç—Ä–æ–∫–∞ 128)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 143)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 164)
- `result = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 184)
- `settings = {}` (—Å—Ç—Ä–æ–∫–∞ 216)

#### üìÑ ProfileValidator.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiModelProviders = [` (—Å—Ç—Ä–æ–∫–∞ 184)

### üìÇ build-src/src/services/tree-sitter

#### üìÑ markdownParser.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MockNode` - Interface to mimic tree-sitter node structure (—Å—Ç—Ä–æ–∫–∞ 12)

- `interface MockCapture` - Interface to mimic tree-sitter capture structure (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `atxHeaderRegex = /^(#{1,6})\s+(.+)$/` (—Å—Ç—Ä–æ–∫–∞ 47)
- `setextH1Regex = /^={3,}\s*$/` (—Å—Ç—Ä–æ–∫–∞ 49)
- `setextH2Regex = /^-{3,}\s*$/` (—Å—Ç—Ä–æ–∫–∞ 50)
- `validSetextTextRegex = /^\s*[^#<>!\[\]`\t]+[^\n]$/` (—Å—Ç—Ä–æ–∫–∞ 52)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 56)
- `atxMatch = line.match(atxHeaderRegex)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `level = atxMatch[1].length` (—Å—Ç—Ä–æ–∫–∞ 61)
- `text = atxMatch[2].trim()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `text = lines[i - 1].trim()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `text = lines[i - 1].trim()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `headerPair = headerCaptures[i]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `nextHeaderStartRow = headerCaptures[i + 1][0].node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 168)
- `capture = captures[i]` (—Å—Ç—Ä–æ–∫–∞ 203)
- `startLine = capture.node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 204)
- `endLine = capture.node.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 205)
- `sectionLength = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 208)
- `headerMatch = capture.name.match(/\.h(\d)$/)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `headerPrefix = "#".repeat(headerLevel)` (—Å—Ç—Ä–æ–∫–∞ 219)

#### üìÑ languageParser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async loadLanguage(langName: s)` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseDir = sourceDirectory || __dirname` (—Å—Ç—Ä–æ–∫–∞ 41)
- `wasmPath = path.join(baseDir, `tree-sitter-${langName}.wasm`)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `extensionsToLoad = new Set(filesToParse.map((file) => path.extname(file).toLowerCase().slice(1)))` (—Å—Ç—Ä–æ–∫–∞ 91)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 225)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `processCaptures(captures: Q, lines: s, language: s): string | null` - Process captures from tree-sitter or markdown parser (—Å—Ç—Ä–æ–∫–∞ 266)
- `isNotHtmlElement(line: s): boolean` (—Å—Ç—Ä–æ–∫–∞ 271)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_MIN_COMPONENT_LINES_VALUE = 4` (—Å—Ç—Ä–æ–∫–∞ 11)
- `extensions = [` (—Å—Ç—Ä–æ–∫–∞ 30)
- `fileExists = await fileExistsAtPath(path.resolve(filePath))` (—Å—Ç—Ä–æ–∫–∞ 101)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `markdownCaptures = parseMarkdown(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `markdownDefinitions = processCaptures(markdownCaptures, lines, "markdown")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `languageParsers = await loadRequiredLanguageParsers([filePath])` (—Å—Ç—Ä–æ–∫–∞ 139)
- `definitions = await parseFile(filePath, languageParsers, rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `dirExists = await fileExistsAtPath(path.resolve(dirPath))` (—Å—Ç—Ä–æ–∫–∞ 156)
- `allowedFilesToParse = rooIgnoreController ? rooIgnoreController.filterPaths(filesToParse) : filesToParse` (—Å—Ç—Ä–æ–∫–∞ 170)
- `ext = path.extname(file).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `languageParsers = await loadRequiredLanguageParsers(otherFiles)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `fileContent = await fs.readFile(file, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `markdownCaptures = parseMarkdown(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `markdownDefinitions = processCaptures(markdownCaptures, lines, "markdown")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `definitions = await parseFile(file, languageParsers, rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `filesToParse = allFiles.filter((file) => extensions.includes(path.extname(file))).slice(0, 50) // 50 files max` (—Å—Ç—Ä–æ–∫–∞ 228)
- `remainingFiles = allFiles.filter((file) => !filesToParse.includes(file))` (—Å—Ç—Ä–æ–∫–∞ 229)
- `needsHtmlFiltering = ["jsx", "tsx"].includes(language)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `isNotHtmlElement = (line: string): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `HTML_ELEMENTS = /^[^A-Z]*<\/?(?:div|span|button|input|h[1-6]|p|a|img|ul|li|form)\b/` (—Å—Ç—Ä–æ–∫–∞ 274)
- `trimmedLine = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 275)
- `processedLines = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 290)
- `definitionNode = name.includes("name") ? node.parent : node` (—Å—Ç—Ä–æ–∫–∞ 302)
- `startLine = definitionNode.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 306)
- `endLine = definitionNode.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 307)
- `lineCount = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 308)
- `lineKey = `${startLine}-${endLine}`` (—Å—Ç—Ä–æ–∫–∞ 317)
- `startLineContent = lines[startLine].trim()` (—Å—Ç—Ä–æ–∫–∞ 325)
- `componentName = node.text` (—Å—Ç—Ä–æ–∫–∞ 330)
- `contextEnd = node.parent.lastChild.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 345)
- `contextSpan = contextEnd - node.parent.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 346)
- `rangeKey = `${node.parent.startPosition.row}-${contextEnd}`` (—Å—Ç—Ä–æ–∫–∞ 351)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 387)
- `extLang = path.extname(filePath).toLowerCase().slice(1)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `tree = parser.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 398)
- `captures = tree ? query.captures(tree.rootNode) : []` (—Å—Ç—Ä–æ–∫–∞ 401)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 404)

### üìÇ build-src/src/services/search

#### üìÑ file-search.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rgPath = await getBinPath(vscode.env.appRoot)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `rgProcess = childProcess.spawn(rgPath, args)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `rl = readline.createInterface({ input: rgProcess.stdout, crlfDelay: Infinity })` (—Å—Ç—Ä–æ–∫–∞ 28)
- `dirSet = new Set<string>() // Track unique directory paths.` (—Å—Ç—Ä–æ–∫–∞ 30)
- `relativePath = path.relative(workspacePath, line)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `dirResults = Array.from(dirSet).map((dirPath) => ({` (—Å—Ç—Ä–æ–∫–∞ 71)
- `args = [` (—Å—Ç—Ä–æ–∫–∞ 92)
- `allItems = await executeRipgrepForFiles(workspacePath, 5000)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `searchItems = allItems.map((item) => ({` (—Å—Ç—Ä–æ–∫–∞ 125)
- `fzf = new Fzf(searchItems, {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fzfResults = fzf.find(query).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `verifiedResults = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 141)
- `fullPath = path.join(workspacePath, result.path)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `isDirectory = fs.lstatSync(fullPath).isDirectory()` (—Å—Ç—Ä–æ–∫–∞ 146)

### üìÇ build-src/src/services/roo-config

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homeDir = os.homedir()` - Gets the global .neira directory path based on the current platform (—Å—Ç—Ä–æ–∫–∞ 27)
- `stat = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stat = await fs.stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `globalDir = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 218)
- `projectDir = getProjectRooDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `globalFilePath = path.join(globalDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `projectFilePath = path.join(projectDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `globalContent = await readFileIfExists(globalFilePath)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `projectContent = await readFileIfExists(projectFilePath)` (—Å—Ç—Ä–æ–∫–∞ 228)

### üìÇ build-src/src/services/ripgrep

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async checkPath(pkgFolder: s)` - Get the path to the ripgrep binary within the VSCode installation (—Å—Ç—Ä–æ–∫–∞ 86)
- `async execRipgrep(bin: s, args: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 99)
- `formatResults(fileResults: S, cwd: s): string` (—Å—Ç—Ä–æ–∫–∞ 223)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SearchFileResult` (—Å—Ç—Ä–æ–∫–∞ 54)

- `interface SearchResult` (—Å—Ç—Ä–æ–∫–∞ 59)

- `interface SearchLineResult` (—Å—Ç—Ä–æ–∫–∞ 63)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `results = await regexSearchFiles('/path/to/cwd', '/path/to/search', 'TODO:', '*.ts')` (—Å—Ç—Ä–æ–∫–∞ 30)
- `isWindows = process.platform.startsWith("win")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `binName = isWindows ? "rg.exe" : "rg"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `MAX_RESULTS = 300` (—Å—Ç—Ä–æ–∫–∞ 70)
- `MAX_LINE_LENGTH = 500` (—Å—Ç—Ä–æ–∫–∞ 71)
- `checkPath = async (pkgFolder: string) => {` - Get the path to the ripgrep binary within the VSCode installation (—Å—Ç—Ä–æ–∫–∞ 86)
- `fullPath = path.join(vscodeAppRoot, pkgFolder, binName)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `rgProcess = childProcess.spawn(bin, args)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `maxLines = MAX_RESULTS * 5 // limiting ripgrep output with max lines since there's no other way to limit results. it's okay that we're outputting as json, since we're parsing it line by line and ignore anything that's not part of a match. This assumes each result is at most 5 lines.` (—Å—Ç—Ä–æ–∫–∞ 110)
- `vscodeAppRoot = vscode.env.appRoot` (—Å—Ç—Ä–æ–∫–∞ 146)
- `rgPath = await getBinPath(vscodeAppRoot)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `args = ["--json", "-e", regex, "--glob", filePattern || "*", "--context", "1", directoryPath]` (—Å—Ç—Ä–æ–∫–∞ 153)
- `parsed = JSON.parse(line)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `line = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `lastResult = currentFile.searchResults[currentFile.searchResults.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `lastLine = lastResult.lines[lastResult.lines.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 189)
- `filteredResults = rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 216)
- `relativeFilePath = path.relative(cwd, file.file)` (—Å—Ç—Ä–æ–∫–∞ 236)
- `lineNumber = String(line.line).padStart(3, " ")` (—Å—Ç—Ä–æ–∫–∞ 252)

### üìÇ build-src/src/services/neira-config

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homeDir = os.homedir()` - Gets the global .neira directory path (—Å—Ç—Ä–æ–∫–∞ 18)
- `stat = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `stat = await fs.stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `globalDir = getGlobalNeiraDirectory()` (—Å—Ç—Ä–æ–∫–∞ 206)
- `projectDir = getProjectNeiraDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `globalFilePath = path.join(globalDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `projectFilePath = path.join(projectDir, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `globalContent = await readFileIfExists(globalFilePath)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `projectContent = await readFileIfExists(projectFilePath)` (—Å—Ç—Ä–æ–∫–∞ 216)

### üìÇ build-src/src/services/mdm

#### üìÑ MdmService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mdmConfigSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `requiredOrgId = this.getRequiredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `storedOrgId = CloudService.instance.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `configPath = this.getMdmConfigPath()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `configContent = fs.readFileSync(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `parsedConfig = JSON.parse(configContent)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `platform = os.platform()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `isProduction = getClerkBaseUrl() === PRODUCTION_CLERK_BASE_URL` (—Å—Ç—Ä–æ–∫–∞ 147)
- `configFileName = isProduction ? "mdm.json" : "mdm.dev.json"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `programData = process.env.PROGRAMDATA || "C:\\ProgramData"` (—Å—Ç—Ä–æ–∫–∞ 153)

### üìÇ build-src/src/services/mcp

#### üìÑ McpServerManager.ts

#### üìÑ McpHub.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createServerTypeSchema()` (—Å—Ç—Ä–æ–∫–∞ 65)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BaseConfigSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 43)
- `typeErrorMessage = "Server type must be 'stdio', 'sse', or 'streamable-http'"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `createServerTypeSchema = () => {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `McpSettingsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `hasStdioFields = config.command !== undefined` (—Å—Ç—Ä–æ–∫–∞ 177)
- `hasUrlFields = config.url !== undefined // Covers sse and streamable-http` (—Å—Ç—Ä–æ–∫–∞ 178)
- `errorMessages = validationError.errors` (—Å—Ç—Ä–æ–∫–∞ 222)
- `key = `${source}-${filePath}`` (—Å—Ç—Ä–æ–∫–∞ 262)
- `existingTimer = this.configChangeDebounceTimers.get(key)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `timer = setTimeout(async () => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 296)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 333)
- `projectMcpPattern = new vscode.RelativePattern(workspaceFolder, ".neira/mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 334)
- `changeDisposable = this.projectMcpWatcher.onDidChange((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 340)
- `createDisposable = this.projectMcpWatcher.onDidCreate((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `deleteDisposable = this.projectMcpWatcher.onDidDelete(async () => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 364)
- `content = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 367)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 373)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 380)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 385)
- `projectConnections = this.connections.filter((conn) => conn.server.source === "project")` (—Å—Ç—Ä–æ–∫–∞ 398)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mcpServersPath = await provider.ensureMcpServersDirectoryExists()` (—Å—Ç—Ä–æ–∫–∞ 423)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 428)
- `mcpSettingsFilePath = path.join(` (—Å—Ç—Ä–æ–∫–∞ 432)
- `fileExists = await fileExistsAtPath(mcpSettingsFilePath)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `settingsPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 462)
- `settingsUri = vscode.Uri.file(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 463)
- `settingsPattern = new vscode.RelativePattern(path.dirname(settingsPath), path.basename(settingsPath))` (—Å—Ç—Ä–æ–∫–∞ 464)
- `changeDisposable = this.settingsWatcher.onDidChange((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 470)
- `createDisposable = this.settingsWatcher.onDidCreate((uri) => {` (—Å—Ç—Ä–æ–∫–∞ 477)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 495)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `result = McpSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 497)
- `errorMessages = result.error.errors` (—Å—Ç—Ä–æ–∫–∞ 502)
- `errorMessage = t("mcp:errors.invalid_settings_syntax")` (—Å—Ç—Ä–æ–∫–∞ 519)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 538)
- `projectMcpDir = path.join(workspaceFolder.uri.fsPath, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 539)
- `projectMcpPath = path.join(projectMcpDir, "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 540)
- `client = new Client(` (—Å—Ç—Ä–æ–∫–∞ 564)
- `configInjected = (await injectVariables(config, {` (—Å—Ç—Ä–æ–∫–∞ 577)
- `isWindows = process.platform === "win32"` (—Å—Ç—Ä–æ–∫–∞ 587)
- `command = isWindows && !isAlreadyWrapped ? "cmd.exe" : configInjected.command` (—Å—Ç—Ä–æ–∫–∞ 593)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 622)
- `stderrStream = transport.stderr` (—Å—Ç—Ä–æ–∫–∞ 632)
- `output = data.toString()` (—Å—Ç—Ä–æ–∫–∞ 635)
- `isInfoLog = /INFO/i.test(output)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 645)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 668)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 677)
- `sseOptions = {` (—Å—Ç—Ä–æ–∫–∞ 685)
- `reconnectingEventSourceOptions = {` (—Å—Ç—Ä–æ–∫–∞ 691)
- `headers = new Headers({ ...(init?.headers || {}), ...(configInjected.headers || {}) })` (—Å—Ç—Ä–æ–∫–∞ 695)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 711)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 720)
- `connection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 763)
- `MAX_ERROR_LENGTH = 1000` (—Å—Ç—Ä–æ–∫–∞ 773)
- `projectConn = this.connections.find(` (—Å—Ç—Ä–æ–∫–∞ 813)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 827)
- `response = await connection.client.request({ method: "tools/list" }, ListToolsResultSchema)` (—Å—Ç—Ä–æ–∫–∞ 833)
- `actualSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 836)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 846)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 849)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 855)
- `tools = (response?.tools || []).map((tool) => ({` (—Å—Ç—Ä–æ–∫–∞ 868)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 883)
- `response = await connection.client.request({ method: "resources/list" }, ListResourcesResultSchema)` (—Å—Ç—Ä–æ–∫–∞ 887)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 900)
- `response = await connection.client.request(` (—Å—Ç—Ä–æ–∫–∞ 904)
- `connections = source` (—Å—Ç—Ä–æ–∫–∞ 917)
- `currentConnections = this.connections.filter(` (—Å—Ç—Ä–æ–∫–∞ 948)
- `currentNames = new Set(currentConnections.map((conn) => conn.server.name))` (—Å—Ç—Ä–æ–∫–∞ 951)
- `newNames = new Set(Object.keys(newServers))` (—Å—Ç—Ä–æ–∫–∞ 952)
- `currentConnection = this.findConnection(name, source)` (—Å—Ç—Ä–æ–∫–∞ 964)
- `watchers = this.fileWatchers.get(name) || []` (—Å—Ç—Ä–æ–∫–∞ 1011)
- `watchPathsWatcher = chokidar.watch(config.watchPaths, {` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `filePath = config.args?.find((arg: string) => arg.includes("build/index.js"))` (—Å—Ç—Ä–æ–∫–∞ 1036)
- `indexJsWatcher = chokidar.watch(filePath, {` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1071)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1077)
- `config = connection?.server.config` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `parsedConfig = JSON.parse(config)` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `validatedConfig = this.validateServerConfig(parsedConfig, serverName)` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `globalPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 1118)
- `globalContent = await fs.readFile(globalPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `globalConfig = JSON.parse(globalContent)` (—Å—Ç—Ä–æ–∫–∞ 1122)
- `globalServerNames = Object.keys(globalServers)` (—Å—Ç—Ä–æ–∫–∞ 1124)
- `projectPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1134)
- `projectContent = await fs.readFile(projectPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1138)
- `projectConfig = JSON.parse(projectContent)` (—Å—Ç—Ä–æ–∫–∞ 1139)
- `projectServerNames = Object.keys(projectServers)` (—Å—Ç—Ä–æ–∫–∞ 1141)
- `existingConnections = [...this.connections]` (—Å—Ç—Ä–æ–∫–∞ 1153)
- `settingsPath = await this.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `content = await fs.readFile(settingsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1179)
- `globalServerOrder = Object.keys(config.mcpServers || {})` (—Å—Ç—Ä–æ–∫–∞ 1180)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1183)
- `projectContent = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1187)
- `projectConfig = JSON.parse(projectContent)` (—Å—Ç—Ä–æ–∫–∞ 1188)
- `sortedConnections = [...this.connections].sort((a, b) => {` (—Å—Ç—Ä–æ–∫–∞ 1197)
- `aIsGlobal = a.server.source === "global" || !a.server.source` (—Å—Ç—Ä–æ–∫–∞ 1198)
- `bIsGlobal = b.server.source === "global" || !b.server.source` (—Å—Ç—Ä–æ–∫–∞ 1199)
- `indexA = globalServerOrder.indexOf(a.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1203)
- `indexB = globalServerOrder.indexOf(b.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1204)
- `indexA = projectServerOrder.indexOf(a.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1207)
- `indexB = projectServerOrder.indexOf(b.server.name)` (—Å—Ç—Ä–æ–∫–∞ 1208)
- `serversToSend = sortedConnections.map((connection) => connection.server)` (—Å—Ç—Ä–æ–∫–∞ 1220)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 1222)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `serverSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1251)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1295)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1313)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1314)
- `serverConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1330)
- `updatedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1357)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1375)
- `serverSource = connection.server.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1380)
- `isProjectServer = serverSource === "project"` (—Å—Ç—Ä–æ–∫–∞ 1382)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1387)
- `content = await fs.readFile(configPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1404)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `updatedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1421)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1441)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1465)
- `parsedConfig = ServerConfigSchema.parse(JSON.parse(connection.server.config))` (—Å—Ç—Ä–æ–∫–∞ 1477)
- `connection = this.findConnection(serverName, source)` (—Å—Ç—Ä–æ–∫–∞ 1517)
- `projectMcpPath = await this.getProjectMcpPath()` (—Å—Ç—Ä–æ–∫–∞ 1527)
- `normalizedPath = process.platform === "win32" ? configPath.replace(/\\/g, "/") : configPath` (—Å—Ç—Ä–æ–∫–∞ 1539)
- `content = await fs.readFile(normalizedPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1542)
- `config = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `targetList = config.mcpServers[serverName][listName]` (—Å—Ç—Ä–æ–∫–∞ 1561)
- `toolIndex = targetList.indexOf(toolName)` (—Å—Ç—Ä–æ–∫–∞ 1562)
- `addToolToDisabledList = !isEnabled` (—Å—Ç—Ä–æ–∫–∞ 1604)

### üìÇ build-src/src/services/marketplace

#### üìÑ index.ts

#### üìÑ SimpleInstaller.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `importData = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `importYaml = yaml.stringify(importData)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await this.customModesManager.importModeWithRules(importYaml, target)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `filePath = await this.getModeFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `fileContent = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `modeData = yaml.parse(item.content)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `slugLineIndex = lines.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 79)
- `filePath = await this.getModeFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `modeData = yaml.parse(item.content)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `parsed = yaml.parse(existing)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `fileName = target === "project" ? ".neira-modes" : "custom-modes.yaml"` (—Å—Ç—Ä–æ–∫–∞ 110)
- `addedModeIndex = existingData.customModes.length - 1` (—Å—Ç—Ä–æ–∫–∞ 136)
- `yamlContent = yaml.stringify(existingData, { lineWidth: 0 })` (—Å—Ç—Ä–æ–∫–∞ 140)
- `lines = yamlContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `addedMode = existingData.customModes[addedModeIndex]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `slugLineIndex = lines.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 150)
- `index = options?.selectedIndex ?? 0` (—Å—Ç—Ä–æ–∫–∞ 175)
- `method = item.content[index] || item.content[0]` (—Å—Ç—Ä–æ–∫–∞ 176)
- `index = options?.selectedIndex ?? 0` (—Å—Ç—Ä–æ–∫–∞ 185)
- `method = item.content[index] || item.content[0]` (—Å—Ç—Ä–æ–∫–∞ 186)
- `itemParameters = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 191)
- `allParameters = [...itemParameters, ...methodParameters]` (—Å—Ç—Ä–æ–∫–∞ 192)
- `uniqueParameters = Array.from(new Map(allParameters.map((p) => [p.key, p])).values())` (—Å—Ç—Ä–æ–∫–∞ 193)
- `value = options.parameters[param.key]` (—Å—Ç—Ä–æ–∫–∞ 198)
- `index = options.parameters._selectedIndex` (—Å—Ç—Ä–æ–∫–∞ 207)
- `method = item.content[index]` (—Å—Ç—Ä–æ–∫–∞ 210)
- `itemParametersForNewMethod = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 215)
- `allParametersForNewMethod = [...itemParametersForNewMethod, ...methodParameters]` (—Å—Ç—Ä–æ–∫–∞ 216)
- `uniqueParametersForNewMethod = Array.from(` (—Å—Ç—Ä–æ–∫–∞ 217)
- `value = options.parameters[param.key]` (—Å—Ç—Ä–æ–∫–∞ 223)
- `filePath = await this.getMcpFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `mcpData = JSON.parse(contentToUse)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `fileName = target === "project" ? ".neira/mcp.json" : "mcp-settings.json"` (—Å—Ç—Ä–æ–∫–∞ 245)
- `serverName = item.id` (—Å—Ç—Ä–æ–∫–∞ 262)
- `jsonContent = JSON.stringify(existingData, null, 2)` (—Å—Ç—Ä–æ–∫–∞ 269)
- `lines = jsonContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `serverLineIndex = lines.findIndex((l) => l.includes(`"${serverName}"`))` (—Å—Ç—Ä–æ–∫–∞ 277)
- `modeData = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `modes = await this.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 328)
- `mode = modes.find((m) => m.slug === modeSlug)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `filePath = await this.getMcpFilePath(target)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `existing = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 340)
- `existingData = JSON.parse(existing)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `serverName = item.id` (—Å—Ç—Ä–æ–∫–∞ 353)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 366)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 372)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 379)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 385)

#### üìÑ RemoteConfigLoader.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modeMarketplaceResponse = z.object({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mcpMarketplaceResponse = z.object({` (—Å—Ç—Ä–æ–∫–∞ 13)
- `modesPromise = this.fetchModes()` (—Å—Ç—Ä–æ–∫–∞ 29)
- `mcpsPromise = hideMarketplaceMcps ? Promise.resolve([]) : this.fetchMcps()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `cacheKey = "modes"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `cached = this.getFromCache(cacheKey)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `data = await this.fetchWithRetry<string>(`${this.apiBaseUrl}/api/marketplace/modes`)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `yamlData = yaml.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `validated = modeMarketplaceResponse.parse(yamlData)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `cacheKey = "mcps"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `cached = this.getFromCache(cacheKey)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `data = await this.fetchWithRetry<string>(`${this.apiBaseUrl}/api/marketplace/mcps`)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `yamlData = yaml.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `validated = mcpMarketplaceResponse.parse(yamlData)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `response = await axios.get(url, {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `delay = Math.pow(2, i) * 1000` (—Å—Ç—Ä–æ–∫–∞ 95)
- `items = await this.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `cached = this.cache.get(key)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ MarketplaceManager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `orgErrorMessage = orgError instanceof Error ? orgError.message : String(orgError)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `allMarketplaceItems = await this.configLoader.loadAllItems(orgSettings?.hideMarketplaceMcps)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `hiddenMcpIds = new Set(orgSettings.hiddenMcps)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await this.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `searchTerm = filters.search.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `searchableText = `${item.name} ${item.description}`.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `allItems = await this.getCurrentItems()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await this.installer.installItem(item, { target, parameters })` (—Å—Ç—Ä–æ–∫–∞ 150)
- `selectedMethod = item.content[parameters._selectedIndex]` (—Å—Ç—Ä–æ–∫–∞ 159)
- `document = await vscode.workspace.openTextDocument(result.filePath)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `metadata = {` (—Å—Ç—Ä–æ–∫–∞ 230)
- `workspaceFolder = vscode.workspace.workspaceFolders?.[0]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `projectModesPath = path.join(workspaceFolder.uri.fsPath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 255)
- `content = await fs.readFile(projectModesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `data = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 258)
- `projectMcpPath = path.join(workspaceFolder.uri.fsPath, ".neira", "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 273)
- `content = await fs.readFile(projectMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `data = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `globalSettingsPath = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 297)
- `globalModesPath = path.join(globalSettingsPath, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `content = await fs.readFile(globalModesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `data = yaml.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `globalMcpPath = path.join(globalSettingsPath, GlobalFileNames.mcpSettings)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `content = await fs.readFile(globalMcpPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `data = JSON.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 321)

### üìÇ build-src/src/services/glob

#### üìÑ list-files.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getFirstLevelDirectories(dirPath: s, ignoreInstance: R): Promise<string[]>` - Get only the first-level directories in a path (—Å—Ç—Ä–æ–∫–∞ 77)
- `async handleSpecialDirectories(dirPath: s): Promise<[string[], boolean] | null>` - Handle special directories (root, home) that should not be fully listed (—Å—Ç—Ä–æ–∫–∞ 159)
- `async getRipgrepPath(): Promise<string>` - Get the path to the ripgrep binary (—Å—Ç—Ä–æ–∫–∞ 182)
- `buildRipgrepArgs(dirPath: s, recursive: b): string[]` - Build appropriate ripgrep arguments based on whether we're doing a recursive search (—Å—Ç—Ä–æ–∫–∞ 215)
- `buildRecursiveArgs(dirPath: s): string[]` - Build ripgrep arguments for recursive directory traversal (—Å—Ç—Ä–æ–∫–∞ 229)
- `buildNonRecursiveArgs(): string[]` - Build ripgrep arguments for non-recursive directory listing (—Å—Ç—Ä–æ–∫–∞ 294)
- `async createIgnoreInstance(dirPath: s): Promise<ReturnType<typeof ignore>>` - Create an ignore instance that handles .gitignore files properly This replaces the custom gitignore parsing with the proper ignore library (—Å—Ç—Ä–æ–∫–∞ 326)
- `async findGitignoreFiles(startPath: s): Promise<string[]>` - Find all .gitignore files from the given directory up to the workspace root (—Å—Ç—Ä–æ–∫–∞ 353)
- `async scanDirectory(currentPath: s, context: S): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 404)
- `matchesIgnorePattern(dirName: s, patterns: s): boolean` - Check if a directory matches any of the given patterns (—Å—Ç—Ä–æ–∫–∞ 488)
- `shouldIncludeTargetDirectory(dirName: s): boolean` - Check if a target directory should be included (—Å—Ç—Ä–æ–∫–∞ 513)
- `shouldIncludeInsideHiddenTarget(dirName: s, fullDirPath: s, context: S): boolean` - Check if a directory inside an explicitly targeted hidden directory should be included (—Å—Ç—Ä–æ–∫–∞ 522)
- `shouldIncludeRegularDirectory(dirName: s, fullDirPath: s, context: S): boolean` - Check if a regular directory should be included (—Å—Ç—Ä–æ–∫–∞ 535)
- `shouldIncludeDirectory(dirName: s, fullDirPath: s, context: S): boolean` - Determine if a directory should be included in results based on filters (—Å—Ç—Ä–æ–∫–∞ 549)
- `isDirectoryExplicitlyIgnored(dirName: s): boolean` - Check if a directory is in our explicit ignore list (—Å—Ç—Ä–æ–∫–∞ 569)
- `formatAndCombineResults(files: s, directories: s, limit: n): [string[], boolean]` - Combine file and directory results and format them properly (—Å—Ç—Ä–æ–∫–∞ 596)
- `async execRipgrep(rgPath: s, args: s, limit: n): Promise<string[]>` - Execute ripgrep command and return list of files (—Å—Ç—Ä–æ–∫–∞ 621)
- `processRipgrepOutput()` (—Å—Ç—Ä–æ–∫–∞ 678)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ScanContext` - Context object for directory scanning operations (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `specialResult = await handleSpecialDirectories(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `rgPath = await getRipgrepPath()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `files = await listFilesWithRipgrep(rgPath, dirPath, false, limit)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `ignoreInstance = await createIgnoreInstance(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `directories = await listFilteredDirectories(dirPath, false, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `files = await listFilesWithRipgrep(rgPath, dirPath, true, limit)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `ignoreInstance = await createIgnoreInstance(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `directories = await listFilteredDirectories(dirPath, true, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `firstLevelDirs = await getFirstLevelDirectories(dirPath, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `entries = await fs.promises.readdir(absolutePath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 82)
- `fullDirPath = path.join(absolutePath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `formattedPath = fullDirPath.endsWith("/") ? fullDirPath : `${fullDirPath}/`` (—Å—Ç—Ä–æ–∫–∞ 94)
- `existingPaths = new Set(results)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `missingDirs = firstLevelDirs.filter((dir) => !existingPaths.has(dir))` (—Å—Ç—Ä–æ–∫–∞ 118)
- `itemsToRemove = Math.min(missingDirs.length, results.length)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `adjustedResults = results.slice(0, results.length - itemsToRemove)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `resultPaths = adjustedResults.map((r) => path.resolve(r))` (—Å—Ç—Ä–æ–∫–∞ 132)
- `basePath = path.resolve(firstLevelDirs[0]).split(path.sep).slice(0, -1).join(path.sep)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `resolvedPath = resultPaths[i]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `relativePath = path.relative(basePath, resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `depth = relativePath.split(path.sep).length` (—Å—Ç—Ä–æ–∫–∞ 141)
- `finalResults = [...firstLevelResults, ...missingDirs, ...otherResults].slice(0, limit)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `root = process.platform === "win32" ? path.parse(absolutePath).root : "/"` (—Å—Ç—Ä–æ–∫–∞ 163)
- `isRoot = arePathsEqual(absolutePath, root)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `isHomeDir = arePathsEqual(absolutePath, homeDir)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `vscodeAppRoot = vscode.env.appRoot` (—Å—Ç—Ä–æ–∫–∞ 183)
- `rgPath = await getBinPath(vscodeAppRoot)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `rgArgs = buildRipgrepArgs(dirPath, recursive)` (—Å—Ç—Ä–æ–∫–∞ 202)
- `relativePaths = await execRipgrep(rgPath, rgArgs, limit)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `args = ["--files", "--hidden", "--follow"]` (—Å—Ç—Ä–æ–∫–∞ 217)
- `normalizedPath = path.normalize(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `pathParts = normalizedPath.split(path.sep).filter((part) => part.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `isTargetingHiddenDir = pathParts.some((part) => part.startsWith("."))` (—Å—Ç—Ä–æ–∫–∞ 241)
- `targetDirName = path.basename(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `isTargetInIgnoreList = DIRS_TO_IGNORE.includes(targetDirName)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `ignoreInstance = ignore()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `gitignoreFiles = await findGitignoreFiles(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 331)
- `content = await fs.promises.readFile(gitignoreFile, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `gitignorePath = path.join(currentPath, ".gitignore")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `parentPath = path.dirname(currentPath)` (—Å—Ç—Ä–æ–∫–∞ 369)
- `absolutePath = path.resolve(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 388)
- `isExplicitHiddenTarget = path.basename(absolutePath).startsWith(".")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `entries = await fs.promises.readdir(currentPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 407)
- `dirName = entry.name` (—Å—Ç—Ä–æ–∫–∞ 412)
- `fullDirPath = path.join(currentPath, dirName)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `formattedPath = fullDirPath.endsWith("/") ? fullDirPath : `${fullDirPath}/`` (—Å—Ç—Ä–æ–∫–∞ 426)
- `isHiddenDir = dirName.startsWith(".")` (—Å—Ç—Ä–æ–∫–∞ 433)
- `CRITICAL_IGNORE_PATTERNS = new Set(["node_modules", ".git", "__pycache__", "venv", "env"])` - Critical directories that should always be ignored, even inside explicitly targeted hidden directories (—Å—Ç—Ä–æ–∫–∞ 483)
- `relativePath = path.relative(basePath, fullDirPath)` (—Å—Ç—Ä–æ–∫–∞ 505)
- `normalizedPath = relativePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 506)
- `nonHiddenIgnorePatterns = DIRS_TO_IGNORE.filter((pattern) => pattern !== ".*")` (—Å—Ç—Ä–æ–∫–∞ 515)
- `nonHiddenIgnorePatterns = DIRS_TO_IGNORE.filter((pattern) => pattern !== ".*")` (—Å—Ç—Ä–æ–∫–∞ 537)
- `pathParts = pattern.split("/")` (—Å—Ç—Ä–æ–∫–∞ 583)
- `allPaths = [...directories, ...files]` (—Å—Ç—Ä–æ–∫–∞ 598)
- `uniquePathsSet = new Set(allPaths)` (—Å—Ç—Ä–æ–∫–∞ 601)
- `uniquePaths = Array.from(uniquePathsSet)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `aIsDir = a.endsWith("/")` (—Å—Ç—Ä–æ–∫–∞ 606)
- `bIsDir = b.endsWith("/")` (—Å—Ç—Ä–æ–∫–∞ 607)
- `trimmedPaths = uniquePaths.slice(0, limit)` (—Å—Ç—Ä–æ–∫–∞ 614)
- `searchDir = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 624)
- `rgProcess = childProcess.spawn(rgPath, args)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 631)
- `lines = output.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 679)

#### üìÑ ignore-utils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `normalizedPath = filePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `pathParts = normalizedPath.split("/")` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ constants.ts

### üìÇ build-src/src/services/command

#### üìÑ commands.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commands = new Map<string, Command>()` - Get all available commands from both global and project directories (—Å—Ç—Ä–æ–∫–∞ 19)
- `globalDir = path.join(getGlobalRooDirectory(), "commands")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `projectDir = path.join(getProjectRooDirectoryForCwd(cwd), "commands")` (—Å—Ç—Ä–æ–∫–∞ 26)
- `projectDir = path.join(getProjectRooDirectoryForCwd(cwd), "commands")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `globalDir = path.join(getGlobalRooDirectory(), "commands")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `projectCommand = await tryLoadCommand(projectDir, name, "project")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `globalCommand = await tryLoadCommand(globalDir, name, "global")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `commandFileName = `${name}.md`` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filePath = path.join(dirPath, commandFileName)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `commands = await getCommands(cwd)` - Get command names for autocomplete (—Å—Ç—Ä–æ–∫–∞ 118)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `entries = await fs.readdir(dirPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 136)
- `filePath = path.join(dirPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `commandName = getCommandNameFromFile(entry.name)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 144)

### üìÇ build-src/src/services/code-index

#### üìÑ state-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `progressChanged = processedItems !== this._processedItems || totalItems !== this._totalItems` (—Å—Ç—Ä–æ–∫–∞ 59)
- `message = `Indexed ${this._processedItems} / ${this._totalItems} ${this._currentItemUnit} found`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `oldStatus = this._systemStatus` (—Å—Ç—Ä–æ–∫–∞ 68)
- `oldMessage = this._statusMessage` (—Å—Ç—Ä–æ–∫–∞ 69)
- `progressChanged = processedFiles !== this._processedItems || totalFiles !== this._totalItems` (—Å—Ç—Ä–æ–∫–∞ 82)
- `oldStatus = this._systemStatus` (—Å—Ç—Ä–æ–∫–∞ 101)
- `oldMessage = this._statusMessage` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ service-factory.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = this.configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `provider = config.embedderProvider as EmbedderProvider` (—Å—Ç—Ä–æ–∫–∞ 34)
- `apiKey = config.openAiOptions?.openAiNativeApiKey` (—Å—Ç—Ä–æ–∫–∞ 37)
- `config = this.configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `provider = config.embedderProvider as EmbedderProvider` (—Å—Ç—Ä–æ–∫–∞ 110)
- `defaultModel = getDefaultModelId(provider)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `modelId = config.modelId ?? defaultModel` (—Å—Ç—Ä–æ–∫–∞ 113)
- `embedder = this.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `vectorStore = this.createVectorStore()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `parser = codeParser` (—Å—Ç—Ä–æ–∫–∞ 189)
- `scanner = this.createDirectoryScanner(embedder, vectorStore, parser, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 190)
- `fileWatcher = this.createFileWatcher(context, embedder, vectorStore, cacheManager, ignoreInstance)` (—Å—Ç—Ä–æ–∫–∞ 191)

#### üìÑ search-service.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `minScore = this.configManager.currentSearchMinScore` (—Å—Ç—Ä–æ–∫–∞ 34)
- `maxResults = this.configManager.currentSearchMaxResults` (—Å—Ç—Ä–æ–∫–∞ 35)
- `currentState = this.stateManager.getCurrentStatus().systemStatus` (—Å—Ç—Ä–æ–∫–∞ 37)
- `embeddingResponse = await this.embedder.createEmbeddings([query])` (—Å—Ç—Ä–æ–∫–∞ 45)
- `vector = embeddingResponse?.embeddings[0]` (—Å—Ç—Ä–æ–∫–∞ 46)
- `results = await this.vectorStore.search(vector, normalizedPrefix, minScore, maxResults)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ orchestrator.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleFileParsed(fileBlockCount: n)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `handleBlocksIndexed(indexedCount: n)` (—Å—Ç—Ä–æ–∫–∞ 144)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `successCount = summary.processedFiles.filter(` (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorCount = summary.processedFiles.filter(` (—Å—Ç—Ä–æ–∫–∞ 73)
- `collectionCreated = await this.vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `handleFileParsed = (fileBlockCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 139)
- `handleBlocksIndexed = (indexedCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `result = await this.scanner.scanDirectory(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 173)
- `failureRate = (cumulativeBlocksFoundSoFar - cumulativeBlocksIndexed) / cumulativeBlocksFoundSoFar` (—Å—Ç—Ä–æ–∫–∞ 181)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `firstError = batchErrors[0]` (—Å—Ç—Ä–æ–∫–∞ 193)

#### üìÑ manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `activeEditor = vscode.window.activeTextEditor` (—Å—Ç—Ä–æ–∫–∞ 37)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(activeEditor.document.uri)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 44)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `needsServiceRecreation = !this._serviceFactory || requiresRestart` (—Å—Ç—Ä–æ–∫–∞ 148)
- `currentStatus = this.getCurrentStatus()` (—Å—Ç—Ä–æ–∫–∞ 181)
- `ignoreInstance = ignore()` (—Å—Ç—Ä–æ–∫–∞ 303)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 304)
- `ignorePath = path.join(workspacePath, ".gitignore")` (—Å—Ç—Ä–æ–∫–∞ 311)
- `content = await fs.readFile(ignorePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 313)
- `validationResult = await this._serviceFactory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 334)
- `errorMessage = validationResult.error || "Embedder configuration validation failed"` (—Å—Ç—Ä–æ–∫–∞ 336)
- `isFeatureEnabled = this.isFeatureEnabled` (—Å—Ç—Ä–æ–∫–∞ 374)
- `isFeatureConfigured = this.isFeatureConfigured` (—Å—Ç—Ä–æ–∫–∞ 375)

#### üìÑ config-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseIndexConfig = this.contextProxy?.getGlobalState("codebaseIndexConfig") ?? {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `openAiKey = this.contextProxy?.getSecret("codeIndexOpenAiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 65)
- `qdrantApiKey = this.contextProxy?.getSecret("codeIndexQdrantApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 66)
- `openAiCompatibleBaseUrl = codebaseIndexConfig.codebaseIndexOpenAiCompatibleBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 68)
- `openAiCompatibleApiKey = this.contextProxy?.getSecret("codebaseIndexOpenAiCompatibleApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 69)
- `geminiApiKey = this.contextProxy?.getSecret("codebaseIndexGeminiApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mistralApiKey = this.contextProxy?.getSecret("codebaseIndexMistralApiKey") ?? ""` (—Å—Ç—Ä–æ–∫–∞ 71)
- `rawDimension = codebaseIndexConfig.codebaseIndexEmbedderModelDimension` (—Å—Ç—Ä–æ–∫–∞ 81)
- `dimension = Number(rawDimension)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `requiresRestart = this.doesConfigChangeRequireRestart(previousConfigSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `openAiKey = this.openAiOptions?.openAiNativeApiKey` (—Å—Ç—Ä–æ–∫–∞ 200)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 201)
- `ollamaBaseUrl = this.ollamaOptions?.ollamaBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 205)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 206)
- `baseUrl = this.openAiCompatibleOptions?.baseUrl` (—Å—Ç—Ä–æ–∫–∞ 209)
- `apiKey = this.openAiCompatibleOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 210)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 211)
- `isConfigured = !!(baseUrl && apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `apiKey = this.geminiOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 215)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 216)
- `isConfigured = !!(apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 217)
- `apiKey = this.mistralOptions?.apiKey` (—Å—Ç—Ä–æ–∫–∞ 220)
- `qdrantUrl = this.qdrantUrl` (—Å—Ç—Ä–æ–∫–∞ 221)
- `isConfigured = !!(apiKey && qdrantUrl)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `nowConfigured = this.isConfigured()` (—Å—Ç—Ä–æ–∫–∞ 245)
- `prevEnabled = prev?.enabled ?? false` (—Å—Ç—Ä–æ–∫–∞ 248)
- `prevConfigured = prev?.configured ?? false` (—Å—Ç—Ä–æ–∫–∞ 249)
- `prevProvider = prev?.embedderProvider ?? "openai"` (—Å—Ç—Ä–æ–∫–∞ 250)
- `prevOpenAiKey = prev?.openAiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 251)
- `prevOllamaBaseUrl = prev?.ollamaBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 252)
- `prevOpenAiCompatibleBaseUrl = prev?.openAiCompatibleBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 253)
- `prevOpenAiCompatibleApiKey = prev?.openAiCompatibleApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 254)
- `prevModelDimension = prev?.modelDimension` (—Å—Ç—Ä–æ–∫–∞ 255)
- `prevGeminiApiKey = prev?.geminiApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 256)
- `prevMistralApiKey = prev?.mistralApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 257)
- `prevQdrantUrl = prev?.qdrantUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 258)
- `prevQdrantApiKey = prev?.qdrantApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 259)
- `currentOpenAiKey = this.openAiOptions?.openAiNativeApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 288)
- `currentOllamaBaseUrl = this.ollamaOptions?.ollamaBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 289)
- `currentOpenAiCompatibleBaseUrl = this.openAiCompatibleOptions?.baseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 290)
- `currentOpenAiCompatibleApiKey = this.openAiCompatibleOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 291)
- `currentModelDimension = this.modelDimension` (—Å—Ç—Ä–æ–∫–∞ 292)
- `currentGeminiApiKey = this.geminiOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 293)
- `currentMistralApiKey = this.mistralOptions?.apiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 294)
- `currentQdrantUrl = this.qdrantUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 295)
- `currentQdrantApiKey = this.qdrantApiKey ?? ""` (—Å—Ç—Ä–æ–∫–∞ 296)
- `currentProvider = this.embedderProvider` (—Å—Ç—Ä–æ–∫–∞ 342)
- `currentModelId = this.modelId ?? getDefaultModelId(currentProvider)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `resolvedPrevModelId = prevModelId ?? getDefaultModelId(prevProvider)` (—Å—Ç—Ä–æ–∫–∞ 344)
- `prevDimension = getModelDimension(prevProvider, resolvedPrevModelId)` (—Å—Ç—Ä–æ–∫–∞ 352)
- `currentDimension = getModelDimension(currentProvider, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 353)
- `modelId = this.modelId ?? getDefaultModelId(this.embedderProvider)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `modelDimension = getModelDimension(this.embedderProvider, modelId)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `currentModelId = this.modelId ?? getDefaultModelId(this.embedderProvider)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `modelSpecificThreshold = getModelScoreThreshold(this.embedderProvider, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 452)

#### üìÑ cache-manager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cacheData = await vscode.workspace.fs.readFile(this.cachePath)` (—Å—Ç—Ä–æ–∫–∞ 40)

### üìÇ build-src/src/services/checkpoints

#### üìÑ types.ts

#### üìÑ index.ts

#### üìÑ excludes.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getBuildArtifactPatterns()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `getMediaFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getCacheFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `getConfigFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 102)
- `getLargeDataFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `getDatabaseFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 121)
- `getGeospatialPatterns()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `getLogFilePatterns()` (—Å—Ç—Ä–æ–∫–∞ 175)
- `async getLfsPatterns(workspacePath: s)` (—Å—Ç—Ä–æ–∫–∞ 186)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getBuildArtifactPatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 6)
- `getMediaFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getCacheFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `getConfigFilePatterns = () => ["*.env*", "*.local", "*.development", "*.production"]` (—Å—Ç—Ä–æ–∫–∞ 102)
- `getLargeDataFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 104)
- `getDatabaseFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 121)
- `getGeospatialPatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 145)
- `getLogFilePatterns = () => [` (—Å—Ç—Ä–æ–∫–∞ 175)
- `getLfsPatterns = async (workspacePath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `attributesPath = join(workspacePath, ".gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 188)

#### üìÑ ShadowCheckpointService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `homedir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `desktopPath = path.join(homedir, "Desktop")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `documentsPath = path.join(homedir, "Documents")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `downloadsPath = path.join(homedir, "Downloads")` (—Å—Ç—Ä–æ–∫–∞ 47)
- `protectedPaths = [homedir, desktopPath, documentsPath, downloadsPath]` (—Å—Ç—Ä–æ–∫–∞ 48)
- `hasNestedGitRepos = await this.hasNestedGitRepositories()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `git = simpleGit(this.checkpointsDir)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `gitVersion = await git.version()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `startTime = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `worktree = await this.getShadowGitConfigWorktree(git)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `duration = Date.now() - startTime` (—Å—Ç—Ä–æ–∫–∞ 110)
- `patterns = await getExcludePatterns(this.workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `args = ["--files", "--hidden", "--follow", "-g", "**/.git/HEAD", this.workspaceDir]` (—Å—Ç—Ä–æ–∫–∞ 155)
- `gitPaths = await executeRipgrep({ args, workspacePath: this.workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 157)
- `nestedGitPaths = gitPaths.filter(` (—Å—Ç—Ä–æ–∫–∞ 160)
- `startTime = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 210)
- `commitArgs = options?.allowEmpty ? { "--allow-empty": null } : undefined` (—Å—Ç—Ä–æ–∫–∞ 212)
- `result = await this.git.commit(message, commitArgs)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `isFirst = this._checkpoints.length === 0` (—Å—Ç—Ä–æ–∫–∞ 214)
- `fromHash = this._checkpoints[this._checkpoints.length - 1] ?? this.baseHash!` (—Å—Ç—Ä–æ–∫–∞ 215)
- `toHash = result.commit || fromHash` (—Å—Ç—Ä–æ–∫–∞ 216)
- `duration = Date.now() - startTime` (—Å—Ç—Ä–æ–∫–∞ 218)
- `error = e instanceof Error ? e : new Error(String(e))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `start = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `checkpointIndex = this._checkpoints.indexOf(commitHash)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `duration = Date.now() - start` (—Å—Ç—Ä–æ–∫–∞ 260)
- `error = e instanceof Error ? e : new Error(String(e))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = []` (—Å—Ç—Ä–æ–∫–∞ 276)
- `cwdPath = (await this.getShadowGitConfigWorktree(this.git)) || this.workspaceDir || ""` (—Å—Ç—Ä–æ–∫–∞ 288)
- `relPath = file.file` (—Å—Ç—Ä–æ–∫–∞ 291)
- `absPath = path.join(cwdPath, relPath)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `before = await this.git.show([`${from}:${relPath}`]).catch(() => "")` (—Å—Ç—Ä–æ–∫–∞ 293)
- `after = to` (—Å—Ç—Ä–æ–∫–∞ 295)
- `workspaceRepoDir = this.workspaceRepoDir({ globalStorageDir, workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 356)
- `branchName = `roo-${taskId}`` (—Å—Ç—Ä–æ–∫–∞ 357)
- `git = simpleGit(workspaceRepoDir)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `success = await this.deleteBranch(git, branchName)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `branches = await git.branchLocal()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `currentBranch = await git.revparse(["--abbrev-ref", "HEAD"])` (—Å—Ç—Ä–æ–∫–∞ 376)
- `worktree = await git.getConfig("core.worktree")` (—Å—Ç—Ä–æ–∫–∞ 379)
- `defaultBranch = branches.all.includes("main") ? "main" : "master"` (—Å—Ç—Ä–æ–∫–∞ 385)
- `newBranch = await git.revparse(["--abbrev-ref", "HEAD"])` (—Å—Ç—Ä–æ–∫–∞ 390)

#### üìÑ RepoPerTaskCheckpointService.ts

### üìÇ build-src/src/services/browser

#### üìÑ browserDiscovery.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async discoverChromeHosts(port: n): Promise<string | null>` (—Å—Ç—Ä–æ–∫–∞ 109)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `socket = new net.Socket()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `networkPrefix = baseIP.split(".").slice(0, 3).join(".") + "."` (—Å—Ç—Ä–æ–∫–∞ 85)
- `priorityIPs = [` (—Å—Ç—Ä–æ–∫–∞ 88)
- `isOpen = await isPortOpen(ip, port)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `discoverChromeHosts = async (port: number): Promise<string | null> => {` (—Å—Ç—Ä–æ–∫–∞ 109)
- `ipAddresses = []` (—Å—Ç—Ä–æ–∫–∞ 111)
- `hostIP = await getDockerHostIP()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `uniqueIPs = [...new Set(ipAddresses)]` (—Å—Ç—Ä–æ–∫–∞ 121)
- `hostEndpoint = `http://${ip}:${port}`` (—Å—Ç—Ä–æ–∫–∞ 126)
- `hostIsValid = await tryChromeHostUrl(hostEndpoint)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `hostsToTry = [`http://localhost:${port}`, `http://127.0.0.1:${port}`]` (—Å—Ç—Ä–æ–∫–∞ 150)
- `hostIsValid = await tryChromeHostUrl(hostUrl)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `discoveredHostUrl = await discoverChromeHosts(port)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `hostIsValid = await tryChromeHostUrl(discoveredHostUrl)` (—Å—Ç—Ä–æ–∫–∞ 170)

#### üìÑ UrlContentFetcher.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PCRStats` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `URL_FETCH_TIMEOUT = 30_000 // 30 seconds` (—Å—Ç—Ä–æ–∫–∞ 13)
- `URL_FETCH_FALLBACK_TIMEOUT = 20_000 // 20 seconds for fallback` (—Å—Ç—Ä–æ–∫–∞ 14)
- `globalStoragePath = this.context?.globalStorageUri?.fsPath` (—Å—Ç—Ä–æ–∫–∞ 31)
- `puppeteerDir = path.join(globalStoragePath, "puppeteer")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `dirExists = await fileExistsAtPath(puppeteerDir)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `stats = await this.ensureChromiumExists()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `serializedError = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `errorMessage = serializedError.message || String(error)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `errorName = serializedError.name` (—Å—Ç—Ä–æ–∫–∞ 101)
- `content = await this.page.content()` (—Å—Ç—Ä–æ–∫–∞ 126)
- `$ = cheerio.load(content)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `turndownService = new TurndownService()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `markdown = turndownService.turndown($.html())` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ BrowserSession.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `consoleListener(msg: a)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `errorListener(err: E)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `requestListener()` (—Å—Ç—Ä–æ–∫–∞ 468)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PCRStats` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BROWSER_NAVIGATION_TIMEOUT = 15_000 // 15 seconds` (—Å—Ç—Ä–æ–∫–∞ 14)
- `globalStoragePath = this.context?.globalStorageUri?.fsPath` (—Å—Ç—Ä–æ–∫–∞ 34)
- `puppeteerDir = path.join(globalStoragePath, "puppeteer")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `dirExists = await fileExistsAtPath(puppeteerDir)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `size = (this.context.globalState.get("browserViewportSize") as string | undefined) || "900x600"` (—Å—Ç—Ä–æ–∫–∞ 58)
- `stats = await this.ensureChromiumExists()` (—Å—Ç—Ä–æ–∫–∞ 68)
- `cachedChromeHostUrl = this.context.globalState.get("cachedChromeHostUrl") as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 112)
- `hostIsValid = await tryChromeHostUrl(remoteBrowserHost)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `chromeHostUrl = await discoverChromeHostUrl()` (—Å—Ç—Ä–æ–∫–∞ 152)
- `remoteBrowserEnabled = this.context.globalState.get("remoteBrowserEnabled") as boolean | undefined` (—Å—Ç—Ä–æ–∫–∞ 169)
- `remoteConnected = await this.connectToRemoteBrowser()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `consoleListener = (msg: any) => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `errorListener = (err: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 240)
- `urlObj = new URL(url)` (—Å—Ç—Ä–æ–∫–∞ 313)
- `newPage = await this.browser.newPage()` (—Å—Ç—Ä–æ–∫–∞ 339)
- `result = await this.doAction(async (page) => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `normalizedNewUrl = url.replace(/\/$/, "")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `rootDomain = this.getRootDomain(normalizedNewUrl)` (—Å—Ç—Ä–æ–∫–∞ 360)
- `pages = await this.browser.pages()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `pageUrl = page.url()` (—Å—Ç—Ä–æ–∫–∞ 370)
- `currentUrl = existingPage.url().replace(/\/$/, "") // Remove trailing / if present` (—Å—Ç—Ä–æ–∫–∞ 391)
- `checkDurationMsecs = 500 // 1000` (—Å—Ç—Ä–æ–∫–∞ 426)
- `maxChecks = timeout / checkDurationMsecs` (—Å—Ç—Ä–æ–∫–∞ 427)
- `minStableSizeIterations = 3` (—Å—Ç—Ä–æ–∫–∞ 431)
- `requestListener = () => {` (—Å—Ç—Ä–æ–∫–∞ 468)
- `scrollAmount = direction === "down" ? height : -height` (—Å—Ç—Ä–æ–∫–∞ 514)
- `session = await page.createCDPSession()` (—Å—Ç—Ä–æ–∫–∞ 551)

### üìÇ build-src/src/integrations/workspace

#### üìÑ WorkspaceTracker.ts

**–ö–ª–∞—Å—Å—ã:**

- `class WorkspaceTracker (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_INITIAL_FILES = 1_000` (—Å—Ç—Ä–æ–∫–∞ 8)
- `tempCwd = this.cwd` (—Å—Ç—Ä–æ–∫–∞ 32)
- `watcher = vscode.workspace.createFileSystemWatcher("**")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `groupTabs = group.tabs` (—Å—Ç—Ä–æ–∫–∞ 79)
- `relativeFilePaths = Array.from(this.filePaths).map((file) => toRelativePath(file, this.cwd))` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resolvedPath = this.cwd ? path.resolve(this.cwd, filePath) : path.resolve(filePath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `normalizedPath = this.normalizeFilePath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stat = await vscode.workspace.fs.stat(vscode.Uri.file(normalizedPath))` (—Å—Ç—Ä–æ–∫–∞ 144)
- `isDirectory = (stat.type & vscode.FileType.Directory) !== 0` (—Å—Ç—Ä–æ–∫–∞ 145)
- `pathWithSlash = isDirectory && !normalizedPath.endsWith("/") ? normalizedPath + "/" : normalizedPath` (—Å—Ç—Ä–æ–∫–∞ 146)
- `normalizedPath = this.normalizeFilePath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 157)

### üìÇ build-src/src/integrations/theme

#### üìÑ getTheme.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseThemeString(themeString: s): any` (—Å—Ç—Ä–æ–∫–∞ 25)
- `getExtensionUri(): vscode.Uri` (—Å—Ç—Ä–æ–∫–∞ 145)

**–¢–∏–ø—ã:**

- `type JsonObject` (—Å—Ç—Ä–æ–∫–∞ 93)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `colorTheme = vscode.workspace.getConfiguration("workbench").get<string>("colorTheme") || "Default Dark Modern"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `extension = vscode.extensions.all[i]` (—Å—Ç—Ä–æ–∫–∞ 44)
- `themePath = path.join(extension.extensionPath, theme.path)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `filename = `${defaultThemes[colorTheme]}.json`` (—Å—Ç—Ä–æ–∫–∞ 57)
- `includeThemeString = await fs.readFile(` (—Å—Ç—Ä–æ–∫–∞ 68)
- `includeTheme = parseThemeString(includeThemeString)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `converted = convertTheme(parsed)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `copyOfFirst = JSON.parse(JSON.stringify(first))` (—Å—Ç—Ä–æ–∫–∞ 100)
- `secondValue = second[key]` (—Å—Ç—Ä–æ–∫–∞ 104)
- `firstValue = copyOfFirst[key]` (—Å—Ç—Ä–æ–∫–∞ 112)

### üìÇ build-src/src/integrations/terminal

#### üìÑ types.ts

#### üìÑ mergePromise.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async nativePromisePrototype()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nativePromisePrototype = (async () => {})().constructor.prototype` (—Å—Ç—Ä–æ–∫–∞ 7)
- `descriptors = ["then", "catch", "finally"].map(` (—Å—Ç—Ä–æ–∫–∞ 9)
- `value = descriptor.value.bind(promise)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ TerminalRegistry.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `closeDisposable = vscode.window.onDidCloseTerminal((vsceTerminal) => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `terminal = this.getTerminalByVSCETerminal(vsceTerminal)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `startDisposable = vscode.window.onDidStartTerminalShellExecution?.(` (—Å—Ç—Ä–æ–∫–∞ 49)
- `stream = e.execution.read()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `terminal = this.getTerminalByVSCETerminal(e.terminal)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `endDisposable = vscode.window.onDidEndTerminalShellExecution?.(` (—Å—Ç—Ä–æ–∫–∞ 76)
- `terminal = this.getTerminalByVSCETerminal(e.terminal)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `process = terminal?.process` (—Å—Ç—Ä–æ–∫–∞ 79)
- `exitDetails = TerminalProcess.interpretExitCode(e.exitCode)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `terminals = this.getAllTerminals()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `terminalCwd = t.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `terminalCwd = t.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `terminal = this.terminals.find((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `found = this.terminals.find((t) => t instanceof Terminal && t.terminal === vsceTerminal)` (—Å—Ç—Ä–æ–∫–∞ 322)

#### üìÑ TerminalProcess.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = this.terminalRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `terminal = this.terminal.terminal` (—Å—Ç—Ä–æ–∫–∞ 50)
- `isShellIntegrationAvailable = terminal.shellIntegration && terminal.shellIntegration.executeCommand` (—Å—Ç—Ä–æ–∫–∞ 52)
- `streamAvailable = new Promise<AsyncIterable<string>>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `shellExecutionComplete = new Promise<ExitCodeDetails>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `defaultWindowsShellProfile = vscode.workspace` (—Å—Ç—Ä–æ–∫–∞ 108)
- `match = this.matchAfterVsceStartMarkers(data)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 198)
- `inspectPreOutput = inspect(preOutput, { colors: false, breakLength: Infinity })` (—Å—Ç—Ä–æ–∫–∞ 223)
- `match = this.matchBeforeVsceEndMarkers(this.fullOutput)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `index633 = outputToProcess.indexOf("\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 284)
- `index133 = outputToProcess.indexOf("\x1b]133` (—Å—Ç—Ä–æ–∫–∞ 285)
- `remainingBuffer = this.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `bellIndex = data.indexOf(bell, startIndex + prefix.length)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `distanceToBell = bellIndex - startIndex` (—Å—Ç—Ä–æ–∫–∞ 363)
- `contentStart = startIndex + prefixLength` (—Å—Ç—Ä–æ–∫–∞ 370)
- `match633 = this.stringIndexMatch(data, prefix633, suffix633)` (—Å—Ç—Ä–æ–∫–∞ 455)

#### üìÑ Terminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `env = Terminal.getEnv()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `iconPath = new vscode.ThemeIcon("rocket")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `process = new TerminalProcess(this)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `promise = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `tempCopyBuffer = await vscode.env.clipboard.readText()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `lines = terminalContents.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `lastLine = lines.pop()?.trim()` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ ShellIntegrationManager.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `os = require("os")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `tmpDir = path.join(os.tmpdir(), `roo-zdotdir-${Math.random().toString(36).substring(2, 15)}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `zshrcPath = `${tmpDir}/.zshrc`` (—Å—Ç—Ä–æ–∫–∞ 32)
- `shellIntegrationPath = this.getShellIntegrationPath("zsh")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `zshrcContent = `` (—Å—Ç—Ä–æ–∫–∞ 37)
- `tmpDir = this.terminalTmpDirs.get(terminalId)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `logPrefix = `[TerminalRegistry] Cleaning up temporary directory for terminal ${terminalId}`` (—Å—Ç—Ä–æ–∫–∞ 76)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `zshrcPath = path.join(tmpDir, ".zshrc")` (—Å—Ç—Ä–æ–∫–∞ 85)

#### üìÑ ExecaTerminalProcess.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `performKill()` (—Å—Ç—Ä–æ–∫–∞ 163)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = this.terminalRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `actualPid = parseInt(children[0].PID)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `rawStream = this.subprocess.iterable({ from: "all", preserveNewlines: true })` (—Å—Ç—Ä–æ–∫–∞ 74)
- `stream = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `kill = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 105)
- `performKill = () => {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `pids = children.map((p) => parseInt(p.PID))` (—Å—Ç—Ä–æ–∫–∞ 199)
- `output = this.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 248)

#### üìÑ ExecaTerminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `process = new ExecaTerminalProcess(this)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `promise = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ BaseTerminalProcess.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `signal = exitCode - 128` (—Å—Ç—Ä–æ–∫–∞ 25)
- `coreDumpPossible = new Set([3, 4, 6, 7, 8, 11])` (—Å—Ç—Ä–æ–∫–∞ 101)

#### üìÑ BaseTerminal.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `processOutput = process.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `activeOutput = this.process?.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 143)
- `effectiveCharLimit = characterLimit ?? DEFAULT_TERMINAL_OUTPUT_CHARACTER_LIMIT` (—Å—Ç—Ä–æ–∫–∞ 281)

### üìÇ build-src/src/integrations/misc

#### üìÑ read-lines.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `outOfRangeError(filepath: s, n: n)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `outOfRangeError = (filepath: string, n: number) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `effectiveStartLine = startLine === undefined ? 0 : startLine` (—Å—Ç—Ä–æ–∫–∞ 46)
- `input = createReadStream(filepath)` (—Å—Ç—Ä–æ–∫–∞ 56)

#### üìÑ process-images.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMimeType(filePath: s): string` (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileUris = await vscode.window.showOpenDialog(options)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `imagePath = uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 22)
- `buffer = await fs.readFile(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `base64 = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mimeType = getMimeType(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `dataUrl = `data:${mimeType}` (—Å—Ç—Ä–æ–∫–∞ 26)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ open-file.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface OpenFileOptions` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalFilePathForError = filePath` (—Å—Ç—Ä–æ–∫–∞ 16)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `relativePart = filePath.slice(2)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `homePath = path.join(homeDir, relativePart)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `tempUri = vscode.Uri.file(p)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `relativePart = originalFilePathForError.slice(2)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `contentToCreate = options.content || ""` (—Å—Ç—Ä–æ–∫–∞ 106)
- `existingTab = group.tabs.find(` (—Å—Ç—Ä–æ–∫–∞ 119)
- `activeColumn = vscode.window.activeTextEditor?.viewColumn` (—Å—Ç—Ä–æ–∫–∞ 125)
- `tabColumn = vscode.window.tabGroups.all.find((group) =>` (—Å—Ç—Ä–æ–∫–∞ 126)
- `document = await vscode.workspace.openTextDocument(uriToProcess)` (—Å—Ç—Ä–æ–∫–∞ 137)

#### üìÑ line-counter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `readStream = createReadStream(filePath)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `rl = createInterface({` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ image-handler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `matches = dataUri.match(/^data:image\/([a-zA-Z]+)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `imageBuffer = Buffer.from(base64Data, "base64")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `tempFilePath = path.join(os.tmpdir(), `temp_image_${Date.now()}.${format}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `imageData = await vscode.workspace.fs.readFile(vscode.Uri.file(tempFilePath))` (—Å—Ç—Ä–æ–∫–∞ 24)
- `base64Image = Buffer.from(imageData).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `dataUri = `data:image/${format}` (—Å—Ç—Ä–æ–∫–∞ 28)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `matches = dataUri.match(/^data:image\/([a-zA-Z]+)` (—Å—Ç—Ä–æ–∫–∞ 56)
- `imageBuffer = Buffer.from(base64Data, "base64")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `defaultPath = workspacePath || os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `defaultFileName = `mermaid_diagram_${Date.now()}.${format}`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `defaultUri = vscode.Uri.file(path.join(defaultPath, defaultFileName))` (—Å—Ç—Ä–æ–∫–∞ 68)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 71)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ extract-text.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async extractTextFromPDF(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 11)
- `async extractTextFromDOCX(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async extractTextFromIPYNB(filePath: s): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dataBuffer = await fs.readFile(filePath)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `data = await pdf(dataBuffer)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = await mammoth.extractRawText({ path: filePath })` (—Å—Ç—Ä–æ–∫–∞ 18)
- `data = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `notebook = JSON.parse(data)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `SUPPORTED_BINARY_FORMATS = {` - Map of supported binary file formats to their extraction functions (—Å—Ç—Ä–æ–∫–∞ 39)
- `fileExtension = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `extractor = SUPPORTED_BINARY_FORMATS[fileExtension as keyof typeof SUPPORTED_BINARY_FORMATS]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `isBinary = await isBinaryFile(filePath).catch(() => false)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `totalLines = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `lastLineEmpty = lines[lines.length - 1] === ""` (—Å—Ç—Ä–æ–∫–∞ 122)
- `maxLineNumberWidth = String(startLine + lines.length - 1).length` (—Å—Ç—Ä–æ–∫–∞ 127)
- `numberedContent = lines` (—Å—Ç—Ä–æ–∫–∞ 128)
- `lineNumber = String(startLine + index).padStart(maxLineNumberWidth, " ")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `lines = content.split(/\r?\n/) // Handles both CRLF (carriage return (\r) + line feed (\n)) and LF (line feed (\n)) line endings` (—Å—Ç—Ä–æ–∫–∞ 140)
- `lines = content.split(/\r?\n/)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `processedLines = lines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 158)
- `match = aggressive ? line.match(/^\s*(?:\d+\s)?\|\s(.*)$/) : line.match(/^\s*\d+\s+\|(?!\|)\s?(.*)$/)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `lineEnding = content.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 165)
- `beforeLimit = Math.floor(characterLimit * 0.2) // 20% of characters before` (—Å—Ç—Ä–æ–∫–∞ 215)
- `afterLimit = characterLimit - beforeLimit // remaining 80% after` (—Å—Ç—Ä–æ–∫–∞ 216)
- `startSection = content.slice(0, beforeLimit)` (—Å—Ç—Ä–æ–∫–∞ 218)
- `endSection = content.slice(-afterLimit)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `omittedChars = content.length - characterLimit` (—Å—Ç—Ä–æ–∫–∞ 220)
- `beforeLimit = Math.floor(lineLimit * 0.2) // 20% of lines before` (—Å—Ç—Ä–æ–∫–∞ 242)
- `afterLimit = lineLimit - beforeLimit // remaining 80% after` (—Å—Ç—Ä–æ–∫–∞ 243)
- `omittedLines = totalLines - lineLimit` (—Å—Ç—Ä–æ–∫–∞ 264)
- `startSection = content.slice(0, startEndPos + 1)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `endSection = content.slice(endStartPos)` (—Å—Ç—Ä–æ–∫–∞ 266)
- `nextNewlineIdx = content.indexOf("\n", pos) // Find next line feed (\n) index` (—Å—Ç—Ä–æ–∫–∞ 288)
- `currentLine = nextNewlineIdx === -1 ? content.slice(pos) : content.slice(pos, nextNewlineIdx + 1)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `compressionDesc = `<previous line repeated ${repeatCount} additional times>\n`` (—Å—Ç—Ä–æ–∫–∞ 297)
- `compressionDesc = `<previous line repeated ${repeatCount} additional times>\n`` (—Å—Ç—Ä–æ–∫–∞ 316)
- `len = input.length` (—Å—Ç—Ä–æ–∫–∞ 352)
- `potentialPartialChar = curLine.charAt(segment.length)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `segmentLastCharCode = segment.length > 0 ? segment.charCodeAt(segment.length - 1) : 0` (—Å—Ç—Ä–æ–∫–∞ 469)
- `partialCharCode = potentialPartialChar.charCodeAt(0)` (—Å—Ç—Ä–æ–∫–∞ 470)
- `remainPart = curLine.substring(segment.length + 1)` (—Å—Ç—Ä–æ–∫–∞ 479)

#### üìÑ extract-text-from-xlsx.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatCellValue(cell: E): string` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ROW_LIMIT = 50000` (—Å—Ç—Ä–æ–∫–∞ 3)
- `value = cell.value` (—Å—Ç—Ä–æ–∫–∞ 6)
- `cellText = formatCellValue(cell)` (—Å—Ç—Ä–æ–∫–∞ 71)

#### üìÑ export-markdown.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `date = new Date(dateTs)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `month = date.toLocaleString("en-US", { month: "short" }).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `day = date.getDate()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `year = date.getFullYear()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `minutes = date.getMinutes().toString().padStart(2, "0")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `seconds = date.getSeconds().toString().padStart(2, "0")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `ampm = hours >= 12 ? "pm" : "am"` (—Å—Ç—Ä–æ–∫–∞ 15)
- `fileName = `roo_task_${month}-${day}-${year}_${hours}-${minutes}-${seconds}-${ampm}.md`` (—Å—Ç—Ä–æ–∫–∞ 18)
- `markdownContent = conversationHistory` (—Å—Ç—Ä–æ–∫–∞ 21)
- `role = message.role === "user" ? "**User:**" : "**Assistant:**"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `content = Array.isArray(message.content)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `toolName = "Tool"` (—Å—Ç—Ä–æ–∫–∞ 64)

### üìÇ build-src/src/integrations/editor

#### üìÑ detect-omission.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actualLineCount = newFileContent.split("\n").length` (—Å—Ç—Ä–æ–∫–∞ 18)
- `lengthRatio = actualLineCount / predictedLineCount` (—Å—Ç—Ä–æ–∫–∞ 19)
- `originalLines = originalFileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `newLines = newFileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `omissionKeywords = [` (—Å—Ç—Ä–æ–∫–∞ 23)
- `commentPatterns = [` (—Å—Ç—Ä–æ–∫–∞ 35)
- `words = line.toLowerCase().split(/\s+/)` (—Å—Ç—Ä–æ–∫–∞ 48)

#### üìÑ EditorUtils.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `selectedText = document.getText(range)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `currentLine = document.lineAt(range.start.line)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `startLineIndex = Math.max(0, currentLine.lineNumber - 1)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `endLineIndex = Math.min(document.lineCount - 1, currentLine.lineNumber + 1)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `effectiveRange = new vscode.Range(` (—Å—Ç—Ä–æ–∫–∞ 83)
- `workspaceFolder = vscode.workspace.getWorkspaceFolder(document.uri)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `relativePath = path.relative(workspaceFolder.uri.fsPath, document.uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `document = editor.document` (—Å—Ç—Ä–æ–∫–∞ 184)
- `selection = editor.selection` (—Å—Ç—Ä–æ–∫–∞ 185)
- `effectiveRange = this.getEffectiveRange(document, selection)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `filePath = this.getFilePath(document)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `diagnostics = vscode.languages` (—Å—Ç—Ä–æ–∫–∞ 193)

#### üìÑ DiffViewProvider.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 490)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `absolutePath = path.resolve(this.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `existingDocument = vscode.workspace.textDocuments.find((doc) =>` (—Å—Ç—Ä–æ–∫–∞ 57)
- `tabs = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 90)
- `accumulatedLines = accumulatedContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `diffEditor = this.activeDiffEditor` (—Å—Ç—Ä–æ–∫–∞ 125)
- `document = diffEditor?.document` (—Å—Ç—Ä–æ–∫–∞ 126)
- `beginningOfDocument = new vscode.Position(0, 0)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `endLine = accumulatedLines.length` (—Å—Ç—Ä–æ–∫–∞ 137)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 139)
- `rangeToReplace = new vscode.Range(0, 0, endLine, 0)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `ranges = this.activeDiffEditor?.visibleRanges` (—Å—Ç—Ä–æ–∫–∞ 149)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 161)
- `hasEmptyLastLine = this.originalContent?.endsWith("\n")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `finalEdit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `absolutePath = path.resolve(this.cwd, this.relPath)` (—Å—Ç—Ä–æ–∫–∞ 202)
- `updatedDocument = this.activeDiffEditor.document` (—Å—Ç—Ä–æ–∫–∞ 203)
- `editedContent = updatedDocument.getText()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `safeDelayMs = Math.max(0, writeDelayMs)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `postDiagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `task = this.taskRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 247)
- `state = await task?.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `includeDiagnosticMessages = state?.includeDiagnosticMessages ?? true` (—Å—Ç—Ä–æ–∫–∞ 249)
- `maxDiagnosticMessages = state?.maxDiagnosticMessages ?? 50` (—Å—Ç—Ä–æ–∫–∞ 250)
- `newProblems = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 252)
- `newContentEOL = this.newContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 268)
- `normalizedEditedContent = editedContent.replace(/\r\n|\n/g, newContentEOL)` (—Å—Ç—Ä–æ–∫–∞ 271)
- `normalizedNewContent = this.newContent.replace(/\r\n|\n/g, newContentEOL)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `userEdits = formatResponse.createPrettyPatch(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `xmlObj = {` (—Å—Ç—Ä–æ–∫–∞ 325)
- `builder = new XMLBuilder({` (—Å—Ç—Ä–æ–∫–∞ 345)
- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 374)
- `updatedDocument = this.activeDiffEditor.document` (—Å—Ç—Ä–æ–∫–∞ 375)
- `absolutePath = path.resolve(this.cwd, this.relPath)` (—Å—Ç—Ä–æ–∫–∞ 376)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 392)
- `fullRange = new vscode.Range(` (—Å—Ç—Ä–æ–∫–∞ 394)
- `closeOps = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 422)
- `uri = vscode.Uri.file(path.resolve(this.cwd, this.relPath))` (—Å—Ç—Ä–æ–∫–∞ 462)
- `diffTab = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 467)
- `editor = await vscode.window.showTextDocument(diffTab.input.modified, { preserveFocus: true })` (—Å—Ç—Ä–æ–∫–∞ 477)
- `fileName = path.basename(uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `fileExists = this.editType === "modify"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `DIFF_EDITOR_TIMEOUT = 10_000 // ms` (—Å—Ç—Ä–æ–∫–∞ 485)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 490)
- `editor = vscode.window.visibleTextEditors.find((e) =>` (—Å—Ç—Ä–æ–∫–∞ 517)
- `editor = editors.find((e) => arePathsEqual(e.document.uri.fsPath, uri.fsPath))` (—Å—Ç—Ä–æ–∫–∞ 532)
- `scrollLine = line + 4` (—Å—Ç—Ä–æ–∫–∞ 570)
- `currentContent = this.activeDiffEditor.document.getText()` (—Å—Ç—Ä–æ–∫–∞ 584)
- `diffs = diff.diffLines(this.originalContent || "", currentContent)` (—Å—Ç—Ä–æ–∫–∞ 585)
- `absolutePath = path.resolve(this.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `doc = await vscode.workspace.openTextDocument(vscode.Uri.file(absolutePath))` (—Å—Ç—Ä–æ–∫–∞ 671)
- `safeDelayMs = Math.max(0, writeDelayMs)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `postDiagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 694)
- `task = this.taskRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 697)
- `state = await task?.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 698)
- `includeDiagnosticMessages = state?.includeDiagnosticMessages ?? true` (—Å—Ç—Ä–æ–∫–∞ 699)
- `maxDiagnosticMessages = state?.maxDiagnosticMessages ?? 50` (—Å—Ç—Ä–æ–∫–∞ 700)
- `newProblems = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 702)

#### üìÑ DecorationController.ts

**–¢–∏–ø—ã:**

- `type DecorationType` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fadedOverlayDecorationType = vscode.window.createTextEditorDecorationType({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `activeLineDecorationType = vscode.window.createTextEditorDecorationType({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `lastRange = this.ranges[this.ranges.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 43)
- `endLine = startIndex + numLines - 1` (—Å—Ç—Ä–æ–∫–∞ 47)

### üìÇ build-src/src/integrations/diagnostics

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `oldMap = new Map(oldDiagnostics)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `oldDiags = oldMap.get(uri) || []` (—Å—Ç—Ä–æ–∫–∞ 13)
- `newProblemsForUri = newDiags.filter((newDiag) => !oldDiags.some((oldDiag) => deepEqual(oldDiag, newDiag)))` (—Å—Ç—Ä–æ–∫–∞ 14)
- `documents = new Map<vscode.Uri, vscode.TextDocument>()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `fileStats = new Map<vscode.Uri, vscode.FileStat>()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `filtered = fileDiagnostics.filter((d) => severities.includes(d.severity))` (—Å—Ç—Ä–æ–∫–∞ 97)
- `severityDiff = a.diagnostic.severity - b.diagnostic.severity` (—Å—Ç—Ä–æ–∫–∞ 106)
- `line = item.diagnostic.range.start.line + 1` (—Å—Ç—Ä–æ–∫–∞ 137)
- `source = item.diagnostic.source ? `${item.diagnostic.source} ` : ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `document = documents.get(item.uri) || (await vscode.workspace.openTextDocument(item.uri))` (—Å—Ç—Ä–æ–∫–∞ 149)
- `lineContent = document.lineAt(item.diagnostic.range.start.line).text` (—Å—Ç—Ä–æ–∫–∞ 151)
- `groupedDiagnostics = new Map<string, { uri: vscode.Uri` (—Å—Ç—Ä–æ–∫–∞ 166)
- `key = item.uri.toString()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `sortedDiagnostics = fileDiagnostics.sort(` (—Å—Ç—Ä–æ–∫–∞ 177)
- `problems = fileDiagnostics` (—Å—Ç—Ä–æ–∫–∞ 195)
- `line = diagnostic.range.start.line + 1 // VSCode lines are 0-indexed` (—Å—Ç—Ä–æ–∫–∞ 218)
- `source = diagnostic.source ? `${diagnostic.source} ` : ""` (—Å—Ç—Ä–æ–∫–∞ 219)
- `document = documents.get(uri) || (await vscode.workspace.openTextDocument(uri))` (—Å—Ç—Ä–æ–∫–∞ 227)
- `lineContent = document.lineAt(diagnostic.range.start.line).text` (—Å—Ç—Ä–æ–∫–∞ 229)

### üìÇ build-src/src/integrations/claude-code

#### üìÑ types.ts

**–¢–∏–ø—ã:**

- `type InitMessage` (—Å—Ç—Ä–æ–∫–∞ 3)
- `type AssistantMessage` (—Å—Ç—Ä–æ–∫–∞ 12)
- `type ErrorMessage` (—Å—Ç—Ä–æ–∫–∞ 18)
- `type ResultMessage` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ run.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseChunk(data: s, processState: P)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `attemptParseChunk(data: s): ClaudeCodeMessage | null` (—Å—Ç—Ä–æ–∫–∞ 250)
- `createClaudeCodeNotFoundError(claudePath: s, originalError: E): Error` - Creates a user-friendly error message for Claude Code ENOENT errors (—Å—Ç—Ä–æ–∫–∞ 262)

**–¢–∏–ø—ã:**

- `type ClaudeCodeOptions` (—Å—Ç—Ä–æ–∫–∞ 15)
- `type ProcessState` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cwd = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CLAUDE_CODE_INSTALLATION_URL = "https://docs.anthropic.com/en/docs/claude-code/setup"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `claudePath = options.path || "claude"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 45)
- `chunk = parseChunk(line, processState)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `errorOutput = (processState.error as any)?.message || processState.stderrLogs?.trim()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `claudeCodeTools = [` (—Å—Ç—Ä–æ–∫–∞ 125)
- `CLAUDE_CODE_TIMEOUT = 600000 // 10 minutes` (—Å—Ç—Ä–æ–∫–∞ 144)
- `claudePath = path || "claude"` (—Å—Ç—Ä–æ–∫–∞ 153)
- `isWindows = os.platform() === "win32"` (—Å—Ç—Ä–æ–∫–∞ 154)
- `args = ["-p"]` (—Å—Ç—Ä–æ–∫–∞ 157)
- `child = execa(claudePath, args, {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `chunk = attemptParseChunk(processState.partialData)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `chunk = attemptParseChunk(data)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `errorMessage = t("errors.claudeCode.notFound", {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `error = new Error(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 269)

#### üìÑ message-filter.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filteredContent = message.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `sourceType = block.source?.type || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mediaType = block.source?.media_type || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 21)

### üìÇ build-src/src/core/webview

#### üìÑ webviewMessageHandler.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `findMessageIndices(messageTs: n, currentCline: a)` - Shared utility to find message indices based on timestamp (—Å—Ç—Ä–æ–∫–∞ 71)
- `async handleDeleteOperation(messageTs: n): Promise<void>` - Handles message deletion operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 101)
- `async handleDeleteMessageConfirm(messageTs: n): Promise<void>` - Handles confirmed message deletion from webview dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `async handleEditOperation(messageTs: n, editedContent: s): Promise<void>` - Handles message editing operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 140)
- `async safeGetModels(options: G): Promise<ModelRecord>` (—Å—Ç—Ä–æ–∫–∞ 531)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ALLOWED_VSCODE_SETTINGS = new Set(["terminal.integrated.inheritEnv"])` (—Å—Ç—Ä–æ–∫–∞ 53)
- `getGlobalState = <K extends keyof GlobalState>(key: K) => provider.contextProxy.getValue(key)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `updateGlobalState = async <K extends keyof GlobalState>(key: K, value: GlobalState[K]) =>` (—Å—Ç—Ä–æ–∫–∞ 65)
- `findMessageIndices = (messageTs: number, currentCline: any) => {` - Shared utility to find message indices based on timestamp (—Å—Ç—Ä–æ–∫–∞ 71)
- `timeCutoff = messageTs - 1000 // 1 second buffer before the message` (—Å—Ç—Ä–æ–∫–∞ 72)
- `messageIndex = currentCline.clineMessages.findIndex((msg: ClineMessage) => msg.ts && msg.ts >= timeCutoff)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `apiConversationHistoryIndex = currentCline.apiConversationHistory.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `removeMessagesThisAndSubsequent = async (` - Removes the target message and all subsequent messages (—Å—Ç—Ä–æ–∫–∞ 83)
- `handleDeleteOperation = async (messageTs: number): Promise<void> => {` - Handles message deletion operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 101)
- `handleDeleteMessageConfirm = async (messageTs: number): Promise<void> => {` - Handles confirmed message deletion from webview dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `currentCline = provider.getCurrentCline()!` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handleEditOperation = async (messageTs: number, editedContent: string, images?: string[]): Promise<void> => {` - Handles message editing operations with user confirmation (—Å—Ç—Ä–æ–∫–∞ 140)
- `handleEditMessageConfirm = async (` - Handles confirmed message editing from webview dialog (—Å—Ç—Ä–æ–∫–∞ 153)
- `currentCline = provider.getCurrentCline()!` (—Å—Ç—Ä–æ–∫–∞ 160)
- `handleMessageModificationsOperation = async (` - Handles message modification operations (delete or edit) with confirmation dialog (—Å—Ç—Ä–æ–∫–∞ 198)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `mcpHub = provider.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 224)
- `currentConfigName = getGlobalState("currentApiConfigName")` (—Å—Ç—Ä–æ–∫–∞ 251)
- `name = listApiConfig[0]?.name` (—Å—Ç—Ä–æ–∫–∞ 256)
- `isOptedIn = telemetrySetting === "enabled"` (—Å—Ç—Ä–æ–∫–∞ 280)
- `currentTask = provider.getCurrentCline()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `images = await selectImages()` (—Å—Ç—Ä–æ–∫–∞ 380)
- `currentTaskId = provider.getCurrentCline()?.taskId` (—Å—Ç—Ä–æ–∫–∞ 389)
- `shareTaskId = provider.getCurrentCline()?.taskId` (—Å—Ç—Ä–æ–∫–∞ 395)
- `clineMessages = provider.getCurrentCline()?.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 396)
- `visibility = message.visibility || "organization"` (—Å—Ç—Ä–æ–∫–∞ 403)
- `result = await CloudService.instance.shareTask(shareTaskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 404)
- `errorMessage = result.error || "Failed to create share link"` (—Å—Ç—Ä–æ–∫–∞ 422)
- `ids = message.ids` (—Å—Ç—Ä–æ–∫–∞ 448)
- `batchSize = 20` (—Å—Ç—Ä–æ–∫–∞ 452)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 453)
- `batch = ids.slice(i, i + batchSize)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `batchPromises = batch.map(async (id) => {` (—Å—Ç—Ä–æ–∫–∞ 461)
- `batchResults = await Promise.all(batchPromises)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `successCount = results.filter((r) => r.success).length` (—Å—Ç—Ä–æ–∫–∞ 483)
- `failCount = results.length - successCount` (—Å—Ç—Ä–æ–∫–∞ 484)
- `safeGetModels = async (options: GetModelsOptions): Promise<ModelRecord> => {` (—Å—Ç—Ä–æ–∫–∞ 531)
- `litellmApiKey = apiConfiguration.litellmApiKey || message?.values?.litellmApiKey` (—Å—Ç—Ä–æ–∫–∞ 553)
- `litellmBaseUrl = apiConfiguration.litellmBaseUrl || message?.values?.litellmBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 554)
- `results = await Promise.allSettled(` (—Å—Ç—Ä–æ–∫–∞ 562)
- `models = await safeGetModels(options)` (—Å—Ç—Ä–æ–∫–∞ 564)
- `routerName = modelFetchPromises[index].key // Get RouterName using index` (—Å—Ç—Ä–æ–∫–∞ 577)
- `errorMessage = result.reason instanceof Error ? result.reason.message : String(result.reason)` (—Å—Ç—Ä–æ–∫–∞ 596)
- `ollamaModels = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 623)
- `lmStudioModels = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 647)
- `openAiModels = await getOpenAiModels(` (—Å—Ç—Ä–æ–∫–∞ 666)
- `vsCodeLmModels = await getVsCodeLmModels()` (—Å—Ç—Ä–æ–∫–∞ 677)
- `huggingFaceModelsResponse = await getHuggingFaceModelsWithMetadata()` (—Å—Ç—Ä–æ–∫–∞ 684)
- `result = checkoutDiffPayloadSchema.safeParse(message.payload)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `result = checkoutRestorePayloadSchema.safeParse(message.payload)` (—Å—Ç—Ä–æ–∫–∞ 723)
- `commands = message.commands ?? []` (—Å—Ç—Ä–æ–∫–∞ 748)
- `validCommands = Array.isArray(commands)` (—Å—Ç—Ä–æ–∫–∞ 749)
- `commands = message.commands ?? []` (—Å—Ç—Ä–æ–∫–∞ 764)
- `validCommands = Array.isArray(commands)` (—Å—Ç—Ä–æ–∫–∞ 765)
- `customModesFilePath = await provider.customModesManager.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 779)
- `mcpSettingsFilePath = await provider.getMcpHub()?.getMcpSettingsFilePath()` (—Å—Ç—Ä–æ–∫–∞ 788)
- `workspaceFolder = vscode.workspace.workspaceFolders[0]` (—Å—Ç—Ä–æ–∫–∞ 802)
- `rooDir = path.join(workspaceFolder.uri.fsPath, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 803)
- `mcpPath = path.join(rooDir, "mcp.json")` (—Å—Ç—Ä–æ–∫–∞ 804)
- `exists = await fileExistsAtPath(mcpPath)` (—Å—Ç—Ä–æ–∫–∞ 808)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 834)
- `mcpEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 901)
- `mcpHub = provider.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 910)
- `soundEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 918)
- `soundVolume = message.value ?? 0.5` (—Å—Ç—Ä–æ–∫–∞ 923)
- `ttsEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 928)
- `ttsSpeed = message.value ?? 1.0` (—Å—Ç—Ä–æ–∫–∞ 934)
- `diffEnabled = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 951)
- `enableCheckpoints = message.bool ?? true` (—Å—Ç—Ä–æ–∫–∞ 956)
- `browserViewportSize = message.text ?? "900x600"` (—Å—Ç—Ä–æ–∫–∞ 961)
- `chromeHostUrl = await discoverChromeHostUrl()` (—Å—Ç—Ä–æ–∫–∞ 983)
- `customHostUrl = message.text` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `hostIsValid = await tryChromeHostUrl(message.text)` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `lineLimit = message.value` (—Å—Ç—Ä–æ–∫–∞ 1073)
- `charLimit = message.value` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `existingPrompts = getGlobalState("customModePrompts") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1180)
- `updatedPrompts = { ...existingPrompts, [message.promptMode]: message.customPrompt }` (—Å—Ç—Ä–æ–∫–∞ 1181)
- `currentState = await provider.getStateToPostToWebview()` (—Å—Ç—Ä–æ–∫–∞ 1183)
- `stateWithPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1184)
- `oldPrompt = existingPrompts[message.promptMode] || {}` (—Å—Ç—Ä–æ–∫–∞ 1193)
- `newPrompt = message.customPrompt` (—Å—Ç—Ä–æ–∫–∞ 1194)
- `changedSettings = Object.keys(newPrompt).filter(` (—Å—Ç—Ä–æ–∫–∞ 1195)
- `tabCount = Math.min(Math.max(0, message.value ?? 20), 500)` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `fileCount = Math.min(Math.max(0, message.value ?? 200), 500)` (—Å—Ç—Ä–æ–∫–∞ 1239)
- `valueToSave = message.value // Capture the value intended for saving` (—Å—Ç—Ä–æ–∫–∞ 1281)
- `includeValue = message.bool !== undefined ? message.bool : true` (—Å—Ç—Ä–æ–∫–∞ 1287)
- `currentPinned = getGlobalState("pinnedApiConfigs") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1301)
- `currentSupportPrompts = getGlobalState("customSupportPrompts") ?? {}` (—Å—Ç—Ä–æ–∫–∞ 1328)
- `updatedSupportPrompts = { ...currentSupportPrompts, CONDENSE: message.text }` (—Å—Ç—Ä–æ–∫–∞ 1329)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 1346)
- `currentCline = provider.getCurrentCline()` (—Å—Ç—Ä–æ–∫–∞ 1355)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 1356)
- `systemPrompt = await generateSystemPrompt(provider, message)` (—Å—Ç—Ä–æ–∫–∞ 1386)
- `systemPrompt = await generateSystemPrompt(provider, message)` (—Å—Ç—Ä–æ–∫–∞ 1402)
- `cwd = provider.cwd` (—Å—Ç—Ä–æ–∫–∞ 1414)
- `commits = await searchCommits(message.query || "", cwd)` (—Å—Ç—Ä–æ–∫–∞ 1417)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 1432)
- `results = await searchWorkspaceFiles(` (—Å—Ç—Ä–æ–∫–∞ 1446)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `payload = message.payload as { todos?: any[] }` (—Å—Ç—Ä–æ–∫–∞ 1472)
- `todos = payload?.todos` (—Å—Ç—Ä–æ–∫–∞ 1473)
- `listApiConfig = await provider.providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 1483)
- `answer = await vscode.window.showInformationMessage(` (—Å—Ç—Ä–æ–∫–∞ 1554)
- `oldName = message.text` (—Å—Ç—Ä–æ–∫–∞ 1564)
- `newName = (await provider.providerSettingsManager.listConfig()).filter(` (—Å—Ç—Ä–æ–∫–∞ 1566)
- `listApiConfig = await provider.providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 1599)
- `updatedExperiments = {` (—Å—Ç—Ä–æ–∫–∞ 1614)
- `existingModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `isNewMode = !existingModes.some((mode) => mode.slug === message.modeConfig?.slug)` (—Å—Ç—Ä–æ–∫–∞ 1646)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1650)
- `existingMode = existingModes.find((mode) => mode.slug === message.modeConfig?.slug)` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `changedSettings = existingMode` (—Å—Ç—Ä–æ–∫–∞ 1666)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1684)
- `modeToDelete = customModes.find((mode) => mode.slug === message.slug)` (—Å—Ç—Ä–æ–∫–∞ 1685)
- `scope = modeToDelete.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 1692)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 1697)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 1705)
- `rulesFolderExists = await fileExistsAtPath(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 1710)
- `customModePrompts = getGlobalState("customModePrompts") || {}` (—Å—Ç—Ä–æ–∫–∞ 1752)
- `customPrompt = customModePrompts[message.slug]` (—Å—Ç—Ä–æ–∫–∞ 1753)
- `result = await provider.customModesManager.exportModeWithRules(message.slug, customPrompt)` (—Å—Ç—Ä–æ–∫–∞ 1756)
- `lastExportPath = getGlobalState("lastModeExportPath")` (—Å—Ç—Ä–æ–∫–∞ 1760)
- `lastDir = path.dirname(lastExportPath)` (—Å—Ç—Ä–æ–∫–∞ 1765)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 1769)
- `saveUri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 1780)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1823)
- `lastImportPath = getGlobalState("lastModeImportPath")` (—Å—Ç—Ä–æ–∫–∞ 1839)
- `lastDir = path.dirname(lastImportPath)` (—Å—Ç—Ä–æ–∫–∞ 1844)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 1848)
- `fileUri = await vscode.window.showOpenDialog({` (—Å—Ç—Ä–æ–∫–∞ 1855)
- `yamlContent = await fs.readFile(fileUri[0].fsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 1871)
- `result = await provider.customModesManager.importModeWithRules(` (—Å—Ç—Ä–æ–∫–∞ 1874)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 1881)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 1913)
- `hasContent = await provider.customModesManager.checkRulesDirectoryHasContent(message.slug)` (—Å—Ç—Ä–æ–∫–∞ 1929)
- `telemetrySetting = message.text as TelemetrySetting` (—Å—Ç—Ä–æ–∫–∞ 1958)
- `isOptedIn = telemetrySetting === "enabled"` (—Å—Ç—Ä–æ–∫–∞ 1960)
- `settings = message.codeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 1999)
- `currentConfig = getGlobalState("codebaseIndexConfig") || {}` (—Å—Ç—Ä–æ–∫–∞ 2003)
- `globalStateConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2008)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2139)
- `status = manager.getCurrentStatus()` (—Å—Ç—Ä–æ–∫–∞ 2154)
- `hasOpenAiKey = !!(await provider.context.secrets.get("codeIndexOpenAiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2163)
- `hasQdrantApiKey = !!(await provider.context.secrets.get("codeIndexQdrantApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2164)
- `hasOpenAiCompatibleApiKey = !!(await provider.context.secrets.get(` (—Å—Ç—Ä–æ–∫–∞ 2165)
- `hasGeminiApiKey = !!(await provider.context.secrets.get("codebaseIndexGeminiApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2168)
- `hasMistralApiKey = !!(await provider.context.secrets.get("codebaseIndexMistralApiKey"))` (—Å—Ç—Ä–æ–∫–∞ 2169)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2185)
- `manager = provider.codeIndexManager` (—Å—Ç—Ä–æ–∫–∞ 2223)
- `configFilePath = await marketplaceManager.installMarketplaceItem(` (—Å—Ç—Ä–æ–∫–∞ 2280)
- `errorMessage = !marketplaceManager` (—Å—Ç—Ä–æ–∫–∞ 2337)
- `configFilePath = await marketplaceManager.installMarketplaceItem(message.payload.item, {` (—Å—Ç—Ä–æ–∫–∞ 2359)
- `commands = await getCommands(provider.cwd || "")` (—Å—Ç—Ä–æ–∫–∞ 2388)
- `commandList = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 2391)
- `command = await getCommand(provider.cwd || "", message.text)` (—Å—Ç—Ä–æ–∫–∞ 2417)
- `command = await getCommand(provider.cwd || "", message.text)` (—Å—Ç—Ä–æ–∫–∞ 2437)
- `source = message.values?.source as "global" | "project"` (—Å—Ç—Ä–æ–∫–∞ 2455)
- `fileName = message.text // Custom filename from user input` (—Å—Ç—Ä–æ–∫–∞ 2456)
- `globalConfigDir = path.join(os.homedir(), ".neira")` (—Å—Ç—Ä–æ–∫–∞ 2466)
- `workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 2470)
- `filePath = path.join(commandsDir, `${commandName}.md`)` (—Å—Ç—Ä–æ–∫–∞ 2526)
- `templateContent = t("common:errors.command_template_content")` (—Å—Ç—Ä–æ–∫–∞ 2540)
- `commands = await getCommands(provider.cwd || "")` (—Å—Ç—Ä–æ–∫–∞ 2550)
- `commandList = commands.map((command) => ({` (—Å—Ç—Ä–æ–∫–∞ 2551)
- `text = message.text` (—Å—Ç—Ä–æ–∫–∞ 2569)

#### üìÑ messageEnhancer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskHistory = this.extractTaskHistory(currentClineMessages)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `enhancementPrompt = supportPrompt.create(` (—Å—Ç—Ä–æ–∫–∞ 73)
- `enhancedText = await singleCompletionHandler(configToUse, enhancementPrompt)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `relevantMessages = messages` (—Å—Ç—Ä–æ–∫–∞ 101)
- `role = msg.type === "ask" ? "User" : "Assistant"` (—Å—Ç—Ä–æ–∫–∞ 116)
- `content = msg.text || ""` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ getUri.ts

#### üìÑ getNonce.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ generateSystemPrompt.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isMultiFileApplyDiffEnabled = experimentsModule.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 31)
- `diffStrategy = isMultiFileApplyDiffEnabled` (—Å—Ç—Ä–æ–∫–∞ 36)
- `cwd = provider.cwd` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mode = message.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 42)
- `customModes = await provider.customModesManager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `rooIgnoreInstructions = provider.getCurrentCline()?.rooIgnoreController?.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `tempApiHandler = buildApiHandler(apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `modeConfig = getModeBySlug(mode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `modeSupportsBrowser = modeConfig?.groups.some((group) => getGroupName(group) === "browser") ?? false` (—Å—Ç—Ä–æ–∫–∞ 61)
- `canUseBrowserTool = modelSupportsComputerUse && modeSupportsBrowser && (browserToolEnabled ?? true)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `systemPrompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 67)

### üìÇ build-src/src/core/tools

#### üìÑ writeToFileTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 63)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `fullPath = relPath ? path.resolve(cline.cwd, removeClosingTag("path", relPath)) : ""` (—Å—Ç—Ä–æ–∫–∞ 91)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 107)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `actualLineCount = newContent.split("\n").length` (—Å—Ç—Ä–æ–∫–∞ 137)
- `isNewFile = !fileExists` (—Å—Ç—Ä–æ–∫–∞ 140)
- `diffStrategyEnabled = !!cline.diffStrategy` (—Å—Ç—Ä–æ–∫–∞ 143)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 167)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 168)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 169)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 205)
- `didApprove = await askApproval("tool", completeMessage, undefined, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 278)
- `didApprove = await askApproval("tool", completeMessage, undefined, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 305)

#### üìÑ validateToolUse.ts

#### üìÑ useMcpToolTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async sendExecutionStatus(cline: T, status: M): Promise<void>` (—Å—Ç—Ä–æ–∫–∞ 84)
- `processToolContent(toolResult: a): string` (—Å—Ç—Ä–æ–∫–∞ 92)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface McpToolParams` (—Å—Ç—Ä–æ–∫–∞ 8)

**–¢–∏–ø—ã:**

- `type ValidationResult` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 28)
- `clineProvider = await cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `toolResult = await cline.providerRef.deref()?.getMcpHub()?.callTool(serverName, toolName, parsedArguments)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `outputText = processToolContent(toolResult)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `validation = await validateParams(cline, params, pushToolResult)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 200)
- `executionId = cline.lastMessageTs?.toString() ?? Date.now().toString()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `didApprove = await askApproval("use_mcp_server", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 208)

#### üìÑ updateTodoListTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `todoListToMarkdown(todos: T): string` - Convert TodoItem[] to markdown checklist string. (—Å—Ç—Ä–æ–∫–∞ 86)
- `normalizeStatus(status: s): TodoStatus` (—Å—Ç—Ä–æ–∫–∞ 97)
- `parseMarkdownChecklist(md: s): TodoItem[]` (—Å—Ç—Ä–æ–∫–∞ 103)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `idx = cline.todoList.findIndex((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `current = cline.todoList[idx]` (—Å—Ç—Ä–æ–∫–∞ 33)
- `idx = cline.todoList.findIndex((t) => t.id === id)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `lines = md` (—Å—Ç—Ä–æ–∫–∞ 105)
- `match = line.match(/^\[\s*([ xX\-~])\s*\]\s+(.+)$/)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `id = crypto` (—Å—Ç—Ä–æ–∫–∞ 116)
- `todosRaw = block.params.todos` (—Å—Ç—Ä–æ–∫–∞ 171)
- `approvalMsg = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 197)
- `didApprove = await askApproval("tool", approvalMsg)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `md = todoListToMarkdown(normalizedTodos)` (—Å—Ç—Ä–æ–∫–∞ 228)

#### üìÑ switchModeTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `targetMode = getModeBySlug(mode_slug, (await cline.providerRef.deref()?.getState())?.customModes)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `currentMode = (await cline.providerRef.deref()?.getState())?.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 49)
- `completeMessage = JSON.stringify({ tool: "switchMode", mode: mode_slug, reason })` (—Å—Ç—Ä–æ–∫–∞ 57)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ searchFilesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = relDirPath ? path.resolve(cline.cwd, relDirPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 22)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `results = await regexSearchFiles(` (—Å—Ç—Ä–æ–∫–∞ 55)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: results } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 64)

#### üìÑ searchAndReplaceTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `escapeRegExp(input: s): string` - Escapes special regex characters in a string (—Å—Ç—Ä–æ–∫–∞ 279)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessageProps = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `validRelPath = relPath as string` (—Å—Ç—Ä–æ–∫–∞ 105)
- `validSearch = search as string` (—Å—Ç—Ä–æ–∫–∞ 106)
- `validReplace = replace as string` (—Å—Ç—Ä–æ–∫–∞ 107)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(validRelPath)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(validRelPath) || false` (—Å—Ç—Ä–æ–∫–∞ 129)
- `absolutePath = path.resolve(cline.cwd, validRelPath)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `formattedError = formatResponse.toolError(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `errorMessage = `Error reading file: ${absolutePath}\nFailed to read the file content: ${` (—Å—Ç—Ä–æ–∫–∞ 155)
- `formattedError = formatResponse.toolError(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 158)
- `flags = ignoreCase ? "gi" : "g"` (—Å—Ç—Ä–æ–∫–∞ 165)
- `searchPattern = useRegex ? new RegExp(validSearch, flags) : new RegExp(escapeRegExp(validSearch), flags)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `lines = fileContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `start = Math.max((startLine ?? 1) - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `end = Math.min((endLine ?? lines.length) - 1, lines.length - 1)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `beforeLines = lines.slice(0, start)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `afterLines = lines.slice(end + 1)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `targetContent = lines.slice(start, end + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modifiedContent = targetContent.replace(searchPattern, validReplace)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `modifiedLines = modifiedContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `diff = formatResponse.createPrettyPatch(validRelPath, fileContent, newContent)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 206)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 207)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 208)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `didApprove = await cline` (—Å—Ç—Ä–æ–∫–∞ 226)
- `message = await cline.diffViewProvider.pushToolWriteResult(` (—Å—Ç—Ä–æ–∫–∞ 257)

#### üìÑ readFileTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `updateFileResult(path: s, updates: P)` (—Å—Ç—Ä–æ–∫–∞ 202)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LineRange` (—Å—Ç—Ä–æ–∫–∞ 58)

- `interface FileEntry` (—Å—Ç—Ä–æ–∫–∞ 63)

- `interface FileResult` (—Å—Ç—Ä–æ–∫–∞ 69)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsed = parseXml(blockParams.args) as any` (—Å—Ç—Ä–æ–∫–∞ 30)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `paths = files.map((f: any) => f?.path).filter(Boolean) as string[]` (—Å—Ç—Ä–æ–∫–∞ 32)
- `pathList = paths.map((p) => `'${p}'`).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `modelInfo = cline.api.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 96)
- `supportsImages = modelInfo.supportsImages ?? false` (—Å—Ç—Ä–æ–∫–∞ 97)
- `match = argsXmlTag.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `fullPath = filePath ? path.resolve(cline.cwd, filePath) : ""` (—Å—Ç—Ä–æ–∫–∞ 112)
- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 118)
- `parsed = parseXml(argsXmlTag) as any` (—Å—Ç—Ä–æ–∫–∞ 131)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `ranges = Array.isArray(file.line_range) ? file.line_range : [file.line_range]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `match = String(range).match(/(\d+)-(\d+)/) // Ensure range is treated as string` (—Å—Ç—Ä–æ–∫–∞ 145)
- `errorMessage = `Failed to parse read_file XML args: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 157)
- `start = parseInt(legacyStartLineStr, 10)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `end = parseInt(legacyEndLineStr, 10)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `errorMsg = await cline.sayAndCreateMissingParamError("read_file", "args (containing valid file paths)")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `updateFileResult = (path: string, updates: Partial<FileResult>) => {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `index = fileResults.findIndex((result) => result.path === path)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `fileResult = fileResults[i]` (—Å—Ç—Ä–æ–∫–∞ 214)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 215)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `errorMsg = "Invalid line range: end line cannot be less than start line"` (—Å—Ç—Ä–æ–∫–∞ 223)
- `errorMsg = "Invalid line range values"` (—Å—Ç—Ä–æ–∫–∞ 234)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `errorMsg = formatResponse.rooIgnoreError(relPath)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `batchFiles = filesToApprove.map((fileResult) => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 273)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 275)
- `ranges = fileResult.lineRanges.map((range) =>` (—Å—Ç—Ä–æ–∫–∞ 280)
- `readablePath = getReadablePath(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `key = `${readablePath}${lineSnippet ? ` (${lineSnippet})` : ""}`` (—Å—Ç—Ä–æ–∫–∞ 291)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 302)
- `individualPermissions = JSON.parse(text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `fileResult = filesToApprove[index]` (—Å—Ç—Ä–æ–∫–∞ 347)
- `approved = individualPermissions[batchFile.key] === true` (—Å—Ç—Ä–æ–∫–∞ 348)
- `fileResult = filesToApprove[0]` (—Å—Ç—Ä–æ–∫–∞ 380)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 381)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `isOutsideWorkspace = isPathOutsideWorkspace(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `ranges = fileResult.lineRanges.map((range) =>` (—Å—Ç—Ä–æ–∫–∞ 389)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 399)
- `imageMemoryTracker = new ImageMemoryTracker()` (—Å—Ç—Ä–æ–∫–∞ 437)
- `state = await cline.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 438)
- `relPath = fileResult.path` (—Å—Ç—Ä–æ–∫–∞ 452)
- `fullPath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 453)
- `fileExtension = path.extname(relPath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `supportedBinaryFormats = getSupportedBinaryFormats()` (—Å—Ç—Ä–æ–∫–∞ 462)
- `validationResult = await validateImageForProcessing(` (—Å—Ç—Ä–æ–∫–∞ 468)
- `imageResult = await processImageFile(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 502)
- `fileFormat = fileExtension.slice(1) || "bin" // Remove the dot, fallback to "bin"` (—Å—Ç—Ä–æ–∫–∞ 522)
- `content = addLineNumbers(` (—Å—Ç—Ä–æ–∫–∞ 535)
- `lineRangeAttr = ` lines="${range.start}-${range.end}"`` (—Å—Ç—Ä–æ–∫–∞ 539)
- `defResult = await parseSourceCodeDefinitionsForFile(fullPath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 551)
- `content = addLineNumbers(await readLines(fullPath, maxReadFileLine - 1, 0))` (—Å—Ç—Ä–æ–∫–∞ 572)
- `lineRangeAttr = ` lines="1-${maxReadFileLine}"`` (—Å—Ç—Ä–æ–∫–∞ 573)
- `defResult = await parseSourceCodeDefinitionsForFile(fullPath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 577)
- `content = await extractTextFromFile(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `lineRangeAttr = ` lines="1-${totalLines}"`` (—Å—Ç—Ä–æ–∫–∞ 599)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `xmlResults = fileResults.filter((result) => result.xmlContent).map((result) => result.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 624)
- `filesXml = `<files>\n${xmlResults.join("\n")}\n</files>`` (—Å—Ç—Ä–æ–∫–∞ 625)
- `fileImageUrls = fileResults` (—Å—Ç—Ä–æ–∫–∞ 628)
- `deniedWithFeedback = fileResults.find((result) => result.status === "denied" && result.feedbackText)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `approvedWithFeedback = fileResults.find(` (—Å—Ç—Ä–æ–∫–∞ 649)
- `allImages = [...feedbackImages, ...fileImageUrls]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `finalModelSupportsImages = cline.api.getModel().info.supportsImages ?? false` (—Å—Ç—Ä–æ–∫–∞ 663)
- `imagesToInclude = finalModelSupportsImages ? allImages : []` (—Å—Ç—Ä–æ–∫–∞ 664)
- `result = formatResponse.toolResult(` (—Å—Ç—Ä–æ–∫–∞ 669)
- `textBlock = { type: "text" as const, text: filesXml }` (—Å—Ç—Ä–æ–∫–∞ 684)
- `relPath = fileEntries[0]?.path || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 696)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 697)
- `xmlResults = fileResults.filter((result) => result.xmlContent).map((result) => result.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 711)

#### üìÑ newTaskTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `unescapedMessage = message.replace(/\\\\@/g, "\\@")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `targetMode = getModeBySlug(mode, (await cline.providerRef.deref()?.getState())?.customModes)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `toolMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 58)
- `didApprove = await askApproval("tool", toolMessage)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newCline = await provider.initClineWithTask(unescapedMessage, undefined, cline)` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ multiApplyDiffTool.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `updateOperationResult(path: s, updates: P)` (—Å—Ç—Ä–æ–∫–∞ 219)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DiffOperation` (—Å—Ç—Ä–æ–∫–∞ 19)

- `interface OperationResult` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface ParsedFile` (—Å—Ç—Ä–æ–∫–∞ 39)

- `interface ParsedDiff` (—Å—Ç—Ä–æ–∫–∞ 44)

- `interface ParsedXmlResult` (—Å—Ç—Ä–æ–∫–∞ 49)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `isMultiFileApplyDiffEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 65)
- `match = argsXmlTag.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `partialMessage = JSON.stringify(sharedMessageProps)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `parsed = parseXml(argsXmlTag, ["file.diff.content"]) as ParsedXmlResult` (—Å—Ç—Ä–æ–∫–∞ 111)
- `files = Array.isArray(parsed.file) ? parsed.file : [parsed.file].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `filePath = file.path` (—Å—Ç—Ä–æ–∫–∞ 117)
- `diffs = Array.isArray(file.diff) ? file.diff : [file.diff]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `diff = diffs[i]` (—Å—Ç—Ä–æ–∫–∞ 131)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `detailedError = `Failed to parse apply_diff XML. This usually means:` (—Å—Ç—Ä–æ–∫–∞ 146)
- `errorMsg = await cline.sayAndCreateMissingParamError(` (—Å—Ç—Ä–æ–∫–∞ 186)
- `operations = Object.values(operationsMap)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `updateOperationResult = (path: string, updates: Partial<OperationResult>) => {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `index = operationResults.findIndex((result) => result.path === path)` (—Å—Ç—Ä–æ–∫–∞ 220)
- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 246)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `opResult = operationResults.find((r) => r.path === relPath)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `hasProtectedFiles = operationsToApprove.some(` (—Å—Ç—Ä–æ–∫–∞ 271)
- `batchDiffs = operationsToApprove.map((opResult) => {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `readablePath = getReadablePath(cline.cwd, opResult.path)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `changeCount = opResult.diffItems?.length || 0` (—Å—Ç—Ä–æ–∫–∞ 278)
- `changeText = changeCount === 1 ? "1 change" : `${changeCount} changes`` (—Å—Ç—Ä–æ–∫–∞ 279)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 293)
- `parsedResponse = JSON.parse(text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 325)
- `approvedFiles = parsedResponse.approvedFiles` (—Å—Ç—Ä–æ–∫–∞ 328)
- `approved = approvedFiles[opResult.path] === true` (—Å—Ç—Ä–æ–∫–∞ 332)
- `individualPermissions = parsedResponse` (—Å—Ç—Ä–æ–∫–∞ 350)
- `opResult = operationsToApprove[index]` (—Å—Ç—Ä–æ–∫–∞ 354)
- `approved = individualPermissions[batchDiff.key] === true` (—Å—Ç—Ä–æ–∫–∞ 355)
- `opResult = operationsToApprove[0]` (—Å—Ç—Ä–æ–∫–∞ 386)
- `relPath = opResult.path` (—Å—Ç—Ä–æ–∫–∞ 404)
- `diffItems = opResult.diffItems || []` (—Å—Ç—Ä–æ–∫–∞ 405)
- `absolutePath = opResult.absolutePath!` (—Å—Ç—Ä–æ–∫–∞ 406)
- `fileExists = opResult.fileExists!` (—Å—Ç—Ä–æ–∫–∞ 407)
- `processedDiffItems = !cline.api.getModel().id.includes("claude")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `diffResult = (await cline.diffStrategy?.applyDiff(originalContent, processedDiffItems)) ?? {` (—Å—Ç—Ä–æ–∫–∞ 423)
- `currentCount = (cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0) + 1` (—Å—Ç—Ä–æ–∫–∞ 433)
- `failPart = diffResult.failParts[i]` (—Å—Ç—Ä–æ–∫–∞ 440)
- `errorDetails = failPart.details ? JSON.stringify(failPart.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 448)
- `errorDetails = diffResult.details ? JSON.stringify(diffResult.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 463)
- `currentCount = cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0` (—Å—Ç—Ä–æ–∫–∞ 486)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 511)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 512)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 513)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 514)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 515)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 521)
- `diffContents = diffItems.map((item) => item.content).join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 532)
- `operationMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 533)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 563)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `errorMsg = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `searchBlocks = (diffItem.content.match(/<<<<<<< SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 659)

#### üìÑ listFilesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `recursive = recursiveRaw?.toLowerCase() === "true"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `absolutePath = relDirPath ? path.resolve(cline.cwd, relDirPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 39)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 66)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: result } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ listCodeDefinitionNamesTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = relPath ? path.resolve(cline.cwd, relPath) : cline.cwd` (—Å—Ç—Ä–æ–∫–∞ 23)
- `isOutsideWorkspace = isPathOutsideWorkspace(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: "" } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `stats = await fs.stat(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `fileResult = await parseSourceCodeDefinitionsForFile(absolutePath, cline.rooIgnoreController)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: result } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 65)

#### üìÑ insertContentTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 72)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `lineNumber = parseInt(line, 10)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `formattedError = `Cannot insert content at line ${lineNumber} into a non-existent file. For new files, 'line' must be 0 (to append) or 1 (to insert at the beginning).`` (—Å—Ç—Ä–æ–∫–∞ 89)
- `lines = fileExists ? fileContent.split("\n") : []` (—Å—Ç—Ä–æ–∫–∞ 102)
- `updatedContent = insertGroups(lines, [` (—Å—Ç—Ä–æ–∫–∞ 104)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 114)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 115)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 140)
- `didApprove = await cline` (—Å—Ç—Ä–æ–∫–∞ 156)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 187)

#### üìÑ fetchInstructionsTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({ ...sharedMessageProps, content: undefined } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `completeMessage = JSON.stringify({ ...sharedMessageProps, content: task } satisfies ClineSayTool)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `didApprove = await askApproval("tool", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mcpHub = provider?.getMcpHub()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `diffStrategy = cline.diffStrategy` (—Å—Ç—Ä–æ–∫–∞ 47)
- `context = provider?.context` (—Å—Ç—Ä–æ–∫–∞ 48)
- `content = await fetchInstructions(task, { mcpHub, diffStrategy, context })` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ codebaseSearchTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolName = "codebase_search"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `sharedMessageProps = {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `didApprove = await askApproval("tool", JSON.stringify(sharedMessageProps))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `context = cline.providerRef.deref()?.context` (—Å—Ç—Ä–æ–∫–∞ 67)
- `manager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `jsonResult = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `relativePath = vscode.workspace.asRelativePath(result.payload.filePath, false)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `payload = { tool: "codebaseSearch", content: jsonResult }` (—Å—Ç—Ä–æ–∫–∞ 123)
- `output = `Query: ${query}` (—Å—Ç—Ä–æ–∫–∞ 127)

#### üìÑ browserActionTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `didApprove = await askApproval("browser_action_launch", url)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ attemptCompletionTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `preventCompletionWithOpenTodos = vscode.workspace` (—Å—Ç—Ä–æ–∫–∞ 34)
- `hasIncompleteTodos = cline.todoList && cline.todoList.some((todo) => todo.status !== "completed")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lastMessage = cline.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `didApprove = await askFinishSubTaskApproval()` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ askFollowupQuestionTool.ts

**–¢–∏–ø—ã:**

- `type Suggest` (—Å—Ç—Ä–æ–∫–∞ 29)
- `type ParsedSuggestion` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rawSuggestions = Array.isArray(parsedSuggest?.suggest)` (—Å—Ç—Ä–æ–∫–∞ 56)

#### üìÑ applyDiffTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `accessAllowed = cline.rooIgnoreController?.validateAccess(relPath)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `absolutePath = path.resolve(cline.cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `fileExists = await fileExistsAtPath(absolutePath)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `formattedError = `File does not exist at path: ${absolutePath}\n\n<error_details>\nThe specified file could not be found. Please verify the file path and try again.\n</error_details>`` (—Å—Ç—Ä–æ–∫–∞ 85)
- `diffResult = (await cline.diffStrategy?.applyDiff(` (—Å—Ç—Ä–æ–∫–∞ 94)
- `currentCount = (cline.consecutiveMistakeCountForApplyDiff.get(relPath) || 0) + 1` (—Å—Ç—Ä–æ–∫–∞ 105)
- `errorDetails = failPart.details ? JSON.stringify(failPart.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 116)
- `errorDetails = diffResult.details ? JSON.stringify(diffResult.details, null, 2) : ""` (—Å—Ç—Ä–æ–∫–∞ 123)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 144)
- `state = await provider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `diagnosticsEnabled = state?.diagnosticsEnabled ?? true` (—Å—Ç—Ä–æ–∫–∞ 146)
- `writeDelayMs = state?.writeDelayMs ?? DEFAULT_WRITE_DELAY_MS` (—Å—Ç—Ä–æ–∫–∞ 147)
- `isPreventFocusDisruptionEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 148)
- `isWriteProtected = cline.rooProtectedController?.isWriteProtected(relPath) || false` (—Å—Ç—Ä–æ–∫–∞ 154)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `didApprove = await askApproval("tool", completeMessage, toolProgressStatus, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `didApprove = await askApproval("tool", completeMessage, toolProgressStatus, isWriteProtected)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `message = await cline.diffViewProvider.pushToolWriteResult(cline, cline.cwd, !fileExists)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `searchBlocks = (diffContent.match(/<<<<<<< SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 234)

#### üìÑ accessMcpResourceTool.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `partialMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 19)
- `completeMessage = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 44)
- `didApprove = await askApproval("use_mcp_server", completeMessage)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `resourceResult = await cline.providerRef.deref()?.getMcpHub()?.readResource(server_name, uri)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ ToolRepetitionDetector.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentToolCallJson = this.serializeToolUse(currentToolCallBlock)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `sortedKeys = Object.keys(toolUse.params).sort()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `toolObject = {` (—Å—Ç—Ä–æ–∫–∞ 90)

### üìÇ build-src/src/core/task-persistence

#### üìÑ taskMetadata.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskSizeCache = new NodeCache({ stdTTL: 30, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 13)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `hasMessages = messages && messages.length > 0` (—Å—Ç—Ä–æ–∫–∞ 35)
- `cachedSize = taskSizeCache.get<number>(taskDir)` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ taskMessages.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filePath = path.join(taskDir, GlobalFileNames.uiMessages)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `fileExists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `filePath = path.join(taskDir, GlobalFileNames.uiMessages)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ index.ts

#### üìÑ apiMessages.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filePath = path.join(taskDir, GlobalFileNames.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `fileContent = await fs.readFile(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `parsedData = JSON.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `oldPath = path.join(taskDir, "claude_messages.json")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `fileContent = await fs.readFile(oldPath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `parsedData = JSON.parse(fileContent)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `filePath = path.join(taskDir, GlobalFileNames.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 81)

### üìÇ build-src/src/core/task

#### üìÑ Task.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `agoText(): string` (—Å—Ç—Ä–æ–∫–∞ 1155)
- `updateApiReqMsg()` (—Å—Ç—Ä–æ–∫–∞ 1462)
- `async abortStream(cancelReason: C)` (—Å—Ç—Ä–æ–∫–∞ 1484)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_EXPONENTIAL_BACKOFF_SECONDS = 600 // 10 minutes` (—Å—Ç—Ä–æ–∫–∞ 97)
- `isMultiFileApplyDiffEnabled = experiments.isEnabled(` (—Å—Ç—Ä–æ–∫–∞ 343)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 392)
- `errorMessage = `Failed to initialize task mode: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 398)
- `instance = new Task({ ...options, startTask: false })` (—Å—Ç—Ä–æ–∫–∞ 493)
- `messageWithTs = { ...message, ts: Date.now() }` (—Å—Ç—Ä–æ–∫–∞ 515)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 546)
- `shouldCaptureMessage = message.partial !== true && CloudService.isEnabled()` (—Å—Ç—Ä–æ–∫–∞ 551)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 568)
- `shouldCaptureMessage = message.partial !== true && CloudService.isEnabled()` (—Å—Ç—Ä–æ–∫–∞ 572)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 632)
- `result = { response: this.askResponse!, text: this.askResponseText, images: this.askResponseImages }` (—Å—Ç—Ä–æ–∫–∞ 714)
- `systemPrompt = await this.getSystemPrompt()` (—Å—Ç—Ä–æ–∫–∞ 737)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 741)
- `customCondensingPrompt = state ? (state as any).customCondensingPrompt : undefined` (—Å—Ç—Ä–æ–∫–∞ 742)
- `condensingApiConfigId = state ? (state as any).condensingApiConfigId : undefined` (—Å—Ç—Ä–æ–∫–∞ 743)
- `listApiConfigMeta = state ? (state as any).listApiConfigMeta : undefined` (—Å—Ç—Ä–æ–∫–∞ 744)
- `matchingConfig = listApiConfigMeta.find((config: any) => config.id === condensingApiConfigId)` (—Å—Ç—Ä–æ–∫–∞ 750)
- `profile = await this.providerRef.deref()?.providerSettingsManager.getProfile({` (—Å—Ç—Ä–æ–∫–∞ 752)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 822)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 837)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 875)
- `sayTs = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `modifiedClineMessages = await this.getSavedClineMessages()` (—Å—Ç—Ä–æ–∫–∞ 972)
- `lastRelevantMessageIndex = findLastIndex(` (—Å—Ç—Ä–æ–∫–∞ 975)
- `lastApiReqStartedIndex = findLastIndex(` (—Å—Ç—Ä–æ–∫–∞ 985)
- `lastApiReqStarted = modifiedClineMessages[lastApiReqStartedIndex]` (—Å—Ç—Ä–æ–∫–∞ 991)
- `lastClineMessage = this.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 1009)
- `conversationWithoutToolBlocks = existingApiConversationHistory.map((message) => {` (—Å—Ç—Ä–æ–∫–∞ 1037)
- `newContent = message.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `inputAsXml = Object.entries(block.input as Record<string, string>)` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `contentAsTextBlocks = Array.isArray(block.content)` (—Å—Ç—Ä–æ–∫–∞ 1053)
- `textContent = contentAsTextBlocks.map((item) => item.text).join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `toolName = findToolName(block.tool_use_id, existingApiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `lastMessage = existingApiConversationHistory[existingApiConversationHistory.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 1082)
- `content = Array.isArray(lastMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `hasToolUse = content.some((block) => block.type === "tool_use")` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `toolUseBlocks = content.filter(` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `assistantContent = Array.isArray(previousAssistantMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 1113)
- `toolUseBlocks = assistantContent.filter(` (—Å—Ç—Ä–æ–∫–∞ 1117)
- `existingToolResults = existingUserContent.filter(` (—Å—Ç—Ä–æ–∫–∞ 1122)
- `agoText = ((): string => {` (—Å—Ç—Ä–æ–∫–∞ 1155)
- `timestamp = lastClineMessage?.ts ?? Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1156)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1157)
- `diff = now - timestamp` (—Å—Ç—Ä–æ–∫–∞ 1158)
- `minutes = Math.floor(diff / 60000)` (—Å—Ç—Ä–æ–∫–∞ 1159)
- `hours = Math.floor(minutes / 60)` (—Å—Ç—Ä–æ–∫–∞ 1160)
- `days = Math.floor(hours / 24)` (—Å—Ç—Ä–æ–∫–∞ 1161)
- `didEndLoop = await this.recursivelyMakeClineRequests(nextUserContent, includeFileDetails)` (—Å—Ç—Ä–æ–∫–∞ 1309)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1367)
- `currentMode = (await provider.getState())?.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 1373)
- `modelId = getModelId(this.apiConfiguration)` (—Å—Ç—Ä–æ–∫–∞ 1394)
- `apiProtocol = getApiProtocol(this.apiConfiguration.apiProvider, modelId)` (—Å—Ç—Ä–æ–∫–∞ 1395)
- `parsedUserContent = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 1413)
- `environmentDetails = await getEnvironmentDetails(this, includeFileDetails)` (—Å—Ç—Ä–æ–∫–∞ 1425)
- `finalUserContent = [...parsedUserContent, { type: "text" as const, text: environmentDetails }]` (—Å—Ç—Ä–æ–∫–∞ 1429)
- `lastApiReqIndex = findLastIndex(this.clineMessages, (m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 1438)
- `updateApiReqMsg = (cancelReason?: ClineApiReqCancelReason, streamingFailedMessage?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1462)
- `existingData = JSON.parse(this.clineMessages[lastApiReqIndex].text || "{}")` (—Å—Ç—Ä–æ–∫–∞ 1463)
- `abortStream = async (cancelReason: ClineApiReqCancelReason, streamingFailedMessage?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1484)
- `lastMessage = this.clineMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 1490)
- `stream = this.attemptApiRequest()` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `prevLength = this.assistantMessageContent.length` (—Å—Ç—Ä–æ–∫–∞ 1572)
- `cancelReason = this.abort ? "user_cancelled" : "streaming_failed"` (—Å—Ç—Ä–æ–∫–∞ 1635)
- `streamingFailedMessage = this.abort` (—Å—Ç—Ä–æ–∫–∞ 1636)
- `history = await provider?.getTaskWithId(this.taskId)` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `partialBlocks = this.assistantMessageContent.filter((block) => block.partial)` (—Å—Ç—Ä–æ–∫–∞ 1689)
- `didToolUse = this.assistantMessageContent.some((block) => block.type === "tool_use")` (—Å—Ç—Ä–æ–∫–∞ 1742)
- `recDidEndLoop = await this.recursivelyMakeClineRequests(this.userMessageContent)` (—Å—Ç—Ä–æ–∫–∞ 1749)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1782)
- `rooIgnoreInstructions = this.rooIgnoreController?.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 1801)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 1803)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 1821)
- `state = await this.providerRef.deref()?.getState()` (—Å—Ç—Ä–æ–∫–∞ 1854)
- `customCondensingPrompt = state?.customCondensingPrompt` (—Å—Ç—Ä–æ–∫–∞ 1868)
- `condensingApiConfigId = state?.condensingApiConfigId` (—Å—Ç—Ä–æ–∫–∞ 1869)
- `listApiConfigMeta = state?.listApiConfigMeta` (—Å—Ç—Ä–æ–∫–∞ 1870)
- `matchingConfig = listApiConfigMeta.find((config: any) => config.id === condensingApiConfigId)` (—Å—Ç—Ä–æ–∫–∞ 1877)
- `profile = await this.providerRef.deref()?.providerSettingsManager.getProfile({` (—Å—Ç—Ä–æ–∫–∞ 1880)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 1896)
- `timeSinceLastRequest = now - Task.lastGlobalApiRequestTime` (—Å—Ç—Ä–æ–∫–∞ 1897)
- `rateLimit = apiConfiguration?.rateLimitSeconds || 0` (—Å—Ç—Ä–æ–∫–∞ 1898)
- `delayMessage = `Rate limiting for ${i} seconds...`` (—Å—Ç—Ä–æ–∫–∞ 1906)
- `systemPrompt = await this.getSystemPrompt()` (—Å—Ç—Ä–æ–∫–∞ 1916)
- `modelInfo = this.api.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 1920)
- `maxTokens = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 1922)
- `contextWindow = modelInfo.contextWindow` (—Å—Ç—Ä–æ–∫–∞ 1928)
- `truncateResult = await truncateConversationIfNeeded({` (—Å—Ç—Ä–æ–∫–∞ 1934)
- `messagesSinceLastSummary = getMessagesSinceLastSummary(this.apiConversationHistory)` (—Å—Ç—Ä–æ–∫–∞ 1970)
- `cleanConversationHistory = maybeRemoveImageBlocks(messagesSinceLastSummary, this.api).map(` (—Å—Ç—Ä–æ–∫–∞ 1971)
- `approvalResult = await this.autoApprovalHandler.checkAutoApprovalLimits(` (—Å—Ç—Ä–æ–∫–∞ 1976)
- `stream = this.api.createMessage(systemPrompt, cleanConversationHistory, metadata)` (—Å—Ç—Ä–æ–∫–∞ 1992)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 1993)
- `firstChunk = await iterator.next()` (—Å—Ç—Ä–æ–∫–∞ 1998)
- `baseDelay = requestDelaySeconds || 5` (—Å—Ç—Ä–æ–∫–∞ 2015)
- `geminiRetryDetails = error.errorDetails?.find(` (—Å—Ç—Ä–æ–∫–∞ 2023)
- `match = geminiRetryDetails?.retryDelay?.match(/^(\d+)s$/)` (—Å—Ç—Ä–æ–∫–∞ 2027)
- `finalDelay = Math.max(exponentialDelay, rateLimitDelay)` (—Å—Ç—Ä–æ–∫–∞ 2035)

#### üìÑ AutoApprovalHandler.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestResult = await this.checkRequestLimit(state, askForApproval)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `costResult = await this.checkCostLimit(state, messages, askForApproval)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `maxRequests = state?.allowedMaxRequests || Infinity` (—Å—Ç—Ä–æ–∫–∞ 48)
- `maxCost = state?.allowedMaxCost || Infinity` (—Å—Ç—Ä–æ–∫–∞ 92)
- `EPSILON = 0.0001` (—Å—Ç—Ä–æ–∫–∞ 98)

### üìÇ build-src/src/core/sliding-window

#### üìÑ index.ts

**–¢–∏–ø—ã:**

- `type TruncateOptions` (—Å—Ç—Ä–æ–∫–∞ 66)
- `type TruncateResponse` (—Å—Ç—Ä–æ–∫–∞ 82)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `truncatedMessages = [messages[0]]` (—Å—Ç—Ä–æ–∫–∞ 43)
- `rawMessagesToRemove = Math.floor((messages.length - 1) * fracToRemove)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `messagesToRemove = rawMessagesToRemove - (rawMessagesToRemove % 2)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `remainingMessages = messages.slice(messagesToRemove + 1)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `reservedTokens = maxTokens || ANTHROPIC_DEFAULT_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 109)
- `lastMessage = messages[messages.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lastMessageContent = lastMessage.content` (—Å—Ç—Ä–æ–∫–∞ 113)
- `lastMessageTokens = Array.isArray(lastMessageContent)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `prevContextTokens = totalTokens + lastMessageTokens` (—Å—Ç—Ä–æ–∫–∞ 119)
- `allowedTokens = contextWindow * (1 - TOKEN_BUFFER_PERCENTAGE) - reservedTokens` (—Å—Ç—Ä–æ–∫–∞ 123)
- `profileThreshold = profileThresholds[currentProfileId]` (—Å—Ç—Ä–æ–∫–∞ 127)
- `contextPercent = (100 * prevContextTokens) / contextWindow` (—Å—Ç—Ä–æ–∫–∞ 146)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `truncatedMessages = truncateConversation(messages, 0.5, taskId)` (—Å—Ç—Ä–æ–∫–∞ 170)

### üìÇ build-src/src/core/protect

#### üìÑ RooProtectedController.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `absolutePath = path.resolve(this.cwd, filePath)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `relativePath = path.relative(this.cwd, absolutePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `protectedFiles = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `patterns = RooProtectedController.PROTECTED_PATTERNS.join(", ")` (—Å—Ç—Ä–æ–∫–∞ 95)

### üìÇ build-src/src/core/prompts

#### üìÑ types.ts

#### üìÑ system.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `component = customModePrompts?.[mode]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `effectiveDiffStrategy = diffEnabled ? diffStrategy : undefined` (—Å—Ç—Ä–æ–∫–∞ 70)
- `modeConfig = getModeBySlug(mode, customModeConfigs) || modes.find((m) => m.slug === mode) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 73)
- `hasMcpGroup = modeConfig.groups.some((groupEntry) => getGroupName(groupEntry) === "mcp")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `hasMcpServers = mcpHub && mcpHub.getServers().length > 0` (—Å—Ç—Ä–æ–∫–∞ 78)
- `shouldIncludeMcp = hasMcpGroup && hasMcpServers` (—Å—Ç—Ä–æ–∫–∞ 79)
- `codeIndexManager = CodeIndexManager.getInstance(context)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `basePrompt = `${roleDefinition}` (—Å—Ç—Ä–æ–∫–∞ 90)
- `fileCustomSystemPrompt = await loadSystemPromptFile(cwd, mode, variablesForPrompt)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `promptComponent = getPromptComponent(customModePrompts, mode)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `currentMode = getModeBySlug(mode, customModes) || modes.find((m) => m.slug === mode) || modes[0]` (—Å—Ç—Ä–æ–∫–∞ 171)
- `customInstructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 181)
- `effectiveDiffStrategy = diffEnabled ? diffStrategy : undefined` (—Å—Ç—Ä–æ–∫–∞ 202)

#### üìÑ responses.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatImagesIntoBlocks(): Anthropic.ImageBlockParam[]` (—Å—Ç—Ä–æ–∫–∞ 182)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `truncationMessage = `–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í–∞—à –æ—Ç–≤–µ—Ç –º–æ–≥ –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø—Ä–µ–≤—ã—Å–∏–ª –≤–∞—à –ª–∏–º–∏—Ç –≤—ã–≤–æ–¥–∞. –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ ${actualLineCount} —Å—Ç—Ä–æ–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ, –Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä line_count –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª, –ª–∏–±–æ –Ω–µ –±—ã–ª –≤–∫–ª—é—á–µ–Ω –≤ –≤–∞—à –æ—Ç–≤–µ—Ç.`` (—Å—Ç—Ä–æ–∫–∞ 41)
- `sorted = files` (—Å—Ç—Ä–æ–∫–∞ 104)
- `relativePath = path.relative(absolutePath, file).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `aParts = a.split("/") // —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º toPosix` (—Å—Ç—Ä–æ–∫–∞ 112)
- `bParts = b.split("/")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `absoluteFilePath = path.resolve(absolutePath, filePath)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `isIgnored = !rooIgnoreController.validateAccess(absoluteFilePath)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `isWriteProtected = rooProtectedController?.isWriteProtected(absoluteFilePath) || false` (—Å—Ç—Ä–æ–∫–∞ 152)
- `patch = diff.createPatch(filename.toPosix(), oldStr || "", newStr || "")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `lines = patch.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `prettyPatchLines = lines.slice(4)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `formatImagesIntoBlocks = (images?: string[]): Anthropic.ImageBlockParam[] => {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `mimeType = rest.split(":")[1].split("` (—Å—Ç—Ä–æ–∫–∞ 187)
- `toolUseInstructionsReminder = `# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤` (—Å—Ç—Ä–æ–∫–∞ 196)

### üìÇ build-src/src/core/ignore

#### üìÑ RooIgnoreController.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rooignorePattern = new vscode.RelativePattern(this.cwd, ".rooignore")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fileWatcher = vscode.workspace.createFileSystemWatcher(rooignorePattern)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ignorePath = path.join(this.cwd, ".rooignore")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `content = await fs.readFile(ignorePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `absolutePath = path.resolve(this.cwd, filePath)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `relativePath = path.relative(this.cwd, absolutePath).toPosix()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `parts = command.trim().split(/\s+/)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `baseCommand = parts[0].toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 119)
- `fileReadingCommands = [` (—Å—Ç—Ä–æ–∫–∞ 122)
- `arg = parts[i]` (—Å—Ç—Ä–æ–∫–∞ 143)

### üìÇ build-src/src/core/environment

#### üìÑ reminder.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapedContent = item.content.replace(/\\/g, "\\\\").replace(/\|/g, "\\|")` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ getEnvironmentDetails.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `clineProvider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `state = await clineProvider?.getState()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `visibleFilePaths = vscode.window.visibleTextEditors` (—Å—Ç—Ä–æ–∫–∞ 39)
- `allowedVisibleFiles = cline.rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 46)
- `maxTabs = maxOpenTabsContext ?? 20` (—Å—Ç—Ä–æ–∫–∞ 58)
- `openTabPaths = vscode.window.tabGroups.all` (—Å—Ç—Ä–æ–∫–∞ 59)
- `allowedOpenTabs = cline.rooIgnoreController` (—Å—Ç—Ä–æ–∫–∞ 68)
- `busyTerminals = [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `inactiveTerminals = [` (—Å—Ç—Ä–æ–∫–∞ 84)
- `cwd = busyTerminal.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `terminalsWithOutput = inactiveTerminals.filter((terminal) => {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `completedProcesses = terminal.getProcessesWithOutput()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `completedProcesses = inactiveTerminal.getProcessesWithOutput()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `cwd = inactiveTerminal.getCurrentWorkingDirectory()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `recentlyModifiedFiles = cline.fileContextTracker.getAndClearRecentlyModifiedFiles()` (—Å—Ç—Ä–æ–∫–∞ 179)
- `now = new Date()` (—Å—Ç—Ä–æ–∫–∞ 194)
- `timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone` (—Å—Ç—Ä–æ–∫–∞ 196)
- `timeZoneOffset = -now.getTimezoneOffset() / 60 // Convert to hours and invert sign to match conventional notation` (—Å—Ç—Ä–æ–∫–∞ 197)
- `timeZoneOffsetHours = Math.floor(Math.abs(timeZoneOffset))` (—Å—Ç—Ä–æ–∫–∞ 198)
- `timeZoneOffsetMinutes = Math.abs(Math.round((Math.abs(timeZoneOffset) - timeZoneOffsetHours) * 60))` (—Å—Ç—Ä–æ–∫–∞ 199)
- `timeZoneOffsetStr = `${timeZoneOffset >= 0 ? "+" : "-"}${timeZoneOffsetHours}:${timeZoneOffsetMinutes.toString().padStart(2, "0")}`` (—Å—Ç—Ä–æ–∫–∞ 200)
- `currentMode = mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 219)
- `modeDetails = await getFullModeDetails(currentMode, customModes, customModePrompts, {` (—Å—Ç—Ä–æ–∫–∞ 221)
- `isDesktop = arePathsEqual(cline.cwd, path.join(os.homedir(), "Desktop"))` (—Å—Ç—Ä–æ–∫–∞ 242)
- `maxFiles = maxWorkspaceFiles ?? 200` (—Å—Ç—Ä–æ–∫–∞ 249)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 258)
- `reminderSection = formatReminderSection(cline.todoList)` (—Å—Ç—Ä–æ–∫–∞ 271)

### üìÇ build-src/src/core/diff

#### üìÑ insert-groups.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `appendGroups = insertGroups.filter((group) => group.index === -1)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `normalGroups = insertGroups.filter((group) => group.index !== -1).sort((a, b) => a.index - b.index)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/src/core/mentions

#### üìÑ processUserContentMentions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `shouldProcessMentions(text: s)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `shouldProcessMentions = (text: string) =>` (—Å—Ç—Ä–æ–∫–∞ 42)
- `parsedContent = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 88)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getUrlErrorMessage(error: u): string` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `cwd = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `relPath = unescapeSpaces(mention.slice(1))` (—Å—Ç—Ä–æ–∫–∞ 61)
- `absPath = path.resolve(cwd, relPath)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commandMatches = Array.from(text.matchAll(commandRegexGlobal))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `uniqueCommandNames = new Set(commandMatches.map(([, commandName]) => commandName))` (—Å—Ç—Ä–æ–∫–∞ 93)
- `commandExistenceChecks = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 95)
- `command = await getCommand(cwd, commandName)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `mentionPath = mention.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `urlMention = Array.from(mentions).find((mention) => mention.startsWith("http"))` (—Å—Ç—Ä–æ–∫–∞ 144)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `markdown = await urlContentFetcher.urlToMarkdown(mention)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `rawErrorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `localizedErrorMessage = getUrlErrorMessage(error)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `mentionPath = mention.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `content = await getFileOrFolderContent(` (—Å—Ç—Ä–æ–∫–∞ 188)
- `problems = await getWorkspaceProblems(cwd, includeDiagnosticMessages, maxDiagnosticMessages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `workingState = await getWorkingState(cwd)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `commitInfo = await getCommitInfo(mention, cwd)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `terminalOutput = await getLatestTerminalOutput()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `unescapedPath = unescapeSpaces(mentionPath)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `absPath = path.resolve(cwd, unescapedPath)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `stats = await fs.stat(absPath)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `content = await extractTextFromFile(absPath, maxReadFileLine)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `entries = await fs.readdir(absPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 290)
- `LOCK_SYMBOL = "üîí"` (—Å—Ç—Ä–æ–∫–∞ 293)
- `entry = entries[index]` (—Å—Ç—Ä–æ–∫–∞ 296)
- `isLast = index === entries.length - 1` (—Å—Ç—Ä–æ–∫–∞ 297)
- `linePrefix = isLast ? "‚îî‚îÄ‚îÄ " : "‚îú‚îÄ‚îÄ "` (—Å—Ç—Ä–æ–∫–∞ 298)
- `entryPath = path.join(absPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `displayName = isIgnored ? `${LOCK_SYMBOL} ${entry.name}` : entry.name` (—Å—Ç—Ä–æ–∫–∞ 310)
- `filePath = path.join(mentionPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `absoluteFilePath = path.resolve(absPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 316)
- `isBinary = await isBinaryFile(absoluteFilePath).catch(() => false)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `content = await extractTextFromFile(absoluteFilePath, maxReadFileLine)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `fileContents = (await Promise.all(fileContentPromises)).filter((content) => content)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `diagnostics = vscode.languages.getDiagnostics()` (—Å—Ç—Ä–æ–∫–∞ 353)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 354)
- `originalClipboard = await vscode.env.clipboard.readText()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `lines = terminalContents.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `lastLine = lines.pop()?.trim()` (—Å—Ç—Ä–æ–∫–∞ 395)

### üìÇ build-src/src/core/context-tracking

#### üìÑ FileContextTrackerTypes.ts

#### üìÑ FileContextTracker.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getLatestDateForField(path: s, field: k): number | null` (—Å—Ç—Ä–æ–∫–∞ 156)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cwd = vscode.workspace.workspaceFolders?.map((folder) => folder.uri.fsPath).at(0)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `cwd = this.getCwd()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `fileUri = vscode.Uri.file(path.resolve(cwd, filePath))` (—Å—Ç—Ä–æ–∫–∞ 60)
- `watcher = vscode.workspace.createFileSystemWatcher(` (—Å—Ç—Ä–æ–∫–∞ 61)
- `cwd = this.getCwd()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `provider = this.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `context = provider.contextProxy` (—Å—Ç—Ä–æ–∫–∞ 103)
- `globalStoragePath = this.getContextProxy()?.globalStorageUri.fsPath ?? ""` (—Å—Ç—Ä–æ–∫–∞ 115)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `filePath = path.join(taskDir, GlobalFileNames.taskMetadata)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `globalStoragePath = this.getContextProxy()!.globalStorageUri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 131)
- `taskDir = await getTaskDirectoryPath(globalStoragePath, taskId)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `filePath = path.join(taskDir, GlobalFileNames.taskMetadata)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `metadata = await this.getTaskMetadata(taskId)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `getLatestDateForField = (path: string, field: keyof FileMetadataEntry): number | null => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `relevantEntries = metadata.files_in_context` (—Å—Ç—Ä–æ–∫–∞ 157)
- `files = Array.from(this.recentlyModifiedFiles)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `files = Array.from(this.checkpointPossibleFiles)` (—Å—Ç—Ä–æ–∫–∞ 210)

### üìÇ build-src/src/core/config

#### üìÑ importExport.ts

**–¢–∏–ø—ã:**

- `type ExportOptions` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type ImportWithProviderOptions` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `schema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 43)
- `previousProviderProfiles = await providerSettingsManager.export()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `providerProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `currentProviderName = providerProfiles.currentApiConfigName` (—Å—Ç—Ä–æ–∫–∞ 78)
- `currentProvider = providerProfiles.apiConfigs[currentProviderName]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `uris = await vscode.window.showOpenDialog({` - Import settings from a file using a file dialog (—Å—Ç—Ä–æ–∫–∞ 112)
- `uri = await vscode.window.showSaveDialog({` (—Å—Ç—Ä–æ–∫–∞ 146)
- `providerProfiles = await providerSettingsManager.export()` (—Å—Ç—Ä–æ–∫–∞ 156)
- `globalSettings = await contextProxy.export()` (—Å—Ç—Ä–æ–∫–∞ 157)
- `dirname = path.dirname(uri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 170)

#### üìÑ ProviderSettingsManager.ts

**–¢–∏–ø—ã:**

- `type ProviderSettingsWithId` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerSettingsWithIdSchema = providerSettingsSchema.extend({ id: z.string().optional() })` (—Å—Ç—Ä–æ–∫–∞ 14)
- `discriminatedProviderSettingsWithIdSchema = providerSettingsSchemaDiscriminated.and(` (—Å—Ç—Ä–æ–∫–∞ 15)
- `next = this._lock.then(cb)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `currentName = providerProfiles.currentApiConfigName` (—Å—Ç—Ä–æ–∫–∞ 98)
- `configAny = apiConfig as any` (—Å—Ç—Ä–æ–∫–∞ 230)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 280)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 301)
- `existingId = providerProfiles.apiConfigs[name]?.id` (—Å—Ç—Ä–æ–∫–∞ 303)
- `id = config.id || existingId || this.generateId()` (—Å—Ç—Ä–æ–∫–∞ 304)
- `filteredConfig = providerSettingsSchemaDiscriminated.parse(config)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `id = params.id` (—Å—Ç—Ä–æ–∫–∞ 335)
- `entry = Object.entries(providerProfiles.apiConfigs).find(` (—Å—Ç—Ä–æ–∫–∞ 337)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `providerProfiles = await this.load()` (—Å—Ç—Ä–æ–∫–∞ 420)
- `profiles = providerProfilesSchema.parse(await this.load())` (—Å—Ç—Ä–æ–∫–∞ 451)
- `configs = profiles.apiConfigs` (—Å—Ç—Ä–æ–∫–∞ 452)
- `content = await this.context.secrets.get(this.secretsKey)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `providerProfiles = providerProfilesSchema` (—Å—Ç—Ä–æ–∫–∞ 493)
- `apiConfigs = Object.entries(providerProfiles.apiConfigs).reduce(` (—Å—Ç—Ä–æ–∫–∞ 499)
- `result = providerSettingsWithIdSchema.safeParse(apiConfig)` (—Å—Ç—Ä–æ–∫–∞ 501)

#### üìÑ CustomModesManager.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleSettingsChange()` (—Å—Ç—Ä–æ–∫–∞ 272)
- `async handleRoomodesChange()` (—Å—Ç—Ä–æ–∫–∞ 323)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RuleFile` (—Å—Ç—Ä–æ–∫–∞ 22)

- `interface ExportedModeConfig extends ModeConfig` (—Å—Ç—Ä–æ–∫–∞ 27)

- `interface ImportData` (—Å—Ç—Ä–æ–∫–∞ 31)

- `interface ExportResult` (—Å—Ç—Ä–æ–∫–∞ 35)

- `interface ImportResult` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ROOMODES_FILENAME = ".neira-modes"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `operation = this.writeQueue.shift()` (—Å—Ç—Ä–æ–∫–∞ 81)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 93)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `neiraDir = path.join(workspaceRoot, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `roomodesPath = path.join(neiraDir, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `exists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `parsed = yaml.parse(cleanedContent)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `errorMsg = yamlError instanceof Error ? yamlError.message : String(yamlError)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `lineMatch = errorMsg.match(/at line (\d+)/)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `line = lineMatch ? lineMatch[1] : "unknown"` (—Å—Ç—Ä–æ–∫–∞ 168)
- `errorMsg = yamlError instanceof Error ? yamlError.message : String(yamlError)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `settings = this.parseYamlSafely(content, filePath)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `result = customModesSettingsSchema.safeParse(settings)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `issues = result.error.issues` (—Å—Ç—Ä–æ–∫–∞ 200)
- `isRoomodes = filePath.endsWith(ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `source = isRoomodes ? ("project" as const) : ("global" as const)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `errorMsg = `Failed to load modes from ${filePath}: ${error instanceof Error ? error.message : String(error)}`` (—Å—Ç—Ä–æ–∫–∞ 219)
- `slugs = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 227)
- `settingsDir = await ensureSettingsDirectoryExists(this.context)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `filePath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 251)
- `fileExists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `settingsWatcher = vscode.workspace.createFileSystemWatcher(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `handleSettingsChange = async () => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `content = await fs.readFile(settingsPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `errorMessage = t("common:customModes.errors.invalidFormat")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `result = customModesSettingsSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 299)
- `mergedModes = await this.mergeCustomModes(roomodesModes, result.data.customModes)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 317)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `roomodesPath = path.join(workspaceRoot, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `roomodesWatcher = vscode.workspace.createFileSystemWatcher(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `handleRoomodesChange = async () => {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 325)
- `roomodesModes = await this.loadModesFromFile(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mergedModes = await this.mergeCustomModes(roomodesModes, settingsModes)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 358)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 365)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 366)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 370)
- `projectModes = new Map<string, ModeConfig>()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `globalModes = new Map<string, ModeConfig>()` (—Å—Ç—Ä–æ–∫–∞ 374)
- `mergedModes = [` (—Å—Ç—Ä–æ–∫–∞ 389)
- `validationResult = modeConfigSchema.safeParse(config)` (—Å—Ç—Ä–æ–∫–∞ 407)
- `errors = validationResult.error.errors.map((e) => e.message).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `isProjectMode = config.source === "project"` (—Å—Ç—Ä–æ–∫–∞ 414)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 418)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `exists = await fileExistsAtPath(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 427)
- `modeWithSource = {` (—Å—Ç—Ä–æ–∫–∞ 439)
- `updatedModes = modes.filter((m) => m.slug !== slug)` (—Å—Ç—Ä–æ–∫–∞ 445)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 492)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 493)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 495)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 496)
- `mergedModes = await this.mergeCustomModes(roomodesModes, settingsModes)` (—Å—Ç—Ä–æ–∫–∞ 497)
- `settingsPath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 508)
- `roomodesPath = await this.getWorkspaceRoomodes()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `settingsModes = await this.loadModesFromFile(settingsPath)` (—Å—Ç—Ä–æ–∫–∞ 511)
- `roomodesModes = roomodesPath ? await this.loadModesFromFile(roomodesPath) : []` (—Å—Ç—Ä–æ–∫–∞ 512)
- `projectMode = roomodesModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `globalMode = settingsModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 516)
- `modeToDelete = projectMode || globalMode` (—Å—Ç—Ä–æ–∫–∞ 523)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 546)
- `scope = mode.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 559)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 564)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 572)
- `rulesFolderExists = await fileExistsAtPath(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 577)
- `messageKey = fromMarketplace` (—Å—Ç—Ä–æ–∫–∞ 585)
- `filePath = await this.getCustomModesFilePath()` (—Å—Ç—Ä–æ–∫–∞ 601)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 607)
- `allModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 620)
- `mode = allModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 621)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 625)
- `roomodesPath = path.join(workspacePath, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `roomodesExists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 632)
- `roomodesContent = await fs.readFile(roomodesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 634)
- `roomodesData = yaml.parse(roomodesContent)` (—Å—Ç—Ä–æ–∫–∞ 635)
- `roomodesModes = roomodesData?.customModes || []` (—Å—Ç—Ä–æ–∫–∞ 636)
- `modeInRoomodes = roomodesModes.find((m: any) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 639)
- `isGlobalMode = mode?.source === "global"` (—Å—Ç—Ä–æ–∫–∞ 653)
- `globalRooDir = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 657)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 661)
- `stats = await fs.stat(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 669)
- `entries = await fs.readdir(modeRulesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 679)
- `filePath = path.join(modeRulesDir, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 684)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 685)
- `allModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 717)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 723)
- `roomodesPath = path.join(workspacePath, ROOMODES_FILENAME)` (—Å—Ç—Ä–æ–∫–∞ 725)
- `roomodesExists = await fileExistsAtPath(roomodesPath)` (—Å—Ç—Ä–æ–∫–∞ 727)
- `roomodesContent = await fs.readFile(roomodesPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 729)
- `roomodesData = yaml.parse(roomodesContent)` (—Å—Ç—Ä–æ–∫–∞ 730)
- `roomodesModes = roomodesData?.customModes || []` (—Å—Ç—Ä–æ–∫–∞ 731)
- `builtInMode = builtInModes.find((m) => m.slug === slug)` (—Å—Ç—Ä–æ–∫–∞ 743)
- `isGlobalMode = mode.source === "global"` (—Å—Ç—Ä–æ–∫–∞ 754)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 761)
- `modeRulesDir = isGlobalMode` (—Å—Ç—Ä–æ–∫–∞ 769)
- `stats = await fs.stat(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 775)
- `entries = await fs.readdir(modeRulesDir, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 778)
- `filePath = path.join(modeRulesDir, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 783)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 784)
- `relativePath = path.relative(modeRulesDir, filePath)` (—Å—Ç—Ä–æ–∫–∞ 788)
- `normalizedRelativePath = relativePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 790)
- `exportData = {` (—Å—Ç—Ä–æ–∫–∞ 821)
- `yamlContent = yaml.stringify(exportData)` (—Å—Ç—Ä–æ–∫–∞ 825)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 829)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 854)
- `normalizedRelativePath = path.normalize(ruleFile.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 878)
- `rulesMatch = normalizedRelativePath.match(/^rules-[^\/\\]+[\/\\]/)` (—Å—Ç—Ä–æ–∫–∞ 888)
- `targetPath = path.join(rulesFolderPath, cleanedRelativePath)` (—Å—Ç—Ä–æ–∫–∞ 896)
- `normalizedTargetPath = path.normalize(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 897)
- `expectedBasePath = path.normalize(rulesFolderPath)` (—Å—Ç—Ä–æ–∫–∞ 898)
- `targetDir = path.dirname(targetPath)` (—Å—Ç—Ä–æ–∫–∞ 907)
- `parsed = yaml.parse(yamlContent)` (—Å—Ç—Ä–æ–∫–∞ 930)
- `workspacePath = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 947)
- `validationResult = modeConfigSchema.safeParse(modeConfig)` (—Å—Ç—Ä–æ–∫–∞ 958)
- `existingModes = await this.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 970)
- `existingMode = existingModes.find((m) => m.slug === importMode.slug)` (—Å—Ç—Ä–æ–∫–∞ 971)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 991)

#### üìÑ ContextProxy.ts

**–¢–∏–ø—ã:**

- `type GlobalStateKey` (—Å—Ç—Ä–æ–∫–∞ 22)
- `type SecretStateKey` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type NeiraCoderSettingsKey` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PASS_THROUGH_STATE_KEYS = ["taskHistory"]` (—Å—Ç—Ä–æ–∫–∞ 26)
- `globalSettingsExportSchema = globalSettingsSchema.omit({` (—Å—Ç—Ä–æ–∫–∞ 30)
- `promises = SECRET_STATE_KEYS.map(async (key) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `value = this.originalContext.globalState.get<GlobalState[K]>(key)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `value = this.stateCache[key]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `promises = SECRET_STATE_KEYS.map(async (key) => {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `values = this.getValues()` (—Å—Ç—Ä–æ–∫–∞ 176)
- `values = this.getValues()` (—Å—Ç—Ä–æ–∫–∞ 194)
- `entries = Object.entries(values) as [NeiraCoderSettingsKey, unknown][]` (—Å—Ç—Ä–æ–∫–∞ 250)
- `globalSettings = globalSettingsExportSchema.parse(this.getValues())` (—Å—Ç—Ä–æ–∫–∞ 260)

### üìÇ build-src/src/core/condense

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SUMMARY_PROMPT = `\` (—Å—Ç—Ä–æ–∫–∞ 14)
- `messagesToSummarize = getMessagesSinceLastSummary(messages.slice(0, -N_MESSAGES_TO_KEEP))` (—Å—Ç—Ä–æ–∫–∞ 103)
- `keepMessages = messages.slice(-N_MESSAGES_TO_KEEP)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `recentSummaryExists = keepMessages.some((message) => message.isSummary)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `error = t("common:errors.condensed_recently")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `requestMessages = maybeRemoveImageBlocks([...messagesToSummarize, finalRequestMessage], apiHandler).map(` (—Å—Ç—Ä–æ–∫–∞ 127)
- `promptToUse = customCondensingPrompt?.trim() ? customCondensingPrompt.trim() : SUMMARY_PROMPT` (—Å—Ç—Ä–æ–∫–∞ 133)
- `error = t("common:errors.condense_handler_invalid")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `stream = handlerToUse.createMessage(promptToUse, requestMessages)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `error = t("common:errors.condense_failed")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `newMessages = [...messages.slice(0, -N_MESSAGES_TO_KEEP), summaryMessage, ...keepMessages]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `contextMessages = outputTokens` (—Å—Ç—Ä–æ–∫–∞ 193)
- `contextBlocks = contextMessages.flatMap((message) =>` (—Å—Ç—Ä–æ–∫–∞ 197)
- `newContextTokens = outputTokens + (await apiHandler.countTokens(contextBlocks))` (—Å—Ç—Ä–æ–∫–∞ 201)
- `error = t("common:errors.condense_context_grew")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `lastSummaryIndex = messages.length - lastSummaryIndexReverse - 1` (—Å—Ç—Ä–æ–∫–∞ 217)
- `messagesSinceSummary = messages.slice(lastSummaryIndex)` (—Å—Ç—Ä–æ–∫–∞ 218)

### üìÇ build-src/src/core/checkpoints

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `log(message: s)` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `log = (message: string) => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `workspaceDir = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `globalStorageDir = provider?.context.globalStorageUri.fsPath` (—Å—Ç—Ä–æ–∫–∞ 56)
- `service = RepoPerTaskCheckpointService.create(options)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `gitInstalled = await checkGitInstalled()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `selection = await vscode.window.showWarningMessage(` (—Å—Ç—Ä–æ–∫–∞ 103)
- `service = getCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `service = getCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `service = await getInitializedCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 224)
- `index = cline.clineMessages.findIndex((m) => m.ts === ts)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 236)
- `deletedMessages = cline.clineMessages.slice(index + 1)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `service = await getInitializedCheckpointService(cline)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `previousCheckpoint = cline.clineMessages` (—Å—Ç—Ä–æ–∫–∞ 301)
- `changes = await service.getDiff({ from: previousCommitHash, to: commitHash })` (—Å—Ç—Ä–æ–∫–∞ 310)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 331)

### üìÇ build-src/src/core/assistant-message

#### üìÑ presentAssistantMessage.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toolDescription(): string` (—Å—Ç—Ä–æ–∫–∞ 154)
- `pushToolResult(content: T)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `async askFinishSubTaskApproval()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `async handleError(action: s, error: E)` (—Å—Ç—Ä–æ–∫–∞ 307)
- `removeClosingTag(tag: T): string` (—Å—Ç—Ä–æ–∫–∞ 320)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `block = cloneDeep(cline.assistantMessageContent[cline.currentStreamingContentIndex]) // need to create copy bc while stream is updating the array, it could be updating the reference block properties too` (—Å—Ç—Ä–æ–∫–∞ 81)
- `lastOpenBracketIndex = content.lastIndexOf("<")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `possibleTag = content.slice(lastOpenBracketIndex)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `hasCloseBracket = possibleTag.includes(">")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `isLikelyTagName = /^[a-zA-Z_]+$/.test(tagContent)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `isOpeningOrClosing = possibleTag === "<" || possibleTag === "</"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `toolDescription = (): string => {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `match = block.params.args.match(/<file>.*?<path>([^<]+)<\/path>/s)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `firstPath = match[1]` (—Å—Ç—Ä–æ–∫–∞ 172)
- `fileCount = (block.params.args.match(/<file>/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 174)
- `mode = block.params.mode ?? defaultModeSlug` (—Å—Ç—Ä–æ–∫–∞ 212)
- `message = block.params.message ?? "(no message)"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `modeName = getModeBySlug(mode, customModes)?.name ?? mode` (—Å—Ç—Ä–æ–∫–∞ 214)
- `pushToolResult = (content: ToolResponse) => {` (—Å—Ç—Ä–æ–∫–∞ 248)
- `askApproval = async (` (—Å—Ç—Ä–æ–∫–∞ 263)
- `askFinishSubTaskApproval = async () => {` (—Å—Ç—Ä–æ–∫–∞ 298)
- `toolMessage = JSON.stringify({ tool: "finishTask" })` (—Å—Ç—Ä–æ–∫–∞ 303)
- `handleError = async (action: string, error: Error) => {` (—Å—Ç—Ä–æ–∫–∞ 307)
- `errorString = `Error ${action}: ${JSON.stringify(serializeError(error))}`` (—Å—Ç—Ä–æ–∫–∞ 308)
- `removeClosingTag = (tag: ToolParamName, text?: string): string => {` (—Å—Ç—Ä–æ–∫–∞ 320)
- `tagRegex = new RegExp(` (—Å—Ç—Ä–æ–∫–∞ 334)
- `repetitionCheck = cline.toolRepetitionDetector.check(block)` (—Å—Ç—Ä–æ–∫–∞ 375)
- `provider = cline.providerRef.deref()` (—Å—Ç—Ä–æ–∫–∞ 421)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `recentlyModifiedFiles = cline.fileContextTracker.getAndClearCheckpointPossibleFile()` (—Å—Ç—Ä–æ–∫–∞ 530)

#### üìÑ parseAssistantMessageV2.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolUseOpenTags = new Map<string, ToolName>()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `toolParamOpenTags = new Map<string, ToolParamName>()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `len = assistantMessage.length` (—Å—Ç—Ä–æ–∫–∞ 62)
- `currentCharIndex = i` (—Å—Ç—Ä–æ–∫–∞ 65)
- `closeTag = `</${currentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 69)
- `value = assistantMessage.slice(` (—Å—Ç—Ä–æ–∫–∞ 79)
- `toolCloseTag = `</${currentToolUse.name}>`` (—Å—Ç—Ä–æ–∫–∞ 116)
- `toolContentSlice = assistantMessage.slice(` (—Å—Ç—Ä–æ–∫–∞ 125)
- `contentStartTag = `<${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 141)
- `contentEndTag = `</${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 142)
- `contentStart = toolContentSlice.indexOf(contentStartTag)` (—Å—Ç—Ä–æ–∫–∞ 143)
- `contentEnd = toolContentSlice.lastIndexOf(contentEndTag)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `contentValue = toolContentSlice` (—Å—Ç—Ä–æ–∫–∞ 150)
- `potentialText = assistantMessage` (—Å—Ç—Ä–æ–∫–∞ 198)
- `value = assistantMessage.slice(currentParamValueStart) // From param start to end of string.` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ parseAssistantMessage.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `char = assistantMessage[i]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `currentParamValue = accumulator.slice(currentParamValueStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `paramClosingTag = `</${currentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 24)
- `paramValue = currentParamValue.slice(0, -paramClosingTag.length)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `currentToolValue = accumulator.slice(currentToolUseStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `toolUseClosingTag = `</${currentToolUse.name}>`` (—Å—Ç—Ä–æ–∫–∞ 45)
- `possibleParamOpeningTags = toolParamNames.map((name) => `<${name}>`)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `toolContent = accumulator.slice(currentToolUseStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `contentStartTag = `<${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 74)
- `contentEndTag = `</${contentParamName}>`` (—Å—Ç—Ä–æ–∫–∞ 75)
- `contentStartIndex = toolContent.indexOf(contentStartTag) + contentStartTag.length` (—Å—Ç—Ä–æ–∫–∞ 76)
- `contentEndIndex = toolContent.lastIndexOf(contentEndTag)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `possibleToolUseOpeningTags = toolNames.map((name) => `<${name}>`)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `paramValue = accumulator.slice(currentParamValueStartIndex)` (—Å—Ç—Ä–æ–∫–∞ 149)

#### üìÑ index.ts

### üìÇ build-src/src/api/transform

#### üìÑ vscode-lm-format.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `asObjectSafe(value: a): object` - Safely converts a value into a plain object. (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contentParts = [` (—Å—Ç—Ä–æ–∫–∞ 66)
- `contentParts = [` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ stream.ts

#### üìÑ simple-format.ts

#### üìÑ reasoning.ts

**–¢–∏–ø—ã:**

- `type ReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ r1-format.ts

**–¢–∏–ø—ã:**

- `type ContentPartText` (—Å—Ç—Ä–æ–∫–∞ 4)
- `type ContentPartImage` (—Å—Ç—Ä–æ–∫–∞ 5)
- `type UserMessage` (—Å—Ç—Ä–æ–∫–∞ 6)
- `type AssistantMessage` (—Å—Ç—Ä–æ–∫–∞ 7)
- `type Message` (—Å—Ç—Ä–æ–∫–∞ 8)
- `type AnthropicMessage` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `lastMessage = merged[merged.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 20)
- `lastContent = Array.isArray(lastMessage.content)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `newContent = Array.isArray(messageContent)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mergedContent = [...lastContent, ...newContent] as AssistantMessage["content"]` (—Å—Ç—Ä–æ–∫–∞ 72)
- `mergedContent = [...lastContent, ...newContent] as UserMessage["content"]` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ openai-format.ts

#### üìÑ model-params.ts

**–¢–∏–ø—ã:**

- `type Format` (—Å—Ç—Ä–æ–∫–∞ 22)
- `type BaseModelParams` (—Å—Ç—Ä–æ–∫–∞ 32)
- `type AnthropicModelParams` (—Å—Ç—Ä–æ–∫–∞ 39)
- `type OpenAiModelParams` (—Å—Ç—Ä–æ–∫–∞ 44)
- `type GeminiModelParams` (—Å—Ç—Ä–æ–∫–∞ 49)
- `type OpenRouterModelParams` (—Å—Ç—Ä–æ–∫–∞ 54)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `maxTokens = getModelMaxOutputTokens({` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ mistral-format.ts

#### üìÑ image-cleaning.ts

#### üìÑ gemini-format.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toolName = block.tool_use_id.split("-")[0]` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ bedrock-converse-format.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BedrockMessageContent` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = anthropicMessage.content.map((block) => {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `messageBlock = block as BedrockMessageContent & {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `binaryString = atob(messageBlock.source.data)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `format = messageBlock.source.media_type.split("/")[1]` (—Å—Ç—Ä–æ–∫–∞ 73)
- `toolParams = Object.entries(messageBlock.input || {})` (—Å—Ç—Ä–æ–∫–∞ 90)
- `videoContent = messageBlock.s3Location` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ build-src/src/api/providers

#### üìÑ xai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `XAI_DEFAULT_TEMPERATURE = 0` (—Å—Ç—Ä–æ–∫–∞ 16)
- `info = xaiModels[id]` (—Å—Ç—Ä–æ–∫–∞ 38)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 39)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 51)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 62)
- `promptDetails = "prompt_tokens_details" in chunk.usage ? chunk.usage.prompt_tokens_details : null` (—Å—Ç—Ä–æ–∫–∞ 81)
- `cachedTokens = promptDetails && "cached_tokens" in promptDetails ? promptDetails.cached_tokens : 0` (—Å—Ç—Ä–æ–∫–∞ 82)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 106)

#### üìÑ vscode-lm.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 96)
- `models = await vscode.lm.selectChatModels(selector)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `countMessage = extractTextCountFromMessage(text)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `errorMessage = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `selector = this.options?.vsCodeLmModelSelector || {}` (—Å—Ç—Ä–æ–∫–∞ 296)
- `message = error instanceof Error ? error.message : "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 300)
- `cleanedMessages = messages.map((msg) => ({` (—Å—Ç—Ä–æ–∫–∞ 343)
- `toolCall = {` (—Å—Ç—Ä–æ–∫–∞ 415)
- `toolCallText = JSON.stringify(toolCall)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `errorDetails = JSON.stringify(error, null, 2)` (—Å—Ç—Ä–æ–∫–∞ 473)
- `errorMessage = String(error)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `requiredProps = {` (—Å—Ç—Ä–æ–∫–∞ 489)
- `modelParts = [this.client.vendor, this.client.family, this.client.version].filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 505)
- `modelId = this.client.id || modelParts.join(SELECTOR_SEPARATOR)` (—Å—Ç—Ä–æ–∫–∞ 507)
- `fallbackId = this.options.vsCodeLmModelSelector` (—Å—Ç—Ä–æ–∫–∞ 527)
- `client = await this.getClient()` (—Å—Ç—Ä–æ–∫–∞ 544)
- `response = await client.sendRequest(` (—Å—Ç—Ä–æ–∫–∞ 545)
- `models = (await vscode.lm.selectChatModels({})) || []` (—Å—Ç—Ä–æ–∫–∞ 571)

#### üìÑ vertex.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 16)
- `params = getModelParams({ format: "gemini", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ unbound.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UnboundUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 23)

**–¢–∏–ø—ã:**

- `type UnboundChatCompletionCreateParamsStreaming` (—Å—Ç—Ä–æ–∫–∞ 28)
- `type UnboundChatCompletionCreateParamsNonStreaming` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ORIGIN_APP = "roo-code"` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DEFAULT_HEADERS = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 107)
- `usage = chunk.usage as UnboundUsage` (—Å—Ç—Ä–æ–∫–∞ 108)
- `response = await this.client.chat.completions.create(requestOptions, { headers: DEFAULT_HEADERS })` (—Å—Ç—Ä–æ–∫–∞ 155)

#### üìÑ sambanova.ts

#### üìÑ router-provider.ts

**–¢–∏–ø—ã:**

- `type RouterProviderOptions` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.modelId ?? this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 64)

#### üìÑ requesty.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RequestyUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 21)

**–¢–∏–ø—ã:**

- `type RequestyChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.requestyModelId ?? requestyDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 62)
- `info = this.models[id] ?? requestyDefaultModelInfo` (—Å—Ç—Ä–æ–∫–∞ 63)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 65)
- `requestyUsage = usage as RequestyUsage` (—Å—Ç—Ä–æ–∫–∞ 76)
- `inputTokens = requestyUsage?.prompt_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 77)
- `outputTokens = requestyUsage?.completion_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 78)
- `cacheWriteTokens = requestyUsage?.prompt_tokens_details?.caching_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 79)
- `cacheReadTokens = requestyUsage?.prompt_tokens_details?.cached_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 80)
- `totalCost = modelInfo` (—Å—Ç—Ä–æ–∫–∞ 81)
- `stream = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ openrouter.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 40)

**–¢–∏–ø—ã:**

- `type OpenRouterChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseURL = this.options.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `apiKey = this.options.openRouterApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `model = await this.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `transforms = (this.options.openRouterUseMiddleOutTransform ?? true) ? ["middle-out"] : undefined` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `error = chunk.error as { message?: string` (—Å—Ç—Ä–æ–∫–∞ 144)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 149)
- `id = this.options.openRouterModelId ?? openRouterDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 193)
- `isDeepSeekR1 = id.startsWith("deepseek/deepseek-r1") || id === "perplexity/sonar-reasoning"` (—Å—Ç—Ä–æ–∫–∞ 201)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 203)
- `response = await this.client.chat.completions.create(completionParams)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `error = response.error as { message?: string` (—Å—Ç—Ä–æ–∫–∞ 238)
- `completion = response as OpenAI.Chat.ChatCompletion` (—Å—Ç—Ä–æ–∫–∞ 242)

#### üìÑ openai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseURL = this.options.openAiBaseUrl ?? "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `apiKey = this.options.openAiApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `isAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `urlHost = this._getUrlHost(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `isAzureOpenAi = urlHost === "azure.com" || urlHost.endsWith(".azure.com") || options.openAiUseAzure` (—Å—Ç—Ä–æ–∫–∞ 42)
- `headers = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `modelUrl = this.options.openAiBaseUrl ?? ""` (—Å—Ç—Ä–æ–∫–∞ 81)
- `modelId = this.options.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 82)
- `enabledR1Format = this.options.openAiR1FormatEnabled ?? false` (—Å—Ç—Ä–æ–∫–∞ 83)
- `enabledLegacyFormat = this.options.openAiLegacyFormat ?? false` (—Å—Ç—Ä–æ–∫–∞ 84)
- `isAzureAiInference = this._isAzureAiInference(modelUrl)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `deepseekReasoner = modelId.includes("deepseek-reasoner") || enabledR1Format` (—Å—Ç—Ä–æ–∫–∞ 86)
- `ark = modelUrl.includes(".volces.com")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `lastTwoUserMessages = convertedMessages.filter((msg) => msg.role === "user").slice(-2)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `isGrokXAI = this._isGrokXAI(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `stream = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 164)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 169)
- `delta = chunk.choices[0]?.delta ?? {}` (—Å—Ç—Ä–æ–∫–∞ 181)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 226)
- `id = this.options.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 251)
- `info = this.options.openAiCustomModelInfo ?? openAiModelInfoSaneDefaults` (—Å—Ç—Ä–æ–∫–∞ 252)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 253)
- `isAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 259)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelInfo = model.info` (—Å—Ç—Ä–æ–∫–∞ 261)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 271)
- `modelInfo = this.getModel().info` (—Å—Ç—Ä–æ–∫–∞ 291)
- `methodIsAzureAiInference = this._isAzureAiInference(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `isGrokXAI = this._isGrokXAI(this.options.openAiBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `stream = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 317)
- `response = await this.client.chat.completions.create(` (—Å—Ç—Ä–æ–∫–∞ 342)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 357)
- `urlHost = this._getUrlHost(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 384)
- `urlHost = this._getUrlHost(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `response = await axios.get(`${baseUrl}/models`, config)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `modelsArray = response.data?.data?.map((model: any) => model.id) || []` (—Å—Ç—Ä–æ–∫–∞ 438)

#### üìÑ openai-native.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = this.options.openAiNativeApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `isOriginalO1 = model.id === "o1"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 115)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 131)
- `inputTokens = usage?.prompt_tokens || 0 // sum of cache hits and misses` (—Å—Ç—Ä–æ–∫–∞ 147)
- `outputTokens = usage?.completion_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 148)
- `cacheReadTokens = usage?.prompt_tokens_details?.cached_tokens || 0` (—Å—Ç—Ä–æ–∫–∞ 149)
- `cacheWriteTokens = 0` (—Å—Ç—Ä–æ–∫–∞ 150)
- `totalCost = calculateApiCostOpenAI(info, inputTokens, outputTokens, cacheWriteTokens, cacheReadTokens)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `nonCachedInputTokens = Math.max(0, inputTokens - cacheReadTokens - cacheWriteTokens)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 165)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 172)
- `response = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 196)

#### üìÑ ollama.ts

**–¢–∏–ø—ã:**

- `type CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.getModel().id` (—Å—Ç—Ä–æ–∫–∞ 37)
- `useR1Format = modelId.toLowerCase().includes("deepseek-r1")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 44)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 51)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 61)
- `modelId = this.getModel().id` (—Å—Ç—Ä–æ–∫–∞ 94)
- `useR1Format = modelId.toLowerCase().includes("deepseek-r1")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ moonshot.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? moonshotDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 23)
- `info = moonshotModels[id as keyof typeof moonshotModels] || moonshotModels[moonshotDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 24)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ mistral.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiModelId = options.apiModelId || mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 31)
- `response = await this.client.chat.stream({` (—Å—Ç—Ä–æ–∫–∞ 49)
- `delta = chunk.data.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 57)
- `id = this.options.apiModelId ?? mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 82)
- `info = mistralModels[id as MistralModelId] ?? mistralModels[mistralDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `maxTokens = this.options.includeMaxTokens ? info.maxTokens : undefined` (—Å—Ç—Ä–æ–∫–∞ 86)
- `temperature = this.options.modelTemperature ?? MISTRAL_DEFAULT_TEMPERATURE` (—Å—Ç—Ä–æ–∫–∞ 87)
- `response = await this.client.chat.complete({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `content = response.choices?.[0]?.message.content` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ lm-studio.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toContentBlocks = (` (—Å—Ç—Ä–æ–∫–∞ 44)
- `results = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 90)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 100)
- `models = getModelsFromCache("lmstudio")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `response = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `response = await axios.get(`${baseUrl}/v1/models`)` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modelsArray = response.data?.data?.map((model: any) => model.id) || []` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ lite-llm.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LiteLLMUsage extends OpenAI.CompletionUsage` (—Å—Ç—Ä–æ–∫–∞ 206)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openAiMessages = convertToOpenAiMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `userMsgIndices = openAiMessages.reduce(` (—Å—Ç—Ä–æ–∫–∞ 62)
- `lastUserMsgIndex = userMsgIndices[userMsgIndices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 66)
- `secondLastUserMsgIndex = userMsgIndices[userMsgIndices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 67)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 130)
- `usage = chunk.usage as LiteLLMUsage` (—Å—Ç—Ä–æ–∫–∞ 131)
- `response = await this.client.chat.completions.create(requestOptions)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ index.ts

#### üìÑ human-relay.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMessageContent(message: A): string` - Extract text content from message object (—Å—Ç—Ä–æ–∫–∞ 104)
- `async showHumanRelayDialog(promptText: s): Promise<string | undefined>` - Displays the human relay dialog and waits for user response. (—Å—Ç—Ä–æ–∫–∞ 120)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `latestMessage = messages[messages.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 32)
- `response = await showHumanRelayDialog(promptText)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `response = await showHumanRelayDialog(prompt)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `requestId = Date.now().toString()` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ huggingface.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `temperature = this.options.modelTemperature ?? 0.7` (—Å—Ç—Ä–æ–∫–∞ 52)
- `stream = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 70)
- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `modelId = this.options.huggingFaceModelId || "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 109)
- `modelInfo = this.modelCache?.[modelId]` (—Å—Ç—Ä–æ–∫–∞ 112)

#### üìÑ groq.ts

#### üìÑ glama.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `delay(ms: n)` (—Å—Ç—Ä–æ–∫–∞ 87)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_HEADERS = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `completionRequestId = response.headers.get("x-completion-request-id")` (—Å—Ç—Ä–æ–∫–∞ 74)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 77)
- `delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))` (—Å—Ç—Ä–æ–∫–∞ 87)
- `response = await axios.get(` (—Å—Ç—Ä–æ–∫–∞ 92)
- `completionRequest = response.data` (—Å—Ç—Ä–æ–∫–∞ 97)
- `response = await this.client.chat.completions.create(requestOptions)` (—Å—Ç—Ä–æ–∫–∞ 136)

#### üìÑ gemini.ts

**–¢–∏–ø—ã:**

- `type GeminiHandlerOptions` (—Å—Ç—Ä–æ–∫–∞ 24)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `project = this.options.vertexProjectId ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `location = this.options.vertexRegion ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `apiKey = this.options.geminiApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 40)
- `contents = messages.map(convertAnthropicMessageToGemini)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = await this.client.models.generateContentStream(params)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `candidate = chunk.candidates[0]` (—Å—Ç—Ä–æ–∫–∞ 101)
- `citations = this.extractCitationsOnly(pendingGroundingMetadata)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `inputTokens = lastUsageMetadata.promptTokenCount ?? 0` (—Å—Ç—Ä–æ–∫–∞ 142)
- `outputTokens = lastUsageMetadata.candidatesTokenCount ?? 0` (—Å—Ç—Ä–æ–∫–∞ 143)
- `cacheReadTokens = lastUsageMetadata.cachedContentTokenCount` (—Å—Ç—Ä–æ–∫–∞ 144)
- `reasoningTokens = lastUsageMetadata.thoughtsTokenCount` (—Å—Ç—Ä–æ–∫–∞ 145)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 166)
- `params = getModelParams({ format: "gemini", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 169)
- `chunks = groundingMetadata?.groundingChunks` (—Å—Ç—Ä–æ–∫–∞ 179)
- `citationLinks = chunks` (—Å—Ç—Ä–æ–∫–∞ 185)
- `uri = chunk.web?.uri` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = await this.client.models.generateContent({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `candidate = result.candidates?.[0]` (—Å—Ç—Ä–æ–∫–∞ 229)
- `citations = this.extractCitationsOnly(candidate.groundingMetadata)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `response = await this.client.models.countTokens({` (—Å—Ç—Ä–æ–∫–∞ 251)
- `tier = info.tiers.find((tier) => inputTokens <= tier.contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `uncachedInputTokens = inputTokens - cacheReadTokens` (—Å—Ç—Ä–æ–∫–∞ 300)
- `inputTokensCost = inputPrice * (uncachedInputTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `outputTokensCost = outputPrice * (outputTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `totalCost = inputTokensCost + outputTokensCost + cacheReadCost` (—Å—Ç—Ä–æ–∫–∞ 306)

#### üìÑ fake-ai.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FakeAI` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `optionsFakeAi = options.fakeAi as FakeAI | undefined` (—Å—Ç—Ä–æ–∫–∞ 47)
- `id = optionsFakeAi.id` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ doubao.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatCompletionMessageParam` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface ChatCompletionParams` (—Å—Ç—Ä–æ–∫–∞ 19)

- `interface ChatCompletion` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface ChatCompletionChunk` (—Å—Ç—Ä–æ–∫–∞ 40)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? doubaoDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 65)
- `info = doubaoModels[id as keyof typeof doubaoModels] || doubaoModels[doubaoDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 67)

#### üìÑ deepseek.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = this.options.apiModelId ?? deepSeekDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 23)
- `info = deepSeekModels[id as keyof typeof deepSeekModels] || deepSeekModels[deepSeekDefaultModelId]` (—Å—Ç—Ä–æ–∫–∞ 24)
- `params = getModelParams({ format: "openai", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ constants.ts

#### üìÑ claude-code.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filteredMessages = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `useVertex = process.env.CLAUDE_CODE_USE_VERTEX === "1"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `modelId = model.id in claudeCodeModels ? (model.id as ClaudeCodeModelId) : claudeCodeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 33)
- `claudeProcess = runClaudeCode({` (—Å—Ç—Ä–æ–∫–∞ 35)
- `message = chunk.message` (—Å—Ç—Ä–æ–∫–∞ 72)
- `content = "text" in message.content[0] ? message.content[0] : undefined` (—Å—Ç—Ä–æ–∫–∞ 75)
- `isError = content && content.text.startsWith(`API Error`)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `errorMessageStart = content.text.indexOf("{")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `errorMessage = content.text.slice(errorMessageStart)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `error = this.attemptParse(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 142)
- `id = modelId as ClaudeCodeModelId` (—Å—Ç—Ä–æ–∫–∞ 144)

#### üìÑ chutes.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `temperature = this.options.modelTemperature ?? this.getModel().info.temperature` (—Å—Ç—Ä–æ–∫–∞ 40)
- `model = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `stream = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 56)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 61)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 71)
- `model = super.getModel()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `isDeepSeekR1 = model.id.includes("DeepSeek-R1")` (—Å—Ç—Ä–æ–∫–∞ 99)

#### üìÑ cerebras.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `stripThinkingTokens(text: s): string` - Removes thinking tokens from text to prevent model confusion when processing conversation history. This is crucial because models can get confused by their own thinking tokens in input. (—Å—Ç—Ä–æ–∫–∞ 23)
- `flattenMessageContent(content: a): string` - Flattens OpenAI message content to simple strings that Cerebras can handle. Cerebras doesn't support complex content arrays like OpenAI does. (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CEREBRAS_BASE_URL = "https://api.cerebras.ai/v1"` (—Å—Ç—Ä–æ–∫–∞ 16)
- `CEREBRAS_DEFAULT_TEMPERATURE = 0` (—Å—Ç—Ä–æ–∫–∞ 17)
- `modelId = (this.options.apiModelId as CerebrasModelId) || this.defaultProviderModelId` (—Å—Ç—Ä–æ–∫–∞ 101)
- `temperature = this.options.modelTemperature ?? CEREBRAS_DEFAULT_TEMPERATURE` (—Å—Ç—Ä–æ–∫–∞ 117)
- `openaiMessages = convertToOpenAiMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `cerebrasMessages = convertToCerebrasMessages(openaiMessages)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `requestBody = {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `response = await fetch(`${CEREBRAS_BASE_URL}/chat/completions`, {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `errorText = await response.text()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `errorJson = JSON.parse(errorText)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `matcher = new XmlMatcher(` (—Å—Ç—Ä–æ–∫–∞ 182)
- `reader = response.body.getReader()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `lines = buffer.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `jsonStr = line.slice(6).trim()` (—Å—Ç—Ä–æ–∫–∞ 211)
- `parsed = JSON.parse(jsonStr)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = parsed.choices[0].delta.content` (—Å—Ç—Ä–æ–∫–∞ 220)
- `inputText = systemPrompt + cerebrasMessages.map((m) => m.content).join("")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `requestBody = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `response = await fetch(`${CEREBRAS_BASE_URL}/chat/completions`, {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `errorText = await response.text()` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ bedrock.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BedrockInferenceConfig` (—Å—Ç—Ä–æ–∫–∞ 43)

- `interface BedrockThinkingConfig` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface BedrockPayload` (—Å—Ç—Ä–æ–∫–∞ 59)

- `interface ContentBlockStartEvent` (—Å—Ç—Ä–æ–∫–∞ 70)

- `interface ContentBlockDeltaEvent` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `id = modelId.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 290)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 317)
- `usePromptCache = Boolean(this.options.awsUsePromptCache && this.supportsAwsPromptCache(modelConfig))` (—Å—Ç—Ä–æ–∫–∞ 318)
- `formatted = this.convertToBedrockConverseMessages(` (—Å—Ç—Ä–æ–∫–∞ 329)
- `isThinkingExplicitlyEnabled = metadata?.thinking?.enabled` (—Å—Ç—Ä–æ–∫–∞ 343)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 384)
- `command = new ConverseStreamCommand(payload)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `response = await this.client.send(command, {` (—Å—Ç—Ä–æ–∫–∞ 396)
- `usage = (streamEvent.metadata?.usage || {}) as UsageType` (—Å—Ç—Ä–æ–∫–∞ 421)
- `cacheReadTokens = usage.cacheReadInputTokens || usage.cacheReadInputTokenCount || 0` (—Å—Ç—Ä–æ–∫–∞ 424)
- `cacheWriteTokens = usage.cacheWriteInputTokens || usage.cacheWriteInputTokenCount || 0` (—Å—Ç—Ä–æ–∫–∞ 425)
- `routerUsage = streamEvent.trace.promptRouter.usage` (—Å—Ç—Ä–æ–∫–∞ 453)
- `cbStart = streamEvent.contentBlockStart` (—Å—Ç—Ä–æ–∫–∞ 487)
- `contentBlock = cbStart.contentBlock || cbStart.content_block` (—Å—Ç—Ä–æ–∫–∞ 503)
- `cbDelta = streamEvent.contentBlockDelta` (—Å—Ç—Ä–æ–∫–∞ 524)
- `delta = cbDelta.delta` (—Å—Ç—Ä–æ–∫–∞ 525)
- `errorType = this.getErrorType(error)` (—Å—Ç—Ä–æ–∫–∞ 569)
- `errorChunks = this.handleBedrockError(error, true) // true for streaming context` (—Å—Ç—Ä–æ–∫–∞ 584)
- `enhancedErrorMessage = this.formatErrorMessage(error, this.getErrorType(error), true)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `enhancedError = new Error(enhancedErrorMessage)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 617)
- `conversationId = `prompt_${prompt.substring(0, 20)}`` (—Å—Ç—Ä–æ–∫–∞ 633)
- `payload = {` (—Å—Ç—Ä–æ–∫–∞ 635)
- `command = new ConverseCommand(payload)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `response = await this.client.send(command)` (—Å—Ç—Ä–æ–∫–∞ 653)
- `errorResult = this.handleBedrockError(error, false) // false for non-streaming context` (—Å—Ç—Ä–æ–∫–∞ 673)
- `errorMessage = errorResult as string` (—Å—Ç—Ä–æ–∫–∞ 675)
- `enhancedError = new Error(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 678)
- `convertedMessages = sharedConverter(anthropicMessages as Anthropic.Messages.MessageParam[])` (—Å—Ç—Ä–æ–∫–∞ 710)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 737)
- `cacheResult = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 747)
- `messagesWithCache = convertedMessages.map((msg, index) => {` (—Å—Ç—Ä–æ–∫–∞ 755)
- `placement = cacheResult.messageCachePointPlacements?.find((p) => p.index === index)` (—Å—Ç—Ä–æ–∫–∞ 756)
- `arnRegex = /^arn:aws:(?:bedrock|sagemaker):([^:]+):([^:]*):(?:([^\/]+)\/([\w\.\-:]+)|([^\/]+))$/` (—Å—Ç—Ä–æ–∫–∞ 805)
- `originalModelId = match[4]` (—Å—Ç—Ä–æ–∫–∞ 823)
- `arnRegion = match[1]` (—Å—Ç—Ä–æ–∫–∞ 827)
- `baseModelId = this.parseBaseModelId(modelId) as BedrockModelId` (—Å—Ç—Ä–æ–∫–∞ 879)
- `guessed = this.guessModelInfoFromId(modelId)` (—Å—Ç—Ä–æ–∫–∞ 894)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 925)
- `prefix = AwsBedrockHandler.getPrefixForRegion(this.options.awsRegion)` (—Å—Ç—Ä–æ–∫–∞ 951)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 959)
- `errorMessage = error.message.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 1230)
- `errorName = error.name.toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 1231)
- `errorTypeOrder = [` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType]` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType] || AwsBedrockHandler.ERROR_TYPES.GENERIC` (—Å—Ç—Ä–æ–∫–∞ 1263)
- `modelConfig = this.getModel()` (—Å—Ç—Ä–æ–∫–∞ 1273)
- `errorType = this.getErrorType(error)` (—Å—Ç—Ä–æ–∫–∞ 1304)
- `errorMessage = this.formatErrorMessage(error, errorType, isStreamContext)` (—Å—Ç—Ä–æ–∫–∞ 1307)
- `definition = AwsBedrockHandler.ERROR_TYPES[errorType]` (—Å—Ç—Ä–æ–∫–∞ 1310)
- `logMethod = definition.logLevel` (—Å—Ç—Ä–æ–∫–∞ 1311)
- `contextName = isStreamContext ? "createMessage" : "completePrompt"` (—Å—Ç—Ä–æ–∫–∞ 1312)

#### üìÑ base-provider.ts

#### üìÑ base-openai-compatible-provider.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `temperature = this.options.modelTemperature ?? this.defaultTemperature` (—Å—Ç—Ä–æ–∫–∞ 75)
- `stream = await this.client.chat.completions.create(params)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `delta = chunk.choices[0]?.delta` (—Å—Ç—Ä–æ–∫–∞ 89)
- `response = await this.client.chat.completions.create({` (—Å—Ç—Ä–æ–∫–∞ 112)

#### üìÑ anthropic.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userMsgIndices = messages.reduce(` - The latest message will be the new user message, one before will be the assistant message from a previous request, and the user message before that will be a previously cached user message. So we need to mark the latest user message as ephemeral to cache it for the next request, and mark the second to last user message as ephemeral to let the server know the last message to retrieve from the cache for the current request. (—Å—Ç—Ä–æ–∫–∞ 66)
- `lastUserMsgIndex = userMsgIndices[userMsgIndices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 71)
- `secondLastMsgUserIndex = userMsgIndices[userMsgIndices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 72)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 235)
- `params = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 239)
- `message = await this.client.messages.create({` (—Å—Ç—Ä–æ–∫–∞ 261)
- `content = message.content.find(({ type }) => type === "text")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `response = await this.client.messages.countTokens({` (—Å—Ç—Ä–æ–∫–∞ 285)

#### üìÑ anthropic-vertex.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `projectId = this.options.vertexProjectId ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 34)
- `region = this.options.vertexRegion ?? "us-east5"` (—Å—Ç—Ä–æ–∫–∞ 35)
- `stream = await this.client.messages.create(params)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `usage = chunk.message!.usage` (—Å—Ç—Ä–æ–∫–∞ 104)
- `modelId = this.options.apiModelId` (—Å—Ç—Ä–æ–∫–∞ 166)
- `params = getModelParams({ format: "anthropic", modelId: id, model: info, settings: this.options })` (—Å—Ç—Ä–æ–∫–∞ 169)
- `response = await this.client.messages.create(params)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `content = response.content[0]` (—Å—Ç—Ä–æ–∫–∞ 205)

### üìÇ build-src/src/activate/__tests__

#### üìÑ registerCommands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProvider = {} as ClineProvider` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = getVisibleProviderOrLog(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = getVisibleProviderOrLog(mockOutputChannel)` (—Å—Ç—Ä–æ–∫–∞ 62)

#### üìÑ CodeActionProvider.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `mockGet = vi.fn().mockReturnValue(false)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `mockGetConfiguration = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 105)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 118)
- `mockGet = vi.fn().mockReturnValue(true)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `mockGetConfiguration = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `actions = provider.provideCodeActions(mockDocument, mockRange, mockContext)` (—Å—Ç—Ä–æ–∫–∞ 130)

### üìÇ build-src/src/__mocks__/fs

#### üìÑ promises.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `ensureDirectoryExists(path: s)` (—Å—Ç—Ä–æ–∫–∞ 39)

**–¢–∏–ø—ã:**

- `type RuleFiles` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFiles = new Map()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `mockDirectories = new Set()` (—Å—Ç—Ä–æ–∫–∞ 5)
- `baseTestDirs = [` (—Å—Ç—Ä–æ–∫–∞ 8)
- `ensureDirectoryExists = (path: string) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `parts = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockFs = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `fileName = filePath.split("/").pop()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `error = new Error(`ENOENT: no such file or directory, open '${filePath}'`)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `parentDir = path.split("/").slice(0, -1).join("/")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `parts = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `error = new Error(`ENOENT: no such file or directory, mkdir '${path}'`)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `error = new Error(`ENOENT: no such file or directory, access '${path}'`)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `content = mockFiles.get(oldPath)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `error = new Error(`ENOENT: no such file or directory, rename '${oldPath}'`)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `parts = dir.split("/")` (—Å—Ç—Ä–æ–∫–∞ 179)

### üìÇ build-src/packages/types/src

#### üìÑ vscode.ts

#### üìÑ type-fu.ts

#### üìÑ tool.ts

#### üìÑ todo.ts

#### üìÑ terminal.ts

#### üìÑ telemetry.ts

#### üìÑ sharing.ts

#### üìÑ provider-settings.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseProviderSettingsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 66)
- `apiModelIdProviderModelSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `anthropicSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 87)
- `claudeCodeSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `glamaSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 98)
- `openRouterSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `bedrockSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `vertexSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 128)
- `openAiSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 135)
- `ollamaSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 149)
- `vsCodeLmSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 154)
- `lmStudioSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 165)
- `geminiSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 172)
- `geminiCliSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 179)
- `openAiNativeSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mistralSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 189)
- `deepSeekSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `doubaoSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 199)
- `moonshotSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 204)
- `unboundSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 211)
- `requestySchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 216)
- `humanRelaySchema = baseProviderSettingsSchema` (—Å—Ç—Ä–æ–∫–∞ 221)
- `fakeAiSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 223)
- `xaiSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `groqSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 231)
- `huggingFaceSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 235)
- `chutesSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `litellmSchema = baseProviderSettingsSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 245)
- `cerebrasSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 252)
- `sambaNovaSchema = apiModelIdProviderModelSchema.extend({` (—Å—Ç—Ä–æ–∫–∞ 256)
- `defaultSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 260)
- `modelIdKey = MODEL_ID_KEYS.find((key) => settings[key])` (—Å—Ç—Ä–æ–∫–∞ 347)

#### üìÑ model.ts

#### üìÑ mode.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `groupEntryArraySchema = z.array(groupEntrySchema).refine(` (—Å—Ç—Ä–æ–∫–∞ 45)
- `seen = new Set()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `groupName = Array.isArray(group) ? group[0] : group` (—Å—Ç—Ä–æ–∫–∞ 51)
- `slugs = new Set()` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ message.ts

#### üìÑ mcp.ts

#### üìÑ marketplace.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `baseMarketplaceItemSchema = z.object({` - Base schema for common marketplace item fields (—Å—Ç—Ä–æ–∫–∞ 37)

#### üìÑ ipc.ts

#### üìÑ index.ts

#### üìÑ history.ts

#### üìÑ global-settings.ts

#### üìÑ followup.ts

#### üìÑ experiment.ts

**–¢–∏–ø—ã:**

- `type _AssertExperiments` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ codebase-index.ts

#### üìÑ cloud.ts

#### üìÑ api.ts

### üìÇ build-src/packages/telemetry/src

#### üìÑ index.ts

#### üìÑ TelemetryService.ts

#### üìÑ PostHogTelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = process.env.POSTHOG_API_KEY` (—Å—Ç—Ä–æ–∫–∞ 29)
- `telemetryLevel = vscode.workspace.getConfiguration("telemetry").get<string>("telemetryLevel", "all")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `globalTelemetryEnabled = telemetryLevel === "all"` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ BaseTelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = this.providerRef?.deref()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mergedProperties = { ...providerProperties, ...(event.properties || {}) }` (—Å—Ç—Ä–æ–∫–∞ 54)
- `requiredFields = {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `finalProperties = { ...requiredFields, ...mergedProperties }` (—Å—Ç—Ä–æ–∫–∞ 68)

### üìÇ build-src/packages/ipc/src

#### üìÑ ipc-server.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `clientId = crypto.randomBytes(6).toString("hex")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = ipcMessageSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `payload = result.data` (—Å—Ç—Ä–æ–∫–∞ 90)
- `socket = this._clients.get(client)` (—Å—Ç—Ä–æ–∫–∞ 117)

#### üìÑ ipc-client.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = ipcMessageSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `payload = result.data` (—Å—Ç—Ä–æ–∫–∞ 71)

#### üìÑ index.ts

### üìÇ build-src/packages/evals/src

#### üìÑ index.ts

### üìÇ build-src/packages/cloud/src

#### üìÑ utils.ts

#### üìÑ types.ts

#### üìÑ index.ts

#### üìÑ TelemetryClient.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/${path}`, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `payload = {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `result = neiraCoderTelemetryEventSchema.safeParse(payload)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mergedProperties = await this.getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `formData = new FormData()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/events/backfill`, {` (—Å—Ç—Ä–æ–∫–∞ 126)

#### üìÑ StaticSettingsService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `decodedValue = Buffer.from(envValue, "base64").toString("utf-8")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `parsedJson = JSON.parse(decodedValue)` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ ShareService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sessionToken = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/extension/share`, {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `data = shareResponseSchema.parse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ SettingsService.ts

#### üìÑ RefreshTimer.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await this.callback()` (—Å—Ç—Ä–æ–∫–∞ 146)

#### üìÑ CloudSettingsService.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ORGANIZATION_SETTINGS_CACHE_KEY = "organization-settings"` (—Å—Ç—Ä–æ–∫–∞ 16)
- `token = this.authService.getSessionToken()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `response = await fetch(`${getNeiraCoderApiUrl()}/api/organization-settings`, {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = organizationSettingsSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `newSettings = result.data` (—Å—Ç—Ä–æ–∫–∞ 107)
- `previousSettings = this.settings` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ CloudService.ts

**–¢–∏–ø—ã:**

- `type AuthStateChangedPayload` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type AuthUserInfoPayload` (—Å—Ç—Ä–æ–∫–∞ 24)
- `type SettingsPayload` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cloudToken = process.env.ROO_CODE_CLOUD_TOKEN` (—Å—Ç—Ä–æ–∫–∞ 63)
- `staticOrgSettings = process.env.ROO_CODE_CLOUD_ORG_SETTINGS` (—Å—Ç—Ä–æ–∫–∞ 77)
- `cloudSettingsService = new CloudSettingsService(this.context, this.authService, this.log)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 140)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 146)
- `userInfo = this.authService!.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 152)

### üìÇ build-src/apps/vscode-e2e/src

#### üìÑ runTest.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async main()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionDevelopmentPath = path.resolve(__dirname, "../../../src")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `extensionTestsPath = path.resolve(__dirname, "./suite/index")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `testWorkspace = await fs.mkdtemp(path.join(os.tmpdir(), "roo-test-workspace-"))` (—Å—Ç—Ä–æ–∫–∞ 18)
- `testGrep = process.argv.find((arg, i) => process.argv[i - 1] === "--grep") || process.env.TEST_GREP` (—Å—Ç—Ä–æ–∫–∞ 25)
- `testFile = process.argv.find((arg, i) => process.argv[i - 1] === "--file") || process.env.TEST_FILE` (—Å—Ç—Ä–æ–∫–∞ 26)
- `extensionTestsEnv = {` (—Å—Ç—Ä–æ–∫–∞ 29)

### üìÇ apps/web-neira-coder/src/lib

#### üìÑ utils.ts

#### üìÑ stats.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatNumber(num: n): string` (—Å—Ç—Ä–æ–∫–∞ 106)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `res = await fetch("https://api.github.com/repos/NeiraCoderInc/Neira-Coder")` (—Å—Ç—Ä–æ–∫–∞ 3)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `reviews = data?.results?.[0]?.extensions?.[0]?.reviews` (—Å—Ç—Ä–æ–∫–∞ 42)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `statistics = data?.results?.[0]?.extensions?.[0]?.statistics` (—Å—Ç—Ä–æ–∫–∞ 85)
- `installStat = statistics.find((stat: any) => stat.statisticName === "install")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `truncated = Math.floor((num / 1000) * 10) / 10` (—Å—Ç—Ä–æ–∫–∞ 109)

#### üìÑ index.ts

#### üìÑ format-tokens.ts

#### üìÑ format-score.ts

#### üìÑ format-duration.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `seconds = Math.floor(durationMs / 1000)` (—Å—Ç—Ä–æ–∫–∞ 2)
- `hours = Math.floor(seconds / 3600)` (—Å—Ç—Ä–æ–∫–∞ 3)
- `minutes = Math.floor((seconds % 3600) / 60)` (—Å—Ç—Ä–æ–∫–∞ 4)
- `remainingSeconds = seconds % 60` (—Å—Ç—Ä–æ–∫–∞ 5)
- `parts = []` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ format-currency.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatter = new Intl.NumberFormat("en-US", {` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ constants.ts

### üìÇ apps/web-neira-coder/src/actions

#### üìÑ evals.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `languageScores = await getLanguageScores()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `runs = (await getRuns())` (—Å—Ç—Ä–æ–∫–∞ 11)
- `settings = neiraCoderSettingsSchema.parse(run.settings)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ apps/web-evals/src/lib

#### üìÑ utils.ts

#### üìÑ schemas.ts

#### üìÑ formatters.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatter = new Intl.NumberFormat("en-US", {` (—Å—Ç—Ä–æ–∫–∞ 1)
- `seconds = Math.floor(durationMs / 1000)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `hours = Math.floor(seconds / 3600)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `minutes = Math.floor((seconds % 3600) / 60)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `remainingSeconds = seconds % 60` (—Å—Ç—Ä–æ–∫–∞ 12)
- `parts = []` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ actions.ts

### üìÇ apps/web-evals/src/hooks

#### üìÑ use-run-status.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tokenUsage = useRef<Map<number, TokenUsage & { duration?: number }>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 25)
- `startTimes = useRef<Map<number, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 26)
- `url = `/api/runs/${run.id}/stream`` (—Å—Ç—Ä–æ–∫–∞ 47)
- `onMessage = useCallback((messageEvent: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = taskEventSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `startTime = startTimes.current.get(taskId)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `duration = startTime ? Date.now() - startTime : undefined` (—Å—Ç—Ä–æ–∫–∞ 79)
- `sseStatus = useEventSource({ url, onMessage })` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ use-open-router-models.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await fetch("https://openrouter.ai/api/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ use-event-source.ts

**–¢–∏–ø—ã:**

- `type UseEventSourceOptions` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sourceRef = useRef<EventSource | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `statusRef = useRef<EventSourceStatus>("waiting")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isUnmountedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `handleMessage = useCallback((event: MessageEvent) => onMessage(event), [onMessage])` (—Å—Ç—Ä–æ–∫–∞ 19)
- `cleanup = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `createEventSource = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `initialTimeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ use-copy-run.ts

### üìÇ apps/web-evals/src/actions

#### üìÑ tasks.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tasks = await _getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ runs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `EVALS_REPO_PATH = path.resolve(path.dirname(fileURLToPath(import.meta.url)), "../../../../../evals")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `run = await _createRun({` (—Å—Ç—Ä–æ–∫–∞ 26)
- `exercises = await getExercisesForLanguage(EVALS_REPO_PATH, language)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `isRunningInDocker = fs.existsSync("/.dockerenv")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `dockerArgs = [` (—Å—Ç—Ä–æ–∫–∞ 57)
- `cliCommand = `pnpm --filter @neira-coder/evals cli --runId ${run.id}`` (—Å—Ç—Ä–æ–∫–∞ 66)
- `command = isRunningInDocker` (—Å—Ç—Ä–æ–∫–∞ 68)
- `childProcess = spawn("sh", ["-c", command], {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `logStream = fs.createWriteStream("/tmp/roo-code-evals.log", { flags: "a" })` (—Å—Ç—Ä–æ–∫–∞ 79)

#### üìÑ runners.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ heartbeat.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ exercises.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `__dirname = path.dirname(fileURLToPath(import.meta.url)) // <repo>/apps/web-evals/src/actions` (—Å—Ç—Ä–æ–∫–∞ 8)
- `EVALS_REPO_PATH = path.resolve(__dirname, "../../../../../evals")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `result = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 13)
- `languagePath = path.join(EVALS_REPO_PATH, language)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `exercises = await listDirectories(__dirname, languagePath)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ apps/vscode-e2e/src/types

#### üìÑ global.d.ts

### üìÇ apps/vscode-e2e/src/suite

#### üìÑ utils.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async check()` (—Å—Ç—Ä–æ–∫–∞ 16)

**–¢–∏–ø—ã:**

- `type WaitForOptions` (—Å—Ç—Ä–æ–∫–∞ 3)
- `type WaitUntilAbortedOptions` (—Å—Ç—Ä–æ–∫–∞ 42)
- `type WaitUntilCompletedOptions` (—Å—Ç—Ä–æ–∫–∞ 53)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `check = async () => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = condition()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isSatisfied = result instanceof Promise ? await result : result` (—Å—Ç—Ä–æ–∫–∞ 18)
- `set = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `set = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ test-utils.ts

#### üìÑ task.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 12)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ subtasks.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 9)
- `childPrompt = "You are a calculator. Respond only with numbers. What is the square root of 9?"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `parentTaskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `anotherTaskId = await api.startNewTask({ text: childPrompt })` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ modes.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `switchModesTaskId = await globalThis.api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ markdown-lists.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 12)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 30)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 41)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 49)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 59)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 67)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 78)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 86)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 104)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 115)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 148)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extension = vscode.extensions.getExtension<NeiraCoderAPI>("NeiraCoderInc.neira")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `api = extension.isActive ? extension.exports : await extension.activate()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mocha = new Mocha(mochaOptions)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `cwd = path.resolve(__dirname, "..")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `specificFile = process.env.TEST_FILE.endsWith(".js")` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ extension.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `expectedCommands = [` (—Å—Ç—Ä–æ–∫–∞ 10)
- `commands = new Set((await vscode.commands.getCommands(true)).filter((cmd) => cmd.startsWith("roo-cline")))` (—Å—Ç—Ä–æ–∫–∞ 41)

### üìÇ webview-ui/src/components/ui/hooks

#### üìÑ useSelectedModel.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = apiConfiguration?.apiProvider || "anthropic"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `openRouterModelId = provider === "openrouter" ? apiConfiguration?.openRouterModelId : undefined` (—Å—Ç—Ä–æ–∫–∞ 53)
- `lmStudioModelId = provider === "lmstudio" ? apiConfiguration?.lmStudioModelId : undefined` (—Å—Ç—Ä–æ–∫–∞ 54)
- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `openRouterModelProviders = useOpenRouterModelProviders(openRouterModelId)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `lmStudioModels = useLmStudioModels(lmStudioModelId)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `id = apiConfiguration.openRouterModelId ?? openRouterDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 107)
- `specificProvider = apiConfiguration.openRouterSpecificProvider` (—Å—Ç—Ä–æ–∫–∞ 109)
- `id = apiConfiguration.requestyModelId ?? requestyDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 123)
- `info = routerModels.requesty[id]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `id = apiConfiguration.glamaModelId ?? glamaDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 128)
- `info = routerModels.glama[id]` (—Å—Ç—Ä–æ–∫–∞ 129)
- `id = apiConfiguration.unboundModelId ?? unboundDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 133)
- `info = routerModels.unbound[id]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `id = apiConfiguration.litellmModelId ?? litellmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 138)
- `info = routerModels.litellm[id]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `id = apiConfiguration.apiModelId ?? xaiDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 143)
- `info = xaiModels[id as keyof typeof xaiModels]` (—Å—Ç—Ä–æ–∫–∞ 144)
- `id = apiConfiguration.apiModelId ?? groqDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 148)
- `info = groqModels[id as keyof typeof groqModels]` (—Å—Ç—Ä–æ–∫–∞ 149)
- `id = apiConfiguration.huggingFaceModelId ?? "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 153)
- `info = {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `id = apiConfiguration.apiModelId ?? chutesDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 163)
- `info = chutesModels[id as keyof typeof chutesModels]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `id = apiConfiguration.apiModelId ?? bedrockDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 168)
- `info = bedrockModels[id as keyof typeof bedrockModels]` (—Å—Ç—Ä–æ–∫–∞ 169)
- `id = apiConfiguration.apiModelId ?? vertexDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 182)
- `info = vertexModels[id as keyof typeof vertexModels]` (—Å—Ç—Ä–æ–∫–∞ 183)
- `id = apiConfiguration.apiModelId ?? geminiDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 187)
- `info = geminiModels[id as keyof typeof geminiModels]` (—Å—Ç—Ä–æ–∫–∞ 188)
- `id = apiConfiguration.apiModelId ?? deepSeekDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 192)
- `info = deepSeekModels[id as keyof typeof deepSeekModels]` (—Å—Ç—Ä–æ–∫–∞ 193)
- `id = apiConfiguration.apiModelId ?? doubaoDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 197)
- `info = doubaoModels[id as keyof typeof doubaoModels]` (—Å—Ç—Ä–æ–∫–∞ 198)
- `id = apiConfiguration.apiModelId ?? moonshotDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 202)
- `info = moonshotModels[id as keyof typeof moonshotModels]` (—Å—Ç—Ä–æ–∫–∞ 203)
- `id = apiConfiguration.apiModelId ?? openAiNativeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 207)
- `info = openAiNativeModels[id as keyof typeof openAiNativeModels]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `id = apiConfiguration.apiModelId ?? mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 212)
- `info = mistralModels[id as keyof typeof mistralModels]` (—Å—Ç—Ä–æ–∫–∞ 213)
- `id = apiConfiguration.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 217)
- `info = apiConfiguration?.openAiCustomModelInfo ?? openAiModelInfoSaneDefaults` (—Å—Ç—Ä–æ–∫–∞ 218)
- `id = apiConfiguration.ollamaModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 222)
- `info = routerModels.ollama && routerModels.ollama[id]` (—Å—Ç—Ä–æ–∫–∞ 223)
- `id = apiConfiguration.lmStudioModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 230)
- `info = lmStudioModels && lmStudioModels[apiConfiguration.lmStudioModelId!]` (—Å—Ç—Ä–æ–∫–∞ 231)
- `id = apiConfiguration?.vsCodeLmModelSelector` (—Å—Ç—Ä–æ–∫–∞ 238)
- `modelFamily = apiConfiguration?.vsCodeLmModelSelector?.family ?? vscodeLlmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 241)
- `info = vscodeLlmModels[modelFamily as keyof typeof vscodeLlmModels]` (—Å—Ç—Ä–æ–∫–∞ 242)
- `id = apiConfiguration.apiModelId ?? claudeCodeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 247)
- `info = claudeCodeModels[id as keyof typeof claudeCodeModels]` (—Å—Ç—Ä–æ–∫–∞ 248)
- `id = apiConfiguration.apiModelId ?? cerebrasDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 252)
- `info = cerebrasModels[id as keyof typeof cerebrasModels]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `id = apiConfiguration.apiModelId ?? sambaNovaDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 257)
- `info = sambaNovaModels[id as keyof typeof sambaNovaModels]` (—Å—Ç—Ä–æ–∫–∞ 258)
- `id = apiConfiguration.apiModelId ?? anthropicDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 266)
- `info = anthropicModels[id as keyof typeof anthropicModels]` (—Å—Ç—Ä–æ–∫–∞ 267)

#### üìÑ useRouterModels.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getRouterModels = async () =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useRooPortal.ts

#### üìÑ useRequestyKeyInfo.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getRequestyKeyInfo()` (—Å—Ç—Ä–æ–∫–∞ 17)

**–¢–∏–ø—ã:**

- `type UseRequestyKeyInfoOptions` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestyKeyInfoSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 5)
- `response = await axios.get("https://api.requesty.ai/x/apikey", {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `result = requestyKeyInfoSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ useOpenRouterModelProviders.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getOpenRouterProvidersForModel(modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–¢–∏–ø—ã:**

- `type OpenRouterModelProvider` (—Å—Ç—Ä–æ–∫–∞ 38)
- `type UseOpenRouterModelProvidersOptions` (—Å—Ç—Ä–æ–∫–∞ 110)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterEndpointsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 11)
- `response = await axios.get(`https://openrouter.ai/api/v1/models/${modelId}/endpoints`)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = openRouterEndpointsSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `providerName = endpoint.name.split("|")[0].trim()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `inputPrice = parseApiPrice(endpoint.pricing?.prompt)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `outputPrice = parseApiPrice(endpoint.pricing?.completion)` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ useOpenRouterKeyInfo.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getOpenRouterKeyInfo()` (—Å—Ç—Ä–æ–∫–∞ 22)

**–¢–∏–ø—ã:**

- `type UseOpenRouterKeyInfoOptions` (—Å—Ç—Ä–æ–∫–∞ 50)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterKeyInfoSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 6)
- `apiBaseUrl = baseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 27)
- `keyEndpoint = `${apiBaseUrl}/key`` (—Å—Ç—Ä–æ–∫–∞ 29)
- `response = await axios.get(keyEndpoint, {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = openRouterKeyInfoSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 37)

#### üìÑ useNonInteractiveClick.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleContentClick(e: M)` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleContentClick = (e: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `target = e.target as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ useLmStudioModels.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getLmStudioModels()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getLmStudioModels = async () =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useClipboard.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `copy(value: s)` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `copy = (value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ index.ts

### üìÇ webview-ui/src/components/settings/utils

#### üìÑ organizationFilters.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerConfig = organizationAllowList.providers[provider.value]` (—Å—Ç—Ä–æ–∫–∞ 12)
- `providerConfig = organizationAllowList.providers[providerId]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `allowedModels = providerConfig.models || []` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ headers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `trimmedKey = key.trim()` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ webview-ui/src/components/settings/providers

#### üìÑ index.ts

#### üìÑ XAI.tsx

**–¢–∏–ø—ã:**

- `type XAIProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Vertex.tsx

**–¢–∏–ø—ã:**

- `type VertexProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ VSCodeLM.tsx

**–¢–∏–ø—ã:**

- `type VSCodeLMProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 24)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `newModels = message.vsCodeLmModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ Unbound.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 87)

**–¢–∏–ø—ã:**

- `type UnboundProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = useQueryClient()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `didRefetchTimerRef = useRef<NodeJS.Timeout>()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `invalidKeyTimerRef = useRef<NodeJS.Timeout>()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 41)
- `saveConfiguration = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `waitForStateUpdate = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 66)
- `requestModels = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modelsPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 88)
- `updatedModels = queryClient.getQueryData<{ unbound: RouterModels }>(["routerModels"])?.unbound` (—Å—Ç—Ä–æ–∫–∞ 105)
- `currentModelId = apiConfiguration?.unboundModelId` (—Å—Ç—Ä–æ–∫–∞ 107)
- `modelExists = currentModelId && Object.prototype.hasOwnProperty.call(updatedModels, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `firstAvailableModelId = Object.keys(updatedModels)[0]` (—Å—Ç—Ä–æ–∫–∞ 111)
- `handleRefresh = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `requestModelsResult = await requestModels()` (—Å—Ç—Ä–æ–∫–∞ 125)

#### üìÑ SambaNova.tsx

**–¢–∏–ø—ã:**

- `type SambaNovaProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ RequestyBalanceDisplay.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `balance = parseFloat(keyInfo.org_balance)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `formattedBalance = balance.toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ Requesty.tsx

**–¢–∏–ø—ã:**

- `type RequestyProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ OpenRouterBalanceDisplay.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formattedBalance = (keyInfo.limit - keyInfo.usage).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ OpenRouter.tsx

**–¢–∏–ø—ã:**

- `type OpenRouterProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ OpenAICompatible.tsx

**–¢–∏–ø—ã:**

- `type OpenAICompatibleProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `headers = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleAddCustomHeader = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `handleUpdateHeaderKey = useCallback((index: number, newKey: string) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `updated = [...prev]` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handleUpdateHeaderValue = useCallback((index: number, newValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 69)
- `updated = [...prev]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleRemoveCustomHeader = useCallback((index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `headerObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 97)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `updatedModels = message.openAiModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 113)
- `value = apiConfiguration?.openAiCustomModelInfo?.maxTokens` (—Å—Ç—Ä–æ–∫–∞ 300)
- `value = parseInt((e.target as HTMLInputElement).value)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `value = apiConfiguration?.openAiCustomModelInfo?.contextWindow` (—Å—Ç—Ä–æ–∫–∞ 338)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 348)
- `parsed = parseInt(value)` (—Å—Ç—Ä–æ–∫–∞ 349)
- `value = apiConfiguration?.openAiCustomModelInfo?.inputPrice` (—Å—Ç—Ä–æ–∫–∞ 454)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 464)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 465)
- `value = apiConfiguration?.openAiCustomModelInfo?.outputPrice` (—Å—Ç—Ä–æ–∫–∞ 498)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 508)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 509)
- `value = apiConfiguration?.openAiCustomModelInfo?.cacheReadsPrice` (—Å—Ç—Ä–æ–∫–∞ 540)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 552)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 553)
- `value = apiConfiguration?.openAiCustomModelInfo?.cacheWritesPrice` (—Å—Ç—Ä–æ–∫–∞ 582)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 594)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 595)

#### üìÑ OpenAI.tsx

**–¢–∏–ø—ã:**

- `type OpenAIProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 24)

#### üìÑ Ollama.tsx

**–¢–∏–ø—ã:**

- `type OllamaProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 26)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `newModels = message.ollamaModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 43)
- `modelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `selectedModel = apiConfiguration?.ollamaModelId` (—Å—Ç—Ä–æ–∫–∞ 60)
- `availableModels = Object.keys(routerModels.data.ollama)` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ Moonshot.tsx

**–¢–∏–ø—ã:**

- `type MoonshotProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ Mistral.tsx

**–¢–∏–ø—ã:**

- `type MistralProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ LiteLLM.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 37)

**–¢–∏–ø—ã:**

- `type LiteLLMProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `litellmErrorJustReceived = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleMessage = (event: MessageEvent<ExtensionMessage>) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 38)
- `providerName = message.values?.provider as RouterName` (—Å—Ç—Ä–æ–∫–∞ 40)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handleRefreshModels = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `key = apiConfiguration.litellmApiKey` (—Å—Ç—Ä–æ–∫–∞ 80)
- `url = apiConfiguration.litellmBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 81)
- `selectedModelId = apiConfiguration.litellmModelId || litellmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 157)
- `selectedModel = routerModels?.litellm?.[selectedModelId]` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ LMStudio.tsx

**–¢–∏–ø—ã:**

- `type LMStudioProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 28)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `newModels = message.lmStudioModels ?? {}` (—Å—Ç—Ä–æ–∫–∞ 45)
- `modelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `selectedModel = apiConfiguration?.lmStudioModelId` (—Å—Ç—Ä–æ–∫–∞ 62)
- `availableModels = Object.keys(routerModels.data.lmstudio)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `draftModelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `draftModel = apiConfiguration?.lmStudioDraftModelId` (—Å—Ç—Ä–æ–∫–∞ 83)
- `availableModels = Object.keys(routerModels.data.lmstudio)` (—Å—Ç—Ä–æ–∫–∞ 93)

#### üìÑ HuggingFace.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleModelSelect(modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `handleProviderSelect(provider: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `formatProviderName(provider: s)` (—Å—Ç—Ä–æ–∫–∞ 122)

**–¢–∏–ø—ã:**

- `type HuggingFaceModel` (—Å—Ç—Ä–æ–∫–∞ 17)
- `type HuggingFaceProps` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `currentModel = models.find((m) => m.id === apiConfiguration?.huggingFaceModelId)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `availableProviders = useMemo(() => currentModel?.providers || [], [currentModel?.providers])` (—Å—Ç—Ä–æ–∫–∞ 81)
- `savedProvider = apiConfiguration?.huggingFaceInferenceProvider` (—Å—Ç—Ä–æ–∫–∞ 86)
- `currentProvider = availableProviders.find((p) => p.provider === selectedProvider)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `defaultProvider = "auto"` (—Å—Ç—Ä–æ–∫–∞ 94)
- `handleModelSelect = (modelId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `defaultProvider = "auto"` (—Å—Ç—Ä–æ–∫–∞ 111)
- `handleProviderSelect = (provider: string) => {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `formatProviderName = (provider: string) => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `currentProvider = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 138)
- `modelCapabilities = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `supportsImages = false` (—Å—Ç—Ä–æ–∫–∞ 149)
- `supportsTools = currentProvider?.supports_tools || currentModel.providers.some((p) => p.supports_tools)` (—Å—Ç—Ä–æ–∫–∞ 154)

#### üìÑ Groq.tsx

**–¢–∏–ø—ã:**

- `type GroqProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Glama.tsx

**–¢–∏–ø—ã:**

- `type GlamaProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ Gemini.tsx

**–¢–∏–ø—ã:**

- `type GeminiProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ Doubao.tsx

**–¢–∏–ø—ã:**

- `type DoubaoProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ DeepSeek.tsx

**–¢–∏–ø—ã:**

- `type DeepSeekProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ ClaudeCode.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleInputChange(e: E)` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ClaudeCodeProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = (e: Event | React.FormEvent<HTMLElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `element = e.target as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 16)
- `maxOutputTokens = apiConfiguration?.claudeCodeMaxOutputTokens || 8000` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ Chutes.tsx

**–¢–∏–ø—ã:**

- `type ChutesProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Cerebras.tsx

**–¢–∏–ø—ã:**

- `type CerebrasProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ BedrockCustomArn.tsx

**–¢–∏–ø—ã:**

- `type BedrockCustomArnProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validation = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ Bedrock.tsx

**–¢–∏–ø—ã:**

- `type BedrockProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ Anthropic.tsx

**–¢–∏–ø—ã:**

- `type AnthropicProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 22)

### üìÇ webview-ui/src/components/marketplace/__tests__

#### üìÑ MarketplaceViewStateManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 114)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `notifiedState = mockStateChangeHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `message1 = {` (—Å—Ç—Ä–æ–∫–∞ 150)
- `message2 = {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `finalState = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 264)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 272)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 284)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 305)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 325)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 356)
- `state1 = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 365)
- `state2 = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 374)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `newState = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 392)

#### üìÑ MarketplaceView.spec.tsx

#### üìÑ MarketplaceListView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithProviders()` (—Å—Ç—Ä–æ–∫–∞ 51)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTransition = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `renderWithProviders = (props = {}) =>` (—Å—Ç—Ä–æ–∫–∞ 51)
- `searchInput = screen.getByPlaceholderText("marketplace:filters.search.placeholder")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `searchInput = screen.getByPlaceholderText("marketplace:filters.search.placeholder")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 116)
- `clearButton = screen.getByText("marketplace:filters.tags.clear")` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ webview-ui/src/components/chat/hooks

#### üìÑ usePromptHistory.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UsePromptHistoryProps` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_PROMPT_HISTORY_SIZE = 100` (—Å—Ç—Ä–æ–∫–∞ 35)
- `filteredPromptHistory = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `conversationPrompts = clineMessages` (—Å—Ç—Ä–æ–∫–∞ 45)
- `resetOnInputChange = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `setCursorPosition = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 89)
- `len = length ?? textarea.value.length` (—Å—Ç—Ä–æ–∫–∞ 95)
- `navigateToHistory = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `historicalPrompt = promptHistory[newIndex]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `returnToCurrentInput = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleHistoryNavigation = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 132)
- `textarea = event.currentTarget` (—Å—Ç—Ä–æ–∫–∞ 136)
- `hasSelection = selectionStart !== selectionEnd` (—Å—Ç—Ä–æ–∫–∞ 138)
- `isAtBeginning = selectionStart === 0 && selectionEnd === 0` (—Å—Ç—Ä–æ–∫–∞ 139)
- `isAtEnd = selectionStart === value.length && selectionEnd === value.length` (—Å—Ç—Ä–æ–∫–∞ 140)
- `resetHistoryNavigation = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 173)

### üìÇ webview-ui/src/components/chat/checkpoints

#### üìÑ schema.ts

#### üìÑ CheckpointSaved.tsx

**–¢–∏–ø—ã:**

- `type CheckpointSavedProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isCurrent = props.currentHash === props.commitHash` (—Å—Ç—Ä–æ–∫–∞ 16)
- `metadata = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = checkpointSchema.safeParse(checkpoint)` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ CheckpointMenu.tsx

**–¢–∏–ø—ã:**

- `type CheckpointMenuProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `isCurrent = currentHash === commitHash` (—Å—Ç—Ä–æ–∫–∞ 24)
- `isFirst = checkpoint.isFirst` (—Å—Ç—Ä–æ–∫–∞ 25)
- `isDiffAvailable = !isFirst` (—Å—Ç—Ä–æ–∫–∞ 26)
- `isRestoreAvailable = !isFirst || !isCurrent` (—Å—Ç—Ä–æ–∫–∞ 27)
- `previousCommitHash = checkpoint?.from` (—Å—Ç—Ä–æ–∫–∞ 29)
- `onCheckpointDiff = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `onPreview = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `onRestore = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 43)

### üìÇ src/services/tree-sitter/__tests__/fixtures

#### üìÑ sample-zig.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `std = @import("std")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `point = Point.init(3.0, 4.0)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `dist = point.distance()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `Direction = enum {` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ sample-vue.ts

#### üìÑ sample-typescript.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestTypedClassDefinition implements TestInterfaceDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 90)

- `class TestTypedDecoratedClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 190)
  - `param1: string,`
  - `param2: number`

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TestInterfaceDefinition` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface TestGenericInterfaceDefinition` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface TestJsxPropsDefinition` (—Å—Ç—Ä–æ–∫–∞ 150)

**–¢–∏–ø—ã:**

- `type TestTypeDefinition` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = param1.repeat(param2)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `response = await fetch(url, options)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `testTypedJsxElementDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 156)
- `original = descriptor.value` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ sample-toml.ts

#### üìÑ sample-tlaplus.ts

#### üìÑ sample-systemrdl.ts

#### üìÑ sample-solidity.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ITestInterface` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ sample-scala.ts

**–ö–ª–∞—Å—Å—ã:**

- `class Container (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 8)

- `class PatternMatcher (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 46)

- `class ForComprehension (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ sample-rust.ts

**–¢–∏–ø—ã:**

- `type test_type_alias` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ sample-ocaml.ts

**–ö–ª–∞—Å—Å—ã:**

- `class virtual (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Standard Class)` (—Å—Ç—Ä–æ–∫–∞ 52)

**–¢–∏–ø—ã:**

- `type t` (—Å—Ç—Ä–æ–∫–∞ 9)
- `type shape` (—Å—Ç—Ä–æ–∫–∞ 26)
- `type person` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ sample-lua.ts

#### üìÑ sample-json.ts

#### üìÑ sample-javascript.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 50)

- `class TestDecoratedClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 140)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = param1 + param2` (—Å—Ç—Ä–æ–∫–∞ 13)
- `response = await fetch(url, options)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `testArrowFunctionDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 40)
- `result = callback(param1)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `testObjectLiteralDefinition = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `testJsxElementDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = param1 + param2` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ sample-java.ts

#### üìÑ sample-html.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `testFunction()` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ sample-go.ts

#### üìÑ sample-embedded_template.ts

#### üìÑ sample-elixir.ts

#### üìÑ sample-elisp.ts

#### üìÑ sample-css.ts

#### üìÑ sample-c.ts

#### üìÑ sample-c-sharp.ts

### üìÇ src/services/code-index/vector-store/__tests__

#### üìÑ qdrant-client.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockQdrantClientInstance = {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `mockCreateHashInstance = {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockWorkspacePath = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `mockQdrantUrl = "http://mock-qdrant:6333"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `mockApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `mockVectorSize = 1536` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockHashedPath = "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6" // Needs to be long enough` (—Å—Ç—Ä–æ–∫–∞ 50)
- `expectedCollectionName = `ws-${mockHashedPath.substring(0, 16)}`` (—Å—Ç—Ä–æ–∫–∞ 51)
- `vectorStoreWithDefaults = new QdrantVectorStore(mockWorkspacePath, undefined as any, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `vectorStoreWithoutKey = new QdrantVectorStore(mockWorkspacePath, mockQdrantUrl, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 119)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "https://example.com:9000", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 153)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://example.com", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://localhost:8080", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 204)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "qdrant.example.com", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "localhost:6333", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://localhost:9000", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "192.168.1.100", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 269)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "192.168.1.100:6333", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 283)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, undefined as any, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 313)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "   ", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "invalid-url-format", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `vectorStoreWithPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 360)
- `vectorStoreWithoutPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 379)
- `vectorStoreWithHttpsPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 398)
- `vectorStoreWithTrailingSlash = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 417)
- `vectorStoreWithMultipleTrailingSlashes = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 436)
- `vectorStoreWithMultiSegment = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 455)
- `complexUrl = "https://example.com/ollama/api/v1///?key=value#pos"` (—Å—Ç—Ä–æ–∫–∞ 474)
- `vectorStoreComplex = new QdrantVectorStore(mockWorkspacePath, complexUrl, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `vectorStoreWithQueryParams = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 490)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 521)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 557)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 575)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 597)
- `genericError = new Error("Generic Qdrant Error")` (—Å—Ç—Ä–æ–∫–∞ 623)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 627)
- `createError = new Error("Create Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 645)
- `indexError = new Error("Index creation failed")` (—Å—Ç—Ä–æ–∫–∞ 670)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 674)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 696)
- `deleteError = new Error("Delete Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 707)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 736)
- `createError = new Error("Create Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 755)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 784)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 806)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 818)
- `oldVectorSize = 2048` (—Å—Ç—Ä–æ–∫–∞ 866)
- `newVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 867)
- `newVectorStore = new QdrantVectorStore(mockWorkspacePath, mockQdrantUrl, newVectorSize, mockApiKey)` (—Å—Ç—Ä–æ–∫–∞ 870)
- `result = await newVectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 893)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 909)
- `deleteError = new Error("Qdrant server unavailable")` (—Å—Ç—Ä–æ–∫–∞ 921)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 951)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 964)
- `genericError = new Error("Network error")` (—Å—Ç—Ä–æ–∫–∞ 972)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 976)
- `deleteError = new Error("Deletion failed")` (—Å—Ç—Ä–æ–∫–∞ 1011)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1029)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1095)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1139)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1181)
- `upsertError = new Error("Upsert failed")` (—Å—Ç—Ä–æ–∫–∞ 1194)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1208)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1209)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1238)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1259)
- `directoryPrefix = "src/components"` (—Å—Ç—Ä–æ–∫–∞ 1260)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `results = await vectorStore.search(queryVector, directoryPrefix)` (—Å—Ç—Ä–æ–∫–∞ 1279)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1310)
- `customMinScore = 0.8` (—Å—Ç—Ä–æ–∫–∞ 1311)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1312)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1334)
- `customMaxResults = 100` (—Å—Ç—Ä–æ–∫–∞ 1335)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1336)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1358)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1359)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1394)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1403)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1404)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1441)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1450)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1451)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1455)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1462)
- `directoryPrefix = "src/components/ui/forms"` (—Å—Ç—Ä–æ–∫–∞ 1463)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1464)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1505)
- `queryError = new Error("Query failed")` (—Å—Ç—Ä–æ–∫–∞ 1506)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1518)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1519)
- `callArgs = mockQdrantClientInstance.query.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1525)

### üìÇ src/services/code-index/shared/__tests__

#### üìÑ validation-helpers.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "Error reading file /Users/username/projects/myapp/src/index.ts"` (—Å—Ç—Ä–æ–∫–∞ 6)
- `expected = "Error reading file [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `input = "Cannot access C:\\Users\\username\\Documents\\project\\file.js"` (—Å—Ç—Ä–æ–∫–∞ 12)
- `expected = "Cannot access [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `input = "File not found: ./src/components/Button.tsx"` (—Å—Ç—Ä–æ–∫–∞ 18)
- `expected = "File not found: [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `input2 = "Cannot read ../config/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `expected2 = "Cannot read [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `input = "Failed to connect to http://localhost:11434/api/embed"` (—Å—Ç—Ä–æ–∫–∞ 28)
- `expected = "Failed to connect to [REDACTED_URL]"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input2 = "Error fetching https://api.example.com:8080/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `expected2 = "Error fetching [REDACTED_URL]"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `input = "Connection refused at 192.168.1.100"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `expected = "Connection refused at [REDACTED_IP]"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `input = "Server running on :8080 failed"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `expected = "Server running on :[REDACTED_PORT] failed"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `input = "User john.doe@example.com not found"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `expected = "User [REDACTED_EMAIL] not found"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `input = 'Cannot open file "/home/user/documents/secret.txt"'` (—Å—Ç—Ä–æ–∫–∞ 56)
- `expected = 'Cannot open file "[REDACTED_PATH]"'` (—Å—Ç—Ä–æ–∫–∞ 57)
- `input = "Failed to fetch http://localhost:11434 from /Users/john/project at 192.168.1.1:3000"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `expected = "Failed to fetch [REDACTED_URL] from [REDACTED_PATH] at [REDACTED_IP]:[REDACTED_PORT]"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `input = "Invalid JSON format"` (—Å—Ç—Ä–æ–∫–∞ 75)
- `input2 = "Connection timeout"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `input = 'Error in "/path/to/file with spaces.txt"'` (—Å—Ç—Ä–æ–∫–∞ 83)
- `expected = 'Error in "[REDACTED_PATH]"'` (—Å—Ç—Ä–æ–∫–∞ 84)
- `input = "Copy from /src/file1.js to /dest/file2.js failed"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `expected = "Copy from [REDACTED_PATH] to [REDACTED_PATH] failed"` (—Å—Ç—Ä–æ–∫–∞ 90)

#### üìÑ get-relative-path.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePath = "src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `filePath = path.join(path.sep, "absolute", "path", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `filePath = "./src/../src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 34)
- `absolutePath = path.join(workspaceRoot, "src", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `absolutePath = path.join(path.sep, "outside", "workspace", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `absolutePath = workspaceRoot` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `workspaceRoot = path.join(path.sep, "Users", "test", "project")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `absolutePath = path.join(path.sep, "Users", "test", "admin", ".prettierrc.json")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 59)

### üìÇ src/services/code-index/processors/__tests__

#### üìÑ scanner.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `largeFileStats = {` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await scanner.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `scannerNoEmbeddings = new DirectoryScanner(` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await scannerNoEmbeddings.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `scannerNoEmbeddings = new DirectoryScanner(` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = await scannerNoEmbeddings.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 326)
- `upsertCall = mockVectorStore.upsertPoints.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 382)
- `points = upsertCall[0]` (—Å—Ç—Ä–æ–∫–∞ 383)
- `pointIds = points.map((point: any) => point.id)` (—Å—Ç—Ä–æ–∫–∞ 386)

#### üìÑ file-watcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 153)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 191)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 222)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 258)

### üìÇ src/services/code-index/embedders/__tests__

#### üìÑ openai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `consoleMocks = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `embedderWithoutKey = new OpenAiEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `embedderWithDefaultModel = new OpenAiEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `testTexts = ["Hello world", "Another text"]` (—Å—Ç—Ä–æ–∫–∞ 115)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 138)
- `customModel = "text-embedding-ada-002"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `testTexts = ["text1", "text2", "text3"]` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 4 + 100)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `normalText = "normal text"` (—Å—Ç—Ä–æ–∫–∞ 193)
- `testTexts = [normalText, oversizedText, "another normal"]` (—Å—Ç—Ä–æ–∫–∞ 194)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `tokensPerText = 8000` (—Å—Ç—Ä–æ–∫–∞ 218)
- `largeText = "a".repeat(tokensPerText * 4) // 4 chars ‚âà 1 token` (—Å—Ç—Ä–æ–∫–∞ 219)
- `testTexts = Array(15).fill(largeText)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 4 + 100)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `testTexts = [oversizedText, oversizedText]` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 277)
- `rateLimitError = { status: 429, message: "Rate limit exceeded" }` (—Å—Ç—Ä–æ–∫–∞ 278)
- `resultPromise = embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 294)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 305)
- `authError = new Error("Unauthorized")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 320)
- `serverError = new Error("Internal server error")` (—Å—Ç—Ä–æ–∫–∞ 321)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `apiError = new Error("API connection failed")` (—Å—Ç—Ä–æ–∫–∞ 340)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 367)
- `malformedResponse = {` (—Å—Ç—Ä–æ–∫–∞ 368)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 379)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 380)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 391)
- `httpError = new Error("Bad request")` (—Å—Ç—Ä–æ–∫–∞ 392)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `networkError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 414)
- `weirdError = { toString: () => "Custom error object" }` (—Å—Ç—Ä–æ–∫–∞ 415)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 425)
- `unknownError = null` (—Å—Ç—Ä–æ–∫–∞ 426)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 436)
- `stringError = "Something went wrong"` (—Å—Ç—Ä–æ–∫–∞ 437)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 447)
- `errorWithFailingToString = {` (—Å—Ç—Ä–æ–∫–∞ 451)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 465)
- `errorWithResponseStatus = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 482)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 488)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 499)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 503)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 510)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 514)
- `connectionError = new Error("ECONNREFUSED")` (—Å—Ç—Ä–æ–∫–∞ 521)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 524)
- `genericError = new Error("Unknown error")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 535)

#### üìÑ openai-compatible.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockResponse(data: a)` (—Å—Ç—Ä–æ–∫–∞ 656)
- `createBase64Embedding(values: n)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `expectEmbeddingValues(actual: n, expected: n)` (—Å—Ç—Ä–æ–∫–∞ 670)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAI = OpenAI as MockedClass<typeof OpenAI>` (—Å—Ç—Ä–æ–∫–∞ 38)
- `testBaseUrl = "https://api.example.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `testApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `tempEmbedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 125)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 160)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 161)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `customModel = "custom-embedding-model"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 202)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 222)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 225)
- `buffer = Buffer.from(testEmbedding.buffer)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `base64String = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 229)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `embedding1 = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 256)
- `embedding2 = new Float32Array([1.0, 1.25, 1.5])` (—Å—Ç—Ä–æ–∫–∞ 257)
- `base64String1 = Buffer.from(embedding1.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 260)
- `base64String2 = Buffer.from(embedding2.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 269)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 281)
- `embedding1 = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 284)
- `base64String1 = Buffer.from(embedding1.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 285)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `testTexts = ["text1", "text2", "text3"]` (—Å—Ç—Ä–æ–∫–∞ 314)
- `normalText = "Hello world"` (—Å—Ç—Ä–æ–∫–∞ 332)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 5) // Exceeds MAX_ITEM_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 333)
- `testTexts = [normalText, oversizedText, normalText]` (—Å—Ç—Ä–æ–∫–∞ 334)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 336)
- `testTexts = ["text1", "text2"]` (—Å—Ç—Ä–æ–∫–∞ 352)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 381)
- `rateLimitError = { status: 429, message: "Rate limit exceeded" }` (—Å—Ç—Ä–æ–∫–∞ 382)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 385)
- `base64String = Buffer.from(testEmbedding.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 386)
- `resultPromise = embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 396)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 410)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 421)
- `authError = new Error("Unauthorized")` (—Å—Ç—Ä–æ–∫–∞ 422)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 436)
- `serverError = new Error("Internal server error")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 455)
- `apiError = new Error("API connection failed")` (—Å—Ç—Ä–æ–∫–∞ 456)
- `testTexts = ["text1", "text2"]` (—Å—Ç—Ä–æ–∫–∞ 471)
- `batchError = new Error("Batch processing failed")` (—Å—Ç—Ä–æ–∫–∞ 472)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 499)
- `malformedResponse = {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 511)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 512)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 523)
- `httpError = new Error("Bad request")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 535)
- `networkError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 536)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 546)
- `weirdError = { toString: () => "Custom error object" }` (—Å—Ç—Ä–æ–∫–∞ 547)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 557)
- `unknownError = null` (—Å—Ç—Ä–æ–∫–∞ 558)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 576)
- `realOpenAI = new ((await vi.importActual("openai")) as any).OpenAI({` (—Å—Ç—Ä–æ–∫–∞ 579)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 585)
- `buffer = Buffer.from(testEmbedding.buffer)` (—Å—Ç—Ä–æ–∫–∞ 586)
- `base64String = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 587)
- `mockApiResponse = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `mockMethodRequest = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 607)
- `mockAPIPromise = {` (—Å—Ç—Ä–æ–∫–∞ 608)
- `response = await realOpenAI.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 623)
- `returnedBuffer = Buffer.from(response.data[0].embedding as string, "base64")` (—Å—Ç—Ä–æ–∫–∞ 635)
- `returnedFloat32Array = new Float32Array(` (—Å—Ç—Ä–æ–∫–∞ 636)
- `returnedArray = Array.from(returnedFloat32Array)` (—Å—Ç—Ä–æ–∫–∞ 641)
- `baseUrl = "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 653)
- `createMockResponse = (data: any, status = 200, ok = true) => ({` (—Å—Ç—Ä–æ–∫–∞ 656)
- `createBase64Embedding = (values: number[]) => {` (—Å—Ç—Ä–æ–∫–∞ 664)
- `embedding = new Float32Array(values)` (—Å—Ç—Ä–æ–∫–∞ 665)
- `expectEmbeddingValues = (actual: number[], expected: number[]) => {` (—Å—Ç—Ä–æ–∫–∞ 670)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 691)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 692)
- `testUrls = [` (—Å—Ç—Ä–æ–∫–∞ 698)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 706)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 707)
- `testUrls = [` (—Å—Ç—Ä–æ–∫–∞ 713)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 721)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 722)
- `endpointUrls = [` (—Å—Ç—Ä–æ–∫–∞ 728)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 738)
- `testTexts = ["Test text"]` (—Å—Ç—Ä–æ–∫–∞ 746)
- `base64String = createBase64Embedding([0.1, 0.2, 0.3])` (—Å—Ç—Ä–æ–∫–∞ 747)
- `azureEmbedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 750)
- `mockFetchResponse = createMockResponse({` (—Å—Ç—Ä–æ–∫–∞ 751)
- `azureResult = await azureEmbedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 757)
- `baseEmbedder = new OpenAICompatibleEmbedder(baseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 773)
- `baseResult = await baseEmbedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 779)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 789)
- `mockResponse = createMockResponse({}, status, false)` (—Å—Ç—Ä–æ–∫–∞ 790)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 798)
- `base64String = createBase64Embedding([0.1, 0.2, 0.3])` (—Å—Ç—Ä–æ–∫–∞ 799)
- `resultPromise = embedder.createEmbeddings(["test"])` (—Å—Ç—Ä–æ–∫–∞ 811)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 825)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 835)
- `base64_1 = createBase64Embedding([0.25, 0.5])` (—Å—Ç—Ä–æ–∫–∞ 838)
- `base64_2 = createBase64Embedding([0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 839)
- `mockResponse = createMockResponse({` (—Å—Ç—Ä–æ–∫–∞ 840)
- `result = await embedder.createEmbeddings(["test1", "test2"])` (—Å—Ç—Ä–æ–∫–∞ 846)
- `networkError = new Error("Network failed")` (—Å—Ç—Ä–æ–∫–∞ 852)
- `embedder = new OpenAICompatibleEmbedder(` (—Å—Ç—Ä–æ–∫–∞ 864)
- `mockFetch = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 871)
- `embedder = new OpenAICompatibleEmbedder("https://api.example.com/v1/embed", "test-key")` (—Å—Ç—Ä–æ–∫–∞ 890)
- `mockFetch = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 892)
- `embedder = new OpenAICompatibleEmbedder("https://api.openai.com/v1", "test-key")` (—Å—Ç—Ä–æ–∫–∞ 908)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 911)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 940)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 946)
- `fullUrl = "https://api.example.com/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 958)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 971)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 989)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 993)
- `connectionError = new Error("ECONNREFUSED")` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `fullUrl = "https://api.example.com/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 1012)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 1031)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `genericError = new Error("Unknown error")` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1048)

#### üìÑ openai-compatible-rate-limit.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAI = OpenAI as MockedClass<typeof OpenAI>` (—Å—Ç—Ä–æ–∫–∞ 30)
- `testBaseUrl = "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `testApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `embedder1 = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `embedder2 = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 77)
- `batch1Promise = embedder1.createEmbeddings(["test1"])` (—Å—Ç—Ä–æ–∫–∞ 88)
- `batch2Promise = embedder2.createEmbeddings(["test2"])` (—Å—Ç—Ä–æ–∫–∞ 94)
- `state = (embedder1 as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 97)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 116)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 118)
- `promise1 = embedder.createEmbeddings(["test1"])` (—Å—Ç—Ä–æ–∫–∞ 131)
- `previousCount = state.consecutiveRateLimitErrors` (—Å—Ç—Ä–æ–∫–∞ 156)
- `promise2 = embedder.createEmbeddings(["test2"])` (—Å—Ç—Ä–æ–∫–∞ 158)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 171)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 177)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 194)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 199)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 206)
- `delay = state.rateLimitResetTime - now` (—Å—Ç—Ä–æ–∫–∞ 207)

#### üìÑ ollama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `consoleMocks = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `embedderWithDefaults = new CodeIndexOllamaEmbedder({})` (—Å—Ç—Ä–æ–∫–∞ 80)
- `embedderWithTrailingSlash = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 86)
- `embedderWithoutTrailingSlash = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 114)
- `embedderWithMultipleTrailingSlashes = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `firstCall = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 202)
- `secondCall = mockFetch.mock.calls[1]` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 303)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 312)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 321)

#### üìÑ mistral.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `apiKey = "test-mistral-api-key"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `apiKey = "test-mistral-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `modelId = "custom-embed-model"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 75)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await embedder.createEmbeddings(texts)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = await embedder.createEmbeddings(texts, "codestral-embed-2505")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `texts = ["test text"]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = new Error("Embedding failed")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 174)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `apiKey = "test-gemini-api-key"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `apiKey = "test-gemini-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `modelId = "text-embedding-004"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 75)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await embedder.createEmbeddings(texts)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = await embedder.createEmbeddings(texts, "gemini-embedding-001")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `texts = ["test text"]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = new Error("Embedding failed")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 174)

### üìÇ src/integrations/terminal/__tests__/streamUtils

#### üìÑ pwshStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapedCommand = command.replace(/'/g, "'\\''")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `escapedCommand = command.replace(/\\/g, "\\\\").replace(/"/g, '\\"')` (—Å—Ç—Ä–æ–∫–∞ 26)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ mockStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stream = {` - Base function to create a mock stream with predefined output for testing without executing real commands (—Å—Ç—Ä–æ–∫–∞ 11)
- `unixOutput = output.replace(/\r\n/g, "\n")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `windowsOutput = output.replace(/\n/g, "\r\n").replace(/\r\r\n/g, "\r\n")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `normalizedOutput = output.replace(/\r\n/g, "\n")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `stream = {` - Creates a mock stream that yields output in chunks to simulate real terminal behavior (—Å—Ç—Ä–æ–∫–∞ 73)
- `actualChunkSize = Math.min(remaining.length, chunkSize + Math.floor(Math.random() * 20) - 10)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `chunk = remaining.substring(0, actualChunkSize)` (—Å—Ç—Ä–æ–∫–∞ 88)

#### üìÑ index.ts

#### üìÑ cmdStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `shellCommand = `cmd.exe /c ${command}`` (—Å—Ç—Ä–æ–∫–∞ 17)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ bashStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `signalNum = signals[error.signal]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)

### üìÇ src/integrations/misc/__tests__/performance

#### üìÑ processCarriageReturns.benchmark.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `random()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `generateTestData(size: n, complexity: "): string` (—Å—Ç—Ä–æ–∫–∞ 25)
- `generateLongLineTestData(lineLengthKB: n, updateCount: n): string` (—Å—Ç—Ä–æ–∫–∞ 98)
- `generateHighDensityCRData(size: n): string` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getIterationCount(size: n): number` (—Å—Ç—Ä–æ–∫–∞ 157)
- `calculateStats(durations: n)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `runBaselineTest(input: s, iterations: n)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `runBenchmark()` (—Å—Ç—Ä–æ–∫–∞ 290)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SEED = 12345` (—Å—Ç—Ä–æ–∫–∞ 15)
- `x = Math.sin(seed++) * 10000` (—Å—Ç—Ä–æ–∫–∞ 20)
- `line = `Processing file ${i}: `` (—Å—Ç—Ä–æ–∫–∞ 32)
- `progress = Math.floor((p / progressUpdates) * 100)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `progressChars = Math.max(0, p)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `remainingChars = Math.max(0, 20 - p)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `bar = `${line}[${"=".repeat(progressChars)}>${"-".repeat(remainingChars)}] ${progress}%\r`` (—Å—Ç—Ä–æ–∫–∞ 56)
- `baseLength = lineLengthKB * 1024` (—Å—Ç—Ä–æ–∫–∞ 100)
- `updateLength = Math.floor(baseLength / updateCount)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `updatePosition = updateLength * i` (—Å—Ç—Ä–æ–∫–∞ 114)
- `modificationLength = Math.floor(updateLength * 0.1)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `segmentLength = 3 + Math.floor(random() * 8)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `sorted = [...durations].sort((a, b) => a - b)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `mean = durations.reduce((a, b) => a + b, 0) / durations.length` (—Å—Ç—Ä–æ–∫–∞ 170)
- `warmupResult = fn(input, ...args)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `resultSize = (warmupResult.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `reduction = (100 - (warmupResult.length / input.length) * 100).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `startTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `endTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 209)
- `stats = calculateStats(durations)` (—Å—Ç—Ä–æ–∫–∞ 223)
- `totalSizeProcessed = (input.length * iterations) / (1024 * 1024) // MB` (—Å—Ç—Ä–æ–∫–∞ 226)
- `totalBenchmarkTime = durations.reduce((a, b) => a + b, 0) / 1000 // seconds` (—Å—Ç—Ä–æ–∫–∞ 227)
- `averageThroughput = (totalSizeProcessed / totalBenchmarkTime).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 228)
- `peakThroughput = (input.length / (1024 * 1024) / (stats.min / 1000)).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 229)
- `reliableThroughput = (input.length / (1024 * 1024) / (stats.p95 / 1000)).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 231)
- `runs = 5 // Run 5 times for better variance analysis` (—Å—Ç—Ä–æ–∫–∞ 264)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 265)
- `meanTimes = results.map((r) => r.stats.mean)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `avgMean = meanTimes.reduce((a, b) => a + b, 0) / runs` (—Å—Ç—Ä–æ–∫–∞ 273)
- `maxVariation = Math.max(...meanTimes.map((t) => Math.abs(((t - avgMean) / avgMean) * 100)))` (—Å—Ç—Ä–æ–∫–∞ 274)
- `throughputs = results.map((r) => parseFloat(r.peakThroughput))` (—Å—Ç—Ä–æ–∫–∞ 276)
- `avgThroughput = throughputs.reduce((a, b) => a + b, 0) / runs` (—Å—Ç—Ä–æ–∫–∞ 277)
- `throughputVariation = Math.max(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `warmupData = generateTestData(5000, "complex")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `testData = generateTestData(size, complexity)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 339)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 340)
- `carriageReturns = (testData.match(/\r/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 345)
- `newLines = (testData.match(/\n/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 346)
- `iterations = getIterationCount(size)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `lineLimit = 500 // Standard line limit for truncation` (—Å—Ç—Ä–æ–∫–∞ 354)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 388)
- `testData = generateLongLineTestData(lineLength, updateCount)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 390)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 391)
- `iterations = Math.max(3, Math.min(10, getIterationCount(lineLength * 100)))` (—Å—Ç—Ä–æ–∫–∞ 397)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `testData = generateHighDensityCRData(size)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 416)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 417)
- `iterations = Math.max(5, Math.floor(getIterationCount(size) / 2))` (—Å—Ç—Ä–æ–∫–∞ 422)

### üìÇ src/core/prompts/tools/__tests__

#### üìÑ attempt-completion.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `args = {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `description = getAttemptCompletionDescription(args)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `description = getAttemptCompletionDescription()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `args = {` (—Å—Ç—Ä–æ–∫–∞ 42)
- `description = getAttemptCompletionDescription(args)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `description = getAttemptCompletionDescription()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `coreText = "After each tool use, the user will respond with the result of that tool use"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `importantNote = "IMPORTANT NOTE: This tool CANNOT be used until you've confirmed"` (—Å—Ç—Ä–æ–∫–∞ 63)

### üìÇ src/core/prompts/sections/__tests__

#### üìÑ tool-use-guidelines.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCodeIndexManagerEnabled = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockCodeIndexManagerDisabled = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `guidelinesEnabled = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `guidelinesDisabled = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 73)

#### üìÑ objective.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCodeIndexManagerEnabled = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockCodeIndexManagerDisabled = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `objective = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `objective = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ custom-system-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedReadFile = readFile as Mock<typeof readFile>` (—Å—Ç—Ä–æ–∫–∞ 13)
- `mockCwd = "/mock/cwd"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `expectedFilePath = path.join(mockCwd, ".roo", `system-prompt-${mockMode}`)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `expectedError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `template = "Workspace is: {{workspace}}"` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `template = "Path: {{workspace}}/{{workspace}}"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `template = "Workspace: {{workspace}}, Unused: {{unusedVar}}, Another: {{another}}"` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `template = "Workspace: {{workspace}}, Missing: {{missingPlaceholder}}"` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `template = "This is a static prompt."` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 128)

#### üìÑ custom-instructions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cleanArgs = args` (—Å—Ç—Ä–æ–∫–∞ 13)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `cleanArgs = args` (—Å—Ç—Ä–æ–∫–∞ 34)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `parts = path.split(/[/\\]/)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `readFileMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `statMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `readdirMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 55)
- `readlinkMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `lstatMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `originalCwd = process.cwd` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `error = new Error("Permission denied") as NodeJS.ErrnoException` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `expectedRulesDir = process.platform === "win32" ? "\\fake\\path\\.neira\\rules" : "/fake/path/.neira/rules"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 261)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 296)
- `expectedCacheFiles = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `expectedPath = process.platform === "win32" ? cacheFile.replace(/\//g, "\\") : cacheFile` (—Å—Ç—Ä–æ–∫–∞ 321)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 408)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 422)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 424)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 494)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 516)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 526)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 533)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 551)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 558)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 576)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 586)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 612)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 631)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 641)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 651)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 672)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 683)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 692)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 693)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 704)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 705)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 712)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 739)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 750)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 757)
- `result = await addCustomInstructions("", "", "/fake/path", "", {})` (—Å—Ç—Ä–æ–∫–∞ 784)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 794)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 812)
- `error = new Error("Permission denied") as NodeJS.ErrnoException` (—Å—Ç—Ä–æ–∫–∞ 829)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 849)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 885)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 900)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 902)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 912)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 967)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 992)
- `normalizedPath = filePath.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1025)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 1048)
- `expectedRulesDir = process.platform === "win32" ? "\\fake\\path\\.roo\\rules" : "/fake/path/.neira/rules"` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1102)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1185)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1187)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1203)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1274)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1276)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1289)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1326)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1327)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1340)
- `alphaIndex = result.indexOf("alpha content")` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `betaIndex = result.indexOf("beta content")` (—Å—Ç—Ä–æ–∫–∞ 1344)
- `zebraIndex = result.indexOf("zebra content")` (—Å—Ç—Ä–æ–∫–∞ 1345)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1420)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1421)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1434)
- `firstIndex = result.indexOf("content from zzz-last.txt") // from 01-first.link` (—Å—Ç—Ä–æ–∫–∞ 1438)
- `secondIndex = result.indexOf("content from aaa-first.txt") // from 02-second.link` (—Å—Ç—Ä–æ–∫–∞ 1439)
- `thirdIndex = result.indexOf("content from mmm-middle.txt") // from 03-third.link` (—Å—Ç—Ä–æ–∫–∞ 1440)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1468)

#### üìÑ custom-instructions-path-detection.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fakeHomeDir = "/Users/john.roo.smith"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `globalRooDir = path.join(fakeHomeDir, ".roo") // "/Users/john.roo.smith/.roo"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `projectRooDir = "/projects/my-project/.roo"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `isGlobalForGlobalDir = path.resolve(globalRooDir) === path.resolve(globalRooDir)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `isGlobalForProjectDir = path.resolve(projectRooDir) === path.resolve(globalRooDir)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `oldLogicGlobal = globalRooDir.includes(path.join(fakeHomeDir, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 28)
- `oldLogicProject = projectRooDir.includes(path.join(fakeHomeDir, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 40)
- `isGlobalForGlobal = path.resolve(global) === path.resolve(global)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `isGlobalForProject = path.resolve(project) === path.resolve(global)` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ custom-instructions-global.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/mock/project"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockHomeDir = "/mock/home"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `globalRooDir = path.join(mockHomeDir, ".roo")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `projectRooDir = path.join(mockCwd, ".roo")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `globalIndex = result.indexOf("global rule content")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `projectIndex = result.indexOf("project rule content")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `mode = "code"` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = await addCustomInstructions("", "", mockCwd, mode)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mode = "code"` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await addCustomInstructions("", "", mockCwd, mode)` (—Å—Ç—Ä–æ–∫–∞ 226)

### üìÇ src/api/transform/caching/__tests__

#### üìÑ vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `originalMessage1 = JSON.parse(JSON.stringify(messages[0]))` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `originalMessage1 = JSON.parse(JSON.stringify(messages[0]))` (—Å—Ç—Ä–æ–∫–∞ 89)
- `originalAssistant1 = JSON.parse(JSON.stringify(messages[1]))` (—Å—Ç—Ä–æ–∫–∞ 90)
- `originalAssistant2 = JSON.parse(JSON.stringify(messages[3]))` (—Å—Ç—Ä–æ–∫–∞ 91)
- `originalAssistant3 = JSON.parse(JSON.stringify(messages[5]))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `originalMessage2 = JSON.parse(JSON.stringify(messages[1]))` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `originalMessagesCopy = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 171)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 8)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 22)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 32)
- `originalContent = originalMessages[i].content` (—Å—Ç—Ä–æ–∫–∞ 41)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 51)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 73)
- `indices = []` (—Å—Ç—Ä–æ–∫–∞ 87)
- `content = messages[i].content?.[0]` (—Å—Ç—Ä–æ–∫–∞ 90)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 116)
- `nthUserMessage = messages.filter((m) => m.role === "user")[frequency - 1]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `nPlusOneUserMessage = messages.filter((m) => m.role === "user")[frequency]` (—Å—Ç—Ä–æ–∫–∞ 140)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 145)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 173)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 196)
- `frequency = 0` (—Å—Ç—Ä–æ–∫–∞ 226)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `originalContent = originalMessages[i].content` (—Å—Ç—Ä–æ–∫–∞ 245)
- `content = messages[i].content` (—Å—Ç—Ä–æ–∫–∞ 253)
- `contentParts = content` (—Å—Ç—Ä–æ–∫–∞ 257)

#### üìÑ anthropic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 8)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 25)
- `userMessages = messages.filter((m) => m.role === "user")` (—Å—Ç—Ä–æ–∫–∞ 99)

### üìÇ src/api/transform/cache-strategy/__tests__

#### üìÑ cache-strategy.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createConfig(overrides: P): CacheStrategyConfig` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createMessageWithTokens(role: ", tokenCount: n)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `hasCachePoint(block: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 34)
- `createMessage(role: ", content: s, tokenCount: n)` (—Å—Ç—Ä–æ–∫–∞ 653)
- `logPlacements(placements: a)` (—Å—Ç—Ä–æ–∫–∞ 664)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CacheConfig` (—Å—Ç—Ä–æ–∫–∞ 45)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createConfig = (overrides: Partial<CacheStrategyConfig> = {}): CacheStrategyConfig => ({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createMessageWithTokens = (role: "user" | "assistant", tokenCount: number) => ({` (—Å—Ç—Ä–æ–∫–∞ 29)
- `hasCachePoint = (block: ContentBlock | SystemContentBlock): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `convertToBedrockConverseMessagesMock = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `config = createConfig({ usePromptCache: false })` (—Å—Ç—Ä–æ–∫–∞ 71)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 78)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 88)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 104)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 137)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 148)
- `shortSystemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 157)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 159)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 171)
- `shortSystemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 180)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 182)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 240)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 247)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 278)
- `mockInvoke = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 308)
- `messages = args[0]` (—Å—Ç—Ä–æ–∫–∞ 332)
- `systemMessage = args[1]` (—Å—Ç—Ä–æ–∫–∞ 333)
- `usePromptCache = args[2]` (—Å—Ç—Ä–æ–∫–∞ 334)
- `modelInfo = args[3]` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 352)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 364)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 381)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `mockInvoke = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 452)
- `messages = args[0]` (—Å—Ç—Ä–æ–∫–∞ 476)
- `systemMessage = args[1]` (—Å—Ç—Ä–æ–∫–∞ 477)
- `usePromptCache = args[2]` (—Å—Ç—Ä–æ–∫–∞ 478)
- `modelInfo = args[3]` (—Å—Ç—Ä–æ–∫–∞ 479)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 496)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 506)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 519)
- `mockSend = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 535)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 556)
- `mockApiResponse = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 601)
- `mockSend = vitest.fn().mockImplementation(() => {` (—Å—Ç—Ä–æ–∫–∞ 607)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 619)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 620)
- `createMessage = (role: "user" | "assistant", content: string, tokenCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 653)
- `paddingNeeded = Math.max(0, tokenCount * 4 - content.length)` (—Å—Ç—Ä–æ–∫–∞ 655)
- `padding = " ".repeat(paddingNeeded)` (—Å—Ç—Ä–æ–∫–∞ 656)
- `logPlacements = (placements: any[]) => {` (—Å—Ç—Ä–æ–∫–∞ 664)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 674)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 681)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 688)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 689)
- `firstPlacement = result.messageCachePointPlacements?.[0]` (—Å—Ç—Ä–æ–∫–∞ 701)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 716)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 734)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 742)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 743)
- `secondPlacement = result.messageCachePointPlacements[1]` (—Å—Ç—Ä–æ–∫–∞ 762)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 773)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 798)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 806)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 807)
- `secondPlacement = result.messageCachePointPlacements[1]` (—Å—Ç—Ä–æ–∫–∞ 826)
- `thirdPlacement = result.messageCachePointPlacements[2]` (—Å—Ç—Ä–æ–∫–∞ 834)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 845)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 877)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 885)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `_messages = [` (—Å—Ç—Ä–æ–∫–∞ 933)
- `originalConsoleLog = console.log` (—Å—Ç—Ä–æ–∫–∞ 985)
- `mockConsoleLog = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 986)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 991)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 1028)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 1036)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 1037)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 1062)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 1095)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 1103)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 1104)

### üìÇ src/api/providers/fetchers/__tests__

#### üìÑ openrouter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `models = await getOpenRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `openRouterSupportedCaching = Object.entries(models)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `excludedModels = new Set([` (—Å—Ç—Ä–æ–∫–∞ 31)
- `ourCachingModels = Array.from(OPEN_ROUTER_PROMPT_CACHING_MODELS).filter(` (—Å—Ç—Ä–æ–∫–∞ 37)
- `expectedCachingModels = openRouterSupportedCaching.filter((id) => !excludedModels.has(id)).sort()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `excludedReasoningBudgetModels = new Set([` (—Å—Ç—Ä–æ–∫–∞ 121)
- `expectedReasoningBudgetModels = Array.from(OPEN_ROUTER_REASONING_BUDGET_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `excludedRequiredReasoningBudgetModels = new Set(["google/gemini-2.5-pro"])` (—Å—Ç—Ä–æ–∫–∞ 138)
- `expectedRequiredReasoningBudgetModels = Array.from(OPEN_ROUTER_REQUIRED_REASONING_BUDGET_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `anthropicModels = Object.entries(models)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `endpoints = await getOpenRouterModelEndpoints("google/gemini-2.5-pro-preview")` (—Å—Ç—Ä–æ–∫–∞ 218)
- `mockModel = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `result = parseOpenRouterModel({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `mockModel = {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `result = parseOpenRouterModel({` (—Å—Ç—Ä–æ–∫–∞ 291)

#### üìÑ ollama.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `modelData = ollamaModelsData["qwen3-2to16:latest"]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `parsedModel = parseOllamaModel(modelData)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `modelDataWithNullFamilies = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `parsedModel = parseOllamaModel(modelDataWithNullFamilies as any)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `modelName = "devstral2to16:latest"` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockApiTagsResponse = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockApiShowResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `expectedParsedDetails = parseOllamaModel(mockApiShowResponse as any)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `consoleInfoSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Spy and suppress output` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `consoleInfoSpy = vi.spyOn(console, "warn").mockImplementation(() => {}) // Spy and suppress output` (—Å—Ç—Ä–æ–∫–∞ 141)
- `econnrefusedError = new Error("Connection refused") as any` (—Å—Ç—Ä–æ–∫–∞ 143)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `modelName = "test-model:latest"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `mockApiTagsResponse = {` (—Å—Ç—Ä–æ–∫–∞ 162)
- `mockApiShowResponse = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 205)

#### üìÑ modelCache.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetLiteLLMModels = getLiteLLMModels as Mock<typeof getLiteLLMModels>` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mockGetOpenRouterModels = getOpenRouterModels as Mock<typeof getOpenRouterModels>` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockGetRequestyModels = getRequestyModels as Mock<typeof getRequestyModels>` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockGetGlamaModels = getGlamaModels as Mock<typeof getGlamaModels>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockGetUnboundModels = getUnboundModels as Mock<typeof getUnboundModels>` (—Å—Ç—Ä–æ–∫–∞ 41)
- `DUMMY_REQUESTY_KEY = "requesty-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `DUMMY_UNBOUND_KEY = "unbound-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await getModels({ provider: "openrouter" })` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 90)
- `result = await getModels({ provider: "requesty", apiKey: DUMMY_REQUESTY_KEY })` (—Å—Ç—Ä–æ–∫–∞ 100)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 107)
- `result = await getModels({ provider: "glama" })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await getModels({ provider: "unbound", apiKey: DUMMY_UNBOUND_KEY })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `expectedError = new Error("LiteLLM connection failed")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `unknownProvider = "unknown" as any` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ lmstudio.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockGetModelInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockListLoaded = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `mockListDownloadedModels = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedLMStudioClientConstructor = LMStudioClient as any` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = parseLMStudioModel(rawModel)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `baseUrl = "http://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 76)
- `lmsUrl = "ws://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `expectedParsedModel = parseLMStudioModel(mockLLMInfo)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `expectedParsedModel = parseLMStudioModel(mockRawModel)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `defaultBaseUrl = "http://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 147)
- `defaultLmsUrl = "ws://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `httpsBaseUrl = "https://securehost:4321"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `wssLmsUrl = "wss://securehost:4321"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `unparsableBaseUrl = "http://localhost:invalid:port" // Leads to ws://localhost:invalid:port` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = await getLMStudioModels(unparsableBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 181)
- `networkError = new Error("Network connection failed")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `consoleInfoSpy = vi.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 199)
- `econnrefusedError = new Error("Connection refused")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 216)
- `listError = new Error("LMStudio SDK internal error")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ litellm.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as typeof axios & {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DUMMY_INVALID_KEY = "invalid-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 297)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `axiosError = {` (—Å—Ç—Ä–æ–∫–∞ 338)
- `axiosError = {` (—Å—Ç—Ä–æ–∫–∞ 355)
- `genericError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 369)
- `mockResponse = { data: { data: [] } }` (—Å—Ç—Ä–æ–∫–∞ 380)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 394)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 443)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 469)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 517)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 554)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 599)

### üìÇ packages/types/src/providers/__tests__

#### üìÑ claude-code.spec.ts

### üìÇ packages/evals/src/db/queries

#### üìÑ toolErrors.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 7)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ tasks.ts

**–¢–∏–ø—ã:**

- `type GetTask` (—Å—Ç—Ä–æ–∫–∞ 49)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.tasks.findFirst({ where: eq(tasks.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 11)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 21)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `records = await db.update(tasks).set(values).where(eq(tasks.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 40)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ taskMetrics.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.taskMetrics.findFirst({ where: eq(taskMetrics.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 9)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 19)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 27)
- `records = await db.update(taskMetrics).set(values).where(eq(taskMetrics.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ runs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.runs.findFirst({ where: eq(schema.runs.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 13)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 23)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `records = await db.update(schema.runs).set(values).where(eq(schema.runs.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 42)
- `tasks = await getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `toolUsage = tasks.reduce((acc, task) => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `tool = key as keyof ToolUsage` (—Å—Ç—Ä–æ–∫–∞ 80)
- `taskMetrics = await createTaskMetrics({ ...rest, toolUsage })` (—Å—Ç—Ä–æ–∫–∞ 90)
- `run = await findRun(runId)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `run = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `tasks = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 112)
- `taskMetricsIds = tasks` (—Å—Ç—Ä–æ–∫–∞ 129)

#### üìÑ errors.ts

#### üìÑ copyRun.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sourceRun = await sourceDb.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `newRunTaskMetrics = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 41)
- `createdRunTaskMetrics = newRunTaskMetrics[0]` (—Å—Ç—Ä–æ–∫–∞ 49)
- `newRuns = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newRun = newRuns[0]` (—Å—Ç—Ä–æ–∫–∞ 75)
- `newRunId = newRun.id` (—Å—Ç—Ä–æ–∫–∞ 81)
- `sourceTasks = await sourceDb.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `taskIdMapping = new Map<number, number>()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `newTaskMetrics = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 105)
- `createdTaskMetrics = newTaskMetrics[0]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `newTasks = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 129)
- `newTask = newTasks[0]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `sourceTaskToolErrors = await sourceDb.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 144)
- `sourceRunToolErrors = await sourceDb.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 163)

### üìÇ packages/cloud/src/__tests__/auth

#### üìÑ WebAuthService.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1042)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1069)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1093)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `MockedRefreshTimer = vi.mocked(RefreshTimer)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `serviceWithoutLog = new WebAuthService(mockContext as unknown as vscode.ExtensionContext)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `firstCallCount = vi.mocked(mockContext.secrets.onDidChange).mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 158)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 178)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 181)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 197)
- `newCredentials = { clientToken: "new-token", sessionId: "new-session" }` (—Å—Ç—Ä–æ–∫–∞ 217)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `mockOpenExternal = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 236)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockOpenExternal = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 255)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 256)
- `calledUri = mockOpenExternal.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 270)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 290)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 291)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 311)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 315)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 328)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 341)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 350)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 367)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 375)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 376)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 396)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 397)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 409)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 417)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 418)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 438)
- `authenticatedService = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 441)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 464)
- `attemptingService = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 467)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 483)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 510)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 515)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 545)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 555)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 569)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 576)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 597)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 604)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 625)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: null }` (—Å—Ç—Ä–æ–∫–∞ 651)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 681)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: "org_1" }` (—Å—Ç—Ä–æ–∫–∞ 697)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 743)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 749)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: null }` (—Å—Ç—Ä–æ–∫–∞ 762)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 787)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 793)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 804)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 813)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 816)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 829)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 853)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 856)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 870)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 893)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 896)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 940)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 968)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 982)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 983)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 995)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 999)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 1000)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1012)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1015)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 1016)
- `loadedCredentials = await service["loadCredentials"]()` (—Å—Ç—Ä–æ–∫–∞ 1020)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1027)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1030)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1049)
- `newCredentials = { clientToken: "new-token", sessionId: "new-session" }` (—Å—Ç—Ä–æ–∫–∞ 1053)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1079)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1090)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1100)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1103)

#### üìÑ StaticTokenAuthService.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockLog(args: u)` (—Å—Ç—Ä–æ–∫–∞ 23)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testToken = "test-static-token"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockContextPartial = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `serviceWithoutLog = new StaticTokenAuthService(` (—Å—Ç—Ä–æ–∫–∞ 67)
- `spy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `differentToken = "different-token"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `differentService = new StaticTokenAuthService(mockContext, differentToken, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `expectedErrorMessage = "Authentication methods are disabled in StaticTokenAuthService"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 161)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 162)

### üìÇ build-src/webview-ui/src/utils/__tests__

#### üìÑ validate.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = getModelValidationError(config, mockRouterModels, restrictiveOrganization)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result = getModelValidationError(config, undefined, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `result = getModelValidationError(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 148)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = validateApiConfigurationExcludingModelErrors(config, mockRouterModels, allowAllOrganization)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = validateApiConfigurationExcludingModelErrors(` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ sourceMapUtils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stackTrace = `Error: Test error` (—Å—Ç—Ä–æ–∫–∞ 13)
- `frames = await parseStackTrace(stackTrace)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `firstFrame = frames[0]` (—Å—Ç—Ä–æ–∫–∞ 25)
- `stackTrace = `Error: Test error` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await applySourceMapsToStack(stackTrace)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `emptyStack = ""` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = await applySourceMapsToStack(emptyStack)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `error = new Error("Test error")` (—Å—Ç—Ä–æ–∫–∞ 65)
- `enhancedError = await enhanceErrorWithSourceMaps(error)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `error = new Error("Test error")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `enhancedError = await enhanceErrorWithSourceMaps(error)` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ path-mentions.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MOCK_CWD_POSIX = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `MOCK_CWD_WIN = "C:\\Users\\test\\project"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `absPath = "C:\\Users\\test\\project\\src\\file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `relPath = "src/another file.js" // Assuming this might be passed somehow` (—Å—Ç—Ä–æ–∫–∞ 56)
- `absPath = "/Users/other/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `winPath = "D:\\another\\folder\\file.txt"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = convertToMentionPath(winPath, MOCK_CWD_WIN)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `absPath = "/Users/test/project/src/normal.ts"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `absPath = "/Users/test/projectfile.txt" // Edge case: file directly in project root` (—Å—Ç—Ä–æ–∫–∞ 83)
- `cwd = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 84)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `cwdWithSlash = MOCK_CWD_POSIX + "/"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `absPath = "/users/test/project/src/file with spaces.ts" // Lowercase path` (—Å—Ç—Ä–æ–∫–∞ 95)
- `absPathUpper = "/USERS/TEST/PROJECT/src/file.ts" // Uppercase path` (—Å—Ç—Ä–æ–∫–∞ 97)
- `absPath = "/Users/test/project/src/file with spaces.ts"` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ model-utils.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contextWindow = 10000` (—Å—Ç—Ä–æ–∫–∞ 7)
- `contextTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 8)
- `maxTokens = 2000` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = calculateTokenDistribution(contextWindow, contextTokens, maxTokens)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `contextWindow = 20000` (—Å—Ç—Ä–æ–∫–∞ 21)
- `contextTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = calculateTokenDistribution(contextWindow, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = calculateTokenDistribution(-1000, -500)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = calculateTokenDistribution(0, 0)` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timestamp = new Date(2023, 0, 15, 10, 30).getTime()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = formatDate(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `timestamp1 = new Date(2023, 1, 28, 15, 45).getTime()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `timestamp2 = new Date(2023, 11, 31, 23, 59).getTime()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `morningTimestamp = new Date(2023, 5, 15, 7, 5).getTime()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `noonTimestamp = new Date(2023, 5, 15, 12, 0).getTime()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `eveningTimestamp = new Date(2023, 5, 15, 20, 15).getTime()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `timestamp = new Date(2023, 3, 10, 9, 5).getTime()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `timestamp = new Date(2023, 8, 21, 16, 45).getTime()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = formatDate(timestamp)` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ context-mentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = insertMention("Hello world", 5, "test")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = insertMention("Hello @wor world", 8, "test")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = insertMention("", 0, "test")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = insertMention("Mention @fi", 11, "/path/to/file.txt") // Cursor after 'i'` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = insertMention("Hello ", 6, "terminal") // Cursor at the end` (—Å—Ç—Ä–æ–∫–∞ 36)
- `result = insertMention("world", 0, "problems")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = insertMention("Hello", 5, "problems")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = insertMention("/mode some", 5, "code", true) // Simulating mode selection` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = insertMention("Hello @abc ", 10, "git commit with spaces") // Not a path` (—Å—Ç—Ä–æ–∫–∞ 61)
- `filePath = "/path/to/file with spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `expectedEscapedPath = "/path/to/file\\ with\\ spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result = insertMention("Mention @old", 11, filePath)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `folderPath = "/my documents/folder name/"` (—Å—Ç—Ä–æ–∫–∞ 77)
- `expectedEscapedPath = "/my\\ documents/folder\\ name/"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = insertMention("Check @dir", 9, folderPath)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `alreadyEscapedPath = "/path/already\\ escaped.txt"` (—Å—Ç—Ä–æ–∫–∞ 87)
- `result = insertMention("Insert @path", 11, alreadyEscapedPath)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `simplePath = "/path/to/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `result = insertMention("Simple @p", 9, simplePath)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result = insertMention("/cod", 4, "code", true)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `result = insertMention("/code @some/file.ts", 5, "debug", true)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `text = "/code @"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `position = 8 // cursor after @` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = insertMention(text, position, "src/file.ts", false)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `text = "/some/path/file.ts @"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `position = 20` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = insertMention(text, position, "another.ts", false)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `text = "/code @"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `position = 8` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = insertMention(text, position, "src/file.ts") // No isSlashCommand parameter` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = removeMention("Hello @problems ", 15)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = removeMention("Hello @test world", 8)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = removeMention("Hello world", 5)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `text = "File @/path/to/file\\ with\\ spaces.txt "` (—Å—Ç—Ä–æ–∫–∞ 176)
- `position = text.length // Cursor at the very end` (—Å—Ç—Ä–æ–∫–∞ 177)
- `text = "File @/path/to/file\\ with\\ spaces.txt next word"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `position = text.indexOf(" next") // Cursor right after the mention + space` (—Å—Ç—Ä–æ–∫–∞ 186)
- `mockDynamicSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = getContextMenuOptions("", null, [])` (—Å—Ç—Ä–æ–∫–∞ 240)
- `result = getContextMenuOptions("", ContextMenuOptionType.File, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `result = getContextMenuOptions("git", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = getContextMenuOptions("abc1234", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `result = getContextMenuOptions("nonexistent", null, mockQueryItems)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `testItems = [` (—Å—Ç—Ä–æ–∫–∞ 285)
- `result = getContextMenuOptions("test", null, testItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 295)
- `result = getContextMenuOptions("t", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `fileResults = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 307)
- `searchResults = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 314)
- `gitResults = result.filter((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `firstFileIndex = result.findIndex((item) => fileResults.some((f) => f === item))` (—Å—Ç—Ä–æ–∫–∞ 321)
- `firstSearchResultIndex = result.findIndex((item) => searchResults.some((s) => s === item))` (—Å—Ç—Ä–æ–∫–∞ 323)
- `firstGitResultIndex = result.findIndex((item) => gitResults.some((g) => g === item))` (—Å—Ç—Ä–æ–∫–∞ 325)
- `result = getContextMenuOptions("open", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = getContextMenuOptions("commit", null, mockQueryItems, mockDynamicSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 344)
- `duplicateSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = getContextMenuOptions("test", null, mockQueryItems, duplicateSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 365)
- `duplicateCount = result.filter(` (—Å—Ç—Ä–æ–∫–∞ 368)
- `result = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 382)
- `testQuery = "test" // Using "test" as the query to match all items` (—Å—Ç—Ä–æ–∫–∞ 399)
- `testSearchResults = [` (—Å—Ç—Ä–æ–∫–∞ 422)
- `result = getContextMenuOptions(testQuery, null, testItems, testSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `firstOpenedFileIndex = result.findIndex((item) => item.type === ContextMenuOptionType.OpenedFile)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `firstSearchResultIndex = result.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 444)
- `firstGitResultIndex = result.findIndex((item) => item.type === ContextMenuOptionType.Git)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `mockModes = [` (—Å—Ç—Ä–æ–∫–∞ 462)
- `result = getContextMenuOptions("/co", null, [], [], mockModes)` (—Å—Ç—Ä–æ–∫–∞ 477)
- `result = getContextMenuOptions("/nonexistentquery", null, [], [])` (—Å—Ç—Ä–æ–∫–∞ 488)
- `options = getContextMenuOptions("@search", null, mockQueryItems, mockSearchResults)` (—Å—Ç—Ä–æ–∫–∞ 498)
- `fileResult = options.find((o) => o.label === "search result spaces.ts")` (—Å—Ç—Ä–æ–∫–∞ 499)
- `options = getContextMenuOptions("open", null, mockQueryItems, [])` (—Å—Ç—Ä–æ–∫–∞ 511)
- `openedFile = options.find((o) => o.label === "open file.ts")` (—Å—Ç—Ä–æ–∫–∞ 512)
- `formattedItems = getContextMenuOptions("spaces", null, [], searchResults)` (—Å—Ç—Ä–æ–∫–∞ 528)

#### üìÑ command-validation.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `commandWithNewlineInQuotes = `echo "Hello` (—Å—Ç—Ä–æ–∫–∞ 177)
- `multiLineCommand = `npm install` (—Å—Ç—Ä–æ–∫–∞ 190)
- `allowedCommands = ["npm test", "npm run", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 239)
- `result = parseCommand("echo hello")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `result = parseCommand("echo hello && echo world")` (—Å—Ç—Ä–æ–∫–∞ 286)
- `result = parseCommand('echo "hello world"')` (—Å—Ç—Ä–æ–∫–∞ 291)
- `result = parseCommand("echo hello 2>&1")` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result = parseCommand("echo $(date)")` (—Å—Ç—Ä–æ–∫–∞ 301)
- `commandWithArrayIndex = "value=${array[$index]}"` (—Å—Ç—Ä–æ–∫–∞ 307)
- `commandWithRandom = "level=${levels[$RANDOM % ${#levels[@]}]}"` (—Å—Ç—Ä–æ–∫–∞ 316)
- `commandWithRandom = "echo $RANDOM"` (—Å—Ç—Ä–æ–∫–∞ 325)
- `commandWithRandomIndex = "echo ${array[$RANDOM]}"` (—Å—Ç—Ä–æ–∫–∞ 334)
- `commandWithComplexRandom = "echo ${levels[$RANDOM % ${#levels[@]}]}"` (—Å—Ç—Ä–æ–∫–∞ 343)
- `logGeneratorCommand = `while true` (—Å—Ç—Ä–æ–∫–∞ 352)
- `problematicPart = "level=${levels[$RANDOM"` (—Å—Ç—Ä–æ–∫–∞ 369)
- `bashScript = `jsx_files=$(find resources/js -name "*.jsx" -type f -not -path "*/node_modules/*")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `result = parseCommand("count=$((count + 1)) && echo $count")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `result = parseCommand("result=$((10 * (5 + 3))) && echo $result")` (—Å—Ç—Ä–æ–∫–∞ 400)
- `result = parseCommand("total=$((price * quantity + tax))")` (—Å—Ç—Ä–æ–∫–∞ 405)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 410)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 430)
- `commands = [` (—Å—Ç—Ä–æ–∫–∞ 444)
- `complexCommand = `` (—Å—Ç—Ä–æ–∫–∞ 464)
- `problematicCommand = "echo ${unclosed"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `result = parseCommand(problematicCommand)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `prefixes = ["npm", "npm test", "npm run"]` (—Å—Ç—Ä–æ–∫–∞ 497)
- `prefixes = ["npm", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 504)
- `prefixes = ["npm test", "Echo"]` (—Å—Ç—Ä–æ–∫–∞ 510)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 523)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 524)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 538)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 539)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 544)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 545)
- `allowedWithWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 552)
- `deniedWithWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 553)
- `allowedWithWildcard2 = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 560)
- `deniedSpecific = ["rm -rf"]` (—Å—Ç—Ä–æ–∫–∞ 561)
- `allowedSpecific = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 570)
- `deniedWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 571)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 595)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 596)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 625)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 626)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 661)
- `allowedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 668)
- `deniedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 669)
- `allowed = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 678)
- `denied = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 679)
- `allowedCommands = ["npm", "echo", "git"]` (—Å—Ç—Ä–æ–∫–∞ 704)
- `deniedCommands = ["npm test", "git push"]` (—Å—Ç—Ä–æ–∫–∞ 705)
- `allowedLong = ["npm", "npm test"]` (—Å—Ç—Ä–æ–∫–∞ 724)
- `deniedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 725)
- `allowedShort = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 730)
- `deniedLong = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 731)
- `allowedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 738)
- `deniedEqual = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 739)
- `allowedWildcard = ["*"]` (—Å—Ç—Ä–æ–∫–∞ 746)
- `deniedSpecific = ["rm -rf"]` (—Å—Ç—Ä–æ–∫–∞ 747)
- `allowedCommands = ["npm", "echo"]` (—Å—Ç—Ä–æ–∫–∞ 766)
- `deniedCommands = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 767)
- `allowed = ["npm"]` (—Å—Ç—Ä–æ–∫–∞ 826)
- `denied = ["npm test"]` (—Å—Ç—Ä–æ–∫–∞ 827)
- `lists = validator.getCommandLists()` (—Å—Ç—Ä–æ–∫–∞ 883)
- `validatorNoDeny = new CommandValidator(["npm"])` (—Å—Ç—Ä–æ–∫–∞ 889)
- `lists = validatorNoDeny.getCommandLists()` (—Å—Ç—Ä–æ–∫–∞ 890)
- `details = validator.getValidationDetails("npm install && echo done")` (—Å—Ç—Ä–æ–∫–∞ 898)
- `details = validator.getValidationDetails("npm install $(echo test)")` (—Å—Ç—Ä–æ–∫–∞ 914)
- `detailsWithDenied = validator.getValidationDetails("npm install $(npm test)")` (—Å—Ç—Ä–æ–∫–∞ 919)
- `details = validator.getValidationDetails("npm test && git push origin")` (—Å—Ç—Ä–æ–∫–∞ 925)
- `commands = ["npm install", "npm test", "dangerous", "echo hello"]` (—Å—Ç—Ä–æ–∫–∞ 936)
- `results = validator.validateCommands(commands)` (—Å—Ç—Ä–æ–∫–∞ 937)
- `results = validator.validateCommands([])` (—Å—Ç—Ä–æ–∫–∞ 947)
- `emptyValidator = new CommandValidator([], [])` (—Å—Ç—Ä–æ–∫–∞ 956)
- `allowOnlyValidator = new CommandValidator(["npm"], [])` (—Å—Ç—Ä–æ–∫–∞ 959)
- `denyOnlyValidator = new CommandValidator([], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 962)
- `stats = validator.getStats()` (—Å—Ç—Ä–æ–∫–∞ 967)
- `wildcardValidator = new CommandValidator(["*", "npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 975)
- `stats = wildcardValidator.getStats()` (—Å—Ç—Ä–æ–∫–∞ 976)
- `details = validator.getValidationDetails("   ")` (—Å—Ç—Ä–æ–∫–∞ 988)
- `validator = createCommandValidator(["npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `validator = createCommandValidator(["npm"])` (—Å—Ç—Ä–æ–∫–∞ 1010)
- `validator = createCommandValidator(["echo", "npm"], ["rm", "sudo"])` (—Å—Ç—Ä–æ–∫–∞ 1018)
- `validator = createCommandValidator(["npm", "git", "echo"], ["git push", "npm publish"])` (—Å—Ç—Ä–æ–∫–∞ 1033)
- `commonCommands = [` (—Å—Ç—Ä–æ–∫–∞ 1063)
- `dangerousCommands = [` (—Å—Ç—Ä–æ–∫–∞ 1081)
- `unknownCommands = ["docker run", "python script.py", "curl https://api.example.com"]` (—Å—Ç—Ä–æ–∫–∞ 1094)
- `blockedCommands = ["npm install", "git push", "rm file", "echo hello", "mkdir test"]` (—Å—Ç—Ä–æ–∫–∞ 1120)
- `largeAllowList = Array.from({ length: 1000 }, (_, i) => `command${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1166)
- `largeDenyList = Array.from({ length: 500 }, (_, i) => `dangerous${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1167)
- `largeValidator = createCommandValidator(largeAllowList, largeDenyList)` (—Å—Ç—Ä–æ–∫–∞ 1169)
- `batchValidator = createCommandValidator(["npm"], ["rm"])` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `commands = Array.from({ length: 100 }, (_, i) => `npm test${i}`)` (—Å—Ç—Ä–æ–∫–∞ 1179)
- `results = batchValidator.validateCommands(commands)` (—Å—Ç—Ä–æ–∫–∞ 1180)

#### üìÑ command-parser.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `patterns = extractPatternsFromCommand("ls")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `patterns = extractPatternsFromCommand("git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `patterns = extractPatternsFromCommand("git commit -m 'test'")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `patterns = extractPatternsFromCommand("cd /usr/local/bin")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `patterns = extractPatternsFromCommand("ls -la | grep test")` (—Å—Ç—Ä–æ–∫–∞ 26)
- `patterns = extractPatternsFromCommand("npm install && git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 31)
- `patterns = extractPatternsFromCommand("npm test || npm run test:ci")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `patterns = extractPatternsFromCommand("cd src` (—Å—Ç—Ä–æ–∫–∞ 41)
- `patterns = extractPatternsFromCommand("0 total")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `patterns = extractPatternsFromCommand("")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `patterns = extractPatternsFromCommand("./script.sh --verbose")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `patterns = extractPatternsFromCommand("git add .")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `patterns = extractPatternsFromCommand("cd ~/projects")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `patterns = extractPatternsFromCommand("docker run image:tag")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `patterns = extractPatternsFromCommand("npm run build && git push")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `patterns = extractPatternsFromCommand("npm install && npm test | grep success || echo 'failed'")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `patterns = extractPatternsFromCommand("echo 'unclosed quote")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `patterns = extractPatternsFromCommand("npm run build")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `patterns = extractPatternsFromCommand("git push origin main --force")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `patterns = extractPatternsFromCommand("gh pr checkout 123")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `patterns = extractPatternsFromCommand("git remote add origin https://github.com/user/repo.git")` (—Å—Ç—Ä–æ–∫–∞ 117)
- `patterns = extractPatternsFromCommand("npm run build --production")` (—Å—Ç—Ä–æ–∫–∞ 122)
- `patterns = extractPatternsFromCommand("node scripts test.js")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `patterns = extractPatternsFromCommand("docker run -it ubuntu")` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ TelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `API_KEY = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `DISTINCT_ID = "test-user-id"` (—Å—Ç—Ä–æ–∫–∞ 54)

### üìÇ build-src/webview-ui/src/hooks/__tests__

#### üìÑ useAutoApprovalState.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 128)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `initialToggles = {` (—Å—Ç—Ä–æ–∫–∞ 161)
- `firstHasEnabledOptions = result.current.hasEnabledOptions` (—Å—Ç—Ä–æ–∫–∞ 176)
- `firstEffectiveAutoApprovalEnabled = result.current.effectiveAutoApprovalEnabled` (—Å—Ç—Ä–æ–∫–∞ 177)
- `newToggles = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `initialToggles = {` (—Å—Ç—Ä–æ–∫–∞ 193)
- `newToggles = {` (—Å—Ç—Ä–æ–∫–∞ 212)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 224)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `toggles = {}` (—Å—Ç—Ä–æ–∫–∞ 261)
- `toggles = {` (—Å—Ç—Ä–æ–∫–∞ 270)

### üìÇ build-src/webview-ui/src/components/ui

#### üìÑ index.ts

#### üìÑ tooltip.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TooltipProvider = TooltipPrimitive.Provider` (—Å—Ç—Ä–æ–∫–∞ 6)
- `Tooltip = TooltipPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `TooltipTrigger = TooltipPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `TooltipContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ toggle-switch.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleKeyDown(e: R)` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dimensions = size === "small" ? { width: 16, height: 8, dotSize: 4 } : { width: 20, height: 10, dotSize: 6 }` (—Å—Ç—Ä–æ–∫–∞ 20)
- `handleKeyDown = (e: React.KeyboardEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ textarea.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<"textarea">>(` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ standard-tooltip.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface StandardTooltipProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `style = maxWidth ? { maxWidth: typeof maxWidth === "number" ? `${maxWidth}px` : maxWidth } : undefined` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ slider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Slider = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ separator.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Separator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Select()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `SelectGroup()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `SelectValue()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `SelectTrigger()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `SelectLabel()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `SelectItem()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `SelectSeparator()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `SelectScrollUpButton()` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ select-dropdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `selectedOption = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 72)
- `displayText = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 78)
- `onOpenChange = React.useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `onClearSearch = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `searchableItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `fzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `filteredOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `matchingItems = fzfInstance.find(searchValue).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `groupedOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleSelect = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 166)
- `option = options.find((opt) => opt.value === optionValue)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `triggerContent = (` (—Å—Ç—Ä–æ–∫–∞ 189)
- `itemKey = `item-${option.value || option.label || index}`` (—Å—Ç—Ä–æ–∫–∞ 271)

#### üìÑ searchable-select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleOpenChange(open: b)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `handleSelect(selectedValue: s)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleClearSearch()` (—Å—Ç—Ä–æ–∫–∞ 102)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SearchableSelectProps` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `searchResetTimeoutRef = React.useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `isMountedRef = React.useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `selectedOption = options.find((option) => option.value === value)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `filteredOptions = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 58)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `handleOpenChange = (open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `handleSelect = (selectedValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleClearSearch = () => {` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ progress.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Progress = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ popover.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Popover = PopoverPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 7)
- `PopoverTrigger = PopoverPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 9)
- `PopoverAnchor = PopoverPrimitive.Anchor` (—Å—Ç—Ä–æ–∫–∞ 11)
- `PopoverContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ input.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ dropdown-menu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DropdownMenuShortcut()` (—Å—Ç—Ä–æ–∫–∞ 131)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DropdownMenu = DropdownMenuPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DropdownMenuTrigger = DropdownMenuPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `DropdownMenuGroup = DropdownMenuPrimitive.Group` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DropdownMenuPortal = DropdownMenuPrimitive.Portal` (—Å—Ç—Ä–æ–∫–∞ 14)
- `DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DropdownMenuContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 18)
- `DropdownMenuItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 40)
- `DropdownMenuCheckboxItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 61)
- `DropdownMenuRadioItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 84)
- `DropdownMenuLabel = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 105)
- `DropdownMenuSeparator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 119)
- `DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 131)

#### üìÑ dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Dialog()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `DialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `DialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `DialogClose()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `DialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DialogContent()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `DialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `DialogDescription()` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ command.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `CommandDialog()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `CommandShortcut()` (—Å—Ç—Ä–æ–∫–∞ 124)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Command = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CommandDialog = ({ children, ...props }: DialogProps) => {` (—Å—Ç—Ä–æ–∫–∞ 25)
- `CommandInput = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 37)
- `CommandList = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 57)
- `CommandEmpty = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 70)
- `CommandGroup = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 77)
- `CommandSeparator = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 93)
- `CommandItem = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 105)
- `CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ collapsible.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Collapsible = CollapsiblePrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 3)
- `CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger` (—Å—Ç—Ä–æ–∫–∞ 5)
- `CollapsibleContent = CollapsiblePrimitive.CollapsibleContent` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ checkbox.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `checkboxVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 10)
- `Checkbox = React.forwardRef<React.ElementRef<typeof CheckboxPrimitive.Root>, CheckboxProps>(` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Button = React.forwardRef<HTMLButtonElement, ButtonProps>(` (—Å—Ç—Ä–æ–∫–∞ 43)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 45)

#### üìÑ badge.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Badge()` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `badgeVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ autosize-textarea.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UseAutosizeTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–¢–∏–ø—ã:**

- `type AutosizeTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `offsetBorder = 6` (—Å—Ç—Ä–æ–∫–∞ 23)
- `textAreaElement = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 24)
- `scrollHeight = textAreaElement.scrollHeight` (—Å—Ç—Ä–æ–∫–∞ 38)
- `textAreaRef = React.useRef<HTMLTextAreaElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 67)

#### üìÑ alert-dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AlertDialog()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `AlertDialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `AlertDialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `AlertDialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `AlertDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `AlertDialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `AlertDialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `AlertDialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `AlertDialogAction()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `AlertDialogCancel()` (—Å—Ç—Ä–æ–∫–∞ 101)

### üìÇ build-src/webview-ui/src/components/settings

#### üìÑ types.ts

#### üìÑ transforms.ts

#### üìÑ styles.ts

#### üìÑ constants.ts

#### üìÑ TodoListSettingsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TodoListSettingsControlProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleTodoListEnabledChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ThinkingBudget.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ThinkingBudgetProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isReasoningBudgetSupported = !!modelInfo && modelInfo.supportsReasoningBudget` (—Å—Ç—Ä–æ–∫–∞ 20)
- `isReasoningBudgetRequired = !!modelInfo && modelInfo.requiredReasoningBudget` (—Å—Ç—Ä–æ–∫–∞ 21)
- `isReasoningEffortSupported = !!modelInfo && modelInfo.supportsReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 22)
- `enableReasoningEffort = apiConfiguration.enableReasoningEffort` (—Å—Ç—Ä–æ–∫–∞ 24)
- `customMaxOutputTokens = apiConfiguration.modelMaxTokens || DEFAULT_HYBRID_REASONING_MODEL_MAX_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 25)
- `modelMaxThinkingTokens = modelInfo?.maxThinkingTokens` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ TerminalSettings.tsx

**–¢–∏–ø—ã:**

- `type TerminalSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ TemperatureControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TemperatureControlProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasCustomTemperature = value !== undefined && value !== null` (—Å—Ç—Ä–æ–∫–∞ 23)
- `isChecked = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ SettingsView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleSubmit()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 458)
- `onSelect()` (—Å—Ç—Ä–æ–∫–∞ 515)

**–¢–∏–ø—ã:**

- `type SectionName` (—Å—Ç—Ä–æ–∫–∞ 95)
- `type SettingsViewProps` (—Å—Ç—Ä–æ–∫–∞ 97)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sectionNames = [` (—Å—Ç—Ä–æ–∫–∞ 81)
- `SettingsView = forwardRef<SettingsViewRef, SettingsViewProps>(({ onDone, targetSection }, ref) => {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `extensionState = useExtensionState()` (—Å—Ç—Ä–æ–∫–∞ 105)
- `prevApiConfigName = useRef(currentApiConfigName)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `confirmDialogHandler = useRef<() => void>()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `apiConfiguration = useMemo(() => cachedState.apiConfiguration ?? {}, [cachedState.apiConfiguration])` (—Å—Ç—Ä–æ–∫–∞ 188)
- `setApiConfigurationField = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 221)
- `previousValue = prevState.apiConfiguration?.[field]` (—Å—Ç—Ä–æ–∫–∞ 228)
- `isInitialSync = previousValue === undefined && value !== undefined` (—Å—Ç—Ä–æ–∫–∞ 232)
- `setTelemetrySetting = useCallback((setting: TelemetrySetting) => {` (—Å—Ç—Ä–æ–∫–∞ 254)
- `setCustomSupportPromptsField = useCallback((prompts: Record<string, string | undefined>) => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `isSettingValid = !errorMessage` (—Å—Ç—Ä–æ–∫–∞ 276)
- `handleSubmit = () => {` (—Å—Ç—Ä–æ–∫–∞ 278)
- `checkUnsaveChanges = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 352)
- `onConfirmDialogResult = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 366)
- `handleTabChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 380)
- `tabRefs = useRef<Record<SectionName, HTMLButtonElement | null>>(` (—Å—Ç—Ä–æ–∫–∞ 389)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `observer = new ResizeObserver((entries) => {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `scrollToActiveTab = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 440)
- `activeTabElement = tabRefs.current[activeTab]` (—Å—Ç—Ä–æ–∫–∞ 441)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 458)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 459)
- `isSelected = id === activeTab` (—Å—Ç—Ä–æ–∫–∞ 514)
- `onSelect = () => handleTabChange(id)` (—Å—Ç—Ä–æ–∫–∞ 515)
- `triggerComponent = (` (—Å—Ç—Ä–æ–∫–∞ 519)

#### üìÑ SectionHeader.tsx

**–¢–∏–ø—ã:**

- `type SectionHeaderProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ Section.tsx

**–¢–∏–ø—ã:**

- `type SectionProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ RateLimitSecondsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface RateLimitSecondsControlProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ R1FormatSetting.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface R1FormatSettingProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ PromptsSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `updateSupportPrompt(type: S, value: s)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleSupportReset(type: S)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `getSupportPromptValue(type: S): string` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleTestEnhancement()` (—Å—Ç—Ä–æ–∫–∞ 105)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface PromptsSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PromptsSettings = ({` (—Å—Ç—Ä–æ–∫–∞ 29)
- `includeTaskHistoryInEnhance = propsIncludeTaskHistoryInEnhance ?? contextIncludeTaskHistoryInEnhance` (—Å—Ç—Ä–æ–∫–∞ 49)
- `setIncludeTaskHistoryInEnhance = propsSetIncludeTaskHistoryInEnhance ?? contextSetIncludeTaskHistoryInEnhance` (—Å—Ç—Ä–æ–∫–∞ 50)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 58)
- `updateSupportPrompt = (type: SupportPromptType, value: string | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `updatedPrompts = { ...customSupportPrompts, [type]: value }` (—Å—Ç—Ä–æ–∫–∞ 79)
- `handleSupportReset = (type: SupportPromptType) => {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `updatedPrompts = { ...customSupportPrompts }` (—Å—Ç—Ä–æ–∫–∞ 92)
- `getSupportPromptValue = (type: SupportPromptType): string => {` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleTestEnhancement = () => {` (—Å—Ç—Ä–æ–∫–∞ 105)
- `trimmedValue = value.trim()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `newConfigId = value === "-" ? "" : value` (—Å—Ç—Ä–æ–∫–∞ 187)
- `value = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 240)

#### üìÑ NotificationSettings.tsx

**–¢–∏–ø—ã:**

- `type NotificationSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ ModelPicker.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModelPickerProps` (—Å—Ç—Ä–æ–∫–∞ 34)

**–¢–∏–ø—ã:**

- `type ModelIdKey` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isInitialized = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `searchInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `selectTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `closeTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `modelIds = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filteredModels = filterModels(models, apiConfiguration.apiProvider, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `onSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 76)
- `onOpenChange = useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `onClearSearch = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `initialValue = modelIds.includes(selectedModelId) ? selectedModelId : defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ ModelInfoView.tsx

**–¢–∏–ø—ã:**

- `type ModelInfoViewProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `infoItems = [` (—Å—Ç—Ä–æ–∫–∞ 28)
- `ModelInfoSupportsItem = ({` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ ModelDescriptionMarkdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `textContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `textRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ MaxRequestsInput.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MaxRequestsInputProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ MaxLimitInputs.tsx

#### üìÑ MaxCostInput.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MaxCostInputProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ LanguageSettings.tsx

**–¢–∏–ø—ã:**

- `type LanguageSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ExperimentalSettings.tsx

**–¢–∏–ø—ã:**

- `type ExperimentalSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ ExperimentalFeature.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ExperimentalFeatureProps` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nameKey = experimentKey ? `settings:experimental.${experimentKey}.name` : ""` (—Å—Ç—Ä–æ–∫–∞ 15)
- `descriptionKey = experimentKey ? `settings:experimental.${experimentKey}.description` : ""` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ DiffSettingsControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DiffSettingsControlProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleDiffEnabledChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleThresholdChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ ContextManagementSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCurrentThresholdValue()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `handleThresholdChange(value: n)` (—Å—Ç—Ä–æ–∫–∞ 82)

**–¢–∏–ø—ã:**

- `type ContextManagementSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getCurrentThresholdValue = () => {` (—Å—Ç—Ä–æ–∫–∞ 70)
- `profileThreshold = profileThresholds[selectedThresholdProfile]` (—Å—Ç—Ä–æ–∫–∞ 74)
- `handleThresholdChange = (value: number) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `newThresholds = {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 190)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `newValue = parseInt(e.target.value, 10)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `profileThreshold = profileThresholds[config.id]` (—Å—Ç—Ä–æ–∫–∞ 394)

#### üìÑ ConsecutiveMistakeLimitControl.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ConsecutiveMistakeLimitControlProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleValueChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 14)
- `validValue = Math.max(0, newValue)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ CheckpointSettings.tsx

**–¢–∏–ø—ã:**

- `type CheckpointSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ BrowserSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `async testConnection()` (—Å—Ç—Ä–æ–∫–∞ 68)

**–¢–∏–ø—ã:**

- `type BrowserSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 52)
- `testConnection = async () => {` (—Å—Ç—Ä–æ–∫–∞ 68)
- `options = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 84)

#### üìÑ AutoApproveToggle.tsx

**–¢–∏–ø—ã:**

- `type AutoApproveToggles` (—Å—Ç—Ä–æ–∫–∞ 7)
- `type AutoApproveConfig` (—Å—Ç—Ä–æ–∫–∞ 23)
- `type AutoApproveToggleProps` (—Å—Ç—Ä–æ–∫–∞ 104)

#### üìÑ AutoApproveSettings.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleAddCommand()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handleAddDeniedCommand()` (—Å—Ç—Ä–æ–∫–∞ 104)

**–¢–∏–ø—ã:**

- `type AutoApproveSettingsProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `handleAddCommand = () => {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `currentCommands = allowedCommands ?? []` (—Å—Ç—Ä–æ–∫–∞ 94)
- `newCommands = [...currentCommands, commandInput]` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleAddDeniedCommand = () => {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `currentCommands = deniedCommands ?? []` (—Å—Ç—Ä–æ–∫–∞ 105)
- `newCommands = [...currentCommands, deniedCommandInput]` (—Å—Ç—Ä–æ–∫–∞ 108)
- `newValue = !(autoApprovalEnabled ?? false)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `newCommands = (allowedCommands ?? []).filter((_, i) => i !== index)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `newCommands = (deniedCommands ?? []).filter((_, i) => i !== index)` (—Å—Ç—Ä–æ–∫–∞ 377)

#### üìÑ ApiOptions.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ApiOptions = ({` (—Å—Ç—Ä–æ–∫–∞ 106)
- `headers = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 118)
- `propHeaders = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 123)
- `currentConfigHeaders = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 136)
- `newHeadersObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 151)
- `headerObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 191)
- `apiValidationResult = validateApiConfigurationExcludingModelErrors(` (—Å—Ç—Ä–æ–∫–∞ 227)
- `selectedProviderModels = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 235)
- `models = MODELS_BY_PROVIDER[selectedProvider]` (—Å—Ç—Ä–æ–∫–∞ 236)
- `filteredModels = filterModels(models, selectedProvider, organizationAllowList)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `modelOptions = filteredModels` (—Å—Ç—Ä–æ–∫–∞ 241)
- `onProviderChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 251)
- `validateAndResetModel = (` (—Å—Ç—Ä–æ–∫–∞ 262)
- `shouldSetDefault = !modelId` (—Å—Ç—Ä–æ–∫–∞ 272)
- `config = PROVIDER_MODEL_CONFIG[value]` (—Å—Ç—Ä–æ–∫–∞ 314)
- `modelValidationError = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 326)
- `docs = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `provider = PROVIDERS.find(({ value }) => value === selectedProvider)` (—Å—Ç—Ä–æ–∫–∞ 331)
- `name = provider?.label` (—Å—Ç—Ä–æ–∫–∞ 332)
- `slug = slugs[selectedProvider] || selectedProvider` (—Å—Ç—Ä–æ–∫–∞ 344)
- `providerOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 352)

#### üìÑ ApiErrorMessage.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiErrorMessageProps` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ ApiConfigManager.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `isProfileValid(profile: P): boolean` (—Å—Ç—Ä–æ–∫–∞ 41)
- `validateName(name: s, isNewProfile: b): string | null` (—Å—Ç—Ä–æ–∫–∞ 60)
- `resetCreateState()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `resetRenameState()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `handleSelectConfig(configName: s)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `handleAdd()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `handleStartRename()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleCancel()` (—Å—Ç—Ä–æ–∫–∞ 129)
- `handleSave()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `handleNewProfileSave()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 166)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiConfigManagerProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ApiConfigManager = ({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `inputRef = useRef<any>(null)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `newProfileInputRef = useRef<any>(null)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isProfileValid = (profile: ProviderSettingsEntry): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `provider = profile.apiProvider` (—Å—Ç—Ä–æ–∫–∞ 48)
- `providerConfig = organizationAllowList.providers[provider]` (—Å—Ç—Ä–æ–∫–∞ 51)
- `validateName = (name: string, isNewProfile: boolean): string | null => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `trimmed = name.trim()` (—Å—Ç—Ä–æ–∫–∞ 61)
- `nameExists = listApiConfigMeta?.some((config) => config.name.toLowerCase() === trimmed.toLowerCase())` (—Å—Ç—Ä–æ–∫–∞ 64)
- `resetCreateState = () => {` (—Å—Ç—Ä–æ–∫–∞ 79)
- `resetRenameState = () => {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `timeoutId = setTimeout(() => inputRef.current?.focus(), 0)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `timeoutId = setTimeout(() => newProfileInputRef.current?.focus(), 0)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `handleSelectConfig = (configName: string) => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `handleAdd = () => {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `handleStartRename = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `handleSave = () => {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `trimmedValue = inputValue.trim()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = validateName(trimmedValue, false)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `handleNewProfileSave = () => {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `trimmedValue = newProfileName.trim()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `error = validateName(trimmedValue, true)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `isOnlyProfile = listApiConfigMeta?.length === 1` (—Å—Ç—Ä–æ–∫–∞ 173)
- `target = e as { target: { value: string } }` (—Å—Ç—Ä–æ–∫–∞ 186)
- `valid = isProfileValid(config)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `target = e as { target: { value: string } }` (—Å—Ç—Ä–æ–∫–∞ 311)
- `event = e as { key: string }` (—Å—Ç—Ä–æ–∫–∞ 319)

#### üìÑ About.tsx

**–¢–∏–ø—ã:**

- `type AboutProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `checked = e.target.checked === true` (—Å—Ç—Ä–æ–∫–∞ 45)

### üìÇ build-src/webview-ui/src/components/marketplace

#### üìÑ useStateManager.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleStateChange(newState: V)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleStateChange = (newState: ViewState) => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `unsubscribe = manager.onStateChange(handleStateChange)` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ MarketplaceViewStateManager.ts

**–¢–∏–ø—ã:**

- `type TransitionPayloads` (—Å—Ç—Ä–æ–∫–∞ 32)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `allItems = this.state.allItems.length ? [...this.state.allItems] : []` (—Å—Ç—Ä–æ–∫–∞ 102)
- `organizationMcps = this.state.organizationMcps.length ? [...this.state.organizationMcps] : []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `displayItems = this.state.displayItems ? [...this.state.displayItems] : [...allItems]` (—Å—Ç—Ä–æ–∫–∞ 106)
- `displayOrganizationMcps = this.state.displayOrganizationMcps` (—Å—Ç—Ä–æ–∫–∞ 107)
- `tags = this.state.filters.tags.length ? [...this.state.filters.tags] : []` (—Å—Ç—Ä–æ–∫–∞ 110)
- `newState = this.getState() // Use getState to ensure proper copying` (—Å—Ç—Ä–æ–∫–∞ 131)
- `currentTab = newState.activeTab` (—Å—Ç—Ä–æ–∫–∞ 138)
- `safeState = {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `updatedFilters = {` (—Å—Ç—Ä–æ–∫–∞ 250)
- `newDisplayItems = this.filterItems(this.state.allItems)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `newDisplayOrganizationMcps = this.filterItems(this.state.organizationMcps)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `itemCopy = { ...item }` (—Å—Ç—Ä–æ–∫–∞ 296)
- `typeMatch = !type || item.type === type` (—Å—Ç—Ä–æ–∫–∞ 299)
- `nameMatch = search ? item.name.toLowerCase().includes(search.toLowerCase()) : false` (—Å—Ç—Ä–æ–∫–∞ 300)
- `descriptionMatch = search` (—Å—Ç—Ä–æ–∫–∞ 301)
- `tagMatch = tags.length > 0 ? item.tags?.some((tag) => tags.includes(tag)) : false` (—Å—Ç—Ä–æ–∫–∞ 304)
- `hasMatchingSubcomponents = false` (—Å—Ç—Ä–æ–∫–∞ 310)
- `marketplaceItems = message.state.marketplaceItems` (—Å—Ç—Ä–æ–∫–∞ 345)
- `items = [...marketplaceItems]` (—Å—Ç—Ä–æ–∫–∞ 350)
- `isOnMcpTab = this.state.activeTab === "mcp"` (—Å—Ç—Ä–æ–∫–∞ 380)
- `hasCurrentItems = (this.state.allItems || []).length > 0` (—Å—Ç—Ä–æ–∫–∞ 381)
- `preserveTab = !isOnMcpTab && hasCurrentItems` (—Å—Ç—Ä–æ–∫–∞ 382)
- `marketplaceItems = message.marketplaceItems` (—Å—Ç—Ä–æ–∫–∞ 412)
- `organizationMcps = message.organizationMcps || []` (—Å—Ç—Ä–æ–∫–∞ 413)
- `items = [...marketplaceItems]` (—Å—Ç—Ä–æ–∫–∞ 418)
- `orgMcps = [...organizationMcps]` (—Å—Ç—Ä–æ–∫–∞ 419)
- `newDisplayItems = this.isFilterActive() ? this.filterItems(items) : items` (—Å—Ç—Ä–æ–∫–∞ 420)
- `newDisplayOrganizationMcps = this.isFilterActive() ? this.filterItems(orgMcps) : orgMcps` (—Å—Ç—Ä–æ–∫–∞ 421)

#### üìÑ MarketplaceView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleVisibilityMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 74)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarketplaceViewProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extensionState = useContext(ExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `currentVersion = extensionState?.organizationSettingsVersion ?? -1` (—Å—Ç—Ä–æ–∫–∞ 28)
- `unsubscribe = manager.onStateChange((newState) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleVisibilityMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 75)
- `allTags = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 90)
- `filteredTags = useMemo(() => allTags, [allTags])` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ MarketplaceListView.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `allItems = state.displayItems || []` (—Å—Ç—Ä–æ–∫–∞ 27)
- `organizationMcps = state.displayOrganizationMcps || []` (—Å—Ç—Ä–æ–∫–∞ 28)
- `items = filterByType ? allItems.filter((item) => item.type === filterByType) : allItems` (—Å—Ç—Ä–æ–∫–∞ 31)
- `orgMcps = filterByType === "mcp" ? organizationMcps : []` (—Å—Ç—Ä–æ–∫–∞ 32)
- `isEmpty = items.length === 0 && orgMcps.length === 0` (—Å—Ç—Ä–æ–∫–∞ 34)
- `isSelected = state.filters.tags.includes(tag)` (—Å—Ç—Ä–æ–∫–∞ 130)

#### üìÑ IssueFooter.tsx

### üìÇ build-src/webview-ui/src/components/history

#### üìÑ useTaskSearch.ts

**–¢–∏–ø—ã:**

- `type SortOption` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `presentableTasks = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `fzf = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `tasks = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `searchResults = fzf.find(searchQuery)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `positions = Array.from(result.positions)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `taskEndIndex = result.item.task.length` (—Å—Ç—Ä–æ–∫–∞ 47)
- `aTokens = (a.tokensIn || 0) + (a.tokensOut || 0) + (a.cacheWrites || 0) + (a.cacheReads || 0)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `bTokens = (b.tokensIn || 0) + (b.tokensOut || 0) + (b.cacheWrites || 0) + (b.cacheReads || 0)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ TaskItemHeader.tsx

#### üìÑ TaskItemFooter.tsx

#### üìÑ TaskItem.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DisplayHistoryItem extends HistoryItem` (—Å—Ç—Ä–æ–∫–∞ 11)

- `interface TaskItemProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TaskItem = ({` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `isCompact = variant === "compact"` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ HistoryView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `HistoryView()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `toggleSelectionMode()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `toggleTaskSelection(taskId: s, isSelected: b)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toggleSelectAll(selectAll: b)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleBatchDelete()` (—Å—Ç—Ä–æ–∫–∞ 75)

**–¢–∏–ø—ã:**

- `type HistoryViewProps` (—Å—Ç—Ä–æ–∫–∞ 24)
- `type SortOption` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `HistoryView = ({ onDone }: HistoryViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `toggleSelectionMode = () => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `toggleTaskSelection = (taskId: string, isSelected: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toggleSelectAll = (selectAll: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handleBatchDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `newValue = (e.target as HTMLInputElement)?.value` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ HistoryPreview.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `HistoryPreview()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleViewAllHistory()` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `HistoryPreview = () => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `handleViewAllHistory = () => {` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ ExportButton.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleExportClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ DeleteTaskDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DeleteTaskDialogProps extends AlertDialogProps` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ DeleteButton.tsx

**–¢–∏–ø—ã:**

- `type DeleteButtonProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleDeleteClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ CopyButton.tsx

**–¢–∏–ø—ã:**

- `type CopyButtonProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onCopy = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ BatchDeleteTaskDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BatchDeleteTaskDialogProps extends AlertDialogProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 25)

### üìÇ build-src/src/utils/logging/__tests__

#### üìÑ MockTransport.ts

#### üìÑ CompactTransport.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cleanupTestLogs()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `rmDirRecursive(dirPath: s)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `rmDirRecursive(dirPath: s)` (—Å—Ç—Ä–æ–∫–∞ 142)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testDir = "./test-logs"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `testLogPath = path.join(testDir, "test.log")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalWrite = process.stdout.write` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cleanupTestLogs = () => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `rmDirRecursive = (dirPath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `curPath = path.join(dirPath, file)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `entry = {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `lastLine = JSON.parse(lines[lines.length - 1])` (—Å—Ç—Ä–æ–∫–∞ 114)
- `deepDir = path.join(testDir, "deep/nested/path")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `deepPath = path.join(deepDir, "test.log")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `deepTransport = new CompactTransport({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `rmDirRecursive = (dirPath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 142)
- `curPath = path.join(dirPath, file)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `entries = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `fileContent = fs.readFileSync(testLogPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `lines = fileContent.trim().split("\n")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `baseTime = 1000000000000` (—Å—Ç—Ä–æ–∫–∞ 183)
- `baseTime = Date.now() // Use current fake time` (—Å—Ç—Ä–æ–∫–∞ 197)
- `transport = new CompactTransport({` (—Å—Ç—Ä–æ–∫–∞ 198)
- `entries = output.map((str) => JSON.parse(str))` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ build-src/src/services/tree-sitter/queries

#### üìÑ zig.ts

#### üìÑ vue.ts

#### üìÑ typescript.ts

#### üìÑ tsx.ts

#### üìÑ toml.ts

#### üìÑ tlaplus.ts

#### üìÑ systemrdl.ts

#### üìÑ swift.ts

#### üìÑ solidity.ts

#### üìÑ scala.ts

#### üìÑ rust.ts

#### üìÑ ruby.ts

#### üìÑ python.ts

#### üìÑ php.ts

#### üìÑ ocaml.ts

#### üìÑ lua.ts

#### üìÑ kotlin.ts

#### üìÑ javascript.ts

#### üìÑ java.ts

#### üìÑ index.ts

#### üìÑ html.ts

#### üìÑ go.ts

#### üìÑ embedded_template.ts

#### üìÑ elixir.ts

#### üìÑ elisp.ts

#### üìÑ css.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cssQuery = String.raw`` (—Å—Ç—Ä–æ–∫–∞ 4)

#### üìÑ cpp.ts

#### üìÑ c.ts

#### üìÑ c-sharp.ts

### üìÇ build-src/src/services/tree-sitter/__tests__

#### üìÑ parseSourceCodeDefinitions.zig.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("file.zig", sampleZig, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.vue.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.vue", sampleVue, {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `lines = parseResult?.split("\n") || []` (—Å—Ç—Ä–æ–∫–∞ 57)
- `templateIndex = lines.findIndex((line) => line.includes("| <template>"))` (—Å—Ç—Ä–æ–∫–∞ 58)
- `scriptIndex = lines.findIndex((line) => line.includes("| <script>"))` (—Å—Ç—Ä–æ–∫–∞ 59)
- `styleIndex = lines.findIndex((line) => line.includes("| <style>"))` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ parseSourceCodeDefinitions.typescript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ts", sampleTypeScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ parseSourceCodeDefinitions.tsx.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parseResult = await testParseSourceCodeDefinitions("test.tsx", sampleTsxContent, {` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ parseSourceCodeDefinitions.toml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.toml", sampleToml, {` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ parseSourceCodeDefinitions.tlaplus.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = await testParseSourceCodeDefinitions("test.tla", sampleTLAPlusContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 29)

#### üìÑ parseSourceCodeDefinitions.systemrdl.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.rdl", sampleSystemRDLContent, {` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ parseSourceCodeDefinitions.swift.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ parseSourceCodeDefinitions.solidity.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.sol", sampleSolidity, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.scala.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `scalaOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.rust.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rustOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("/test/file.rs", sampleRustContent, rustOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.ruby.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `rubyOptions = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, rubyOptions)` (—Å—Ç—Ä–æ–∫–∞ 103)

#### üìÑ parseSourceCodeDefinitions.python.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pythonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 30)

#### üìÑ parseSourceCodeDefinitions.php.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `phpOptions = {` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ parseSourceCodeDefinitions.ocaml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ml", sampleOCaml, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ parseSourceCodeDefinitions.lua.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `luaOptions = {` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ parseSourceCodeDefinitions.kotlin.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleKotlinContent, "kotlin")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("/test/file.kt", sampleKotlinContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ parseSourceCodeDefinitions.json.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `jsonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `testFile = "/test/test.json"` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ parseSourceCodeDefinitions.javascript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `parseResult = await testParseSourceCodeDefinitions("test.js", sampleJavaScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.java.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await testParseSourceCodeDefinitions("/test/file.java", sampleJavaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ parseSourceCodeDefinitions.html.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = await testParseSourceCodeDefinitions("test.html", sampleHtmlContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ parseSourceCodeDefinitions.go.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `lineRanges = parseResult.match(/\d+--\d+ \|/g)` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ parseSourceCodeDefinitions.embedded_template.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.erb", sampleEmbeddedTemplateContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ parseSourceCodeDefinitions.elixir.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `elixirOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.elisp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await testParseSourceCodeDefinitions("file.el", sampleElispContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `matches = parseResult.match(/\d+--\d+ \|/g) || []` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ parseSourceCodeDefinitions.css.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ parseSourceCodeDefinitions.cpp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = await testParseSourceCodeDefinitions("test.cpp", sampleCppContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 40)

#### üìÑ parseSourceCodeDefinitions.c.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("test.c", sampleCContent, {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ parseSourceCodeDefinitions.c-sharp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `csharpOptions = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `result = await testParseSourceCodeDefinitions("/test/file.cs", sampleCSharpContent, csharpOptions)` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ markdownParser.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `processCaptures(captures: a, lines: s, minComponentLines: n): string | null` (—Å—Ç—Ä–æ–∫–∞ 503)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = `# Heading 1` (—Å—Ç—Ä–æ–∫–∞ 5)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `content = `Heading 1` (—Å—Ç—Ä–æ–∫–∞ 36)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `content = `# Main Title` (—Å—Ç—Ä–æ–∫–∞ 62)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = processCaptures(captures, lines, 4)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `content = `This is just some text.` (—Å—Ç—Ä–æ–∫–∞ 103)
- `content = `# Section 1` (—Å—Ç—Ä–æ–∫–∞ 111)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `content = `# Main Title` (—Å—Ç—Ä–æ–∫–∞ 135)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `content = `# Header with *italic* and **bold**` (—Å—Ç—Ä–æ–∫–∞ 172)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `content = `# First header` (—Å—Ç—Ä–æ–∫–∞ 192)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `lastHeaderIndex = captures.length - 2 // Second-to-last capture is the name of the last header` (—Å—Ç—Ä–æ–∫–∞ 205)
- `content = `# Header 1` (—Å—Ç—Ä–æ–∫–∞ 211)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = `# Header with code block` (—Å—Ç—Ä–æ–∫–∞ 232)
- `x = 1` (—Å—Ç—Ä–æ–∫–∞ 234)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `content = `# Header 1` (—Å—Ç—Ä–æ–∫–∞ 258)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `formatted1 = formatMarkdownCaptures(captures)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `formatted2 = formatMarkdownCaptures(captures, 2)` (—Å—Ç—Ä–æ–∫–∞ 280)
- `formatted3 = formatMarkdownCaptures(captures, 1)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `content = `# ATX Header 1` (—Å—Ç—Ä–æ–∫–∞ 296)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `content = `# Top Level Document` (—Å—Ç—Ä–æ–∫–∞ 323)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `headerLevels = captures` (—Å—Ç—Ä–æ–∫–∞ 364)
- `h1Captures = captures.filter((c) => c.name === "name.definition.header.h1")` (—Å—Ç—Ä–æ–∫–∞ 371)
- `h5Captures = captures.filter((c) => c.name === "name.definition.header.h5")` (—Å—Ç—Ä–æ–∫–∞ 372)
- `content = `#Header without space` (—Å—Ç—Ä–æ–∫–∞ 382)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 400)
- `validHeaders = captures.filter((c) => c.name.startsWith("name."))` (—Å—Ç—Ä–æ–∫–∞ 407)
- `content = `# One line header` (—Å—Ç—Ä–æ–∫–∞ 417)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 444)
- `formatted = formatMarkdownCaptures(captures, minLines)` (—Å—Ç—Ä–æ–∫–∞ 448)
- `headerPrefix = "#".repeat(i)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `content = `## Section Header` (—Å—Ç—Ä–æ–∫–∞ 466)
- `captures = parseMarkdown(content)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `formatted = formatMarkdownCaptures(captures)` (—Å—Ç—Ä–æ–∫–∞ 482)
- `licenseCapture = captures.find((c) => c.node.text === "License")` (—Å—Ç—Ä–æ–∫–∞ 488)
- `licenseCaptureIndex = captures.findIndex((c) => c.node.text === "License")` (—Å—Ç—Ä–æ–∫–∞ 492)
- `licenseDefinitionCapture = captures[licenseCaptureIndex + 1]` (—Å—Ç—Ä–æ–∫–∞ 494)
- `processedLines = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `capture = captures[i]` (—Å—Ç—Ä–æ–∫–∞ 516)
- `startLine = capture.node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 517)
- `endLine = capture.node.endPosition.row` (—Å—Ç—Ä–æ–∫–∞ 518)
- `sectionLength = endLine - startLine + 1` (—Å—Ç—Ä–æ–∫–∞ 521)
- `lineKey = `${startLine}-${endLine}`` (—Å—Ç—Ä–æ–∫–∞ 524)
- `headerLevel = parseInt(capture.name.charAt(capture.name.length - 1)) || 1` (—Å—Ç—Ä–æ–∫–∞ 532)
- `headerPrefix = "#".repeat(headerLevel)` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ markdownIntegration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await parseSourceCodeDefinitionsForFile("test.md")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `markdownContent = "This is just some text.\nNo headers here.\nJust plain text."` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = await parseSourceCodeDefinitionsForFile("no-headers.md")` (—Å—Ç—Ä–æ–∫–∞ 55)

#### üìÑ languageParser.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `WASM_DIR = path.join(__dirname, "../../../node_modules/tree-sitter-wasms/out")` (—Å—Ç—Ä–æ–∫–∞ 7)
- `files = ["test.py"]` (—Å—Ç—Ä–æ–∫–∞ 11)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `files = ["test.js", "test.jsx"]` (—Å—Ç—Ä–æ–∫–∞ 17)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `files = ["test.js", "test.py", "test.rs", "test.go"]` (—Å—Ç—Ä–æ–∫–∞ 26)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `files = ["test.c", "test.h", "test.cpp", "test.hpp"]` (—Å—Ç—Ä–æ–∫–∞ 35)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `files = ["test.kt", "test.kts"]` (—Å—Ç—Ä–æ–∫–∞ 44)
- `parsers = await loadRequiredLanguageParsers(files, WASM_DIR)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `files = ["test.unsupported"]` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ inspectZig.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await testParseSourceCodeDefinitions("file.zig", sampleZig, {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ inspectVue.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.vue", sampleVue, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectTypeScript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.ts", sampleTypeScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectTsx.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `result = await inspectTreeStructure(sampleTsxContent, "tsx")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = await testParseSourceCodeDefinitions("test.tsx", sampleTsxContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectTOML.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectTLAPlus.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectSystemRDL.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleSystemRDLContent, "systemrdl")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.rdl", sampleSystemRDLContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectSwift.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = await testParseSourceCodeDefinitions("test.swift", sampleSwiftContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ inspectSolidity.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleSolidity, "solidity")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.sol", sampleSolidity, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectScala.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleScala, "scala")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.scala", sampleScala, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectRust.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleRustContent, "rust")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await testParseSourceCodeDefinitions("test.rs", sampleRustContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ inspectRuby.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.rb", sampleRubyContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectPython.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pythonOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `inspectResult = await inspectTreeStructure(samplePythonContent, "python")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `parseResult = await testParseSourceCodeDefinitions("test.py", samplePythonContent, pythonOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectPhp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(samplePhpContent, "php")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.php", samplePhpContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectOCaml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleOCaml, "ocaml")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.ml", sampleOCaml, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectLua.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("file.lua", sampleLuaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectKotlin.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectJson.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ inspectJavaScript.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.js", sampleJavaScriptContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectJava.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleJavaContent, "java")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.java", sampleJavaContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectHtml.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.html", sampleHtmlContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectGo.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `result = await testParseSourceCodeDefinitions("file.go", sampleGoContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `lines = result!.split("\n").filter((line) => line.trim() && !line.startsWith("#"))` (—Å—Ç—Ä–æ–∫–∞ 41)
- `lineRanges = lines` (—Å—Ç—Ä–æ–∫–∞ 44)
- `match = line.match(/^(\d+)--(\d+)/)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `uniqueLineRanges = [...new Set(lineRanges)]` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ inspectEmbeddedTemplate.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleEmbeddedTemplateContent, "embedded_template")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.erb", sampleEmbeddedTemplateContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectElixir.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleElixirContent, "elixir")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.ex", sampleElixirContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectElisp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await inspectTreeStructure(sampleElispContent, "elisp")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = await testParseSourceCodeDefinitions("test.el", sampleElispContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ inspectCpp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.cpp", sampleCppContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectCSharp.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.cs", sampleCSharpContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ inspectCSS.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.css", sampleCSSContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ inspectC.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testOptions = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = await testParseSourceCodeDefinitions("test.c", sampleCContent, testOptions)` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ index.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `printTree(node: T): string` (—Å—Ç—Ä–æ–∫–∞ 198)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TreeNode` (—Å—Ç—Ä–æ–∫–∞ 185)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await parseSourceCodeForDefinitionsTopLevel("/non/existent/path")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockFiles = ["/test/path/file1.ts", "/test/path/file2.tsx", "/test/path/readme.md"]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `mockFiles = ["/test/path/file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `fileContent = "class TestClass {\n" + "  constructor() {}\n" + "  testMethod() {}\n" + "}"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `mockFiles = ["/test/path/file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 133)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 151)
- `mockFiles = ["/test/path/jsx-arrow.tsx"]` (—Å—Ç—Ä–æ–∫–∞ 156)
- `fixtureContent = `import React from 'react'` (—Å—Ç—Ä–æ–∫–∞ 160)
- `isChecked = e.target.checked` (—Å—Ç—Ä–æ–∫–∞ 166)
- `lines = fixtureContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `printTree = (node: TreeNode, depth = 0): string => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `indent = "  ".repeat(depth)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `capture = mockQuery.captures.mock.results[0].value[0]` (—Å—Ç—Ä–æ–∫–∞ 316)
- `mockFiles = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 332)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 347)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 359)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 365)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 393)
- `mockFiles = ["/test/path/dir\\file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 405)
- `mockParser = {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `mockQuery = {` (—Å—Ç—Ä–æ–∫–∞ 414)
- `result = await parseSourceCodeForDefinitionsTopLevel("/test/path")` (—Å—Ç—Ä–æ–∫–∞ 436)

#### üìÑ helpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalLoad = Language.load` (—Å—Ç—Ä–æ–∫–∞ 38)
- `filename = path.basename(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `correctPath = path.join(process.cwd(), "dist", filename)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `wasmFile = options.wasmFile || "tree-sitter-tsx.wasm"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `queryString = options.queryString || tsxQuery` (—Å—Ç—Ä–æ–∫–∞ 69)
- `extKey = options.extKey || "tsx"` (—Å—Ç—Ä–æ–∫–∞ 70)
- `mockedFs = (await vi.importActual("fs/promises")) as typeof import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `mockedLoadRequiredLanguageParsers = loadRequiredLanguageParsers as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `wasmPath = path.join(process.cwd(), `dist/${wasmFile}`)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `lang = await Language.load(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `query = lang.query(queryString)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = await parseSourceCodeDefinitionsForFile(testFilePath)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `parser = new Parser()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `wasmPath = path.join(process.cwd(), `dist/tree-sitter-${language}.wasm`)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `lang = await Language.load(wasmPath)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tree = parser.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ build-src/src/services/roo-config/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = getGlobalRooDirectory()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `cwd = "/custom/project/path"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = getProjectRooDirectoryForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `result = await directoryExists("/some/path")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await directoryExists("/non/existing/path")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = await directoryExists("/not/a/directory")` (—Å—Ç—Ä–æ–∫–∞ 90)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await directoryExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result = await fileExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await fileExists("/non/existing/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 133)
- `result = await fileExists("/not/a/directory/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 143)
- `result = await fileExists("/some/directory")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await readFileIfExists("/some/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = await readFileIfExists("/non/existing/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `error = new Error("ENOTDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = await readFileIfExists("/not/a/directory/file.txt")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `error = new Error("EISDIR") as any` (—Å—Ç—Ä–æ–∫–∞ 190)
- `result = await readFileIfExists("/is/a/directory")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 200)
- `cwd = "/custom/project/path"` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = getRooDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `error = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 260)
- `result = await loadConfiguration("rules/rules.md", "/project/path")` (—Å—Ç—Ä–æ–∫–∞ 264)
- `error = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 274)
- `globalError = new Error("ENOENT") as any` (—Å—Ç—Ä–æ–∫–∞ 282)
- `projectError = new Error("Permission denied") as any` (—Å—Ç—Ä–æ–∫–∞ 284)

### üìÇ build-src/src/services/ripgrep/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_LINE_LENGTH = 500` (—Å—Ç—Ä–æ–∫–∞ 7)
- `longLine = "a".repeat(600) // Line longer than MAX_LINE_LENGTH` (—Å—Ç—Ä–æ–∫–∞ 10)
- `truncated = truncateLine(longLine)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `shortLine = "Short line of text"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `truncated = truncateLine(shortLine)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `exactLine = "a".repeat(MAX_LINE_LENGTH)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `exactPlusOne = exactLine + "x"` (—Å—Ç—Ä–æ–∫–∞ 28)
- `customLength = 100` (—Å—Ç—Ä–æ–∫–∞ 42)
- `line = "a".repeat(customLength + 50)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `truncated = truncateLine(line, customLength)` (—Å—Ç—Ä–æ–∫–∞ 45)

### üìÇ build-src/src/services/mdm/__tests__

#### üìÑ MdmService.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = fs as any` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockOs = os as any` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockCloudService = CloudService as any` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockVscode = vscode as any` (—Å—Ç—Ä–æ–∫–∞ 68)
- `mockGetClerkBaseUrl = getClerkBaseUrl as any` (—Å—Ç—Ä–æ–∫–∞ 69)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 88)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 133)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 143)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 255)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 269)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 276)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 277)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 299)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 310)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 321)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 322)
- `mockConfig = { requireCloudAuth: true }` (—Å—Ç—Ä–æ–∫–∞ 328)
- `service = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 336)
- `compliance = service.isCompliant()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `service1 = await MdmService.createInstance()` (—Å—Ç—Ä–æ–∫–∞ 359)
- `service2 = MdmService.getInstance()` (—Å—Ç—Ä–æ–∫–∞ 360)

### üìÇ build-src/src/services/mcp/__tests__

#### üìÑ McpHub.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 87)
- `originalPlatform = Object.getOwnPropertyDescriptor(process, "platform")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 172)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 203)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 207)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 252)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 256)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 269)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 301)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 302)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 308)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 346)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 350)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 355)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 363)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 393)
- `callToUse = writeCalls[writeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 397)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 410)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 441)
- `writeCalls = (fs.writeFile as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 442)
- `writeCall = writeCalls.find((call) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 445)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 446)
- `writtenConfig = JSON.parse(callToUse[1])` (—Å—Ç—Ä–æ–∫–∞ 448)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 456)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 489)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 490)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 493)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 494)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `servers = mcpHub.getServers()` (—Å—Ç—Ä–æ–∫–∞ 525)
- `validConfig = {` (—Å—Ç—Ä–æ–∫–∞ 620)
- `invalidConfigs = [` (—Å—Ç—Ä–æ–∫–∞ 628)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 688)
- `normalizedSettingsPath = "/mock/settings/path/cline_mcp_settings.json"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `writeCalls = vi.mocked(fs.writeFile).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 722)
- `writeCall = writeCalls.find((call: any) => call[0] === normalizedSettingsPath)` (—Å—Ç—Ä–æ–∫–∞ 725)
- `callToUse = writeCall || writeCalls[0]` (—Å—Ç—Ä–æ–∫–∞ 726)
- `writtenConfig = JSON.parse(callToUse[1] as string)` (—Å—Ç—Ä–æ–∫–∞ 728)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 733)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 802)
- `validTimeouts = [1, 60, 3600]` (—Å—Ç—Ä–æ–∫–∞ 831)
- `mockConfig = {` (—Å—Ç—Ä–æ–∫–∞ 841)
- `stdioModule = await import("@modelcontextprotocol/sdk/client/stdio.js")` (—Å—Ç—Ä–æ–∫–∞ 889)
- `clientModule = await import("@modelcontextprotocol/sdk/client/index.js")` (—Å—Ç—Ä–æ–∫–∞ 890)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 905)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 937)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 973)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 999)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1061)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1130)
- `mockTransport = {` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `mcpHub = new McpHub(mockProvider as ClineProvider)` (—Å—Ç—Ä–æ–∫–∞ 1203)

### üìÇ build-src/src/services/marketplace/__tests__

#### üìÑ optional-parameters.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `param = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `param = {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = mcpParameterSchema.parse(param)` (—Å—Ç—Ä–æ–∫–∞ 47)

#### üìÑ nested-parameters.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `method = {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 12)
- `method = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `method = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = mcpInstallationMethodSchema.parse(method)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 102)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 165)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 187)
- `item = {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `result = mcpMarketplaceItemSchema.parse(item)` (—Å—Ç—Ä–æ–∫–∞ 223)
- `methods = result.content as McpInstallationMethod[]` (—Å—Ç—Ä–æ–∫–∞ 226)

#### üìÑ marketplace-setting-check.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockMarketplaceManager = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `mockInstallMarketplaceItem = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockMarketplaceManagerWithInstall = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 54)

#### üìÑ SimpleInstaller.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await installer.installItem(mockModeItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 81)
- `importCall = (mockCustomModesManager.importModeWithRules as any).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `importedYaml = importCall[0]` (—Å—Ç—Ä–æ–∫–∞ 88)
- `importedData = yaml.parse(importedYaml)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `installerWithoutManager = new SimpleInstaller(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await installerWithoutManager.installItem(mockModeItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `notFoundError = new Error("File not found") as any` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result = await installer.installItem(mockMcpItem, { target: "project" })` (—Å—Ç—Ä–æ–∫–∞ 160)
- `writtenContent = mockFs.writeFile.mock.calls[0][1] as string` (—Å—Ç—Ä–æ–∫–∞ 166)
- `writtenData = JSON.parse(writtenContent)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `invalidJson = '{ "mcpServers": { invalid json'` (—Å—Ç—Ä–æ–∫–∞ 172)
- `existingContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 185)
- `writtenContent = mockFs.writeFile.mock.calls[0][1] as string` (—Å—Ç—Ä–æ–∫–∞ 196)
- `writtenData = JSON.parse(writtenContent)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `installerWithoutManager = new SimpleInstaller(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 342)

#### üìÑ RemoteConfigLoader.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 34)
- `items = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 100)
- `items1 = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `items2 = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 135)
- `items = await loader.loadAllItems()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `invalidModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 177)
- `validMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 181)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 205)
- `mockMcpsYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 211)
- `modeItem = await loader.getItem("target-mode", "mode" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `mcpItem = await loader.getItem("target-mcp", "mcp" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 229)
- `notFound = await loader.getItem("nonexistent", "mode" as MarketplaceItemType)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 255)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockModesYaml = `items:` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockMcpsYaml = `items: []`` (—Å—Ç—Ä–æ–∫–∞ 298)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ MarketplaceManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `filtered = manager.filterItems(items, { search: "test" })` (—Å—Ç—Ä–æ–∫–∞ 109)
- `filtered = manager.filterItems(items, { type: "mode" })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `filtered = manager.filterItems(items, { search: "nonexistent" })` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 227)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 271)
- `result = await manager.getMarketplaceItems()` (—Å—Ç—Ä–æ–∫–∞ 298)
- `result = await manager.installMarketplaceItem(item)` (—Å—Ç—Ä–æ–∫–∞ 322)
- `result = await manager.installMarketplaceItem(item)` (—Å—Ç—Ä–æ–∫–∞ 344)

### üìÇ build-src/src/services/glob/__tests__

#### üìÑ list-files.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = await vi.importActual("../list-files")` (—Å—Ç—Ä–æ–∫–∞ 19)
- `result = await listFiles("/test/path", true, 0)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `testDir = "/test/dir"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `lastArg = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 112)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `testDir = "/test/dir"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `lastArg = args[args.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 159)
- `mockReaddir = vi.mocked(fs.promises.readdir)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 180)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `directories = results.filter((r) => r.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 228)
- `hasADir = results.some((r) => r.endsWith("a_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 235)
- `hasBDir = results.some((r) => r.endsWith("b_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 236)
- `hasCDir = results.some((r) => r.endsWith("c_dir/"))` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `directories = result.filter((item) => item.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 299)
- `hasSrcDir = directories.some((dir) => dir.endsWith("/test/src/") || dir.endsWith("src/"))` (—Å—Ç—Ä–æ–∫–∞ 302)
- `hasComponentsDir = directories.some(` (—Å—Ç—Ä–æ–∫–∞ 303)
- `hasGitDir = directories.some((dir) => dir.includes(".git/"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `directories = result.filter((item) => item.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 354)
- `hasTasksDir = directories.some((dir) => dir.includes(".neira-memory/tasks/") || dir.includes("tasks/"))` (—Å—Ç—Ä–æ–∫–∞ 356)
- `hasContextDir = directories.some(` (—Å—Ç—Ä–æ–∫–∞ 357)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 369)
- `mockReaddir = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 396)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 410)
- `fileNames = files.map((f) => path.basename(f))` (—Å—Ç—Ä–æ–∫–∞ 414)
- `topLevelFile = files.find((f) => f.endsWith("teste1.md"))` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 459)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 464)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 493)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 499)
- `gIndex = args.indexOf("-g")` (—Å—Ç—Ä–æ–∫–∞ 527)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ gitignore-test.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 141)

#### üìÑ gitignore-integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockSpawn = vi.mocked(childProcess.spawn)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `files = [path.join(tempDir, "src"), path.join(tempDir, "allowed-dir")].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 174)
- `directoriesInResult = files.filter((f) => f.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 200)

### üìÇ build-src/src/services/glob/__mocks__

#### üìÑ list-files.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockResolve(dirPath: s): string` - Mock function for path resolving without importing path module Provides basic path resolution for testing (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockResolve = (dirPath: string): string => {` - Mock function for path resolving without importing path module Provides basic path resolution for testing (—Å—Ç—Ä–æ–∫–∞ 20)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ build-src/src/services/command/__tests__

#### üìÑ frontmatter-commands.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 38)
- `commandContent = `# Setup Command` (—Å—Ç—Ä–æ–∫–∞ 51)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 105)
- `projectCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 118)
- `globalCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `globalCommandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await getCommand("/test/cwd", "setup")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await getCommand("/test/cwd", "release")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = await getCommand("/test/cwd", "deploy")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 233)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 263)
- `commandContent = `---` (—Å—Ç—Ä–æ–∫–∞ 269)
- `result = await getCommand("/test/cwd", "test")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `setupContent = `---` (—Å—Ç—Ä–æ–∫–∞ 289)
- `deployContent = `---` (—Å—Ç—Ä–æ–∫–∞ 297)
- `buildContent = `# Build Command` (—Å—Ç—Ä–æ–∫–∞ 305)
- `result = await getCommands("/test/cwd")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `releaseContent = `---` (—Å—Ç—Ä–æ–∫–∞ 347)
- `deployContent = `---` (—Å—Ç—Ä–æ–∫–∞ 356)
- `result = await getCommands("/test/cwd")` (—Å—Ç—Ä–æ–∫–∞ 372)

### üìÇ build-src/src/services/code-index/vector-store

#### üìÑ qdrant-client.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsedUrl = this.parseQdrantUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `urlObj = new URL(parsedUrl)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `hash = createHash("sha256").update(workspacePath).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `trimmedUrl = url.trim()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `parsedUrl = new URL(trimmedUrl)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `collectionInfo = await this.client.getCollection(this.collectionName)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `collectionInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `vectorsConfig = collectionInfo.config?.params?.vectors` (—Å—Ç—Ä–æ–∫–∞ 163)
- `errorMessage = error?.message || error` (—Å—Ç—Ä–æ–∫–∞ 191)
- `verificationInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `errorMessage = recreationError instanceof Error ? recreationError.message : String(recreationError)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `dimensionMismatchError = new Error(` (—Å—Ç—Ä–æ–∫–∞ 269)
- `errorMessage = (indexError?.message || "").toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `processedPoints = points.map((point) => {` (—Å—Ç—Ä–æ–∫–∞ 315)
- `segments = point.payload.filePath.split(path.sep).filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `pathSegments = segments.reduce(` (—Å—Ç—Ä–æ–∫–∞ 318)
- `validKeys = ["filePath", "codeChunk", "startLine", "endLine"]` (—Å—Ç—Ä–æ–∫–∞ 355)
- `hasValidKeys = validKeys.every((key) => key in payload)` (—Å—Ç—Ä–æ–∫–∞ 356)
- `normalizedPrefix = path.posix.normalize(directoryPrefix.replace(/\\/g, "/"))` (—Å—Ç—Ä–æ–∫–∞ 379)
- `cleanedPrefix = path.posix.normalize(` (—Å—Ç—Ä–æ–∫–∞ 386)
- `segments = cleanedPrefix.split("/").filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `searchRequest = {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `operationResult = await this.client.query(this.collectionName, searchRequest)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `filteredPoints = operationResult.points.filter((p) => this.isPayloadValid(p.payload))` (—Å—Ç—Ä–æ–∫–∞ 416)
- `collectionExists = await this.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 440)
- `workspaceRoot = getWorkspacePath()` (—Å—Ç—Ä–æ–∫–∞ 448)
- `filters = filePaths.map((filePath) => {` (—Å—Ç—Ä–æ–∫–∞ 451)
- `relativePath = path.isAbsolute(filePath) ? path.relative(workspaceRoot, filePath) : filePath` (—Å—Ç—Ä–æ–∫–∞ 454)
- `normalizedRelativePath = path.normalize(relativePath)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `segments = normalizedRelativePath.split(path.sep).filter(Boolean)` (—Å—Ç—Ä–æ–∫–∞ 460)
- `mustConditions = segments.map((segment, index) => ({` (—Å—Ç—Ä–æ–∫–∞ 464)
- `filter = filters.length === 1 ? filters[0] : { should: filters }` (—Å—Ç—Ä–æ–∫–∞ 473)
- `errorMessage = error?.message || String(error)` (—Å—Ç—Ä–æ–∫–∞ 481)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 482)
- `errorDetails = error?.response?.data || error?.data || ""` (—Å—Ç—Ä–æ–∫–∞ 483)
- `collectionInfo = await this.getCollectionInfo()` (—Å—Ç—Ä–æ–∫–∞ 536)

### üìÇ build-src/src/services/code-index/shared

#### üìÑ validation-helpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `match = error.message.match(/HTTP (\d+):/)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `serialized = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `serialized = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `serializedError = serializeError(error)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `customResult = customHandlers.beforeStandardHandling(error)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `statusCode = extractStatusCode(serializedError)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `errorMessage = extractErrorMessage(serializedError)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `statusError = getErrorMessageForStatus(statusCode, embedderType)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `errorMessage = extractErrorMessage(error)` - Formats an embedding error message based on the error type and context (—Å—Ç—Ä–æ–∫–∞ 219)
- `statusCode = extractStatusCode(error)` (—Å—Ç—Ä–æ–∫–∞ 220)

#### üìÑ supported-extensions.ts

#### üìÑ get-relative-path.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `resolvedPath = path.resolve(workspaceRoot, filePath)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `relativePath = path.relative(workspaceRoot, normalizedAbsolutePath)` (—Å—Ç—Ä–æ–∫–∞ 28)

### üìÇ build-src/src/services/code-index/processors

#### üìÑ scanner.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `directoryPath = directory` (—Å—Ç—Ä–æ–∫–∞ 56)
- `scanWorkspace = getWorkspacePathForContext(directoryPath)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `filePaths = allPaths.filter((p) => !p.endsWith("/"))` (—Å—Ç—Ä–æ–∫–∞ 64)
- `ignoreController = new RooIgnoreController(directoryPath)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `allowedPaths = ignoreController.filterPaths(filePaths)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `supportedPaths = allowedPaths.filter((filePath) => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `relativeFilePath = generateRelativeFilePath(filePath, scanWorkspace)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `processedFiles = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `parseLimiter = pLimit(PARSING_CONCURRENCY) // Concurrency for file parsing` (—Å—Ç—Ä–æ–∫–∞ 93)
- `batchLimiter = pLimit(BATCH_PROCESSING_CONCURRENCY) // Concurrency for batch processing` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mutex = new Mutex()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `activeBatchPromises = new Set<Promise<void>>()` (—Å—Ç—Ä–æ–∫–∞ 101)
- `parsePromises = supportedPaths.map((filePath) =>` (—Å—Ç—Ä–æ–∫–∞ 108)
- `stats = await stat(filePath)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `content = await vscode.workspace.fs` (—Å—Ç—Ä–æ–∫–∞ 119)
- `currentFileHash = createHash("sha256").update(content).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `cachedFileHash = this.cacheManager.getHash(filePath)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `isNewFile = !cachedFileHash` (—Å—Ç—Ä–æ–∫–∞ 129)
- `blocks = await this.codeParser.parseFile(filePath, { content, fileHash: currentFileHash })` (—Å—Ç—Ä–æ–∫–∞ 137)
- `fileBlockCount = blocks.length` (—Å—Ç—Ä–æ–∫–∞ 138)
- `trimmedContent = block.content.trim()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 149)
- `batchBlocks = [...currentBatchBlocks]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `batchTexts = [...currentBatchTexts]` (—Å—Ç—Ä–æ–∫–∞ 165)
- `batchFileInfos = [...currentBatchFileInfos]` (—Å—Ç—Ä–æ–∫–∞ 166)
- `batchPromise = batchLimiter(() =>` (—Å—Ç—Ä–æ–∫–∞ 175)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `release = await mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 243)
- `batchBlocks = [...currentBatchBlocks]` (—Å—Ç—Ä–æ–∫–∞ 246)
- `batchTexts = [...currentBatchTexts]` (—Å—Ç—Ä–æ–∫–∞ 247)
- `batchFileInfos = [...currentBatchFileInfos]` (—Å—Ç—Ä–æ–∫–∞ 248)
- `batchPromise = batchLimiter(() =>` (—Å—Ç—Ä–æ–∫–∞ 257)
- `oldHashes = this.cacheManager.getAllHashes()` (—Å—Ç—Ä–æ–∫–∞ 276)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 285)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `uniqueFilePaths = [` (—Å—Ç—Ä–æ–∫–∞ 348)
- `errorMessage = deleteError instanceof Error ? deleteError.message : String(deleteError)` (—Å—Ç—Ä–æ–∫–∞ 361)
- `points = batchBlocks.map((block, index) => {` (—Å—Ç—Ä–æ–∫–∞ 392)
- `normalizedAbsolutePath = generateNormalizedAbsolutePath(block.file_path, scanWorkspace)` (—Å—Ç—Ä–æ–∫–∞ 393)
- `pointId = uuidv5(block.segmentHash, QDRANT_CODE_BLOCK_NAMESPACE)` (—Å—Ç—Ä–æ–∫–∞ 396)
- `delay = INITIAL_RETRY_DELAY_MS * Math.pow(2, attempts - 1)` (—Å—Ç—Ä–æ–∫–∞ 435)
- `errorMessage = lastError.message || "Unknown error"` (—Å—Ç—Ä–æ–∫–∞ 445)

#### üìÑ parser.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `finalizeChunk(endLineIndex: n)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `createSegmentBlock(segment: s, originalLineNumber: n, startCharIndex: n)` (—Å—Ç—Ä–æ–∫–∞ 273)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `ext = path.extname(filePath).slice(1).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `seenSegmentHashes = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `pendingLoad = this.pendingLoads.get(ext)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `loadPromise = loadRequiredLanguageParsers([filePath])` (—Å—Ç—Ä–æ–∫–∞ 120)
- `newParsers = await loadPromise` (—Å—Ç—Ä–æ–∫–∞ 123)
- `language = this.loadedParsers[ext]` (—Å—Ç—Ä–æ–∫–∞ 141)
- `tree = language.parser.parse(content)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `captures = tree ? language.query.captures(tree.rootNode) : []` (—Å—Ç—Ä–æ–∫–∞ 151)
- `blocks = this._performFallbackChunking(filePath, content, fileHash, seenSegmentHashes)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `currentNode = queue.shift()!` (—Å—Ç—Ä–æ–∫–∞ 171)
- `chunkedBlocks = this._chunkLeafNodeByLines(` (—Å—Ç—Ä–æ–∫–∞ 183)
- `type = currentNode.type` (—Å—Ç—Ä–æ–∫–∞ 197)
- `start_line = currentNode.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 198)
- `end_line = currentNode.endPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 199)
- `content = currentNode.text` (—Å—Ç—Ä–æ–∫–∞ 200)
- `contentPreview = content.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `effectiveMaxChars = MAX_BLOCK_CHARS * MAX_CHARS_TOLERANCE_FACTOR` (—Å—Ç—Ä–æ–∫–∞ 242)
- `finalizeChunk = (endLineIndex: number) => {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `chunkContent = currentChunkLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 246)
- `startLine = baseStartLine + chunkStartLineIndex` (—Å—Ç—Ä–æ–∫–∞ 247)
- `endLine = baseStartLine + endLineIndex` (—Å—Ç—Ä–æ–∫–∞ 248)
- `contentPreview = chunkContent.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 250)
- `createSegmentBlock = (segment: string, originalLineNumber: number, startCharIndex: number) => {` (—Å—Ç—Ä–æ–∫–∞ 273)
- `segmentPreview = segment.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 297)
- `lineLength = line.length + (i < lines.length - 1 ? 1 : 0) // +1 for newline, except last line` (—Å—Ç—Ä–æ–∫–∞ 298)
- `originalLineNumber = baseStartLine + i` (—Å—Ç—Ä–æ–∫–∞ 299)
- `segment = remainingLineContent.substring(0, MAX_BLOCK_CHARS)` (—Å—Ç—Ä–æ–∫–∞ 312)
- `potentialChunkLines = lines.slice(chunkStartLineIndex, k + 1)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `potentialChunkLength = potentialChunkLines.join("\n").length + 1` (—Å—Ç—Ä–æ–∫–∞ 338)
- `potentialNextChunkLines = lines.slice(k + 1)` (—Å—Ç—Ä–æ–∫–∞ 339)
- `potentialNextChunkLength = potentialNextChunkLines.join("\n").length + 1` (—Å—Ç—Ä–æ–∫–∞ 340)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `lines = node.text.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 391)
- `baseStartLine = node.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 392)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `chunks = this._chunkTextByLines(lines, filePath, fileHash, type, seenSegmentHashes, startLine)` (—Å—Ç—Ä–æ–∫–∞ 428)
- `endLine = startLine + lines.length - 1` (—Å—Ç—Ä–æ–∫–∞ 439)
- `contentPreview = content.slice(0, 100)` (—Å—Ç—Ä–æ–∫–∞ 440)
- `segmentHash = createHash("sha256")` (—Å—Ç—Ä–æ–∫–∞ 441)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `markdownCaptures = parseMarkdown(content) || []` (—Å—Ç—Ä–æ–∫–∞ 471)
- `firstHeaderLine = markdownCaptures[0].node.startPosition.row` (—Å—Ç—Ä–æ–∫–∞ 483)
- `preHeaderLines = lines.slice(0, firstHeaderLine)` (—Å—Ç—Ä–æ–∫–∞ 485)
- `preHeaderBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 486)
- `nameCapture = markdownCaptures[i]` (—Å—Ç—Ä–æ–∫–∞ 500)
- `definitionCapture = markdownCaptures[i + 1]` (—Å—Ç—Ä–æ–∫–∞ 503)
- `startLine = definitionCapture.node.startPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 507)
- `endLine = definitionCapture.node.endPosition.row + 1` (—Å—Ç—Ä–æ–∫–∞ 508)
- `sectionLines = lines.slice(startLine - 1, endLine)` (—Å—Ç—Ä–æ–∫–∞ 509)
- `headerMatch = nameCapture.name.match(/\.h(\d)$/)` (—Å—Ç—Ä–æ–∫–∞ 512)
- `headerLevel = headerMatch ? parseInt(headerMatch[1]) : 1` (—Å—Ç—Ä–æ–∫–∞ 513)
- `headerText = nameCapture.node.text` (—Å—Ç—Ä–æ–∫–∞ 514)
- `sectionBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 516)
- `remainingLines = lines.slice(lastProcessedLine)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `remainingBlocks = this.processMarkdownSection(` (—Å—Ç—Ä–æ–∫–∞ 533)

#### üìÑ index.ts

#### üìÑ file-watcher.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePattern = new vscode.RelativePattern(` (—Å—Ç—Ä–æ–∫–∞ 93)
- `eventsToProcess = new Map(this.accumulatedEvents)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `filePathsInBatch = Array.from(eventsToProcess.keys())` (—Å—Ç—Ä–æ–∫–∞ 167)
- `allPathsToClearFromDB = new Set<string>(pathsToExplicitlyDelete)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `errorStatus = error?.status || error?.response?.status || error?.statusCode` (—Å—Ç—Ä–æ–∫–∞ 208)
- `errorMessage = error instanceof Error ? error.message : String(error)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `filesToProcessConcurrently = [...filesToUpsertDetails]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `chunkToProcess = filesToProcessConcurrently.slice(i, i + this.FILE_PROCESSING_CONCURRENCY_LIMIT)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `chunkProcessingPromises = chunkToProcess.map(async (fileDetail) => {` (—Å—Ç—Ä–æ–∫–∞ 254)
- `result = await this.processFile(fileDetail.path)` (—Å—Ç—Ä–æ–∫–∞ 261)
- `error = e as Error` (—Å—Ç—Ä–æ–∫–∞ 264)
- `settledChunkResults = await Promise.allSettled(chunkProcessingPromises)` (—Å—Ç—Ä–æ–∫–∞ 270)
- `error = settledResult.reason as Error` (—Å—Ç—Ä–æ–∫–∞ 308)
- `rejectedPath = (settledResult.reason as any)?.path || "unknown"` (—Å—Ç—Ä–æ–∫–∞ 309)
- `batch = pointsForBatchUpsert.slice(i, i + BATCH_SEGMENT_THRESHOLD)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `err = error as Error` (—Å—Ç—Ä–æ–∫–∞ 382)
- `totalFilesInBatch = eventsToProcess.size` (—Å—Ç—Ä–æ–∫–∞ 409)
- `relativeFilePath = generateRelativeFilePath(filePath, this.workspacePath)` (—Å—Ç—Ä–æ–∫–∞ 504)
- `fileStat = await vscode.workspace.fs.stat(vscode.Uri.file(filePath))` (—Å—Ç—Ä–æ–∫–∞ 517)
- `fileContent = await vscode.workspace.fs.readFile(vscode.Uri.file(filePath))` (—Å—Ç—Ä–æ–∫–∞ 527)
- `content = fileContent.toString()` (—Å—Ç—Ä–æ–∫–∞ 528)
- `newHash = createHash("sha256").update(content).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `blocks = await codeParser.parseFile(filePath, { content, fileHash: newHash })` (—Å—Ç—Ä–æ–∫–∞ 543)
- `texts = blocks.map((block) => block.content)` (—Å—Ç—Ä–æ–∫–∞ 548)
- `normalizedAbsolutePath = generateNormalizedAbsolutePath(block.file_path, this.workspacePath)` (—Å—Ç—Ä–æ–∫–∞ 552)
- `stableName = `${normalizedAbsolutePath}:${block.start_line}`` (—Å—Ç—Ä–æ–∫–∞ 553)
- `pointId = uuidv5(stableName, QDRANT_CODE_BLOCK_NAMESPACE)` (—Å—Ç—Ä–æ–∫–∞ 554)

### üìÇ build-src/src/services/code-index/interfaces

#### üìÑ vector-store.ts

#### üìÑ manager.ts

#### üìÑ index.ts

#### üìÑ file-processor.ts

#### üìÑ embedder.ts

#### üìÑ config.ts

#### üìÑ cache.ts

### üìÇ build-src/src/services/code-index/embedders

#### üìÑ openai.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `apiKey = this.options.openAiNativeApiKey ?? "not-provided"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 42)
- `queryPrefix = getModelQueryPrefix("openai", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 46)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 52)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `usage = { promptTokens: 0, totalTokens: 0 }` (—Å—Ç—Ä–æ–∫–∞ 70)
- `remainingTexts = [...processedTexts]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `text = remainingTexts[i]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `itemTokens = Math.ceil(text.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `batchResult = await this._embedBatchWithRetries(currentBatch, modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `response = await this.embeddingsClient.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 131)
- `hasMoreAttempts = attempts < MAX_RETRIES - 1` (—Å—Ç—Ä–æ–∫–∞ 144)
- `httpError = error as HttpError` (—Å—Ç—Ä–æ–∫–∞ 147)
- `delayMs = INITIAL_DELAY_MS * Math.pow(2, attempts)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `response = await this.embeddingsClient.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 188)

#### üìÑ openai-compatible.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface EmbeddingItem` (—Å—Ç—Ä–æ–∫–∞ 16)

- `interface OpenAIEmbeddingResponse` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 86)
- `queryPrefix = getModelQueryPrefix("openai-compatible", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 90)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 96)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `usage = { promptTokens: 0, totalTokens: 0 }` (—Å—Ç—Ä–æ–∫–∞ 114)
- `remainingTexts = [...processedTexts]` (—Å—Ç—Ä–æ–∫–∞ 115)
- `text = remainingTexts[i]` (—Å—Ç—Ä–æ–∫–∞ 123)
- `itemTokens = Math.ceil(text.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `batchResult = await this._embedBatchWithRetries(currentBatch, modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `patterns = [` (—Å—Ç—Ä–æ–∫–∞ 171)
- `response = await fetch(url, {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `status = response?.status || 0` (—Å—Ç—Ä–æ–∫–∞ 215)
- `error = new Error(`HTTP ${status}: ${errorText}`) as HttpError` (—Å—Ç—Ä–æ–∫–∞ 227)
- `error = new Error(`Failed to parse response JSON`) as HttpError` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isFullUrl = this.isFullUrl` (—Å—Ç—Ä–æ–∫–∞ 252)
- `processedEmbeddings = response.data.map((item: EmbeddingItem) => {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `buffer = Buffer.from(item.embedding, "base64")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `float32Array = new Float32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 4)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `embeddings = response.data.map((item) => item.embedding as number[])` (—Å—Ç—Ä–æ–∫–∞ 295)
- `hasMoreAttempts = attempts < MAX_RETRIES - 1` (—Å—Ç—Ä–æ–∫–∞ 313)
- `httpError = error as HttpError` (—Å—Ç—Ä–æ–∫–∞ 316)
- `baseDelay = INITIAL_DELAY_MS * Math.pow(2, attempts)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `globalDelay = await this.getGlobalRateLimitDelay()` (—Å—Ç—Ä–æ–∫–∞ 324)
- `delayMs = Math.max(baseDelay, globalDelay)` (—Å—Ç—Ä–æ–∫–∞ 325)
- `testTexts = ["test"]` (—Å—Ç—Ä–æ–∫–∞ 358)
- `modelToUse = this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 359)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 409)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 411)
- `waitTime = state.rateLimitResetTime - Date.now()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 440)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 442)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 443)
- `baseDelay = 5000 // 5 seconds base` (—Å—Ç—Ä–æ–∫–∞ 456)
- `maxDelay = 300000 // 5 minutes max` (—Å—Ç—Ä–æ–∫–∞ 457)
- `exponentialDelay = Math.min(baseDelay * Math.pow(2, state.consecutiveRateLimitErrors - 1), maxDelay)` (—Å—Ç—Ä–æ–∫–∞ 458)
- `release = await OpenAICompatibleEmbedder.globalRateLimitState.mutex.acquire()` (—Å—Ç—Ä–æ–∫–∞ 474)
- `state = OpenAICompatibleEmbedder.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 476)

#### üìÑ ollama.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `OLLAMA_EMBEDDING_TIMEOUT_MS = 60000 // 60 seconds for embedding requests` (—Å—Ç—Ä–æ–∫–∞ 11)
- `OLLAMA_VALIDATION_TIMEOUT_MS = 30000 // 30 seconds for validation requests` (—Å—Ç—Ä–æ–∫–∞ 12)
- `modelToUse = model || this.defaultModelId` (—Å—Ç—Ä–æ–∫–∞ 39)
- `url = `${this.baseUrl}/api/embed` // Endpoint as specified` (—Å—Ç—Ä–æ–∫–∞ 40)
- `queryPrefix = getModelQueryPrefix("ollama", modelToUse)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `processedTexts = queryPrefix` (—Å—Ç—Ä–æ–∫–∞ 44)
- `prefixedText = `${queryPrefix}${text}`` (—Å—Ç—Ä–æ–∫–∞ 50)
- `estimatedTokens = Math.ceil(prefixedText.length / 4)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `timeoutId = setTimeout(() => controller.abort(), OLLAMA_EMBEDDING_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `response = await fetch(url, {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `embeddings = data.embeddings` (—Å—Ç—Ä–æ–∫–∞ 107)
- `modelsUrl = `${this.baseUrl}/api/tags`` (—Å—Ç—Ä–æ–∫–∞ 148)
- `controller = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `timeoutId = setTimeout(() => controller.abort(), OLLAMA_VALIDATION_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `modelsResponse = await fetch(modelsUrl, {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `modelsData = await modelsResponse.json()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `models = modelsData.models || []` (—Å—Ç—Ä–æ–∫–∞ 181)
- `modelExists = models.some((m: any) => {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `modelName = m.name || ""` (—Å—Ç—Ä–æ–∫–∞ 185)
- `availableModels = models.map((m: any) => m.name).join(", ")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `testUrl = `${this.baseUrl}/api/embed`` (—Å—Ç—Ä–æ–∫–∞ 205)
- `testController = new AbortController()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `testTimeoutId = setTimeout(() => testController.abort(), OLLAMA_VALIDATION_TIMEOUT_MS)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `testResponse = await fetch(testUrl, {` (—Å—Ç—Ä–æ–∫–∞ 211)

#### üìÑ mistral.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.modelId` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ gemini.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelToUse = model || this.modelId` (—Å—Ç—Ä–æ–∫–∞ 53)

### üìÇ build-src/src/services/code-index/constants

#### üìÑ index.ts

### üìÇ build-src/src/services/code-index/__tests__

#### üìÑ service-factory.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAiEmbedder = OpenAiEmbedder as MockedClass<typeof OpenAiEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 31)
- `MockedCodeIndexOllamaEmbedder = CodeIndexOllamaEmbedder as MockedClass<typeof CodeIndexOllamaEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 32)
- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 33)
- `MockedGeminiEmbedder = GeminiEmbedder as MockedClass<typeof GeminiEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 34)
- `MockedQdrantVectorStore = QdrantVectorStore as MockedClass<typeof QdrantVectorStore>` (—Å—Ç—Ä–æ–∫–∞ 35)
- `mockGetDefaultModelId = getDefaultModelId as MockedFunction<typeof getDefaultModelId>` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockGetModelDimension = getModelDimension as MockedFunction<typeof getModelDimension>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `testModelId = "nomic-embed-text:latest"` (—Å—Ç—Ä–æ–∫–∞ 84)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 163)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 225)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 270)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 305)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 331)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 350)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 351)
- `testModelId = "nomic-embed-text:latest"` (—Å—Ç—Ä–æ–∫–∞ 375)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 376)
- `testModelId = "text-embedding-3-large"` (—Å—Ç—Ä–æ–∫–∞ 400)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 425)
- `manualDimension = 1024` (—Å—Ç—Ä–æ–∫–∞ 426)
- `modelDimension = 768` (—Å—Ç—Ä–æ–∫–∞ 427)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 428)
- `testModelId = "unknown-model"` (—Å—Ç—Ä–æ–∫–∞ 457)
- `manualDimension = 1024` (—Å—Ç—Ä–æ–∫–∞ 458)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 459)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 488)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 489)
- `testModelId = "custom-model"` (—Å—Ç—Ä–æ–∫–∞ 517)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 518)
- `testModelId = "unknown-model"` (—Å—Ç—Ä–æ–∫–∞ 540)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 541)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 562)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 586)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 635)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 650)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 675)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 688)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 697)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 712)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 713)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 724)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 736)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 746)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 759)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 760)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 769)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 780)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 781)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 790)
- `networkError = new Error("Network error")` (—Å—Ç—Ä–æ–∫–∞ 799)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 803)
- `result = await factory.validateEmbedder(embedder)` (—Å—Ç—Ä–æ–∫–∞ 804)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 816)
- `embedder = factory.createEmbedder()` (—Å—Ç—Ä–æ–∫–∞ 828)
- `testConfig = {` (—Å—Ç—Ä–æ–∫–∞ 835)

#### üìÑ manager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testPath = require("path")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `testWorkspacePath = testPath.join(testPath.sep, "test", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `testPath = require("path")` (—Å—Ç—Ä–æ–∫–∞ 28)
- `testWorkspacePath = testPath.join(testPath.sep, "test", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `MockedCodeIndexServiceFactory = CodeIndexServiceFactory as MockedClass<typeof CodeIndexServiceFactory>` (—Å—Ç—Ä–æ–∫–∞ 54)
- `testWorkspacePath = path.join(path.sep, "test", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `testExtensionPath = path.join(path.sep, "test", "extension")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `testStoragePath = path.join(path.sep, "test", "storage")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `testGlobalStoragePath = path.join(path.sep, "test", "global-storage")` (—Å—Ç—Ä–æ–∫–∞ 64)
- `testLogPath = path.join(path.sep, "test", "log")` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 107)
- `mockCacheManager = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockServiceFactoryInstance = {` (—Å—Ç—Ä–æ–∫–∞ 135)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 174)
- `mockCacheManager = {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `mockServiceFactoryInstance = {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `recreateServicesSpy = vi.spyOn(manager as any, "_recreateServices")` (—Å—Ç—Ä–æ–∫–∞ 240)
- `mockConfigManager = {` (—Å—Ç—Ä–æ–∫–∞ 300)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 326)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 345)
- `createdEmbedder = mockServiceFactoryInstance.createServices.mock.results[0].value.embedder` (—Å—Ç—Ä–æ–∫–∞ 368)
- `mockServiceFactoryInstance = {` (—Å—Ç—Ä–æ–∫–∞ 475)
- `mockContextProxy = {` (—Å—Ç—Ä–æ–∫–∞ 499)
- `initialStatus = manager.getCurrentStatus()` (—Å—Ç—Ä–æ–∫–∞ 536)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 563)

#### üìÑ config-manager.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `setupSecretMocks(secrets: R)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedGetDefaultModelId = vi.mocked(getDefaultModelId)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockedGetModelDimension = vi.mocked(getModelDimension)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockedGetModelScoreThreshold = vi.mocked(getModelScoreThreshold)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `setupSecretMocks = (secrets: Record<string, string>) => {` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 101)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 117)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 240)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 321)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 348)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 406)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 432)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 459)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 486)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 511)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 550)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 581)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 664)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 705)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 746)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 769)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 793)
- `newManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 949)
- `anotherManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 962)
- `newManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 991)
- `minManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `maxManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1046)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1068)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1093)
- `mockPrevConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1116)
- `requiresRestart = configManager.doesConfigChangeRequireRestart(mockPrevConfig)` (—Å—Ç—Ä–æ–∫–∞ 1127)
- `config = configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 1290)
- `secondResult = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `newConfigManager = new CodeIndexConfigManager(mockContextProxy)` (—Å—Ç—Ä–æ–∫–∞ 1360)
- `result = await newConfigManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1363)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1387)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1498)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1521)
- `result = configManager.doesConfigChangeRequireRestart(previousSnapshot)` (—Å—Ç—Ä–æ–∫–∞ 1541)
- `mockConfigValues = {` (—Å—Ç—Ä–æ–∫–∞ 1555)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1571)
- `result = await configManager.loadConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1607)
- `config = configManager.getConfig()` (—Å—Ç—Ä–æ–∫–∞ 1625)

#### üìÑ cache-manager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `expectedHash = createHash("sha256").update(mockWorkspacePath).digest("hex")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockCache = { "file1.ts": "hash1", "file2.ts": "hash2" }` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockBuffer = Buffer.from(JSON.stringify(mockCache))` (—Å—Ç—Ä–æ–∫–∞ 83)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 113)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 114)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 124)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 125)
- `hashes = cacheManager.getAllHashes()` (—Å—Ç—Ä–æ–∫–∞ 128)
- `filePath = "test.ts"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `hash = "testhash"` (—Å—Ç—Ä–æ–∫–∞ 141)
- `savedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `consoleErrorSpy = vitest.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 153)
- `consoleErrorSpy = vitest.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 182)

### üìÇ build-src/src/services/checkpoints/__tests__

#### üìÑ excludes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testWorkspacePath = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `gitAttributesContent = `*.psd filter=lfs diff=lfs merge=lfs -text` (—Å—Ç—Ä–æ–∫–∞ 33)
- `expectedLfsPatterns = ["*.psd", "*.zip", "*.mp4"]` (—Å—Ç—Ä–æ–∫–∞ 42)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `gitAttributesContent = `*.md text` (—Å—Ç—Ä–æ–∫–∞ 67)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `gitAttributesLines = gitAttributesContent.split("\n").map((line) => line.split(" ")[0].trim())` (—Å—Ç—Ä–æ–∫–∞ 84)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `excludePatterns = await getExcludePatterns(testWorkspacePath)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ ShadowCheckpointService.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tmpDir = path.join(os.tmpdir(), "CheckpointService")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `initWorkspaceRepo = async ({` (—Å—Ç—Ä–æ–∫–∞ 17)
- `git = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `testFile = path.join(workspaceDir, testFileName)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `taskId = "test-task"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `shadowDir = path.join(tmpDir, `${prefix}-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `workspaceDir = path.join(tmpDir, `workspace-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `repo = await initWorkspaceRepo({ workspaceDir })` (—Å—Ç—Ä–æ–∫–∞ 62)
- `commit1 = await service.saveCheckpoint("Ahoy, world!")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `commit2 = await service.saveCheckpoint("Goodbye, world!")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `diff1 = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 89)
- `diff2 = await service.getDiff({ from: service.baseHash, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 96)
- `diff12 = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 103)
- `newFile = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `commit = await service.saveCheckpoint("Add new file")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `changes = await service.getDiff({ to: commit!.commit })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `change = changes.find((c) => c.paths.relative === "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `fileToDelete = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `commit1 = await service.saveCheckpoint("Add file")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `commit2 = await service.saveCheckpoint("Delete file")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `changes = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `change = changes.find((c) => c.paths.relative === "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `details1 = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 147)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `details2 = await service.getDiff({ from: commit1!.commit, to: commit2!.commit })` (—Å—Ç—Ä–æ–∫–∞ 154)
- `unstagedFile = path.join(service.workspaceDir, "unstaged.txt")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `stagedFile = path.join(service.workspaceDir, "staged.txt")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `mixedFile = path.join(service.workspaceDir, "mixed.txt")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = await workspaceGit.commit("Add initial files")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `commit = await service.saveCheckpoint("Test checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `status = await workspaceGit.status()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `stagedDiff = await workspaceGit.diff(["--cached", "mixed.txt"])` (—Å—Ç—Ä–æ–∫–∞ 217)
- `unstagedDiff = await workspaceGit.diff(["mixed.txt"])` (—Å—Ç—Ä–æ–∫–∞ 222)
- `commit0 = await service.saveCheckpoint("Zeroth checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 228)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 232)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `untrackedFile = path.join(service.workspaceDir, "untracked.txt")` (—Å—Ç—Ä–æ–∫–∞ 241)
- `commit1 = await service.saveCheckpoint("Checkpoint with untracked file")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `details = await service.getDiff({ to: commit1!.commit })` (—Å—Ç—Ä–æ–∫–∞ 249)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 255)
- `untrackedFile = path.join(service.workspaceDir, "new.txt")` (—Å—Ç—Ä–æ–∫–∞ 272)
- `commit1 = await service.saveCheckpoint("First checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `commit2 = await service.saveCheckpoint("Second checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 279)
- `ignoredFile = path.join(service.workspaceDir, "ignored.log")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `commit = await service.saveCheckpoint("Ignored file checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `commit2 = await service.saveCheckpoint("Ignored file modified checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 307)
- `gitattributesPath = path.join(service.workspaceDir, ".gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `excludesPath = path.join(service.checkpointsDir, ".git", "info", "exclude")` (—Å—Ç—Ä–æ–∫–∞ 320)
- `commit0 = await service.saveCheckpoint("Add gitattributes")` (—Å—Ç—Ä–æ–∫–∞ 325)
- `lfsFile = path.join(service.workspaceDir, "foo.lfs")` (—Å—Ç—Ä–æ–∫–∞ 329)
- `commit = await service.saveCheckpoint("LFS file checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `commit2 = await service.saveCheckpoint("LFS file modified checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `shadowDir = path.join(tmpDir, `${prefix}2-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 346)
- `workspaceDir = path.join(tmpDir, `workspace2-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 347)
- `newTestFile = path.join(workspaceDir, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `newService = await klass.create({ taskId, shadowDir, workspaceDir, log: () => {} })` (—Å—Ç—Ä–æ–∫–∞ 355)
- `gitDir = path.join(newService.checkpointsDir, ".git")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `commit1 = await newService.saveCheckpoint("Ahoy, world!")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `shadowDir = path.join(tmpDir, `${prefix}-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 384)
- `workspaceDir = path.join(tmpDir, `workspace-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `mainGit = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `nestedRepoPath = path.join(workspaceDir, "nested-project")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `nestedGit = simpleGit(nestedRepoPath)` (—Å—Ç—Ä–æ–∫–∞ 397)
- `nestedFile = path.join(nestedRepoPath, "nested-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 403)
- `mainFile = path.join(workspaceDir, "main-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `nestedGitDir = path.join(nestedRepoPath, ".git")` (—Å—Ç—Ä–æ–∫–∞ 415)
- `headFile = path.join(nestedGitDir, "HEAD")` (—Å—Ç—Ä–æ–∫–∞ 416)
- `searchPattern = args[4]` (—Å—Ç—Ä–æ–∫–∞ 421)
- `service = new klass(taskId, shadowDir, workspaceDir, () => {})` (—Å—Ç—Ä–æ–∫–∞ 436)
- `shadowDir = path.join(tmpDir, `${prefix}-no-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `workspaceDir = path.join(tmpDir, `workspace-no-nested-git-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 452)
- `mainGit = simpleGit(workspaceDir)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `mainFile = path.join(workspaceDir, "main-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 462)
- `service = new klass(taskId, shadowDir, workspaceDir, () => {})` (—Å—Ç—Ä–æ–∫–∞ 472)
- `shadowDir = path.join(tmpDir, `${prefix}3-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `workspaceDir = path.join(tmpDir, `workspace3-${Date.now()}`)` (—Å—Ç—Ä–æ–∫–∞ 488)
- `newTestFile = path.join(workspaceDir, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 491)
- `emitSpy = vitest.spyOn(EventEmitter.prototype, "emit")` (—Å—Ç—Ä–æ–∫–∞ 495)
- `newService = await klass.create({ taskId, shadowDir, workspaceDir, log: () => {} })` (—Å—Ç—Ä–æ–∫–∞ 498)
- `call = emitSpy.mock.calls[i]` (—Å—Ç—Ä–æ–∫–∞ 505)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 538)
- `result = await service.saveCheckpoint("Test checkpoint event")` (—Å—Ç—Ä–æ–∫–∞ 542)
- `eventData = checkpointHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 546)
- `commit = await service.saveCheckpoint("Checkpoint for restore test")` (—Å—Ç—Ä–æ–∫–∞ 556)
- `restoreHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 563)
- `eventData = restoreHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 571)
- `errorHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 581)
- `invalidCommitHash = "invalid-commit-hash"` (—Å—Ç—Ä–æ–∫–∞ 585)
- `eventData = errorHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 596)
- `checkpointHandler1 = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 602)
- `checkpointHandler2 = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 603)
- `result = await service.saveCheckpoint("Testing multiple listeners")` (—Å—Ç—Ä–æ–∫–∞ 609)
- `eventData1 = checkpointHandler1.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 615)
- `eventData2 = checkpointHandler2.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 616)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 624)
- `result = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 652)
- `result = await service.saveCheckpoint("No changes checkpoint", { allowEmpty: false })` (—Å—Ç—Ä–æ–∫–∞ 660)
- `result = await service.saveCheckpoint("Default behavior checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 666)
- `resultWithAllowEmpty = await service.saveCheckpoint("With changes and allowEmpty", {` (—Å—Ç—Ä–æ–∫–∞ 674)
- `resultWithoutAllowEmpty = await service.saveCheckpoint("With changes, no allowEmpty")` (—Å—Ç—Ä–æ–∫–∞ 681)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 686)
- `result = await service.saveCheckpoint("Empty checkpoint event test", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 689)
- `eventData = checkpointHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 692)
- `checkpointHandler = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 709)
- `result = await service.saveCheckpoint("No changes, no event", { allowEmpty: false })` (—Å—Ç—Ä–æ–∫–∞ 712)
- `commit1 = await service.saveCheckpoint("First empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 719)
- `commit2 = await service.saveCheckpoint("Second empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 722)
- `testService = await klass.create({` (—Å—Ç—Ä–æ–∫–∞ 731)
- `saveCheckpointLogs = logMessages.filter(` (—Å—Ç—Ä–æ–∫–∞ 741)
- `defaultLogs = logMessages.filter(` (—Å—Ç—Ä–æ–∫–∞ 748)
- `regularCommit = await service.saveCheckpoint("Regular checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 757)
- `emptyCommit = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 761)
- `anotherCommit = await service.saveCheckpoint("Another regular checkpoint")` (—Å—Ç—Ä–æ–∫–∞ 766)
- `beforeEmpty = await service.saveCheckpoint("Before empty")` (—Å—Ç—Ä–æ–∫–∞ 784)
- `emptyCommit = await service.saveCheckpoint("Empty checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 788)
- `diff = await service.getDiff({` (—Å—Ç—Ä–æ–∫–∞ 792)
- `initialState = await service.saveCheckpoint("Check initial state")` (—Å—Ç—Ä–æ–∫–∞ 806)
- `newTaskCheckpoint = await service.saveCheckpoint("New task checkpoint", { allowEmpty: true })` (—Å—Ç—Ä–æ–∫–∞ 810)
- `workCommit = await service.saveCheckpoint("Work in new task")` (—Å—Ç—Ä–æ–∫–∞ 815)

### üìÇ build-src/src/services/browser/__tests__

#### üìÑ UrlContentFetcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `$ = vi.fn((selector) => ({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `stats = await vi.mocked(PCR).mock.results[0].value` (—Å—Ç—Ä–æ–∫–∞ 135)
- `initialCallCount = vi.mocked(PCR).mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `timeoutError = new Error("Navigation timeout of 30000 ms exceeded")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `networkError = new Error("net::ERR_CONNECTION_REFUSED")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `timeoutError = new Error("TimeoutError: Navigation timeout")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `otherError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `newFetcher = new UrlContentFetcher(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `errorWithoutMessage = { code: "UNKNOWN_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 238)
- `errorWithMessage = { message: "Custom error", code: "CUSTOM_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 249)
- `errorWithNetworkMessage = { message: "net::ERR_CONNECTION_REFUSED", code: "NETWORK_ERROR" }` (—Å—Ç—Ä–æ–∫–∞ 259)
- `result = await urlContentFetcher.urlToMarkdown("https://example.com")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `stringError = "Simple string error"` (—Å—Ç—Ä–æ–∫–∞ 270)

#### üìÑ BrowserSession.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `puppeteerCore = await import("puppeteer-core")` (—Å—Ç—Ä–æ–∫–∞ 186)
- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockBrowser = {` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ build-src/src/integrations/workspace/__tests__

#### üìÑ WorkspaceTracker.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `registeredTabChangeCallback()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `resolveListFiles(value: [)` (—Å—Ç—Ä–æ–∫–∞ 257)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnDidCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockOnDidDelete = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockDispose = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `relativePath = require("path").relative(cwd, path)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `mockFiles = [["/test/workspace/file1.ts", "/test/workspace/file2.ts"], false]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `lastCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 154)
- `files = Array.from({ length: 1001 }, (_, i) => `/test/workspace/file${i}.ts`)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `expectedFiles = Array.from({ length: 1000 }, (_, i) => `file${i}.ts`).sort()` (—Å—Ç—Ä–æ–∫–∞ 167)
- `calls = (mockProvider.postMessageToWebview as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 168)
- `lastCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `finalCall = (mockProvider.postMessageToWebview as Mock).mock.calls.slice(-1)[0]` (—Å—Ç—Ä–æ–∫–∞ 191)
- `mockFiles = [["/test/new-workspace/file1.ts"], false]` (—Å—Ç—Ä–æ–∫–∞ 219)
- `listFilesPromise = new Promise<[string[], boolean]>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 258)
- `initPromise = workspaceTracker.initializeFilePaths()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `actualFilePaths = (mockProvider.postMessageToWebview as Mock).mock.calls[0][0].filePaths` (—Å—Ç—Ä–æ–∫–∞ 288)

### üìÇ build-src/src/integrations/terminal/__tests__

#### üìÑ setupTerminalTests.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isPowerShellCoreAvailable()` - Check if PowerShell Core (pwsh) is available on the system (—Å—Ç—Ä–æ–∫–∞ 7)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface Global` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasPwsh = isPowerShellCoreAvailable()` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ TerminalRegistry.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `PAGER = process.platform === "win32" ? "" : "cat"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `originalDelay = Terminal.getCommandDelay()` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ TerminalProcessInterpretExitCode.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = TerminalProcess.interpretExitCode(undefined)` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = TerminalProcess.interpretExitCode(130)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `resultTerm = TerminalProcess.interpretExitCode(143)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `resultSegv = TerminalProcess.interpretExitCode(139)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `coreDumpSignals = [3, 4, 6, 7, 8, 11]` (—Å—Ç—Ä–æ–∫–∞ 60)
- `exitCode = 128 + signal` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `nonCoreDumpResult = TerminalProcess.interpretExitCode(128 + 1) // SIGHUP` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = TerminalProcess.interpretExitCode(128 + 99)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = TerminalProcess.interpretExitCode(0)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = TerminalProcess.interpretExitCode(error.status)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = TerminalProcess.interpretExitCode(error.status)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `sigtermExitCode = 128 + 15` (—Å—Ç—Ä–æ–∫–∞ 128)
- `sigtermResult = TerminalProcess.interpretExitCode(sigtermExitCode)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `sigsegvExitCode = 128 + 11` (—Å—Ç—Ä–æ–∫–∞ 135)
- `sigsegvResult = TerminalProcess.interpretExitCode(sigsegvExitCode)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `sigintExitCode = 128 + 2` (—Å—Ç—Ä–æ–∫–∞ 142)
- `sigintResult = TerminalProcess.interpretExitCode(sigintExitCode)` (—Å—Ç—Ä–æ–∫–∞ 143)

#### üìÑ TerminalProcessExec.pwsh.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onLine()` (—Å—Ç—Ä–æ–∫–∞ 169)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasPwsh = isPowerShellCoreAvailable()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `describePlatform = hasPwsh ? describe : describe.skip` (—Å—Ç—Ä–æ–∫–∞ 14)
- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "/test/path")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 151)
- `onLine = () => {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 197)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 210)
- `expectedOutput = "a\nb\n"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `controlSequences = "\x1B[31mRed Text\x1B[0m\n"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 298)
- `command = `foreach ($i in 1..${lines}) { Write-Output "${TEST_TEXT.LARGE_PREFIX}$i" }`` (—Å—Ç—Ä–æ–∫–∞ 301)
- `skipVerification = true` (—Å—Ç—Ä–æ–∫–∞ 308)

#### üìÑ TerminalProcessExec.common.ts

#### üìÑ TerminalProcessExec.cmd.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onLine()` (—Å—Ç—Ä–æ–∫–∞ 168)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isWindows = process.platform === "win32"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `describePlatform = isWindows ? describe : describe.skip` (—Å—Ç—Ä–æ–∫–∞ 14)
- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "C:\\test\\path")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 150)
- `onLine = () => {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 209)
- `expectedOutput = "a\r\nb\r\n"` (—Å—Ç—Ä–æ–∫–∞ 259)
- `expectedOutput = "Red Text\r\n"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 298)
- `command = `cmd /c "for /L %i in (1,1,${lines}) do @echo ${TEST_TEXT.LARGE_PREFIX}%i"`` (—Å—Ç—Ä–æ–∫–∞ 299)

#### üìÑ TerminalProcessExec.bash.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `eventHandlers = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `stderrRedirect = process.platform === "win32" ? " 2>nul" : " 2>/dev/null"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `shell = process.platform === "win32" ? "cmd" : undefined` (—Å—Ç—Ä–æ–∫–∞ 67)
- `signalNum = signals[error.signal]` (—Å—Ç—Ä–æ–∫–∞ 86)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockTerminalInfo = new Terminal(1, mockTerminal, "/test/path")` (—Å—Ç—Ä–æ–∫–∞ 164)
- `terminalProcess = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 172)
- `completedPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `eventHandlers = (vscode as any).__eventHandlers` (—Å—Ç—Ä–æ–∫–∞ 211)
- `exitDetails = TerminalProcess.interpretExitCode(exitCode)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `timeoutPromise = new Promise<void>((_, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `executionTimeUs = Number((endTime - startTime) / BigInt(1000))` (—Å—Ç—Ä–æ–∫–∞ 257)
- `command = process.platform === "win32" ? "echo a" : "echo a"` (—Å—Ç—Ä–æ–∫–∞ 298)
- `expectedOutput = process.platform === "win32" ? "a\r\n" : "a\n"` (—Å—Ç—Ä–æ–∫–∞ 299)
- `command = process.platform === "win32" ? "echo|set /p=a" : "/bin/echo -n a"` (—Å—Ç—Ä–æ–∫–∞ 307)
- `expectedOutput = "a"` (—Å—Ç—Ä–æ–∫–∞ 308)
- `command = process.platform === "win32" ? "echo a & echo b" : 'printf "a\\nb\\n"'` (—Å—Ç—Ä–æ–∫–∞ 315)
- `expectedOutput = process.platform === "win32" ? "a\r\nb\r\n" : "a\nb\n"` (—Å—Ç—Ä–æ–∫–∞ 316)
- `command = process.platform === "win32" ? "cmd /c exit 0" : "exit 0"` (—Å—Ç—Ä–æ–∫–∞ 323)
- `command = process.platform === "win32" ? "cmd /c exit 1" : "exit 1"` (—Å—Ç—Ä–æ–∫–∞ 330)
- `command = process.platform === "win32" ? "cmd /c exit 2" : "exit 2"` (—Å—Ç—Ä–æ–∫–∞ 337)
- `expectedExitCode = process.platform === "win32" ? 1 : 127 // Windows uses 1, bash uses 127` (—Å—Ç—Ä–æ–∫–∞ 345)
- `lines = LARGE_OUTPUT_PARAMS.LINES` (—Å—Ç—Ä–æ–∫–∞ 365)
- `lineSeparator = process.platform === "win32" ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 384)
- `outputLines = capturedOutput.split(lineSeparator)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `TEST_LINES = 1_000_000` (—Å—Ç—Ä–æ–∫–∞ 430)
- `expectedOutput = Array(TEST_LINES).fill("A".repeat(76)).join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 431)
- `lines = capturedOutput.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 444)
- `sampleIndices = [` (—Å—Ç—Ä–æ–∫–∞ 458)

#### üìÑ TerminalProcess.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runPromise = terminalProcess.run("test command")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `consoleWarnSpy = vi.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 89)
- `noShellTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 92)
- `noShellTerminalInfo = new Terminal(2, noShellTerminal, "./")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `noShellProcess = new TerminalProcess(noShellTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `eventPromises = Promise.all([` (—Å—Ç—Ä–æ–∫–∞ 112)
- `completePromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `runPromise = terminalProcess.run("npm run build")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `continueSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 172)
- `unretrieved = terminalProcess.getUnretrievedOutput()` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = TerminalProcess.interpretExitCode(undefined)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = TerminalProcess.interpretExitCode(0)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `result2 = TerminalProcess.interpretExitCode(1)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `result3 = TerminalProcess.interpretExitCode(128)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = TerminalProcess.interpretExitCode(143)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result2 = TerminalProcess.interpretExitCode(139)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = TerminalProcess.interpretExitCode(255)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `process = new TerminalProcess(mockTerminalInfo)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `promise = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 245)
- `merged = mergePromise(process, promise)` (—Å—Ç—Ä–æ–∫–∞ 247)

#### üìÑ ExecaTerminalProcess.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPid = 12345` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockKill = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `execa = vitest.fn((options: any) => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `calledOptions = execaMock.mock.calls[0][0] as any` (—Å—Ç—Ä–æ–∫–∞ 80)
- `execaMock = vitest.mocked(execa)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `calledOptions = execaMock.mock.calls[0][0] as any` (—Å—Ç—Ä–æ–∫–∞ 90)
- `spy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `spy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)

#### üìÑ ExecaTerminal.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `terminal = new ExecaTerminal(1, "/tmp")` (—Å—Ç—Ä–æ–∫–∞ 13)
- `subprocess = terminal.runCommand("ls -al", callbacks)` (—Å—Ç—Ä–æ–∫–∞ 23)

### üìÇ build-src/src/integrations/misc/__tests__

#### üìÑ read-lines.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFile = path.join(__dirname, "test.txt")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `content = Array.from({ length: 10 }, (_, i) => `Line ${i + 1}`).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `lines = await readLines(testFile, 2)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `expected = ["Line 1", "Line 2", "Line 3"].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `lines = await readLines(testFile, 3, 1)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `expected = ["Line 2", "Line 3", "Line 4"].join("\n") + "\n"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `lines = await readLines(testFile, 2, 2)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `expected = "Line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `lines = await readLines(testFile, 3, -1)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `linesWithNonIntegerStart = await readLines(testFile, 3, 1.5)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `linesWithNonIntegerEnd = await readLines(testFile, 3.5)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `lines = await readLines(testFile, 15, 8)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `filepath = path.join(__dirname, filename)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `lines = await readLines(filepath, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `lines = await readLines(filepath, 0, 0)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `content = await readLines(testFile)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `lines = await readLines(filepath, 2)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `lines = await readLines(filepath, 1)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `lines = await readLines(filepath, 3, 1)` (—Å—Ç—Ä–æ–∫–∞ 127)

#### üìÑ read-file-tool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePath = path.resolve("/test", "smallFile.txt")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 47)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `filePath = path.resolve("/test", "largeFile.txt")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 70)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `truncationMsg = `\n\n[File truncated: showing ${maxReadFileLine} of ${lineCount} total lines]`` (—Å—Ç—Ä–æ–∫–∞ 82)
- `fullResult = numberedContent + truncationMsg` (—Å—Ç—Ä–æ–∫–∞ 83)
- `filePath = path.resolve("/test", "largeFile.js")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `maxReadFileLine = 500` (—Å—Ç—Ä–æ–∫–∞ 101)
- `lineCount = await countFileLines(filePath)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `fileExt = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `isSourceCode = [` (—Å—Ç—Ä–æ–∫–∞ 109)
- `content = await readLines(filePath, maxReadFileLine - 1, 0)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `numberedContent = addLineNumbers(content)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `fullResult = numberedContent + truncationMsg` (—Å—Ç—Ä–æ–∫–∞ 138)

#### üìÑ open-file.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `nodePath = require("path")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `cwd = process.cwd()` (—Å—Ç—Ä–æ–∫–∞ 49)
- `invalidPath = "test%ZZinvalid.txt" // Invalid percent encoding` (—Å—Ç—Ä–æ–∫–∞ 82)
- `mockDocument = { uri: { fsPath: invalidPath } }` (—Å—Ç—Ä–æ–∫–∞ 83)
- `encodedPath = "./%5Btest%5D/file.txt" // [test] encoded` (—Å—Ç—Ä–æ–∫–∞ 107)
- `decodedPath = "./[test]/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 108)
- `mockDocument = { uri: { fsPath: decodedPath } }` (—Å—Ç—Ä–æ–∫–∞ 109)
- `expectedPathSegment = process.platform === "win32" ? "[test]\\file.txt" : "[test]/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `pathWithSpecialChars = "./[brackets]/file with spaces.txt"` (—Å—Ç—Ä–æ–∫–∞ 134)
- `mockDocument = { uri: { fsPath: pathWithSpecialChars } }` (—Å—Ç—Ä–æ–∫–∞ 135)
- `normalPath = "./normal/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockDocument = { uri: { fsPath: normalPath } }` (—Å—Ç—Ä–æ–∫–∞ 156)
- `nonExistentPath = "./does/not/exist.txt"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `testPath = "./test.txt"` (—Å—Ç—Ä–æ–∫–∞ 188)
- `dirPath = "./components"` (—Å—Ç—Ä–æ–∫–∞ 200)
- `newFilePath = "./new/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 222)
- `content = "Hello, world!"` (—Å—Ç—Ä–æ–∫–∞ 223)
- `expectedPathSegment = process.platform === "win32" ? "new\\file.txt" : "new/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 232)

#### üìÑ line-counter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 68)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `result = await countFileLines("test-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 92)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await countFileLines("empty-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `mockReadStream = {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 140)

#### üìÑ extract-text.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "line 1\nline 2\nline 3"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `expected = "1 | line 1\n2 | line 2\n3 | line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 14)
- `input = "line 1\nline 2\nline 3"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `expected = "10 | line 1\n11 | line 2\n12 | line 3\n"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = "line 1\nline 2"` (—Å—Ç—Ä–æ–∫–∞ 35)
- `expected = " 99 | line 1\n100 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `input = "line 1\nline 2\n"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `expected = "1 | line 1\n2 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = "line 1\n\n\n\nline 2"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `expected = "1 | line 1\n2 | \n3 | \n4 | \n5 | line 2\n"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `input = "line 1\nline 2\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `expected = "1 | line 1\n2 | line 2\n3 | \n4 | \n"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `input = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10\n\n"` (—Å—Ç—Ä–æ–∫–∞ 60)
- `input = "\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 67)
- `expected = "10 | \n11 | \n12 | \n"` (—Å—Ç—Ä–æ–∫–∞ 68)
- `input = "1 | line one\n2 | line two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 75)
- `input = "  1 | line one\n  2 | line two\n  3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `input = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 85)
- `input = "1 | line one\nline two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 90)
- `input = "a | b\nc | d"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = "1 | line one\n2 | line two\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 107)
- `input = "  1 | line one\n  2 | line two\n  3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 112)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 113)
- `input = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 118)
- `input = "a | b\nc | d"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `input = "1 | line one\r\n2 | line two\r\n3 | line three"` (—Å—Ç—Ä–æ–∫–∞ 132)
- `expected = "line one\r\nline two\r\nline three"` (—Å—Ç—Ä–æ–∫–∞ 133)
- `input = "  1 | line one\n 10 | line two\n100 | line three"` (—Å—Ç—Ä–æ–∫–∞ 138)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `input = "| line one\n| line two\n| line three"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `input = "1 | line one\n| line two\n123 | line three"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `expected = "line one\nline two\nline three"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `input = "text | more text\nx | y"` (—Å—Ç—Ä–æ–∫–∞ 157)
- `input = "|  line with extra spaces\n1 |  indented content"` (—Å—Ç—Ä–æ–∫–∞ 166)
- `expected = " line with extra spaces\n indented content"` (—Å—Ç—Ä–æ–∫–∞ 167)
- `input = "| line one\r\n| line two\r\n| line three"` (—Å—Ç—Ä–æ–∫–∞ 172)
- `expected = "line one\r\nline two\r\nline three"` (—Å—Ç—Ä–æ–∫–∞ 173)
- `input = "regular line\nanother line\nno pipes here"` (—Å—Ç—Ä–æ–∫–∞ 178)
- `content = "line1\nline2\nline3"` (—Å—Ç—Ä–æ–∫–∞ 186)
- `content = "line1\nline2\nline3"` (—Å—Ç—Ä–æ–∫–∞ 191)
- `lines = Array.from({ length: 25 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `result = truncateOutput(content, 10)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `expectedLines = [` (—Å—Ç—Ä–æ–∫–∞ 207)
- `input = "abc\b\bxy"` (—Å—Ç—Ä–æ–∫–∞ 235)
- `expected = "axy"` (—Å—Ç—Ä–æ–∫–∞ 236)
- `input = "\b\babc"` (—Å—Ç—Ä–æ–∫–∞ 241)
- `expected = "abc"` (—Å—Ç—Ä–æ–∫–∞ 242)
- `input = "abc\b\n123\b\b"` (—Å—Ç—Ä–æ–∫–∞ 247)
- `expected = "ab\n1"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `input = "abcdef\b\b\b\bxy"` (—Å—Ç—Ä–æ–∫–∞ 253)
- `expected = "abxy"` (—Å—Ç—Ä–æ–∫–∞ 254)
- `input = "abc\b\b"` (—Å—Ç—Ä–æ–∫–∞ 259)
- `expected = "a"` (—Å—Ç—Ä–æ–∫–∞ 260)
- `input = "abc\bx\byz\b\b123"` (—Å—Ç—Ä–æ–∫–∞ 265)
- `expected = "ab123"` (—Å—Ç—Ä–æ–∫–∞ 266)
- `input = "abc\b\bdef\b\b\bghi\b\b\b\bjkl"` (—Å—Ç—Ä–æ–∫–∞ 271)
- `expected = "jkl"` (—Å—Ç—Ä–æ–∫–∞ 272)
- `input = "abc\b\b\b\b\b\bdef"` (—Å—Ç—Ä–æ–∫–∞ 277)
- `expected = "def"` (—Å—Ç—Ä–æ–∫–∞ 278)
- `input = "Loading[\b\b\b\b\b\b\b\bProgress[\b\b\b\b\b\b\b\b\bStatus: \b\b\b\b\b\b\b\bDone!"` (—Å—Ç—Ä–æ–∫–∞ 283)
- `expected = "Done!"` (—Å—Ç—Ä–æ–∫–∞ 285)
- `input = "abcüòÄ\b\bdefüéâ\b\b\bghi"` (—Å—Ç—Ä–æ–∫–∞ 290)
- `expected = "abcdeghi"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `lines = Array.from({ length: 15 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 298)
- `content = lines.join("\r\n")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `result = truncateOutput(content, 5)` (—Å—Ç—Ä–æ–∫–∞ 301)
- `resultLines = result.split(/\r?\n/)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `expectedLines = ["line1", "", "[...10 lines omitted...]", "", "line12", "line13", "line14", "line15"]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 312)
- `content = "a".repeat(100)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result = truncateOutput(content, undefined, 100)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `expectedStart = "a".repeat(20)` (—Å—Ç—Ä–æ–∫–∞ 332)
- `expectedEnd = "a".repeat(80)` (—Å—Ç—Ä–æ–∫–∞ 333)
- `expected = expectedStart + "\n[...900 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 334)
- `longLine = "a".repeat(500)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `content = `${longLine}\n${longLine}\n${longLine}`` (—Å—Ç—Ä–æ–∫–∞ 342)
- `result = truncateOutput(content, 10, 100)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `expectedStart = "a".repeat(20)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `expectedEnd = "a".repeat(80)` (—Å—Ç—Ä–æ–∫–∞ 349)
- `expected = expectedStart + "\n[...1402 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 351)
- `lines = Array.from({ length: 25 }, (_, i) => `line${i + 1}`)` (—Å—Ç—Ä–æ–∫–∞ 358)
- `content = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `result = truncateOutput(content, 10, 10000)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `expectedLines = [` (—Å—Ç—Ä–æ–∫–∞ 365)
- `content = "exactly100chars".repeat(6) + "1234" // exactly 100 chars` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = truncateOutput(content, undefined, 100)` (—Å—Ç—Ä–æ–∫–∞ 385)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 390)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 391)
- `expected = "aa\n[...990 characters omitted...]\n" + "a".repeat(8)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `content = "Hello world! This is a test with mixed content including numbers 123 and symbols @#$%"` (—Å—Ç—Ä–æ–∫–∞ 399)
- `result = truncateOutput(content, undefined, 50)` (—Å—Ç—Ä–æ–∫–∞ 400)
- `expectedStart = content.slice(0, 10) // "Hello worl"` (—Å—Ç—Ä–æ–∫–∞ 403)
- `expectedEnd = content.slice(-40) // last 40 chars` (—Å—Ç—Ä–æ–∫–∞ 404)
- `omittedChars = content.length - 50` (—Å—Ç—Ä–æ–∫–∞ 405)
- `expected = expectedStart + `\n[...${omittedChars} characters omitted...]\n` + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 406)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 413)
- `result = truncateOutput(content, undefined, 1)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `expected = "\n[...25 characters omitted...]\nz"` (—Å—Ç—Ä–æ–∫–∞ 419)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 424)
- `result = truncateOutput(content, undefined, 2)` (—Å—Ç—Ä–æ–∫–∞ 425)
- `expected = "\n[...24 characters omitted...]\nyz"` (—Å—Ç—Ä–æ–∫–∞ 430)
- `content = "abcdefghijklmnopqrstuvwxyz"` (—Å—Ç—Ä–æ–∫–∞ 435)
- `result = truncateOutput(content, undefined, 5)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `expected = "a\n[...21 characters omitted...]\nwxyz"` (—Å—Ç—Ä–æ–∫–∞ 441)
- `content = "üöÄüéâüî•üíªüåüüé®üéØüé™üé≠üé¨" // 10 emojis, each is multi-byte` (—Å—Ç—Ä–æ–∫–∞ 446)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `expected = "üöÄ\n[...10 characters omitted...]\nüéØüé™üé≠üé¨"` (—Å—Ç—Ä–æ–∫–∞ 453)
- `content = "line1\nline2\nline3\nline4\nline5"` (—Å—Ç—Ä–æ–∫–∞ 458)
- `result = truncateOutput(content, undefined, 15)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `expected = "lin\n[...14 characters omitted...]\n\nline4\nline5"` (—Å—Ç—Ä–æ–∫–∞ 465)
- `content = "short"` (—Å—Ç—Ä–æ–∫–∞ 471)
- `result = truncateOutput(content, undefined, 10)` (—Å—Ç—Ä–æ–∫–∞ 472)
- `content = "a".repeat(100)` (—Å—Ç—Ä–æ–∫–∞ 479)
- `result = truncateOutput(content, undefined, 3)` (—Å—Ç—Ä–æ–∫–∞ 480)
- `expected = "\n[...97 characters omitted...]\naaa"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `content = "a".repeat(1000)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `result = truncateOutput(content, 999999, 50)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `expectedStart = "a".repeat(10) // 20% of 50` (—Å—Ç—Ä–æ–∫–∞ 493)
- `expectedEnd = "a".repeat(40) // 80% of 50` (—Å—Ç—Ä–æ–∫–∞ 494)
- `expected = expectedStart + "\n[...950 characters omitted...]\n" + expectedEnd` (—Å—Ç—Ä–æ–∫–∞ 495)
- `input = "longerline\nlongerline\nlongerline\nlongerline\nlongerline\nlongerline\n"` (—Å—Ç—Ä–æ–∫–∞ 510)
- `expected = "longerline\n<previous line repeated 5 additional times>\n"` (—Å—Ç—Ä–æ–∫–∞ 511)
- `input = "y\ny\ny\ny\ny\n"` (—Å—Ç—Ä–æ–∫–∞ 516)
- `input = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 523)
- `input = "Progress: [===>---------] 30%\rProgress: [======>------] 60%\rProgress: [==========>] 100%"` (—Å—Ç—Ä–æ–∫–∞ 528)
- `expected = "Progress: [==========>] 100%%"` (—Å—Ç—Ä–æ–∫–∞ 529)
- `input = "Line 1\rUpdated Line 1\nLine 2\rUpdated Line 2\rFinal Line 2"` (—Å—Ç—Ä–æ–∫–∞ 534)
- `expected = "Updated Line 1\nFinal Line 2 2"` (—Å—Ç—Ä–æ–∫–∞ 535)
- `input = "Initial text\rReplacement text\r"` (—Å—Ç—Ä–æ–∫–∞ 542)
- `expected = "Replacement text"` (—Å—Ç—Ä–æ–∫–∞ 545)
- `input = "Hello\rWorld\r"` (—Å—Ç—Ä–æ–∫–∞ 557)
- `expected = "World"` (—Å—Ç—Ä–æ–∫–∞ 558)
- `input = "Line 1\nLine 2\rUpdated Line 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 569)
- `expected = "Line 1\nUpdated Line 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 570)
- `expected = "100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 100/100 [00:10<00:00, 10.00it/s]"` (—Å—Ç—Ä–æ–∫–∞ 577)
- `input = "\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 582)
- `expected = "Loading...\x1b]633` (—Å—Ç—Ä–æ–∫–∞ 583)
- `expected = "Step 1: Donerogress\nStep 2: Donerogress"` (—Å—Ç—Ä–æ–∫–∞ 590)
- `expected = "Progress: 100%9%"` (—Å—Ç—Ä–æ–∫–∞ 606)
- `input = "Initial\r\r\r\rFinal"` (—Å—Ç—Ä–æ–∫–∞ 612)
- `expected = "Finalal"` (—Å—Ç—Ä–æ–∫–∞ 613)
- `input = "\rText after carriage return"` (—Å—Ç—Ä–æ–∫–∞ 618)
- `expected = "Text after carriage return"` (—Å—Ç—Ä–æ–∫–∞ 619)
- `input = "\r\r\r\r"` (—Å—Ç—Ä–æ–∫–∞ 624)
- `expected = ""` (—Å—Ç—Ä–æ–∫–∞ 625)
- `input = "Start\r\r\r\r\rEnd"` (—Å—Ç—Ä–æ–∫–∞ 630)
- `expected = "Endrt"` (—Å—Ç—Ä–æ–∫–∞ 631)
- `input = "Line1\rLine1Updated\nLine2\nLine3\rLine3Updated\rLine3Final\nLine4"` (—Å—Ç—Ä–æ–∫–∞ 636)
- `expected = "Line1Updated\nLine2\nLine3Finaled\nLine4"` (—Å—Ç—Ä–æ–∫–∞ 637)
- `input = "Line with üöÄ emoji\rLine with a"` (—Å—Ç—Ä–æ–∫–∞ 655)
- `expected = "Line with a  emoji"` (—Å—Ç—Ä–æ–∫–∞ 656)
- `input = "Line with not a emoji\rLine with üî• emoji"` (—Å—Ç—Ä–æ–∫–∞ 671)
- `expected = "Line with üî• emojioji"` (—Å—Ç—Ä–æ–∫–∞ 672)
- `input = "‰Ω†Â•Ω‰∏ñÁïåÂïä\r‰Ω†Â•ΩÂú∞ÁêÉ"` (—Å—Ç—Ä–æ–∫–∞ 683)
- `expected = "‰Ω†Â•ΩÂú∞ÁêÉÂïä"` (—Å—Ç—Ä–æ–∫–∞ 684)
- `input = "Line1\r\nLine2\rLine2Updated\nLine3\r\n"` (—Å—Ç—Ä–æ–∫–∞ 695)
- `expected = "Line1\nLine2Updated\nLine3\n"` (—Å—Ç—Ä–æ–∫–∞ 696)
- `input = "Initial text\rnext\r"` (—Å—Ç—Ä–æ–∫–∞ 707)
- `expected = "nextial text"` (—Å—Ç—Ä–æ–∫–∞ 708)

#### üìÑ extract-text-large-files.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockedReadLines = vi.mocked(readLines)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `largeFileContent = Array(150)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = await extractTextFromFile("/test/large-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `smallFileContent = Array(50)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await extractTextFromFile("/test/small-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `exactFileContent = Array(100)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await extractTextFromFile("/test/exact-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `largeFileContent = Array(200)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await extractTextFromFile("/test/large-file.ts", undefined)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `result = await extractTextFromFile("/test/empty-file.ts", 100)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `newlineOnlyContent = "\n\n\n\n\n"` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await extractTextFromFile("/test/newline-file.ts", 3)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `result = await extractTextFromFile("/test/very-large-file.ts", 500)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `fileContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 156)
- `fileContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await extractTextFromFile("/test/file.ts", -1)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `structuredContent = [` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = await extractTextFromFile("/test/structured.ts", 3)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ extract-text-from-xlsx.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `sheet1 = workbook.addWorksheet("First Sheet")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `sheet2 = workbook.addWorksheet("Second Sheet")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `visibleSheet = workbook.addWorksheet("Visible Sheet")` (—Å—Ç—Ä–æ–∫–∞ 60)
- `hiddenSheet = workbook.addWorksheet("Hidden Sheet")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `visibleSheet = workbook.addWorksheet("Visible Sheet")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `veryHiddenSheet = workbook.addWorksheet("Very Hidden Sheet")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `lines = result.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `dataLines = lines.filter((line) => !line.startsWith("---") && line.trim())` (—Å—Ç—Ä–æ–∫–∞ 110)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `testDate = new Date("2023-12-25")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 151)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `worksheet = workbook.addWorksheet("Sheet1")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `lines = result.split("\n").filter((line) => line.trim() && !line.startsWith("---"))` (—Å—Ç—Ä–æ–∫–∞ 201)
- `workbook = new ExcelJS.Workbook()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `worksheet = workbook.addWorksheet("Test")` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await extractTextFromXLSX(workbook)` (—Å—Ç—Ä–æ–∫–∞ 212)

### üìÇ build-src/src/integrations/editor/__tests__

#### üìÑ detect-omission.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `generateLongContent(commentLine: s, length: n)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalContent = `function example() {` (—Å—Ç—Ä–æ–∫–∞ 4)
- `x = 1` (—Å—Ç—Ä–æ–∫–∞ 6)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 7)
- `generateLongContent = (commentLine: string, length: number = 90) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 14)
- `newContent = `// Lines 1-50 remain unchanged` (—Å—Ç—Ä–æ–∫–∞ 18)
- `z = 3` (—Å—Ç—Ä–æ–∫–∞ 19)
- `predictedLineCount = 50` (—Å—Ç—Ä–æ–∫–∞ 20)
- `newContent = generateLongContent("// Adding new functionality")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 26)
- `originalWithComment = `// Content remains unchanged` (—Å—Ç—Ä–æ–∫–∞ 31)
- `newContent = generateLongContent("// Content remains unchanged")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 34)
- `newContent = generateLongContent(`const remains = 'some value'` (—Å—Ç—Ä–æ–∫–∞ 39)
- `unchanged = true` (—Å—Ç—Ä–æ–∫–∞ 40)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 41)
- `newContent = generateLongContent("// Previous content remains here\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 46)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 47)
- `newContent = generateLongContent("// Previous content remains here", 130)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 53)
- `newContent = generateLongContent("# Previous content remains here\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 58)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 59)
- `newContent = generateLongContent("# Previous content remains here", 130)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 65)
- `newContent = generateLongContent("/* Previous content remains the same */\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 70)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 71)
- `newContent = generateLongContent("/* Previous content remains the same */", 130)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 77)
- `newContent = generateLongContent("{/* Rest of the code remains the same */}\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 82)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 83)
- `newContent = generateLongContent("{/* Rest of the code remains the same */}", 130)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 89)
- `newContent = generateLongContent("<!-- Existing content unchanged -->\nconst x = 1` (—Å—Ç—Ä–æ–∫–∞ 94)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 95)
- `newContent = generateLongContent("<!-- Existing content unchanged -->", 130)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 101)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 109)
- `newContent = generateLongContent("[Previous content from line 1-305 remains exactly the same]", 130)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 115)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 120)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 122)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 126)
- `newContent = generateLongContent(` (—Å—Ç—Ä–æ–∫–∞ 131)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 133)
- `z = 3` (—Å—Ç—Ä–æ–∫–∞ 135)
- `w = 4` (—Å—Ç—Ä–æ–∫–∞ 136)
- `predictedLineCount = 150` (—Å—Ç—Ä–æ–∫–∞ 139)

#### üìÑ DiffViewProvider.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/mock/cwd"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockEditor = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `mockTabs = [` (—Å—Ç—Ä–æ–∫–∞ 279)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 368)
- `result = await diffViewProvider.saveDirectly("test.ts", "new content", true, true, 2000)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 397)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 412)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 462)
- `result = await diffViewProvider.saveChanges(true, 3000)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 477)
- `result = await diffViewProvider.saveChanges(false, 2000)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 492)
- `result = await diffViewProvider.saveChanges()` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockDelay = vi.mocked(delay)` (—Å—Ç—Ä–æ–∫–∞ 507)
- `result = await diffViewProvider.saveChanges(true, 5000)` (—Å—Ç—Ä–æ–∫–∞ 513)

### üìÇ build-src/src/integrations/diagnostics/__tests__

#### üìÑ diagnostics.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = Object.assign(relativePath, {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 101)
- `dirUri = vscode.Uri.file("/path/to/directory/")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `diagnostic = new vscode.Diagnostic(` (—Å—Ç—Ä–æ–∫–∞ 129)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 145)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 168)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 202)
- `fileUri1 = vscode.Uri.file("/path/to/file1.ts")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `fileUri2 = vscode.Uri.file("/path/to/subdir/file2.ts")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `diagnostics1 = [` (—Å—Ç—Ä–æ–∫–∞ 239)
- `diagnostics2 = [` (—Å—Ç—Ä–æ–∫–∞ 243)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `mockDocument1 = {` (—Å—Ç—Ä–æ–∫–∞ 255)
- `mockDocument2 = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `lineTexts = ["Line 1 content", "Line 2 content for warning", "Line 3 content for info"]` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 272)
- `file1Section = result.split("file1.ts")[1]` (—Å—Ç—Ä–æ–∫–∞ 286)
- `file2Section = result.split("subdir/file2.ts")[1]` (—Å—Ç—Ä–æ–∫–∞ 290)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 308)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 317)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 331)
- `fileUri = vscode.Uri.file("/project/root/src/utils/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 347)
- `diagnostic = new vscode.Diagnostic(` (—Å—Ç—Ä–æ–∫–∞ 350)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 357)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 363)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 371)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 388)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 391)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 397)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 403)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 411)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 428)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 431)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 440)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 446)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 454)
- `fileUri1 = vscode.Uri.file("/path/to/file1.ts")` (—Å—Ç—Ä–æ–∫–∞ 476)
- `fileUri2 = vscode.Uri.file("/path/to/file2.ts")` (—Å—Ç—Ä–æ–∫–∞ 477)
- `diagnostics1 = [` (—Å—Ç—Ä–æ–∫–∞ 480)
- `diagnostics2 = [` (—Å—Ç—Ä–æ–∫–∞ 485)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 502)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 510)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 535)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 538)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 545)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 551)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 559)
- `fileUri = vscode.Uri.file("/path/to/file.ts")` (—Å—Ç—Ä–æ–∫–∞ 578)
- `diagnostics = [` (—Å—Ç—Ä–æ–∫–∞ 581)
- `mockStat = {` (—Å—Ç—Ä–æ–∫–∞ 587)
- `mockDocument = {` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await diagnosticsToProblemsString(` (—Å—Ç—Ä–æ–∫–∞ 601)

### üìÇ build-src/src/integrations/claude-code/__tests__

#### üìÑ run.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `resolveProcess(value: {, exitCode: n)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `resolveProcess(value: {, exitCode: n)` (—Å—Ç—Ä–æ–∫–∞ 473)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `claudePath = options?.claudePath || "claude"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `installationUrl = options?.installationUrl || "https://docs.anthropic.com/en/docs/claude-code/setup"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `originalError = options?.originalError || "spawn claude ENOENT"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockExeca = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockStdin = {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `createMockProcess = () => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `processPromise = new Promise<{ exitCode: number }>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 54)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 139)
- `messages = [{ role: "user" as const, content: "Hello world!" }]` (—Å—Ç—Ä–æ–∫–∞ 146)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 147)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `os = await import("os")` (—Å—Ç—Ä–æ–∫–∞ 154)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 158)
- `expectedStdinData = JSON.stringify({ systemPrompt, messages })` (—Å—Ç—Ä–æ–∫–∞ 168)
- `generator2 = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 178)
- `results2 = []` (—Å—Ç—Ä–æ–∫–∞ 179)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 195)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 216)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 245)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 249)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `mockProcessWithoutStdin = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 282)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 291)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 321)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 336)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 367)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 372)
- `customPath = "/custom/path/to/claude"` (—Å—Ç—Ä–æ–∫–∞ 381)
- `enoentError = new Error(`spawn ${customPath} ENOENT`)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 388)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `otherError = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 409)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 424)
- `otherError = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 425)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 437)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 454)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `mockProcessWithError = createMockProcess()` (—Å—Ç—Ä–æ–∫–∞ 469)
- `enoentError = new Error("spawn claude ENOENT")` (—Å—Ç—Ä–æ–∫–∞ 470)
- `processPromise = new Promise<{ exitCode: number }>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 474)
- `mockReadlineForError = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `readline = await import("readline")` (—Å—Ç—Ä–æ–∫–∞ 508)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 513)
- `generator = runClaudeCode(options)` (—Å—Ç—Ä–æ–∫–∞ 518)

#### üìÑ message-filter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = filterMessagesForClaudeCode(messages)` (—Å—Ç—Ä–æ–∫–∞ 259)

### üìÇ build-src/src/core/webview/__tests__

#### üìÑ webviewMessageHandler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetModels = getModels as Mock<typeof getModels>` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockClineProvider = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockRm = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `mockMkdir = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `slug = "test-project-mode"` (—Å—Ç—Ä–æ–∫–∞ 428)
- `rulesFolderPath = path.join("/mock/workspace", ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 429)
- `slug = "test-global-mode"` (—Å—Ç—Ä–æ–∫–∞ 452)
- `homeDir = os.homedir()` (—Å—Ç—Ä–æ–∫–∞ 453)
- `rulesFolderPath = path.join(homeDir, ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `slug = "test-mode-no-rules"` (—Å—Ç—Ä–æ–∫–∞ 477)
- `slug = "test-mode-error"` (—Å—Ç—Ä–æ–∫–∞ 499)
- `rulesFolderPath = path.join("/mock/workspace", ".neira", `rules-${slug}`)` (—Å—Ç—Ä–æ–∫–∞ 500)
- `error = new Error("Permission denied")` (—Å—Ç—Ä–æ–∫–∞ 501)

#### üìÑ messageEnhancer.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockListApiConfigMeta = [` (—Å—Ç—Ä–æ–∫–∞ 22)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 81)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 110)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 122)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 149)
- `longText = "A".repeat(600) // 600 characters` (—Å—Ç—Ä–æ–∫–∞ 158)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `customSupportPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 190)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 197)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 212)
- `result = await MessageEnhancer.enhanceMessage({` (—Å—Ç—Ä–æ–∫–∞ 242)
- `calledPrompt = mockSingleCompletionHandler.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `mockTaskId = "task-123"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 262)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 282)
- `mockCaptureEvent = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 293)
- `history = (MessageEnhancer as any).extractTaskHistory(messages)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 327)
- `malformedMessages = [` (—Å—Ç—Ä–æ–∫–∞ 330)
- `history = (MessageEnhancer as any).extractTaskHistory(malformedMessages)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 348)
- `messages = [circularMessage] as ClineMessage[]` (—Å—Ç—Ä–æ–∫–∞ 354)
- `history = (MessageEnhancer as any).extractTaskHistory(messages)` (—Å—Ç—Ä–æ–∫–∞ 357)

#### üìÑ ClineProvider.sticky-mode.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 266)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 272)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 290)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 314)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 356)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 362)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 380)
- `updateGlobalStateSpy = vi.spyOn(provider as any, "updateGlobalState").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 479)
- `taskId = (mockTask as any).taskId || "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 485)
- `parentTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 532)
- `parentTaskId = (parentTask as any).taskId || "parent-task-id"` (—Å—Ç—Ä–æ–∫–∞ 538)
- `getGlobalStateMock = vi.spyOn(provider as any, "getGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 546)
- `updateTaskHistoryMock = vi.spyOn(provider, "updateTaskHistory")` (—Å—Ç—Ä–æ–∫–∞ 567)
- `subtask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 581)
- `subtaskId = (subtask as any).taskId || "subtask-id"` (—Å—Ç—Ä–æ–∫–∞ 586)
- `getCurrentClineMock = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 592)
- `mockTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 617)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 660)
- `codeApiConfig = { apiProvider: "anthropic" as ProviderName, anthropicApiKey: "code-key" }` (—Å—Ç—Ä–æ–∫–∞ 671)
- `architectApiConfig = { apiProvider: "openai" as ProviderName, openAiApiKey: "architect-key" }` (—Å—Ç—Ä–æ–∫–∞ 672)
- `codeConfigId = provider.getProviderProfileEntry("code-config")?.id` (—Å—Ç—Ä–æ–∫–∞ 679)
- `architectConfigId = provider.getProviderProfileEntry("architect-config")?.id` (—Å—Ç—Ä–æ–∫–∞ 680)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 707)
- `handleModeSwitchSpy = vi.spyOn(provider, "handleModeSwitch").mockResolvedValue()` (—Å—Ç—Ä–æ–∫–∞ 746)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 761)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 789)
- `switches = [` (—Å—Ç—Ä–æ–∫–∞ 797)
- `modeCalls = vi.mocked(mockContext.globalState.update).mock.calls.filter((call) => call[0] === "mode")` (—Å—Ç—Ä–æ–∫–∞ 806)
- `lastModeCall = modeCalls[modeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 807)
- `lastCall = updateTaskHistorySpy.mock.calls[updateTaskHistorySpy.mock.calls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 813)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 824)
- `savePromise = mockTask.saveClineMessages()` (—Å—Ç—Ä–æ–∫–∞ 859)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 878)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 904)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 919)
- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 932)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 963)
- `task1 = {` (—Å—Ç—Ä–æ–∫–∞ 978)
- `task2 = {` (—Å—Ç—Ä–æ–∫–∞ 987)
- `task3 = {` (—Å—Ç—Ä–æ–∫–∞ 996)
- `updateTaskHistorySpy = vi` (—Å—Ç—Ä–æ–∫–∞ 1051)
- `getCurrentClineSpy = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `switch1 = provider.handleModeSwitch("architect")` (—Å—Ç—Ä–æ–∫–∞ 1060)
- `switch2 = provider.handleModeSwitch("debug")` (—Å—Ç—Ä–æ–∫–∞ 1063)
- `switch3 = provider.handleModeSwitch("code")` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `initPromise = provider.initClineWithHistoryItem(historyItem)` (—Å—Ç—Ä–æ–∫–∞ 1116)
- `modeCalls = vi.mocked(mockContext.globalState.update).mock.calls.filter((call) => call[0] === "mode")` (—Å—Ç—Ä–æ–∫–∞ 1125)
- `lastModeCall = modeCalls[modeCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 1129)
- `tasks = Array.from({ length: 5 }, (_, i) => ({` (—Å—Ç—Ä–æ–∫–∞ 1137)
- `getCurrentClineSpy = vi.spyOn(provider, "getCurrentCline")` (—Å—Ç—Ä–æ–∫–∞ 1152)
- `mode = ["architect", "debug", "code"][index % 3]` (—Å—Ç—Ä–æ–∫–∞ 1158)

#### üìÑ ClineProvider.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `delayFn(_ms: n)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1346)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockAddCustomInstructions = vi.fn().mockResolvedValue("Combined instructions")` (—Å—Ç—Ä–æ–∫–∞ 101)
- `delayFn = (_ms: number) => Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `content = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 224)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `content = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 297)
- `lines = content.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 298)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 381)
- `html = mockWebviewView.webview.html` (—Å—Ç—Ä–æ–∫–∞ 482)
- `scriptSrcMatch = html.match(/script-src[^` (—Å—Ç—Ä–æ–∫–∞ 483)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 563)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 574)
- `stackSizeBeforeAbort = provider.getClineStackSize()` (—Å—Ç—Ä–æ–∫–∞ 580)
- `stackSizeAfterAbort = provider.getClineStackSize()` (—Å—Ç—Ä–æ–∫–∞ 586)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 602)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 606)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 607)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 608)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 614)
- `parentTask = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 627)
- `childTask = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 628)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 637)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 638)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 645)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 660)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 661)
- `postStateToWebviewSpy = vi.spyOn(provider, "postStateToWebview").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 662)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 665)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 681)
- `clearTaskSpy = vi.spyOn(provider, "clearTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 685)
- `finishSubTaskSpy = vi.spyOn(provider, "finishSubTask").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 686)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 695)
- `mockCline1 = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 708)
- `mockCline2 = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 709)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 725)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 745)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 753)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 764)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 770)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 783)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 818)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 826)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 835)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 841)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 854)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 860)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 871)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 893)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 914)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 937)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 967)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 975)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 982)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1018)
- `existingPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1021)
- `state = await provider.getState()` (—Å—Ç—Ä–æ–∫–∞ 1070)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1087)
- `existingPrompts = {` (—Å—Ç—Ä–æ–∫–∞ 1090)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1144)
- `result = await extractTextFromFile("test.js")` (—Å—Ç—Ä–æ–∫–∞ 1165)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 1176)
- `mockApiHistory = [` (—Å—Ç—Ä–æ–∫–∞ 1185)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 1195)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1209)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1239)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 1258)
- `mockApiHistory = [` (—Å—Ç—Ä–æ–∫–∞ 1267)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 1277)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1295)
- `getMessageHandler = () => {` (—Å—Ç—Ä–æ–∫–∞ 1346)
- `mockCalls = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 1347)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1354)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1432)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1466)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1500)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1532)
- `handler = getMessageHandler()` (—Å—Ç—Ä–æ–∫–∞ 1548)
- `contextProxy = (provider as any).contextProxy` (—Å—Ç—Ä–æ–∫–∞ 1639)
- `getValueSpy = vi.spyOn(contextProxy, "getValue")` (—Å—Ç—Ä–æ–∫–∞ 1640)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1696)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1699)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1731)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1765)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1768)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1798)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1820)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1851)
- `mockCustomModesManager = {` (—Å—Ç—Ä–æ–∫–∞ 1873)
- `logSpy = vi.spyOn(provider, "log")` (—Å—Ç—Ä–æ–∫–∞ 1898)
- `historyItem = {` (—Å—Ç—Ä–æ–∫–∞ 1901)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1925)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1987)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2018)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2028)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2055)
- `mockCline = new Task(defaultTaskOptions) // Create a new mocked instance` (—Å—Ç—Ä–æ–∫–∞ 2072)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2075)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2102)
- `testApiConfig = {` (—Å—Ç—Ä–æ–∫–∞ 2112)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2148)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2186)
- `fs = await import("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 2270)
- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 2271)
- `fsUtils = await import("../../../utils/fs")` (—Å—Ç—Ä–æ–∫–∞ 2278)
- `openFileModule = await import("../../../integrations/misc/open-file")` (—Å—Ç—Ä–æ–∫–∞ 2282)
- `openFileSpy = vi.spyOn(openFileModule, "openFile").mockClear().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 2283)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2287)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2310)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2324)
- `fs = require("fs/promises")` (—Å—Ç—Ä–æ–∫–∞ 2330)
- `result = await provider.getValue("currentApiConfigName")` (—Å—Ç—Ä–æ–∫–∞ 2380)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2454)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2465)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2479)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2489)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2497)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2507)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2522)
- `mockCloudService = {` (—Å—Ç—Ä–æ–∫–∞ 2536)
- `properties = await provider.getTelemetryProperties()` (—Å—Ç—Ä–æ–∫–∞ 2548)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2630)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2644)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2692)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2705)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2766)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2779)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2803)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2815)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2847)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 2856)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 2968)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 2983)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 2995)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3022)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3035)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3047)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3084)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3099)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3124)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3139)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3172)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3189)
- `edit1Promise = messageHandler({` (—Å—Ç—Ä–æ–∫–∞ 3192)
- `edit2Promise = messageHandler({` (—Å—Ç—Ä–æ–∫–∞ 3198)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3237)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3250)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3265)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3289)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3315)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3338)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3347)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3373)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3387)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3416)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3429)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3458)
- `cleanupSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3466)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3479)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3503)
- `cleanupSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3511)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3523)
- `largeText = "A".repeat(10000)` (—Å—Ç—Ä–æ–∫–∞ 3552)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3553)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3558)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3570)
- `largeEditedContent = "B".repeat(15000)` (—Å—Ç—Ä–æ–∫–∞ 3572)
- `largeText = "X".repeat(50000)` (—Å—Ç—Ä–æ–∫–∞ 3599)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 3600)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3607)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3618)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3641)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3656)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3678)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3690)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3713)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3729)
- `futureTimestamp = Date.now() + 100000 // Future timestamp` (—Å—Ç—Ä–æ–∫–∞ 3747)
- `mockCline = new Task(defaultTaskOptions)` (—Å—Ç—Ä–æ–∫–∞ 3748)
- `messageHandler = (mockWebviewView.webview.onDidReceiveMessage as any).mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 3774)

### üìÇ build-src/src/core/tools/helpers

#### üìÑ imageHelpers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fileBuffer = await fs.readFile(filePath)` - Reads an image file and returns both the data URL and buffer (—Å—Ç—Ä–æ–∫–∞ 76)
- `base64 = fileBuffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `ext = path.extname(filePath).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mimeType = IMAGE_MIME_TYPES[ext] || "image/png"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `dataUrl = `data:${mimeType}` (—Å—Ç—Ä–æ–∫–∞ 81)
- `imageStats = await fs.stat(fullPath)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `imageSizeInMB = imageStats.size / (1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `imageSizeFormatted = prettyBytes(imageStats.size)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `currentMemoryFormatted = prettyBytes(currentTotalMemoryUsed * 1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `fileMemoryFormatted = prettyBytes(imageStats.size)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `imageStats = await fs.stat(fullPath)` - Processes an image file and returns the result (—Å—Ç—Ä–æ–∫–∞ 151)
- `imageSizeInKB = Math.round(imageStats.size / 1024)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `imageSizeInMB = imageStats.size / (1024 * 1024)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `noticeText = t("tools:readFile.imageWithSize", { size: imageSizeInKB })` (—Å—Ç—Ä–æ–∫–∞ 155)

### üìÇ build-src/src/core/tools/__tests__

#### üìÑ writeToFileTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPath = await vi.importActual("path")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 97)
- `absoluteFilePath = process.platform === "win32" ? "C:\\test\\file.txt" : "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 98)
- `testContent = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 99)
- `testContentWithMarkdown = "```javascript\nLine 1\nLine 2\n```"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `mockedFileExistsAtPath = fileExistsAtPath as MockedFunction<typeof fileExistsAtPath>` (—Å—Ç—Ä–æ–∫–∞ 103)
- `mockedDetectCodeOmission = detectCodeOmission as MockedFunction<typeof detectCodeOmission>` (—Å—Ç—Ä–æ–∫–∞ 104)
- `mockedIsPathOutsideWorkspace = isPathOutsideWorkspace as MockedFunction<typeof isPathOutsideWorkspace>` (—Å—Ç—Ä–æ–∫–∞ 105)
- `mockedGetReadablePath = getReadablePath as MockedFunction<typeof getReadablePath>` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockedUnescapeHtmlEntities = unescapeHtmlEntities as MockedFunction<typeof unescapeHtmlEntities>` (—Å—Ç—Ä–æ–∫–∞ 107)
- `mockedEveryLineHasLineNumbers = everyLineHasLineNumbers as MockedFunction<typeof everyLineHasLineNumbers>` (—Å—Ç—Ä–æ–∫–∞ 108)
- `mockedStripLineNumbers = stripLineNumbers as MockedFunction<typeof stripLineNumbers>` (—Å—Ç—Ä–æ–∫–∞ 109)
- `mockedPathResolve = path.resolve as MockedFunction<typeof path.resolve>` (—Å—Ç—Ä–æ–∫–∞ 110)
- `fileExists = options.fileExists ?? false` (—Å—Ç—Ä–æ–∫–∞ 211)
- `isPartial = options.isPartial ?? false` (—Å—Ç—Ä–æ–∫–∞ 212)
- `accessAllowed = options.accessAllowed ?? true` (—Å—Ç—Ä–æ–∫–∞ 213)
- `contentWithLineNumbers = "1 | line one\n2 | line two"` (—Å—Ç—Ä–æ–∫–∞ 308)
- `userEditsValue = "- old line\n+ new line"` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ validateToolUse.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codeMode = modes.find((m) => m.slug === "code")?.slug || "code"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `architectMode = modes.find((m) => m.slug === "architect")?.slug || "architect"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `askMode = modes.find((m) => m.slug === "ask")?.slug || "ask"` (—Å—Ç—Ä–æ–∫–∞ 12)
- `architectTools = [` (—Å—Ç—Ä–æ–∫–∞ 34)
- `askTools = [...TOOL_GROUPS.read.tools, ...TOOL_GROUPS.browser.tools, ...TOOL_GROUPS.mcp.tools]` (—Å—Ç—Ä–æ–∫–∞ 48)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 96)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 108)
- `enabledRequirements = { apply_diff: true }` (—Å—Ç—Ä–æ–∫–∞ 111)
- `requirements = { some_other_tool: true }` (—Å—Ç—Ä–æ–∫–∞ 116)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 126)
- `requirements = { apply_diff: false }` (—Å—Ç—Ä–æ–∫–∞ 145)
- `requirements = { apply_diff: true }` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ useMcpToolTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockToolResult = {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `error = new Error("Unexpected error")` (—Å—Ç—Ä–æ–∫–∞ 255)

#### üìÑ readFileTool.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockCline(): any` (—Å—Ç—Ä–æ–∫–∞ 179)
- `setImageSupport(mockCline: a, supportsImages: b): void` (—Å—Ç—Ä–æ–∫–∞ 216)
- `async executeReadMultipleImagesTool(imagePaths: s): Promise<ToolResponse | undefined>` (—Å—Ç—Ä–æ–∫–∞ 666)
- `async executeReadImageTool(imagePath: s): Promise<ToolResponse | undefined>` (—Å—Ç—Ä–æ–∫–∞ 1380)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `originalPath = await vi.importActual("path")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `fsPromises = vi.hoisted(() => ({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `addLineNumbersMock = vi.fn().mockImplementation((text, startLine = 1) => {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `lines = typeof text === "string" ? text.split("\n") : [text]` (—Å—Ç—Ä–æ–∫–∞ 52)
- `extractTextFromFileMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `getSupportedBinaryFormatsMock = vi.fn(() => [".pdf", ".docx", ".ipynb"])` (—Å—Ç—Ä–æ–∫–∞ 57)
- `toolResultMock = vi.fn((text: string, images?: string[]) => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `imageBlocksMock = vi.fn((images?: string[]) => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `media_type = header.match(/:(.*?)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 226)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 227)
- `fileContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 228)
- `numberedFileContent = "1 | Line 1\n2 | Line 2\n3 | Line 3\n4 | Line 4\n5 | Line 5\n"` (—Å—Ç—Ä–æ–∫–∞ 229)
- `sourceCodeDef = "\n\n# file.txt\n1--5 | Content"` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `mockedReadLines = vi.mocked(readLines)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `mockedParseSourceCodeDefinitionsForFile = vi.mocked(parseSourceCodeDefinitionsForFile)` (—Å—Ç—Ä–æ–∫–∞ 236)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 256)
- `maxReadFileLine = options.maxReadFileLine ?? 500` (—Å—Ç—Ä–æ–∫–∞ 296)
- `totalLines = options.totalLines ?? 5` (—Å—Ç—Ä–æ–∫–∞ 297)
- `result = await executeReadFileTool({}, { maxReadFileLine: -1 })` (—Å—Ç—Ä–æ–∫–∞ 340)
- `askCall = mockCline.ask.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 357)
- `completeMessage = JSON.parse(askCall[1])` (—Å—Ç—Ä–æ–∫–∞ 358)
- `result = await executeReadFileTool(` (—Å—Ç—Ä–æ–∫–∞ 371)
- `content = "Line 1\nLine 2\nLine 3"` (—Å—Ç—Ä–æ–∫–∞ 397)
- `numberedContent = "1 | Line 1\n2 | Line 2\n3 | Line 3"` (—Å—Ç—Ä–æ–∫–∞ 398)
- `result = await executeReadFileTool({}, { maxReadFileLine: 3 })` (—Å—Ç—Ä–æ–∫–∞ 406)
- `result = await executeReadFileTool({}, { maxReadFileLine: 10, totalLines: 5 })` (—Å—Ç—Ä–æ–∫–∞ 423)
- `result = await executeReadFileTool({}, { maxReadFileLine: 5, totalLines: 3 })` (—Å—Ç—Ä–æ–∫–∞ 436)
- `result = await executeReadFileTool({}, { maxReadFileLine: 3, totalLines: 3 })` (—Å—Ç—Ä–æ–∫–∞ 452)
- `rangeResult = await executeReadFileTool(` (—Å—Ç—Ä–æ–∫–∞ 466)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 483)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 484)
- `fileContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 485)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 487)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 488)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `mockedFsReadFile = vi.mocked(fsPromises.readFile)` (—Å—Ç—Ä–æ–∫–∞ 491)
- `imageBuffer = Buffer.from(` (—Å—Ç—Ä–æ–∫–∞ 492)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 517)
- `totalLines = options.totalLines ?? 5` (—Å—Ç—Ä–æ–∫–∞ 555)
- `maxReadFileLine = options.maxReadFileLine ?? 500` (—Å—Ç—Ä–æ–∫–∞ 556)
- `isBinary = options.isBinary ?? false` (—Å—Ç—Ä–æ–∫–∞ 557)
- `validateAccess = options.validateAccess ?? true` (—Å—Ç—Ä–æ–∫–∞ 558)
- `numberedContent = "1 | Line 1\n2 | Line 2\n3 | Line 3\n4 | Line 4\n5 | Line 5"` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await executeReadFileTool()` (—Å—Ç—Ä–æ–∫–∞ 606)
- `result = await executeReadFileTool({}, { maxReadFileLine: -1 })` (—Å—Ç—Ä–æ–∫–∞ 618)
- `xmlStructureRegex = new RegExp(` (—Å—Ç—Ä–æ–∫–∞ 621)
- `result = await executeReadFileTool({}, { totalLines: 0 })` (—Å—Ç—Ä–æ–∫–∞ 639)
- `testImages = [` (—Å—Ç—Ä–æ–∫–∞ 648)
- `imageBuffer = Buffer.from(` (—Å—Ç—Ä–æ–∫–∞ 655)
- `filesXml = imagePaths.map((path) => `<file><path>${path}</path></file>`).join("")` (—Å—Ç—Ä–æ–∫–∞ 671)
- `argsContent = filesXml` (—Å—Ç—Ä–æ–∫–∞ 672)
- `smallImages = [` (—Å—Ç—Ä–æ–∫–∞ 740)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 748)
- `image = smallImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 749)
- `result = await executeReadMultipleImagesTool(smallImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 757)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 761)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 764)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 765)
- `largeImages = [` (—Å—Ç—Ä–æ–∫–∞ 814)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 824)
- `image = largeImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 825)
- `result = await executeReadMultipleImagesTool(largeImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 833)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 837)
- `textPart = Array.isArray(result) ? result.find((p) => p.type === "text")?.text : result` (—Å—Ç—Ä–æ–∫–∞ 839)
- `imageParts = Array.isArray(result) ? result.filter((p) => p.type === "image") : []` (—Å—Ç—Ä–æ–∫–∞ 840)
- `exactLimitImages = [` (—Å—Ç—Ä–æ–∫–∞ 899)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 907)
- `image = exactLimitImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 908)
- `result = await executeReadMultipleImagesTool(exactLimitImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 919)
- `textPart = Array.isArray(result) ? result.find((p) => p.type === "text")?.text : result` (—Å—Ç—Ä–æ–∫–∞ 922)
- `imageParts = Array.isArray(result) ? result.filter((p) => p.type === "image") : []` (—Å—Ç—Ä–æ–∫–∞ 923)
- `mixedImages = [` (—Å—Ç—Ä–æ–∫–∞ 972)
- `fileName = path.basename(filePath)` (—Å—Ç—Ä–æ–∫–∞ 980)
- `baseName = path.parse(fileName).name` (—Å—Ç—Ä–æ–∫–∞ 981)
- `image = mixedImages.find((img) => img.path.includes(baseName))` (—Å—Ç—Ä–æ–∫–∞ 982)
- `result = await executeReadMultipleImagesTool(mixedImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 997)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1001)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1003)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `testImages = [` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `file = testImages.find((f) => normalizedFilePath.includes(path.normalize(f.path)))` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `imagePaths = testImages.map((img) => img.path)` (—Å—Ç—Ä–æ–∫–∞ 1042)
- `result = await executeReadMultipleImagesTool(imagePaths)` (—Å—Ç—Ä–æ–∫–∞ 1043)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1046)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1048)
- `firstBatch = [{ path: "test/first.png", sizeKB: 10240 }] // 10MB` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `secondBatch = [{ path: "test/second.png", sizeKB: 15360 }] // 15MB` (—Å—Ç—Ä–æ–∫–∞ 1143)
- `result = await executeReadMultipleImagesTool(secondBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1164)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1168)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1169)
- `manyImages = [` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `normalizedFilePath = path.normalize(filePath.toString())` (—Å—Ç—Ä–æ–∫–∞ 1199)
- `image = manyImages.find((img) => normalizedFilePath.includes(path.normalize(img.path)))` (—Å—Ç—Ä–æ–∫–∞ 1200)
- `result = await executeReadMultipleImagesTool(manyImages.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1208)
- `parts = result as any[]` (—Å—Ç—Ä–æ–∫–∞ 1212)
- `textPart = parts.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1213)
- `imageParts = parts.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1214)
- `firstBatch = [{ path: "test/large1.png", sizeKB: 15360 }] // 15MB` (—Å—Ç—Ä–æ–∫–∞ 1246)
- `result1 = await executeReadMultipleImagesTool(firstBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1252)
- `parts1 = result1 as any[]` (—Å—Ç—Ä–æ–∫–∞ 1256)
- `imageParts1 = parts1.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1257)
- `secondBatch = [{ path: "test/large2.png", sizeKB: 18432 }] // 18MB` (—Å—Ç—Ä–æ–∫–∞ 1262)
- `result2 = await executeReadMultipleImagesTool(secondBatch.map((img) => img.path))` (—Å—Ç—Ä–æ–∫–∞ 1274)
- `parts2 = result2 as any[]` (—Å—Ç—Ä–æ–∫–∞ 1278)
- `imageParts2 = parts2.filter((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1279)
- `textPart2 = parts2.find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1280)
- `result = await executeReadFileTool({}, { validateAccess: false })` (—Å—Ç—Ä–æ–∫–∞ 1321)
- `testImagePath = "test/image.png"` (—Å—Ç—Ä–æ–∫–∞ 1332)
- `absoluteImagePath = "/test/image.png"` (—Å—Ç—Ä–æ–∫–∞ 1333)
- `imageBuffer = Buffer.from(base64ImageData, "base64")` (—Å—Ç—Ä–æ–∫–∞ 1336)
- `mockedCountFileLines = vi.mocked(countFileLines)` (—Å—Ç—Ä–æ–∫–∞ 1338)
- `mockedIsBinaryFile = vi.mocked(isBinaryFile)` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `mockedPathResolve = vi.mocked(path.resolve)` (—Å—Ç—Ä–æ–∫–∞ 1340)
- `mockedFsReadFile = vi.mocked(fsPromises.readFile)` (—Å—Ç—Ä–æ–∫–∞ 1341)
- `mockedExtractTextFromFile = vi.mocked(extractTextFromFile)` (—Å—Ç—Ä–æ–∫–∞ 1342)
- `mocks = createMockCline()` (—Å—Ç—Ä–æ–∫–∞ 1362)
- `argsContent = `<file><path>${imagePath}</path></file>`` (—Å—Ç—Ä–æ–∫–∞ 1381)
- `imagePath = `test/${filename}`` (—Å—Ç—Ä–æ–∫–∞ 1423)
- `absolutePath = `/test/${filename}`` (—Å—Ç—Ä–æ–∫–∞ 1424)
- `result = await executeReadImageTool(imagePath)` (—Å—Ç—Ä–æ–∫–∞ 1431)
- `textPart = (result as any[]).find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1435)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1436)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1453)
- `textPart = (result as any[]).find((p) => p.type === "text")?.text` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1458)
- `callArgs = toolResultMock.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1477)
- `textArg = callArgs[0]` (—Å—Ç—Ä–æ–∫–∞ 1478)
- `imagesArg = callArgs[1]` (—Å—Ç—Ä–æ–∫–∞ 1479)
- `largeBase64 = "A".repeat(1000000) // 1MB of base64 data` (—Å—Ç—Ä–æ–∫–∞ 1490)
- `largeBuffer = Buffer.from(largeBase64, "base64")` (—Å—Ç—Ä–æ–∫–∞ 1491)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1495)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1499)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1510)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1524)
- `callArgs = toolResultMock.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1528)
- `textArg = callArgs[0]` (—Å—Ç—Ä–æ–∫–∞ 1529)
- `imagesArg = callArgs[1]` (—Å—Ç—Ä–æ–∫–∞ 1530)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1544)
- `handleErrorSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1558)
- `argsContent = `<file><path>${testImagePath}</path></file>`` (—Å—Ç—Ä–æ–∫–∞ 1561)
- `binaryPath = "test/document.pdf"` (—Å—Ç—Ä–æ–∫–∞ 1589)
- `absolutePath = "/test/document.pdf"` (—Å—Ç—Ä–æ–∫–∞ 1590)
- `result = await executeReadImageTool(binaryPath)` (—Å—Ç—Ä–æ–∫–∞ 1595)
- `callArgs = mockedExtractTextFromFile.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 1601)
- `binaryPath = "test/unknown.bin"` (—Å—Ç—Ä–æ–∫–∞ 1607)
- `absolutePath = "/test/unknown.bin"` (—Å—Ç—Ä–æ–∫–∞ 1608)
- `result = await executeReadImageTool(binaryPath)` (—Å—Ç—Ä–æ–∫–∞ 1613)
- `uppercasePath = "test/IMAGE.PNG"` (—Å—Ç—Ä–æ–∫–∞ 1624)
- `absolutePath = "/test/IMAGE.PNG"` (—Å—Ç—Ä–æ–∫–∞ 1625)
- `result = await executeReadImageTool(uppercasePath)` (—Å—Ç—Ä–æ–∫–∞ 1629)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1633)
- `complexPath = "test/my.photo.backup.png"` (—Å—Ç—Ä–æ–∫–∞ 1640)
- `absolutePath = "/test/my.photo.backup.png"` (—Å—Ç—Ä–æ–∫–∞ 1641)
- `result = await executeReadImageTool(complexPath)` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1649)
- `result = await executeReadImageTool()` (—Å—Ç—Ä–æ–∫–∞ 1659)
- `imagePart = (result as any[]).find((p) => p.type === "image")` (—Å—Ç—Ä–æ–∫–∞ 1663)

#### üìÑ newTaskTool.spec.ts

**–¢–∏–ø—ã:**

- `type MockClineInstance` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockAskApproval = vi.fn<AskApproval>()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `mockHandleError = vi.fn<HandleError>()` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockPushToolResult = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockRemoveClosingTag = vi.fn((_name: string, value: string | undefined) => value ?? "")` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockInitClineWithTask = vi.fn<() => Promise<MockClineInstance>>().mockResolvedValue({ taskId: "mock-subtask-id" })` (—Å—Ç—Ä–æ–∫–∞ 25)
- `mockEmit = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `mockRecordToolError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 27)
- `mockSayAndCreateMissingParamError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `mockCline = {` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ insertContentTool.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `toPosix(filePath: s)` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toPosix = (filePath: string) => filePath.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `testFilePath = "test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `absoluteFilePath = "/test/file.txt"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `mockedFileExistsAtPath = fileExistsAtPath as MockedFunction<typeof fileExistsAtPath>` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mockedFsReadFile = fs.readFile as MockedFunction<typeof fs.readFile>` (—Å—Ç—Ä–æ–∫–∞ 55)
- `fileExists = options.fileExists ?? true` (—Å—Ç—Ä–æ–∫–∞ 135)
- `isPartial = options.isPartial ?? false` (—Å—Ç—Ä–æ–∫–∞ 136)
- `accessAllowed = options.accessAllowed ?? true` (—Å—Ç—Ä–æ–∫–∞ 137)
- `fileContent = options.fileContent ?? ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `contentToInsert = "New Line 1\nNew Line 2"` (—Å—Ç—Ä–æ–∫–∞ 173)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 180)
- `contentToInsert = "Hello World!"` (—Å—Ç—Ä–æ–∫–∞ 189)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 196)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `contentToInsert = "Arbitrary insert"` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = await executeInsertContentTool(` (—Å—Ç—Ä–æ–∫–∞ 218)
- `calledPath = mockedFileExistsAtPath.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 224)

#### üìÑ executeCommandTool.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExecuteCommand = vitest.fn().mockImplementation(() => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `errorMessage = await cline.sayAndCreateMissingParamError("execute_command", "command")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `ignoredFileAttemptedToAccess = cline.rooIgnoreController?.validateCommand(block.params.command)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockRooIgnoreError = "RooIgnore error"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `didApprove = await askApproval("command", block.params.command)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `customCwd = block.params.cwd` (—Å—Ç—Ä–æ–∫–∞ 68)
- `input = "echo &lt` (—Å—Ç—Ä–æ–∫–∞ 130)
- `expected = "echo <test>"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `input = "echo test &gt` (—Å—Ç—Ä–æ–∫–∞ 136)
- `expected = "echo test > output.txt"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `input = "echo foo &amp` (—Å—Ç—Ä–æ–∫–∞ 142)
- `expected = "echo foo && echo bar"` (—Å—Ç—Ä–æ–∫–∞ 143)
- `input = "grep -E 'pattern' &lt` (—Å—Ç—Ä–æ–∫–∞ 148)
- `expected = "grep -E 'pattern' <file.txt >output.txt 2>&1"` (—Å—Ç—Ä–æ–∫–∞ 149)
- `lastCall = mockExecuteCommand.mock.calls[mockExecuteCommand.mock.calls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 194)
- `validateCommandMock = vitest.fn().mockReturnValue(".env")` (—Å—Ç—Ä–æ–∫–∞ 247)
- `mockRooIgnoreError = "RooIgnore error"` (—Å—Ç—Ä–æ–∫–∞ 252)
- `timeoutSeconds = 15` (—Å—Ç—Ä–æ–∫–∞ 282)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 283)
- `mockOptions = {` (—Å—Ç—Ä–æ–∫–∞ 297)

#### üìÑ executeCommandTimeout.integration.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `customTimeoutMs = 15000 // 15 seconds in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 82)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `shortTimeoutMs = 100 // Very short timeout in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 100)
- `longRunningProcess = new Promise(() => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `shortTimeoutMs = 50 // Short timeout in milliseconds` (—Å—Ç—Ä–æ–∫–∞ 127)
- `abortSpy = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `neverResolvingPromise = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 138)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 157)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `quickProcess = Promise.resolve()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 191)
- `result = await executeCommand(mockTask as Task, options)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 259)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 287)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 293)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 305)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 320)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 326)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 338)
- `result = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 353)
- `mockGetConfiguration = vitest.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 359)
- `longRunningProcess = new Promise((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 368)
- `neverResolvingProcess = new Promise(() => {})` (—Å—Ç—Ä–æ–∫–∞ 371)
- `result1 = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result2 = mockPushToolResult.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 408)

#### üìÑ executeCommand.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `initialCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `currentCwd = "/test/project/subdirectory"` (—Å—Ç—Ä–æ–∫–∞ 83)
- `vscodeTerminal = new Terminal(1, undefined, "/test/project")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `mockVSCodeTerminal = vscodeTerminal as any` (—Å—Ç—Ä–æ–∫–∞ 119)
- `execaTerminal = new ExecaTerminal(1, "/test/project")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `mockExecaTerminal = execaTerminal as any` (—Å—Ç—Ä–æ–∫–∞ 158)
- `customCwd = "/custom/absolute/path"` (—Å—Ç—Ä–æ–∫–∞ 192)
- `relativeCwd = "subdirectory"` (—Å—Ç—Ä–æ–∫–∞ 226)
- `resolvedCwd = path.resolve(mockTask.cwd, relativeCwd)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `nonExistentCwd = "/non/existent/path"` (—Å—Ç—Ä–æ–∫–∞ 261)
- `initialCwd = "/test/project"` (—Å—Ç—Ä–æ–∫–∞ 433)
- `updatedCwd = "/test/project/src"` (—Å—Ç—Ä–æ–∫–∞ 434)
- `mockTerminalInstance = {` (—Å—Ç—Ä–æ–∫–∞ 440)

#### üìÑ attemptCompletionTool.spec.ts

#### üìÑ askFollowupQuestionTool.spec.ts

#### üìÑ applyDiffTool.experiment.spec.ts

#### üìÑ ToolRepetitionDetector.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createToolUse(name: s, params: R): ToolUse` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `detector = new ToolRepetitionDetector()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `result1 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 36)
- `result2 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 40)
- `result3 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 44)
- `customLimit = 2` (—Å—Ç—Ä–æ–∫–∞ 49)
- `detector = new ToolRepetitionDetector(customLimit)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result1 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result2 = detector.check(createToolUse("test", "test-tool"))` (—Å—Ç—Ä–æ–∫–∞ 57)
- `detector = new ToolRepetitionDetector()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `result1 = detector.check(createToolUse("first", "first-tool"))` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result2 = detector.check(createToolUse("second", "second-tool"))` (—Å—Ç—Ä–æ–∫–∞ 71)
- `result3 = detector.check(createToolUse("third", "third-tool"))` (—Å—Ç—Ä–æ–∫–∞ 75)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `result = detector.check(createToolUse("same", "same-tool"))` (—Å—Ç—Ä–æ–∫–∞ 90)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result1 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result2 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result3 = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `result = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 126)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `limitResult = detector.check(createToolUse("repeat", "repeat-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = detector.check(createToolUse("new", "new-tool"))` (—Å—Ç—Ä–æ–∫–∞ 143)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `limitResult = detector.check(createToolUse("problem", "problem-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result = detector.check(createToolUse("problem", "problem-tool"))` (—Å—Ç—Ä–æ–∫–∞ 159)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `limitResult = detector.check(createToolUse("repeat", "repeat-tool")) // This reaches limit` (—Å—Ç—Ä–æ–∫–∞ 168)
- `result = detector.check(createToolUse("repeat", "repeat-tool"))` (—Å—Ç—Ä–æ–∫–∞ 175)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `toolName = "special-tool-name"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = detector.check(createToolUse("test", toolName))` (—Å—Ç—Ä–æ–∫–∞ 189)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = detector.check(createToolUse("empty-tool"))` (—Å—Ç—Ä–æ–∫–∞ 204)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `toolUse1 = createToolUse("tool-name-1", "tool-name-1", { param: "value" })` (—Å—Ç—Ä–æ–∫–∞ 214)
- `toolUse2 = createToolUse("tool-name-2", "tool-name-2", { param: "value" })` (—Å—Ç—Ä–æ–∫–∞ 219)
- `originalSerialize = (detector as any).serializeToolUse` (—Å—Ç—Ä–æ–∫–∞ 222)
- `result = detector.check(toolUse2)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 244)
- `toolUse1 = createToolUse("same-tool", "same-tool", { a: "1", b: "2", c: "3" })` (—Å—Ç—Ä–æ–∫–∞ 247)
- `toolUse2 = createToolUse("same-tool", "same-tool", { c: "3", a: "1", b: "2" })` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = detector.check(toolUse2)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `detector = new ToolRepetitionDetector(1)` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 269)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `result1 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result2 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 283)
- `detector = new ToolRepetitionDetector(3)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `result1 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 292)
- `result2 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result3 = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 300)
- `detector = new ToolRepetitionDetector(0)` (—Å—Ç—Ä–æ–∫–∞ 306)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 310)
- `detector5 = new ToolRepetitionDetector(5)` (—Å—Ç—Ä–æ–∫–∞ 318)
- `tool = createToolUse("tool", "tool-name")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `result = detector5.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 323)
- `result5 = detector5.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 329)
- `detector = new ToolRepetitionDetector(2)` (—Å—Ç—Ä–æ–∫–∞ 336)
- `tool = createToolUse("tool", "tool-name")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `blocked = detector.check(tool)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `detector = new ToolRepetitionDetector(-1)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `result = detector.check(createToolUse("tool", "tool-name"))` (—Å—Ç—Ä–æ–∫–∞ 355)

### üìÇ build-src/src/core/task/__tests__

#### üìÑ Task.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = (await importOriginal()) as Record<string, any>` (—Å—Ç—Ä–æ–∫–∞ 34)
- `mockFunctions = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 76)
- `mockEventEmitter = { event: vi.fn(), fire: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 77)
- `mockTextDocument = { uri: { fsPath: "/mock/workspace/path/file.ts" } }` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockTextEditor = { document: mockTextDocument }` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockTab = { input: { uri: { fsPath: "/mock/workspace/path/file.ts" } } }` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockTabGroup = { tabs: [mockTab] }` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockMessages = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `storageUri = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 296)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 308)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 324)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 335)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 347)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 359)
- `cline = new Task({` (—Å—Ç—Ä–æ–∫–∞ 374)
- `mockStreamForClean = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `cleanMessageSpy = vi.fn().mockReturnValue(mockStreamForClean)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `messageWithExtra = {` (—Å—Ç—Ä–æ–∫–∞ 433)
- `history = cleanMessageSpy.mock.calls[0]?.[1]` (—Å—Ç—Ä–æ–∫–∞ 447)
- `cleanedMessage = history.find((msg: { content?: Array<{ text: string }> }) =>` (—Å—Ç—Ä–æ–∫–∞ 452)
- `configWithImages = {` (—Å—Ç—Ä–æ–∫–∞ 467)
- `configWithoutImages = {` (—Å—Ç—Ä–æ–∫–∞ 471)
- `mockStreamWithImages = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 566)
- `mockStreamWithoutImages = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 570)
- `imagesSpy = vi.fn().mockReturnValue(mockStreamWithImages)` (—Å—Ç—Ä–æ–∫–∞ 575)
- `noImagesSpy = vi.fn().mockReturnValue(mockStreamWithoutImages)` (—Å—Ç—Ä–æ–∫–∞ 576)
- `imagesCalls = imagesSpy.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 603)
- `noImagesCalls = noImagesSpy.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 604)
- `mockDelay = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 634)
- `saySpy = vi.spyOn(cline, "say")` (—Å—Ç—Ä–æ–∫–∞ 638)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 641)
- `mockFailedStream = {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `mockSuccessStream = {` (—Å—Ç—Ä–æ–∫–∞ 662)
- `iterator = cline.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 713)
- `baseDelay = 3 // from requestDelaySeconds` (—Å—Ç—Ä–æ–∫–∞ 717)
- `totalExpectedDelays = baseDelay // One delay per second for countdown` (—Å—Ç—Ä–æ–∫–∞ 737)
- `errorMessage = saySpy.mock.calls.find((call) => call[1]?.includes(mockError.message))?.[1]` (—Å—Ç—Ä–æ–∫–∞ 742)
- `mockDelay = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 759)
- `saySpy = vi.spyOn(cline, "say")` (—Å—Ç—Ä–æ–∫–∞ 763)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 766)
- `mockFailedStream = {` (—Å—Ç—Ä–æ–∫–∞ 767)
- `mockSuccessStream = {` (—Å—Ç—Ä–æ–∫–∞ 787)
- `iterator = cline.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 838)
- `baseDelay = 3 // from requestDelaySeconds` (—Å—Ç—Ä–æ–∫–∞ 842)
- `expectedDelayCount = baseDelay // One delay per second for countdown` (—Å—Ç—Ä–æ–∫–∞ 843)
- `retryMessages = saySpy.mock.calls.filter(` (—Å—Ç—Ä–æ–∫–∞ 848)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 883)
- `processedContent = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 914)
- `toolResult1 = processedContent[2] as Anthropic.ToolResultBlockParam` (—Å—Ç—Ä–æ–∫–∞ 933)
- `content1 = Array.isArray(toolResult1.content) ? toolResult1.content[0] : toolResult1.content` (—Å—Ç—Ä–æ–∫–∞ 934)
- `toolResult2 = processedContent[3] as Anthropic.ToolResultBlockParam` (—Å—Ç—Ä–æ–∫–∞ 941)
- `content2 = Array.isArray(toolResult2.content) ? toolResult2.content[0] : toolResult2.content` (—Å—Ç—Ä–æ–∫–∞ 942)
- `getStateSpy = vi.spyOn(mockProvider, "getState")` (—Å—Ç—Ä–æ–∫–∞ 994)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 997)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1024)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1031)
- `childMockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1060)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1070)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1097)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 1101)
- `mockTime = Date.now() + (mockApiConfig.rateLimitSeconds + 1) * 1000` (—Å—Ç—Ä–æ–∫–∞ 1102)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1106)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1118)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1130)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1138)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1157)
- `child1 = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1161)
- `child1Iterator = child1.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1173)
- `firstDelayCount = mockDelay.mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 1177)
- `child2 = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1184)
- `child2Iterator = child2.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1196)
- `parent = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1211)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1219)
- `parentIterator = parent.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1238)
- `child = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1242)
- `childIterator = child.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1254)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1263)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 1271)
- `iterator = task.attemptApiRequest(0)` (—Å—Ç—Ä–æ–∫–∞ 1290)
- `globalTimestamp = (Task as any).lastGlobalApiRequestTime` (—Å—Ç—Ä–æ–∫–∞ 1294)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1327)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1347)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1369)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1389)
- `anthropicConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `anthropicTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `openrouterClaudeConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1420)
- `openrouterClaudeTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1424)
- `openrouterGptConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1433)
- `openrouterGptTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1437)
- `claudeModelFormats = [` (—Å—Ç—Ä–æ–∫–∞ 1446)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 1455)
- `task = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `undefinedProviderConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1472)
- `undefinedProviderTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1475)
- `noModelConfig = {` (—Å—Ç—Ä–æ–∫–∞ 1484)
- `noModelTask = new Task({` (—Å—Ç—Ä–æ–∫–∞ 1487)

#### üìÑ AutoApprovalHandler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetApiMetrics = getApiMetrics as any` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result1 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result2 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `result1 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result2 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result3 = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 182)
- `state = handler.getApprovalState()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await handler.checkAutoApprovalLimits(mockState, messages, mockAskForApproval)` (—Å—Ç—Ä–æ–∫–∞ 217)

### üìÇ build-src/src/core/protect/__tests__

#### üìÑ RooProtectedController.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TEST_CWD = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 5)
- `absolutePath = path.join(TEST_CWD, ".neiraignore")` (—Å—Ç—Ä–æ–∫–∞ 75)
- `files = ["src/index.ts", ".neiraignore", "package.json", ".neira/config.json", "README.md"]` (—Å—Ç—Ä–æ–∫–∞ 87)
- `protectedFiles = controller.getProtectedFiles(files)` (—Å—Ç—Ä–æ–∫–∞ 89)
- `files = ["src/index.ts", "package.json", "README.md"]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `protectedFiles = controller.getProtectedFiles(files)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `files = ["src/index.ts", ".neiraignore", ".neira/config.json", "package.json"]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `annotated = controller.annotatePathsWithProtection(files)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `message = controller.getProtectionMessage()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `patterns = RooProtectedController.getProtectedPatterns()` (—Å—Ç—Ä–æ–∫–∞ 139)

### üìÇ build-src/src/core/prompts/tools

#### üìÑ write-to-file.ts

#### üìÑ use-mcp-tool.ts

#### üìÑ update-todo-list.ts

#### üìÑ types.ts

#### üìÑ switch-mode.ts

#### üìÑ search-files.ts

#### üìÑ search-and-replace.ts

#### üìÑ read-file.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `maxConcurrentReads = args.settings?.maxConcurrentFileReads ?? 5` (—Å—Ç—Ä–æ–∫–∞ 4)
- `isMultipleReadsEnabled = maxConcurrentReads > 1` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ new-task.ts

#### üìÑ list-files.ts

#### üìÑ list-code-definition-names.ts

#### üìÑ insert-content.ts

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `config = getModeConfig(mode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `tools = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `groupName = getGroupName(groupEntry)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `toolGroup = TOOL_GROUPS[groupName]` (—Å—Ç—Ä–æ–∫–∞ 82)
- `descriptions = Array.from(tools).map((toolName) => {` (—Å—Ç—Ä–æ–∫–∞ 118)
- `descriptionFn = toolDescriptionMap[toolName]` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ fetch-instructions.ts

#### üìÑ execute-command.ts

#### üìÑ codebase-search.ts

#### üìÑ browser-action.ts

#### üìÑ attempt-completion.ts

#### üìÑ ask-followup-question.ts

#### üìÑ access-mcp-resource.ts

### üìÇ build-src/src/core/prompts/sections

#### üìÑ tool-use.ts

#### üìÑ tool-use-guidelines.ts

#### üìÑ system-info.ts

#### üìÑ rules.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEditingInstructions(): string` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseSearchRule = isCodebaseSearchAvailable` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ objective.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codebaseSearchInstruction = isCodebaseSearchAvailable` (—Å—Ç—Ä–æ–∫–∞ 13)

#### üìÑ modes.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `allModes = await getAllModesWithPrompts(context)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ mcp-servers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tools = server.tools` (—Å—Ç—Ä–æ–∫–∞ 19)
- `schemaStr = tool.inputSchema` (—Å—Ç—Ä–æ–∫–∞ 22)
- `templates = server.resourceTemplates` (—Å—Ç—Ä–æ–∫–∞ 31)
- `resources = server.resources` (—Å—Ç—Ä–æ–∫–∞ 35)
- `config = JSON.parse(server.config)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `baseSection = `MCP –°–ï–†–í–ï–†–´` (—Å—Ç—Ä–æ–∫–∞ 52)

#### üìÑ markdown-formatting.ts

#### üìÑ index.ts

#### üìÑ custom-system-prompt.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `interpolatePromptContent(content: s, variables: P): string` (—Å—Ç—Ä–æ–∫–∞ 14)
- `async safeReadFile(filePath: s): Promise<string>` - –ë–µ–∑–æ–ø–∞—Å–Ω–æ —á–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª, –≤–æ–∑–≤—Ä–∞—â–∞—è –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å—Ç—Ä–æ–∫–∞ 31)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `placeholder = new RegExp(`\\{\\{${key}\\}\\}`, "g")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 33)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 37)
- `filePath = getSystemPromptFilePath(cwd, mode)` - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ –ø—É—Ç–∏ .neira/system-prompt-[slug —Ä–µ–∂–∏–º–∞] –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É (—Å—Ç—Ä–æ–∫–∞ 57)
- `rawContent = await safeReadFile(filePath)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `interpolatedContent = interpolatePromptContent(rawContent, variables)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `rooDir = path.join(cwd, ".neira")` - –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .neira, —Å–æ–∑–¥–∞–≤–∞—è –µ–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ custom-instructions.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async safeReadFile(filePath: s): Promise<string>` - Safely read a file and return its trimmed content (—Å—Ç—Ä–æ–∫–∞ 16)
- `async directoryExists(dirPath: s): Promise<boolean>` - Check if a directory exists (—Å—Ç—Ä–æ–∫–∞ 32)
- `formatDirectoryContent(dirPath: s, files: A, filename: s, content: s): string` - Format content from multiple files with filenames as headers (—Å—Ç—Ä–æ–∫–∞ 171)
- `async loadAgentRulesFile(cwd: s): Promise<string>` - Load AGENTS.md file from the project root if it exists (—Å—Ç—Ä–æ–∫–∞ 223)
- `shouldIncludeRuleFile(filename: s): boolean` - Check if a file should be included in rule compilation. Excludes cache files and system files that shouldn't be processed as rules. (—Å—Ç—Ä–æ–∫–∞ 382)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = await fs.readFile(filePath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 18)
- `errorCode = (err as NodeJS.ErrnoException).code` (—Å—Ç—Ä–æ–∫–∞ 21)
- `stats = await fs.stat(dirPath)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `MAX_DEPTH = 5` (—Å—Ç—Ä–æ–∫–∞ 41)
- `fullPath = path.resolve(entry.parentPath || dirPath, entry.name)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `linkTarget = await fs.readlink(symlinkPath)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `resolvedTarget = path.resolve(path.dirname(symlinkPath), linkTarget)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `stats = await fs.stat(resolvedTarget)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `anotherEntries = await fs.readdir(resolvedTarget, { withFileTypes: true, recursive: true })` (—Å—Ç—Ä–æ–∫–∞ 91)
- `entries = await fs.readdir(dirPath, { withFileTypes: true, recursive: true })` (—Å—Ç—Ä–æ–∫–∞ 113)
- `fileContents = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 128)
- `stats = await fs.stat(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `content = await safeReadFile(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `filteredFiles = fileContents.filter(` (—Å—Ç—Ä–æ–∫–∞ 150)
- `filenameA = path.basename(a.sortKey).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `filenameB = path.basename(b.sortKey).toLowerCase()` (—Å—Ç—Ä–æ–∫–∞ 159)
- `neiraDirectories = getNeiraDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `rulesDir = path.join(neiraDir, "rules")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `files = await readTextFilesFromDirectory(rulesDir)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `content = formatDirectoryContent(rulesDir, files)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `ruleFiles = [".neirarules", ".clinerules"]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `content = await safeReadFile(path.join(cwd, file))` (—Å—Ç—Ä–æ–∫–∞ 211)
- `agentsPath = path.join(cwd, "AGENTS.md")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `stats = await fs.lstat(agentsPath)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `content = await safeReadFile(resolvedPath)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 270)
- `neiraDirectories = getNeiraDirectoriesForCwd(cwd)` (—Å—Ç—Ä–æ–∫–∞ 278)
- `modeRulesDir = path.join(neiraDir, `rules-${mode}`)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `files = await readTextFilesFromDirectory(modeRulesDir)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `content = formatDirectoryContent(modeRulesDir, files)` (—Å—Ç—Ä–æ–∫–∞ 286)
- `rooModeRuleFile = `.neirarules-${mode}`` (—Å—Ç—Ä–æ–∫–∞ 298)
- `clineModeRuleFile = `.clinerules-${mode}`` (—Å—Ç—Ä–æ–∫–∞ 303)
- `languageName = isLanguage(options.language) ? LANGUAGES[options.language] : options.language` (—Å—Ç—Ä–æ–∫–∞ 314)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 331)
- `agentRulesContent = await loadAgentRulesFile(cwd)` (—Å—Ç—Ä–æ–∫–∞ 348)
- `genericRuleContent = await loadRuleFiles(cwd)` (—Å—Ç—Ä–æ–∫–∞ 355)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `basename = path.basename(filename)` (—Å—Ç—Ä–æ–∫–∞ 383)
- `cachePatterns = [` (—Å—Ç—Ä–æ–∫–∞ 385)
- `extension = pattern.slice(1)` (—Å—Ç—Ä–æ–∫–∞ 411)

#### üìÑ capabilities.ts

### üìÇ build-src/src/core/prompts/instructions

#### üìÑ instructions.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface InstructionsDetail` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ create-mode.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `settingsDir = path.join(context.globalStorageUri.fsPath, "settings")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `customModesPath = path.join(settingsDir, GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ create-mcp-server.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface WeatherData` (—Å—Ç—Ä–æ–∫–∞ 105)

- `interface ForecastData` (—Å—Ç—Ä–æ–∫–∞ 118)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `API_KEY = process.env.OPENWEATHER_API_KEY` (—Å—Ç—Ä–æ–∫–∞ 99)
- `server = new McpServer({` (—Å—Ç—Ä–æ–∫–∞ 125)
- `weatherApi = axios.create({` (—Å—Ç—Ä–æ–∫–∞ 131)
- `response = await weatherApi.get<ForecastData>('forecast', {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `response = weatherApi.get<WeatherData>('weather', {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `response = await weatherApi.get('weather', {` (—Å—Ç—Ä–æ–∫–∞ 228)
- `transport = new StdioServerTransport()` (—Å—Ç—Ä–æ–∫–∞ 263)
- `servers = mcpHub` (—Å—Ç—Ä–æ–∫–∞ 307)

### üìÇ build-src/src/core/prompts/__tests__

#### üìÑ utils.ts

#### üìÑ system-prompt.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockMcpHub(withServers: b): McpHub` (—Å—Ç—Ä–æ–∫–∞ 171)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `addCustomInstructions = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `customInstructionsMock = vi.mocked(await import("../sections/custom-instructions"))` (—Å—Ç—Ä–æ–∫–∞ 74)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 84)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 104)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 145)
- `createMockMcpHub = (withServers: boolean = false): McpHub =>` (—Å—Ç—Ä–æ–∫–∞ 171)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 207)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 230)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 255)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 301)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 324)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 348)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 372)
- `vscode = vi.mocked(await import("vscode")) as any` (—Å—Ç—Ä–æ–∫–∞ 397)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 423)
- `modeCustomInstructions = "Custom mode instructions"` (—Å—Ç—Ä–æ–∫–∞ 472)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 484)
- `customInstructionsIndex = prompt.indexOf("Custom mode instructions")` (—Å—Ç—Ä–æ–∫–∞ 507)
- `userInstructionsHeader = prompt.indexOf("USER'S CUSTOM INSTRUCTIONS")` (—Å—Ç—Ä–æ–∫–∞ 508)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 515)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 522)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 548)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 555)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 579)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 585)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 617)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 648)

#### üìÑ sections.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mcpHub = undefined` (—Å—Ç—Ä–æ–∫–∞ 34)
- `result = getCapabilitiesSection(cwd, false, mcpHub, mockDiffStrategy)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = getCapabilitiesSection(cwd, false, mcpHub, undefined)` (—Å—Ç—Ä–æ–∫–∞ 51)

#### üìÑ responses-rooignore.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 15)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `errorMessage = formatResponse.neiraIgnoreError("secrets/api-keys.json")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `paths = ["node_modules/package.json", ".git/HEAD", "secrets/credentials.env", "logs/app.log"]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `errorMessage = formatResponse.neiraIgnoreError(testPath)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `files = [` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = formatResponse.formatFilesList(TEST_CWD, files, false, controller as any, true)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 126)
- `files = [` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 149)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `result = formatResponse.formatFilesList(` (—Å—Ç—Ä–æ–∫–∞ 181)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = formatResponse.formatFilesList(TEST_CWD, [], false, controller as any, true)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 216)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `controller = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 243)

#### üìÑ get-prompt-component.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `result = getPromptComponent(undefined, "architect")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = getPromptComponent(customModePrompts, "architect")` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ custom-system-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockReadFile = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockMkdir = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 4)
- `mockAccess = vi.fn().mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 5)
- `mockedFs = vi.mocked(fs)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 69)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 75)
- `fileCustomSystemPrompt = "Custom system prompt from file"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 112)
- `fileCustomSystemPrompt = "Custom system prompt from file"` (—Å—Ç—Ä–æ–∫–∞ 142)
- `customRoleDefinition = "Custom role definition"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 152)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ add-custom-instructions.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockMcpHub(withServers: b): McpHub` (—Å—Ç—Ä–æ–∫–∞ 171)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `addCustomInstructions = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `customInstructionsMock = vi.mocked(await import("../sections/custom-instructions"))` (—Å—Ç—Ä–æ–∫–∞ 74)
- `sections = []` (—Å—Ç—Ä–æ–∫–∞ 84)
- `rules = []` (—Å—Ç—Ä–æ–∫–∞ 104)
- `joinedSections = sections.join("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 145)
- `createMockMcpHub = (withServers: boolean = false): McpHub =>` (—Å—Ç—Ä–æ–∫–∞ 171)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 193)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 216)
- `mockMcpHub = createMockMcpHub(true)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 241)
- `mockMcpHub = createMockMcpHub(false)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 267)
- `prompt = await SYSTEM_PROMPT(` (—Å—Ç—Ä–æ–∫–∞ 291)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 314)
- `instructions = await addCustomInstructions("", "", "/test/path", modes[2].slug)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `instructions = await addCustomInstructions("", "", "/test/path", modes[1].slug)` (—Å—Ç—Ä–æ–∫–∞ 324)
- `instructions = await addCustomInstructions("", "", "/test/path", "test")` (—Å—Ç—Ä–æ–∫–∞ 329)
- `instructions = await addCustomInstructions("", "", "/test/path", "review")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 343)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug, {` (—Å—Ç—Ä–æ–∫–∞ 348)
- `instructions = await addCustomInstructions("Custom test instructions", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 355)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 362)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 375)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 382)
- `instructions = await addCustomInstructions("", "", "/test/path", defaultModeSlug)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 399)
- `instructions = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 411)
- `instructionParts = instructions.split("\n\n")` (—Å—Ç—Ä–æ–∫–∞ 418)
- `globalIndex = instructionParts.findIndex((part) => part.includes("First instruction"))` (—Å—Ç—Ä–æ–∫–∞ 419)
- `modeSpecificIndex = instructionParts.findIndex((part) => part.includes("Second instruction"))` (—Å—Ç—Ä–æ–∫–∞ 420)

### üìÇ build-src/src/core/ignore/__tests__

#### üìÑ RooIgnoreController.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockEventEmitter = {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 144)
- `absolutePath = path.join(TEST_CWD, "node_modules/package.json")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `allowedAbsolutePath = path.join(TEST_CWD, "src/app.ts")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `emptyController = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `emptyController = new RooIgnoreController(TEST_CWD)` (—Å—Ç—Ä–æ–∫–∞ 284)
- `paths = [` (—Å—Ç—Ä–æ–∫–∞ 305)
- `filtered = controller.filterPaths(paths)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 334)
- `result = controller.filterPaths(["file1.txt", "file2.txt"])` (—Å—Ç—Ä–æ–∫–∞ 337)
- `result = controller.filterPaths([])` (—Å—Ç—Ä–æ–∫–∞ 351)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `instructions = controller.getInstructions()` (—Å—Ç—Ä–æ–∫–∞ 384)
- `disposeSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 395)
- `onDeleteHandler = mockWatcher.onDidDelete.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 492)

#### üìÑ RooIgnoreController.security.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockDisposable = { dispose: vi.fn() }` (—Å—Ç—Ä–æ–∫–∞ 14)
- `TEST_CWD = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `absolutePathToIgnored = path.join(TEST_CWD, "secrets/keys.json")` (—Å—Ç—Ä–æ–∫–∞ 178)
- `absolutePathToAllowed = path.join(TEST_CWD, "src/app.js")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `paths = [` (—Å—Ç—Ä–æ–∫–∞ 280)
- `filtered = controller.filterPaths(paths)` (—Å—Ç—Ä–æ–∫–∞ 290)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 309)
- `filtered = controller.filterPaths(["src/app.js", "node_modules/package.json"])` (—Å—Ç—Ä–æ–∫–∞ 312)

### üìÇ build-src/src/core/ignore/__mocks__

#### üìÑ RooIgnoreController.ts

### üìÇ build-src/src/core/environment/__tests__

#### üìÑ getEnvironmentDetails.spec.ts

**–¢–∏–ø—ã:**

- `type MockTerminal` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/test/path"` (—Å—Ç—Ä–æ–∫–∞ 54)
- `mockTaskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 55)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `result = await getEnvironmentDetails(mockCline as Task, true)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `mockActiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 246)
- `mockInactiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockActiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `mockProcess = {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `mockInactiveTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `result = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `result2 = await getEnvironmentDetails(mockCline as Task)` (—Å—Ç—Ä–æ–∫–∞ 341)
- `mockErrorTerminal = {` (—Å—Ç—Ä–æ–∫–∞ 351)

### üìÇ build-src/src/core/diff/strategies

#### üìÑ multi-search-replace.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getSimilarity(original: s, search: s): number` (—Å—Ç—Ä–æ–∫–∞ 13)
- `fuzzySearch(lines: s, searchChunk: s, startIndex: n, endIndex: n)` - Performs a "middle-out" search of `lines` (between [startIndex, endIndex]) to find the slice that is most similar to `searchChunk`. Returns the best score, index, and matched text. (—Å—Ç—Ä–æ–∫–∞ 39)
- `reportMergeConflictError(found: s, _expected: s)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `reportInvalidDiffError(found: s, expected: s)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `reportLineMarkerInReplaceError(marker: s)` (—Å—Ç—Ä–æ–∫–∞ 246)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BUFFER_LINES = 40 // Number of extra context lines to show before and after matches` (—Å—Ç—Ä–æ–∫–∞ 11)
- `normalizedOriginal = normalizeString(original)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `normalizedSearch = normalizeString(search)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `dist = distance(normalizedOriginal, normalizedSearch)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `maxLength = Math.max(normalizedOriginal.length, normalizedSearch.length)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `searchLen = searchChunk.split(/\r?\n/).length` (—Å—Ç—Ä–æ–∫–∞ 43)
- `midPoint = Math.floor((startIndex + endIndex) / 2)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `originalChunk = lines.slice(leftIndex, leftIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `originalChunk = lines.slice(rightIndex, rightIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `state = { current: State.START, line: 0 }` (—Å—Ç—Ä–æ–∫–∞ 199)
- `SEARCH = "<<<<<<< SEARCH"` (—Å—Ç—Ä–æ–∫–∞ 201)
- `SEP = "======="` (—Å—Ç—Ä–æ–∫–∞ 202)
- `REPLACE = ">>>>>>> REPLACE"` (—Å—Ç—Ä–æ–∫–∞ 203)
- `SEARCH_PREFIX = "<<<<<<<"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `REPLACE_PREFIX = ">>>>>>>"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `reportMergeConflictError = (found: string, _expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 207)
- `reportInvalidDiffError = (found: string, expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 231)
- `reportLineMarkerInReplaceError = (marker: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 246)
- `lines = diffContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `searchCount = lines.filter((l) => l.trim() === SEARCH).length` (—Å—Ç—Ä–æ–∫–∞ 271)
- `sepCount = lines.filter((l) => l.trim() === SEP).length` (—Å—Ç—Ä–æ–∫–∞ 272)
- `replaceCount = lines.filter((l) => l.trim() === REPLACE).length` (—Å—Ç—Ä–æ–∫–∞ 273)
- `likelyBadStructure = searchCount !== replaceCount || sepCount < searchCount` (—Å—Ç—Ä–æ–∫–∞ 275)
- `marker = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 279)
- `validseq = this.validateMarkerSequencing(diffContent)` (—Å—Ç—Ä–æ–∫–∞ 340)
- `lineEnding = originalContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 392)
- `replacements = matches` (—Å—Ç—Ä–æ–∫–∞ 397)
- `exactStartIndex = startLine - 1` (—Å—Ç—Ä–æ–∫–∞ 468)
- `searchLen = searchLines.length` (—Å—Ç—Ä–æ–∫–∞ 469)
- `exactEndIndex = exactStartIndex + searchLen - 1` (—Å—Ç—Ä–æ–∫–∞ 470)
- `originalChunk = resultLines.slice(exactStartIndex, exactEndIndex + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 473)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 474)
- `aggressiveSearchContent = stripLineNumbers(searchContent, true)` (—Å—Ç—Ä–æ–∫–∞ 501)
- `aggressiveReplaceContent = stripLineNumbers(replaceContent, true)` (—Å—Ç—Ä–æ–∫–∞ 502)
- `aggressiveSearchLines = aggressiveSearchContent ? aggressiveSearchContent.split(/\r?\n/) : []` (—Å—Ç—Ä–æ–∫–∞ 504)
- `aggressiveSearchChunk = aggressiveSearchLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 505)
- `bestMatchSection = bestMatchContent` (—Å—Ç—Ä–æ–∫–∞ 537)
- `lineRange = startLine ? ` at line: ${startLine}` : ""` (—Å—Ç—Ä–æ–∫–∞ 541)
- `matchedLines = resultLines.slice(matchIndex, matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 552)
- `originalIndents = matchedLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 555)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 556)
- `searchIndents = searchLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 561)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 562)
- `indentedReplaceLines = replaceLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 567)
- `matchedIndent = originalIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 569)
- `currentIndentMatch = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `currentIndent = currentIndentMatch ? currentIndentMatch[0] : ""` (—Å—Ç—Ä–æ–∫–∞ 573)
- `searchBaseIndent = searchIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 574)
- `searchBaseLevel = searchBaseIndent.length` (—Å—Ç—Ä–æ–∫–∞ 577)
- `currentLevel = currentIndent.length` (—Å—Ç—Ä–æ–∫–∞ 578)
- `relativeLevel = currentLevel - searchBaseLevel` (—Å—Ç—Ä–æ–∫–∞ 579)
- `beforeMatch = resultLines.slice(0, matchIndex)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `afterMatch = resultLines.slice(matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 593)
- `finalContent = resultLines.join(lineEnding)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `diffContent = toolUse.params.diff` (—Å—Ç—Ä–æ–∫–∞ 613)
- `icon = "diff-multiple"` (—Å—Ç—Ä–æ–∫–∞ 615)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 618)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 622)

#### üìÑ multi-file-search-replace.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getSimilarity(original: s, search: s): number` (—Å—Ç—Ä–æ–∫–∞ 10)
- `fuzzySearch(lines: s, searchChunk: s, startIndex: n, endIndex: n)` - Performs a "middle-out" search of `lines` (between [startIndex, endIndex]) to find the slice that is most similar to `searchChunk`. Returns the best score, index, and matched text. (—Å—Ç—Ä–æ–∫–∞ 36)
- `reportMergeConflictError(found: s, _expected: s)` (—Å—Ç—Ä–æ–∫–∞ 268)
- `reportInvalidDiffError(found: s, expected: s)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `reportLineMarkerInReplaceError(marker: s)` (—Å—Ç—Ä–æ–∫–∞ 307)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BUFFER_LINES = 40 // Number of extra context lines to show before and after matches` (—Å—Ç—Ä–æ–∫–∞ 8)
- `normalizedOriginal = normalizeString(original)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `normalizedSearch = normalizeString(search)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `dist = distance(normalizedOriginal, normalizedSearch)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `maxLength = Math.max(normalizedOriginal.length, normalizedSearch.length)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `searchLen = searchChunk.split(/\r?\n/).length` (—Å—Ç—Ä–æ–∫–∞ 41)
- `midPoint = Math.floor((startIndex + endIndex) / 2)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `originalChunk = lines.slice(leftIndex, leftIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 50)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `originalChunk = lines.slice(rightIndex, rightIndex + searchLen).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `state = { current: State.START, line: 0 }` (—Å—Ç—Ä–æ–∫–∞ 260)
- `SEARCH = "<<<<<<< SEARCH"` (—Å—Ç—Ä–æ–∫–∞ 262)
- `SEP = "======="` (—Å—Ç—Ä–æ–∫–∞ 263)
- `REPLACE = ">>>>>>> REPLACE"` (—Å—Ç—Ä–æ–∫–∞ 264)
- `SEARCH_PREFIX = "<<<<<<< "` (—Å—Ç—Ä–æ–∫–∞ 265)
- `REPLACE_PREFIX = ">>>>>>> "` (—Å—Ç—Ä–æ–∫–∞ 266)
- `reportMergeConflictError = (found: string, _expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `reportInvalidDiffError = (found: string, expected: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 292)
- `reportLineMarkerInReplaceError = (marker: string) => ({` (—Å—Ç—Ä–æ–∫–∞ 307)
- `lines = diffContent.split("\n")` (—Å—Ç—Ä–æ–∫–∞ 331)
- `searchCount = lines.filter((l) => l.trim() === SEARCH).length` (—Å—Ç—Ä–æ–∫–∞ 332)
- `sepCount = lines.filter((l) => l.trim() === SEP).length` (—Å—Ç—Ä–æ–∫–∞ 333)
- `replaceCount = lines.filter((l) => l.trim() === REPLACE).length` (—Å—Ç—Ä–æ–∫–∞ 334)
- `likelyBadStructure = searchCount !== replaceCount || sepCount < searchCount` (—Å—Ç—Ä–æ–∫–∞ 336)
- `marker = line.trim()` (—Å—Ç—Ä–æ–∫–∞ 340)
- `singleResult = await this.applySingleDiff(resultContent, diffItem.content, diffItem.startLine)` (—Å—Ç—Ä–æ–∫–∞ 409)
- `validseq = this.validateMarkerSequencing(diffContent)` (—Å—Ç—Ä–æ–∫–∞ 449)
- `lineEnding = originalContent.includes("\r\n") ? "\r\n" : "\n"` (—Å—Ç—Ä–æ–∫–∞ 482)
- `replacements = matches` (—Å—Ç—Ä–æ–∫–∞ 488)
- `exactStartIndex = startLine - 1` (—Å—Ç—Ä–æ–∫–∞ 559)
- `searchLen = searchLines.length` (—Å—Ç—Ä–æ–∫–∞ 560)
- `exactEndIndex = exactStartIndex + searchLen - 1` (—Å—Ç—Ä–æ–∫–∞ 561)
- `originalChunk = resultLines.slice(exactStartIndex, exactEndIndex + 1).join("\n")` (—Å—Ç—Ä–æ–∫–∞ 564)
- `similarity = getSimilarity(originalChunk, searchChunk)` (—Å—Ç—Ä–æ–∫–∞ 565)
- `aggressiveSearchContent = stripLineNumbers(searchContent, true)` (—Å—Ç—Ä–æ–∫–∞ 594)
- `aggressiveReplaceContent = stripLineNumbers(replaceContent, true)` (—Å—Ç—Ä–æ–∫–∞ 595)
- `aggressiveSearchLines = aggressiveSearchContent ? aggressiveSearchContent.split(/\r?\n/) : []` (—Å—Ç—Ä–æ–∫–∞ 596)
- `aggressiveSearchChunk = aggressiveSearchLines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 597)
- `bestMatchSection = bestMatchContent` (—Å—Ç—Ä–æ–∫–∞ 631)
- `lineRange = startLine ? ` at line: ${startLine}` : ""` (—Å—Ç—Ä–æ–∫–∞ 635)
- `matchedLines = resultLines.slice(matchIndex, matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 654)
- `originalIndents = matchedLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 657)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 658)
- `searchIndents = searchLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 663)
- `match = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `indentedReplaceLines = replaceLines.map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 669)
- `matchedIndent = originalIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 671)
- `currentIndentMatch = line.match(/^[\t ]*/)` (—Å—Ç—Ä–æ–∫–∞ 674)
- `currentIndent = currentIndentMatch ? currentIndentMatch[0] : ""` (—Å—Ç—Ä–æ–∫–∞ 675)
- `searchBaseIndent = searchIndents[0] || ""` (—Å—Ç—Ä–æ–∫–∞ 676)
- `searchBaseLevel = searchBaseIndent.length` (—Å—Ç—Ä–æ–∫–∞ 679)
- `currentLevel = currentIndent.length` (—Å—Ç—Ä–æ–∫–∞ 680)
- `relativeLevel = currentLevel - searchBaseLevel` (—Å—Ç—Ä–æ–∫–∞ 681)
- `beforeMatch = resultLines.slice(0, matchIndex)` (—Å—Ç—Ä–æ–∫–∞ 694)
- `afterMatch = resultLines.slice(matchIndex + searchLines.length)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `finalContent = resultLines.join(lineEnding)` (—Å—Ç—Ä–æ–∫–∞ 702)
- `diffContent = toolUse.params.diff` (—Å—Ç—Ä–æ–∫–∞ 719)
- `icon = "diff-multiple"` (—Å—Ç—Ä–æ–∫–∞ 721)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 725)
- `searchBlockCount = (diffContent.match(/SEARCH/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 729)

### üìÇ build-src/src/core/mentions/__tests__

#### üìÑ processUserContentMentions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 32)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 62)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 91)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 130)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 186)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 194)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 252)
- `result = await processUserContentMentions({` (—Å—Ç—Ä–æ–∫–∞ 272)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 297)
- `userContent = [` (—Å—Ç—Ä–æ–∫–∞ 325)

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timeoutError = new Error("Navigation timeout of 30000 ms exceeded")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `dnsError = new Error("net::ERR_NAME_NOT_RESOLVED")` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = await parseMentions("Check @https://nonexistent.example", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `networkError = new Error("net::ERR_INTERNET_DISCONNECTED")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `forbiddenError = new Error("403 Forbidden")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `notFoundError = new Error("404 Not Found")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = await parseMentions("Check @https://example.com/missing", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `genericError = new Error("Some unexpected error")` (—Å—Ç—Ä–æ–∫–∞ 88)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `nonErrorObject = { code: "UNKNOWN", details: "Something went wrong" }` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `launchError = new Error("Failed to launch browser")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 111)
- `launchError = "String error"` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `result = await parseMentions("Check @https://example.com", "/test", mockUrlContentFetcher)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await parseMentions(` (—Å—Ç—Ä–æ–∫–∞ 149)

### üìÇ build-src/src/core/config/__tests__

#### üìÑ importExport.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `map = new Map<string, string>()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 105)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 126)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 150)
- `mockInvalidContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 204)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockInvalidJson = "{ this is not valid JSON }"` (—Å—Ç—Ä–æ–∫–∞ 256)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 259)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 276)
- `providerSettingsManager = new ProviderSettingsManager(mockExtensionContext)` (—Å—Ç—Ä–æ–∫–∞ 289)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 297)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 309)
- `customModes = [` (—Å—Ç—Ä–æ–∫–∞ 326)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 331)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 345)
- `filePath = "/mock/path/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 360)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 361)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 372)
- `result = await importSettingsFromFile(` (—Å—Ç—Ä–æ–∫–∞ 384)
- `filePath = "/nonexistent/path/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 408)
- `accessError = new Error("ENOENT: no such file or directory")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `mockProvider = {` (—Å—Ç—Ä–æ–∫–∞ 414)
- `showErrorMessageSpy = vi.spyOn(vscode.window, "showErrorMessage").mockResolvedValue(undefined)` (—Å—Ç—Ä–æ–∫–∞ 420)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `mockGlobalSettings = { mode: "code", autoApprovalEnabled: true }` (—Å—Ç—Ä–æ–∫–∞ 472)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 508)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 605)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 622)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 655)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 667)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 689)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 702)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 723)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 745)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 762)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 774)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 808)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 820)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 851)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 862)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 896)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 926)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 941)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 960)
- `importedProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 961)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 971)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 995)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1009)
- `mockFileContent = JSON.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `previousProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `result = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `importedProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1067)
- `testModelDimension = 768` (—Å—Ç—Ä–æ–∫–∞ 1078)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1081)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1093)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1128)
- `exportedFileContent = JSON.stringify(exportedData)` (—Å—Ç—Ä–æ–∫–∞ 1129)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1146)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1156)
- `testModelDimension = 0` (—Å—Ç—Ä–æ–∫–∞ 1172)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1174)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1186)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1215)
- `exportedFileContent = JSON.stringify(exportedData)` (—Å—Ç—Ä–æ–∫–∞ 1219)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1234)
- `setValuesCall = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1243)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1249)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1298)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1307)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1337)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1358)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1367)
- `providerA = importedProviderProfiles.apiConfigs["provider-a"]` (—Å—Ç—Ä–æ–∫–∞ 1371)
- `providerB = importedProviderProfiles.apiConfigs["provider-b"]` (—Å—Ç—Ä–æ–∫–∞ 1372)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1386)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1417)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1440)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1449)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1456)
- `openaiCompatibleProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1457)
- `anthropicProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1458)
- `exportedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1471)
- `currentProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1502)
- `importResult = await importSettings({` (—Å—Ç—Ä–æ–∫–∞ 1526)
- `importedGlobalSettings = mockContextProxy.setValues.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1535)
- `importedProviderProfiles = mockProviderSettingsManager.import.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 1542)
- `anthropicProvider = importedProviderProfiles.apiConfigs["anthropic-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1543)
- `openaiCompatibleProvider = importedProviderProfiles.apiConfigs["openai-compatible-provider"]` (—Å—Ç—Ä–æ–∫–∞ 1544)
- `mockProviderProfiles = {` (—Å—Ç—Ä–æ–∫–∞ 1564)
- `mockGlobalSettings = {` (—Å—Ç—Ä–æ–∫–∞ 1577)
- `exportedData = (safeWriteJson as Mock).mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1601)

#### üìÑ ProviderSettingsManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSecrets = {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGlobalState = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockContext = {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 104)
- `storedConfig = JSON.parse(calls[calls.length - 1][1]) // Get the latest call` (—Å—Ç—Ä–æ–∫–∞ 105)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 142)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 143)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 182)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 183)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 224)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 225)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `configs = await providerSettingsManager.listConfig()` (—Å—Ç—Ä–æ–∫–∞ 289)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[0][1])` (—Å—Ç—Ä–æ–∫–∞ 327)
- `testConfigId = storedConfig.apiConfigs.test.id` (—Å—Ç—Ä–æ–∫–∞ 328)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 330)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[mockSecrets.store.mock.calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 377)
- `testConfigId = storedConfig.apiConfigs.test.id` (—Å—Ç—Ä–æ–∫–∞ 378)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `expectedConfig = {` (—Å—Ç—Ä–æ–∫–∞ 424)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[mockSecrets.store.mock.calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 438)
- `storedConfig = JSON.parse(mockSecrets.store.mock.calls[0][1])` (—Å—Ç—Ä–æ–∫–∞ 488)
- `calls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 550)
- `storedConfig = JSON.parse(calls[calls.length - 1][1])` (—Å—Ç—Ä–æ–∫–∞ 551)
- `invalidConfig = {` (—Å—Ç—Ä–æ–∫–∞ 594)
- `storeCalls = mockSecrets.store.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 620)
- `finalStoredConfigJson = storeCalls[storeCalls.length - 1][1]` (—Å—Ç—Ä–æ–∫–∞ 622)
- `storedConfig = JSON.parse(finalStoredConfigJson)` (—Å—Ç—Ä–æ–∫–∞ 624)
- `hasConfig = await providerSettingsManager.hasConfig("test")` (—Å—Ç—Ä–æ–∫–∞ 660)
- `hasConfig = await providerSettingsManager.hasConfig("nonexistent")` (—Å—Ç—Ä–æ–∫–∞ 669)

#### üìÑ ModeConfig.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `validateCustomMode(mode: u): asserts mode is ModeConfig` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 25)
- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `invalidModes = [` (—Å—Ç—Ä–æ–∫–∞ 48)
- `invalidMode = {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `emptyNameMode = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `emptyRoleMode = {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `invalidGroupMode = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `invalidInputs = [42, "string", true, [], () => {}]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `modeWithJustRegex = {` (—Å—Ç—Ä–æ–∫–∞ 120)
- `modeWithDescription = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `validPatterns = ["\\.md$", ".*\\.txt$", "[a-z]+\\.js$"]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `invalidPatterns = ["[", "(unclosed", "\\"]` (—Å—Ç—Ä–æ–∫–∞ 144)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `modeWithDuplicates = {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `validBaseMode = {` (—Å—Ç—Ä–æ–∫–∞ 179)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 187)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 205)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 223)
- `mode = {` (—Å—Ç—Ä–æ–∫–∞ 232)
- `modeWithNull = {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `modeWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 246)

#### üìÑ CustomModesSettings.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validMode = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `invalidSettings = {} as any` (—Å—Ç—Ä–æ–∫–∞ 54)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `duplicateSettings = {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `invalidSettings = {` (—Å—Ç—Ä–æ–∫–∞ 114)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 146)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ CustomModesManager.yamlEdgeCases.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockFsReadFile(files: R)` (—Å—Ç—Ä–æ–∫–∞ 46)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `mockRoomodes = `${path.sep}mock${path.sep}workspace${path.sep}.neira${path.sep}.neira-modes`` (—Å—Ç—Ä–æ–∫–∞ 43)
- `mockFsReadFile = (files: Record<string, string>) => {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 145)
- `yamlWithNonBreakingSpaces = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 155)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `yamlWithZeroWidth = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 175)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 186)
- `yamlWithFancyQuotes = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 212)
- `yamlWithComplexFileRegex = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 224)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `invalidYaml = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 254)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 268)
- `invalidYaml = `customModes:` (—Å—Ç—Ä–æ–∫–∞ 278)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 289)
- `invalidSchema = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 297)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 313)
- `yamlWithEmojis = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 323)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 339)
- `yamlWithInternational = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 347)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 387)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `yamlWithComplexNesting = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 421)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 453)

#### üìÑ CustomModesManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockRoomodes = path.join(mockWorkspacePath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 98)
- `roomodesModes = [{ slug: "mode2", name: "Mode 2", roleDefinition: "Role 2", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 100)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `settingsModes = [` (—Å—Ç—Ä–æ–∫–∞ 118)
- `roomodesModes = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `mode2 = modes.find((m) => m.slug === "mode2")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 151)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 163)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `modes = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 182)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 191)
- `firstResult = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `secondResult = await manager.getCustomModes()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 233)
- `updatedSettingsModes = [updatedMode]` (—Å—Ç—Ä–æ–∫–∞ 258)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 279)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 315)
- `updatedSettingsModes = [updatedMode]` (—Å—Ç—Ä–æ–∫–∞ 343)
- `settingsModes = [{ slug: "mode1", name: "Mode 1", roleDefinition: "Role 1", groups: ["read"] }]` (—Å—Ç—Ä–æ–∫–∞ 376)
- `originalDateNow = Date.now` (—Å—Ç—Ä–æ–∫–∞ 388)
- `roomodesModes = [` (—Å—Ç—Ä–æ–∫–∞ 451)
- `existingModes = [` (—Å—Ç—Ä–æ–∫–∞ 461)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 493)
- `content = yaml.parse(writeCall[1])` (—Å—Ç—Ä–æ–∫–∞ 494)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 563)
- `settingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 641)
- `settingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 648)
- `configPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 666)
- `mockWatcher = {` (—Å—Ç—Ä–æ–∫–∞ 674)
- `createFileSystemWatcherMock = vi.fn().mockReturnValue(mockWatcher)` (—Å—Ç—Ä–æ–∫–∞ 680)
- `originalNodeEnv = process.env.NODE_ENV` (—Å—Ç—Ä–æ–∫–∞ 684)
- `testManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 689)
- `onChangeCall = mockWatcher.onDidChange.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 698)
- `existingMode = {` (—Å—Ç—Ä–æ–∫–∞ 721)
- `mockShowError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 764)
- `corruptedYaml = "customModes: [invalid yaml content"` (—Å—Ç—Ä–æ–∫–∞ 776)
- `writeCall = (fs.writeFile as Mock).mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 790)
- `writtenContent = yaml.parse(writeCall[1])` (—Å—Ç—Ä–æ–∫–∞ 791)
- `invalidYaml = "invalid yaml content"` (—Å—Ç—Ä–æ–∫–∞ 805)
- `result = await manager.importModeWithRules(invalidYaml)` (—Å—Ç—Ä–æ–∫–∞ 807)
- `emptyYaml = yaml.stringify({ customModes: [] })` (—Å—Ç—Ä–æ–∫–∞ 814)
- `result = await manager.importModeWithRules(emptyYaml)` (—Å—Ç—Ä–æ–∫–∞ 816)
- `validYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 824)
- `result = await manager.importModeWithRules(validYaml)` (—Å—Ç—Ä–æ–∫–∞ 835)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 842)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 870)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 881)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 923)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md"))` (—Å—Ç—Ä–æ–∫–∞ 944)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md"))` (—Å—Ç—Ä–æ–∫–∞ 945)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 951)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 991)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1000)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `maliciousYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `result = await manager.importModeWithRules(maliciousYaml)` (—Å—Ç—Ä–æ–∫–∞ 1079)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 1084)
- `writtenRuleFiles = writtenFiles.filter((p) => !p.includes(".roomodes"))` (—Å—Ç—Ä–æ–∫–∞ 1085)
- `normalizedPath = path.normalize(filePath)` (—Å—Ç—Ä–æ–∫–∞ 1087)
- `expectedBasePath = path.normalize(path.join(mockWorkspacePath, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 1088)
- `malformedYaml = `` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `result = await manager.importModeWithRules(malformedYaml)` (—Å—Ç—Ä–æ–∫–∞ 1108)
- `invalidModeYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1115)
- `result = await manager.importModeWithRules(invalidModeYaml)` (—Å—Ç—Ä–æ–∫–∞ 1126)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1133)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1163)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 1182)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 1221)
- `newRulePath = Object.keys(writtenFiles).find((p) => p.includes("new-rule.md"))` (—Å—Ç—Ä–æ–∫–∞ 1235)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1245)
- `roomodesContent = { customModes: [{ slug: "other-mode", name: "Other Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1251)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1262)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1278)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1284)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1296)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1302)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1315)
- `roomodesContent = { customModes: [{ slug: "test-mode", name: "Test Mode" }] }` (—Å—Ç—Ä–æ–∫–∞ 1321)
- `result = await manager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `settingsContent = {` (—Å—Ç—Ä–æ–∫–∞ 1345)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1350)
- `result = await freshManager.checkRulesDirectoryHasContent("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1369)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1378)
- `result = await freshManager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1391)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1408)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1415)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1429)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1437)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1452)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1488)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1499)
- `result = await manager.exportModeWithRules("code")` (—Å—Ç—Ä–æ–∫–∞ 1530)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1540)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1568)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1577)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1586)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1613)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1623)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1632)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1645)
- `globalMode = {` (—Å—Ç—Ä–æ–∫–∞ 1656)
- `freshManager = new CustomModesManager(mockContext, mockOnUpdate)` (—Å—Ç—Ä–æ–∫–∞ 1665)
- `result = await freshManager.exportModeWithRules("global-test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1695)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 1704)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 1735)
- `exportedData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 1740)
- `rulesFiles = exportedData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 1741)

#### üìÑ CustomModesManager.exportImportSlugChange.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStoragePath = `${path.sep}mock${path.sep}settings`` (—Å—Ç—Ä–æ–∫–∞ 49)
- `mockSettingsPath = path.join(mockStoragePath, "settings", GlobalFileNames.customModes)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockWorkspacePath = path.resolve("/mock/workspace")` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockRoomodes = path.join(mockWorkspacePath, ".neira", ".neira-modes")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await manager.exportModeWithRules("test-mode")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `exportData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `rulesFiles = exportData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 134)
- `paths = rulesFiles.map((f: any) => f.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `roomodesContent = {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = await manager.exportModeWithRules("root-mode")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `exportData = yaml.parse(result.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `rulesFiles = exportData.customModes[0].rulesFiles` (—Å—Ç—Ä–æ–∫–∞ 188)
- `paths = rulesFiles.map((f: any) => f.relativePath)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 247)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 252)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 253)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `rule1Path = Object.keys(writtenFiles).find((p) => p.includes("rule1.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `rule2Path = Object.keys(writtenFiles).find((p) => p.includes("rule2.md") && !p.includes(".neira-modes"))` (—Å—Ç—Ä–æ–∫–∞ 308)
- `importYaml = yaml.stringify({` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = await manager.importModeWithRules(importYaml)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `oldFormatPath = Object.keys(writtenFiles).find((p) => p.includes("old-format.md"))` (—Å—Ç—Ä–æ–∫–∞ 367)
- `newFormatPath = Object.keys(writtenFiles).find((p) => p.includes("new-format.md"))` (—Å—Ç—Ä–æ–∫–∞ 368)
- `nestedPath = Object.keys(writtenFiles).find((p) => p.includes(path.join("nested", "file.md")))` (—Å—Ç—Ä–æ–∫–∞ 369)
- `originalMode = {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `exportResult = await manager.exportModeWithRules("original-mode")` (—Å—Ç—Ä–æ–∫–∞ 406)
- `exportData = yaml.parse(exportResult.yaml!)` (—Å—Ç—Ä–æ–∫–∞ 410)
- `modifiedYaml = yaml.stringify(exportData)` (—Å—Ç—Ä–æ–∫–∞ 413)
- `importResult = await manager.importModeWithRules(modifiedYaml)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `ruleFilePath = Object.keys(writtenFiles).find(` (—Å—Ç—Ä–æ–∫–∞ 426)

#### üìÑ ContextProxy.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = proxy.getGlobalState("apiProvider")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = proxy.getGlobalState("apiProvider", "deepseek")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = proxy.getGlobalState("taskHistory")` (—Å—Ç—Ä–æ–∫–∞ 111)
- `historyItems = [` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = proxy.getGlobalState("taskHistory", historyItems)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `storedValue = await proxy.getGlobalState("apiProvider")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `historyItems = [` (—Å—Ç—Ä–æ–∫–∞ 155)
- `storedValue = proxy.getGlobalState("taskHistory")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `storedValue = await proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 201)
- `storedValue = await proxy.getSecret("apiKey")` (—Å—Ç—Ä–æ–∫–∞ 212)
- `storeSecretSpy = vi.spyOn(proxy, "storeSecret")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `storedValue = proxy.getSecret("openAiApiKey")` (—Å—Ç—Ä–æ–∫–∞ 229)
- `updateGlobalStateSpy = vi.spyOn(proxy, "updateGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `storedValue = proxy.getGlobalState("apiModelId")` (—Å—Ç—Ä–æ–∫–∞ 244)
- `setValueSpy = vi.spyOn(proxy, "setValue")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `storeSecretSpy = vi.spyOn(proxy, "storeSecret")` (—Å—Ç—Ä–æ–∫–∞ 275)
- `updateGlobalStateSpy = vi.spyOn(proxy, "updateGlobalState")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `setValuesSpy = vi.spyOn(proxy, "setValues")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `setValuesSpy = vi.spyOn(proxy, "setValues")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `expectedUpdateCalls = 2 + GLOBAL_STATE_KEYS.length` (—Å—Ç—Ä–æ–∫–∞ 390)
- `initializeSpy = vi.spyOn(proxy as any, "initialize")` (—Å—Ç—Ä–æ–∫–∞ 413)

### üìÇ build-src/src/core/condense/__tests__

#### üìÑ index.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `DEFAULT_PREV_CONTEXT_TOKENS = 1000` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = getMessagesSinceLastSummary(messages)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `result = getMessagesSinceLastSummary([])` (—Å—Ç—Ä–æ–∫–∞ 75)
- `defaultSystemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 178)
- `summaryMessage = result.messages[result.messages.length - N_MESSAGES_TO_KEEP - 1]` (—Å—Ç—Ä–æ–∫–∞ 195)
- `lastMessages = messages.slice(-N_MESSAGES_TO_KEEP)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `emptyStream = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 224)
- `createMessageMock = vi.fn().mockReturnValue(emptyStream)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 238)
- `expectedFinalMessage = {` (—Å—Ç—Ä–æ–∫–∞ 268)
- `mockCallArgs = (maybeRemoveImageBlocks as Mock).mock.calls[0][0] as any[]` (—Å—Ç—Ä–æ–∫–∞ 280)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 295)
- `streamWithUsage = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 298)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 306)
- `streamWithLargeTokens = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 336)
- `prevContextTokens = 600` (—Å—Ç—Ä–æ–∫–∞ 348)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 349)
- `streamWithSmallTokens = (async function* () {` (—Å—Ç—Ä–æ–∫–∞ 377)
- `prevContextTokens = 200` (—Å—Ç—Ä–æ–∫–∞ 388)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 389)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 409)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 437)
- `invalidMainHandler = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `invalidCondensingHandler = {` (—Å—Ç—Ä–æ–∫–∞ 472)
- `originalError = console.error` (—Å—Ç—Ä–æ–∫–∞ 479)
- `mockError = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 480)
- `result = await summarizeConversation(` (—Å—Ç—Ä–æ–∫–∞ 483)
- `defaultSystemPrompt = "Default prompt"` (—Å—Ç—Ä–æ–∫–∞ 515)
- `taskId = "test-task"` (—Å—Ç—Ä–æ–∫–∞ 516)
- `customPrompt = "Custom summarization prompt"` (—Å—Ç—Ä–æ–∫–∞ 590)
- `createMessageCalls = (mockMainApiHandler.createMessage as Mock).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 603)
- `invalidHandler = {` (—Å—Ç—Ä–æ–∫–∞ 690)
- `originalWarn = console.warn` (—Å—Ç—Ä–æ–∫–∞ 697)
- `mockWarn = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 698)

### üìÇ build-src/src/core/assistant-message/__tests__

#### üìÑ parseAssistantMessageBenchmark.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatNumber(num: n): string` (—Å—Ç—Ä–æ–∫–∞ 9)
- `measureExecutionTime(fn: F, input: s, iterations: n): number` (—Å—Ç—Ä–æ–∫–∞ 13)
- `runBenchmark()` (—Å—Ç—Ä–æ–∫–∞ 81)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatNumber = (num: number): string => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `measureExecutionTime = (fn: Function, input: string, iterations: number = 1000): number => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `start = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `end = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `measureMemoryUsage = (` (—Å—Ç—Ä–æ–∫–∞ 28)
- `initialMemory = process.memoryUsage()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `finalMemory = process.memoryUsage()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 54)
- `runBenchmark = () => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `maxNameLength = testCases.reduce((max, testCase) => Math.max(max, testCase.name.length), 0)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `namePadding = maxNameLength + 2` (—Å—Ç—Ä–æ–∫–∞ 83)
- `v1Time = measureExecutionTime(parseAssistantMessageV1, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `v2Time = measureExecutionTime(parseAssistantMessageV2, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `timeRatio = v1Time / v2Time` (—Å—Ç—Ä–æ–∫–∞ 95)
- `v1Memory = measureMemoryUsage(parseAssistantMessageV1, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `v2Memory = measureMemoryUsage(parseAssistantMessageV2, testCase.input)` (—Å—Ç—Ä–æ–∫–∞ 98)

#### üìÑ parseAssistantMessage.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `isEmptyTextContent(block: A)` (—Å—Ç—Ä–æ–∫–∞ 8)
- `example()` (—Å—Ç—Ä–æ–∫–∞ 167)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isEmptyTextContent = (block: AssistantMessageContent) =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `message = "This is a simple text message"` (—Å—Ç—Ä–æ–∫–∞ 15)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `message = "This is a multi-line\ntext message\nwith several lines"` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `message = "This is a partial text"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `message = "<read_file><path>src/file.ts</path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 54)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 57)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 67)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 70)
- `message = "<read_file><path>src/file.ts</path>"` (—Å—Ç—Ä–æ–∫–∞ 80)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 81)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 84)
- `message = "<read_file><path>src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 93)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 96)
- `message = "Here's the file content: <read_file><path>src/file.ts</path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 106)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `textContent = result[0] as TextContent` (—Å—Ç—Ä–æ–∫–∞ 111)
- `toolUse = result[1] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 116)
- `message = "<read_file><path>src/file.ts</path></read_file>Here's what I found in the file."` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 125)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 129)
- `textContent = result[1] as TextContent` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `message = `<write_to_file><path>src/file.ts</path><content>` (—Å—Ç—Ä–æ–∫–∞ 166)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 173)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 176)
- `message = ""` (—Å—Ç—Ä–æ–∫–∞ 188)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `message = "This has a <not_a_tool>malformed tag</not_a_tool>"` (—Å—Ç—Ä–æ–∫–∞ 195)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `message = "<browser_action></browser_action>"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 205)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 219)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 222)
- `message = "<search_files><regex><div>.*</div></regex><path>src</path></search_files>"` (—Å—Ç—Ä–æ–∫–∞ 230)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 231)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 245)
- `toolUse1 = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 249)
- `toolUse2 = result[1] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 255)
- `message = "<read_file><path>  src/file.ts  </path></read_file>"` (—Å—Ç—Ä–æ–∫–∞ 263)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 267)
- `message = `<write_to_file><path>file.ts</path><content>` (—Å—Ç—Ä–æ–∫–∞ 275)
- `result = parser(message).filter((block) => !isEmptyTextContent(block))` (—Å—Ç—Ä–æ–∫–∞ 280)
- `toolUse = result[0] as ToolUse` (—Å—Ç—Ä–æ–∫–∞ 283)
- `message = `I'll help you with that task.` (—Å—Ç—Ä–æ–∫–∞ 295)
- `result = parser(message)` (—Å—Ç—Ä–æ–∫–∞ 310)

### üìÇ build-src/src/api/transform/caching

#### üìÑ vertex.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `cachedMessage(message: A): Anthropic.Messages.MessageParam` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `indices = messages.reduce((acc, msg, i) => (msg.role === "user" ? [...acc, i] : acc), [] as number[])` (—Å—Ç—Ä–æ–∫–∞ 7)
- `lastIndex = indices[indices.length - 1] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 10)
- `secondLastIndex = indices[indices.length - 2] ?? -1` (—Å—Ç—Ä–æ–∫–∞ 11)
- `lastTextBlockIndex = message.content.reduce(` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ gemini.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isNthMessage = count % frequency === frequency - 1` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ anthropic.ts

### üìÇ build-src/src/api/transform/cache-strategy

#### üìÑ types.ts

#### üìÑ multi-point-strategy.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `supportsSystemCache = this.config.modelInfo.cachableFields.includes("system")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `supportsMessageCache = this.config.modelInfo.cachableFields.includes("messages")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `minTokensPerPoint = this.config.modelInfo.minTokensPerCachePoint` (—Å—Ç—Ä–æ–∫–∞ 22)
- `placements = this.determineMessageCachePoints(minTokensPerPoint, remainingCachePoints)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `messages = this.messagesToContentBlocks(this.config.messages)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `totalMessages = this.config.messages.length` (—Å—Ç—Ä–æ–∫–∞ 72)
- `previousPlacements = this.config.previousCachePointPlacements || []` (—Å—Ç—Ä–æ–∫–∞ 73)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 80)
- `lastPreviousIndex = previousPlacements[previousPlacements.length - 1].index` (—Å—Ç—Ä–æ–∫–∞ 99)
- `newMessagesTokens = this.config.messages` (—Å—Ç—Ä–æ–∫–∞ 100)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 117)
- `tokens = this.config.messages` (—Å—Ç—Ä–æ–∫–∞ 135)
- `gap = tokensBetweenPlacements[i] + tokensBetweenPlacements[i + 1]` (—Å—Ç—Ä–æ–∫–∞ 148)
- `requiredPercentageIncrease = 1.2 // 20% increase required` (—Å—Ç—Ä–æ–∫–∞ 158)
- `requiredTokenThreshold = smallestGap * requiredPercentageIncrease` (—Å—Ç—Ä–æ–∫–∞ 159)
- `combinedEndIndex = previousPlacements[i + 1].index` (—Å—Ç—Ä–æ–∫–∞ 180)
- `startOfRange = i === 0 ? 0 : previousPlacements[i - 1].index + 1` (—Å—Ç—Ä–æ–∫–∞ 183)
- `combinedPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 184)
- `newPlacement = this.findOptimalPlacementForRange(` (—Å—Ç—Ä–æ–∫–∞ 201)
- `previousPlacements = this.config.previousCachePointPlacements || []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `tokenStartIndex = previousCachePointIndex + 1` (—Å—Ç—Ä–æ–∫–∞ 283)

#### üìÑ base-strategy.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `text = this.config.systemPrompt` (—Å—Ç—Ä–æ–∫–∞ 32)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `minTokens = this.config.modelInfo.minTokensPerCachePoint` (—Å—Ç—Ä–æ–∫–∞ 88)
- `text = block.text || ""` (—Å—Ç—Ä–æ–∫–∞ 111)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `text = message.content` (—Å—Ç—Ä–æ–∫–∞ 128)
- `words = text.split(/\s+/).filter((word) => word.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 130)
- `placement = placements.find((p) => p.index === i)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = {` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ build-src/src/api/transform/__tests__

#### üìÑ stream.spec.ts

#### üìÑ simple-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `content = "Hello world"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 14)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 22)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 37)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 50)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 62)
- `content = [` (—Å—Ç—Ä–æ–∫–∞ 84)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 95)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 106)

#### üìÑ reasoning.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 37)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 81)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = getOpenRouterReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `optionsWithoutBudget = {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = getOpenRouterReasoning(optionsWithoutBudget)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `optionsWithoutEffort = {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `result = getOpenRouterReasoning(optionsWithoutEffort)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `options = { ...baseOptions, model: modelWithEffort, reasoningEffort: effort }` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `optionsWithZeroBudget = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = getOpenRouterReasoning(optionsWithZeroBudget)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `result = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 239)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 258)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = getAnthropicReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `optionsWithoutBudget = {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `result = getAnthropicReasoning(optionsWithoutBudget)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `optionsWithZeroBudget = {` (—Å—Ç—Ä–æ–∫–∞ 324)
- `result = getAnthropicReasoning(optionsWithZeroBudget)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `optionsWithLargeBudget = {` (—Å—Ç—Ä–æ–∫–∞ 344)
- `result = getAnthropicReasoning(optionsWithLargeBudget)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `optionsWithEffort = {` (—Å—Ç—Ä–æ–∫–∞ 364)
- `result = getAnthropicReasoning(optionsWithEffort)` (—Å—Ç—Ä–æ–∫–∞ 370)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 389)
- `result = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 395)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 412)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 430)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `result = getOpenAiReasoning(baseOptions)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 447)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 454)
- `optionsWithoutEffort = {` (—Å—Ç—Ä–æ–∫–∞ 465)
- `result = getOpenAiReasoning(optionsWithoutEffort)` (—Å—Ç—Ä–æ–∫–∞ 471)
- `options = { ...baseOptions, model: modelWithEffort, reasoningEffort: effort }` (—Å—Ç—Ä–æ–∫–∞ 485)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `optionsWithBudget = {` (—Å—Ç—Ä–æ–∫–∞ 497)
- `result = getOpenAiReasoning(optionsWithBudget)` (—Å—Ç—Ä–æ–∫–∞ 503)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 519)
- `result = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 525)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 538)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 544)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 562)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 569)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 570)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 596)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 597)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 598)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 608)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 613)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 614)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 615)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 623)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 628)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 629)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 630)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 643)
- `openRouterResult = getOpenRouterReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 649)
- `anthropicResult = getAnthropicReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 650)
- `openAiResult = getOpenAiReasoning(options)` (—Å—Ç—Ä–æ–∫–∞ 651)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 666)
- `options = { ...baseOptions, model: modelWithRequired }` (—Å—Ç—Ä–æ–∫–∞ 682)
- `options = { ...baseOptions, model: modelWithEffort }` (—Å—Ç—Ä–æ–∫–∞ 698)

#### üìÑ r1-format.spec.ts

#### üìÑ openai-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `content = openAiMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 58)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `assistantMessage = openAiMessages[0] as OpenAI.Chat.ChatCompletionAssistantMessageParam` (—Å—Ç—Ä–æ–∫–∞ 95)
- `openAiMessages = convertToOpenAiMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `toolMessage = openAiMessages[0] as OpenAI.Chat.ChatCompletionToolMessageParam` (—Å—Ç—Ä–æ–∫–∞ 126)

#### üìÑ model-params.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `anthropicParams = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `openaiParams = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `openrouterParams = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 34)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 80)
- `result = getModelParams({ ...anthropicParams, settings: {}, model })` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 119)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 139)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 149)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 159)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 238)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 384)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 400)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 419)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 437)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 454)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 470)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 487)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 504)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 522)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 541)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 554)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 575)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 592)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 607)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 618)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 637)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 658)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 684)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 700)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 715)
- `result = getModelParams({` (—Å—Ç—Ä–æ–∫–∞ 731)

#### üìÑ mistral-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `content = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 57)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 88)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `userContent = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 125)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `userContent = mistralMessages[0].content as Array<{` (—Å—Ç—Ä–æ–∫–∞ 262)
- `mistralMessages = convertToMistralMessages(anthropicMessages)` (—Å—Ç—Ä–æ–∫–∞ 296)

#### üìÑ image-cleaning.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockApiHandler(supportsImages: b): ApiHandler` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMockApiHandler = (supportsImages: boolean): ApiHandler => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `apiHandler = createMockApiHandler(true)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `apiHandler = createMockApiHandler(false)` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = maybeRemoveImageBlocks(messages, apiHandler)` (—Å—Ç—Ä–æ–∫–∞ 317)

#### üìÑ gemini-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 248)
- `result = convertAnthropicMessageToGemini(anthropicMessage)` (—Å—Ç—Ä–æ–∫–∞ 299)

#### üìÑ bedrock-converse-format.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `imageBlock = result[0].content[1] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 60)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 87)
- `toolBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resultBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = convertToBedrockConverseMessages(messages)` (—Å—Ç—Ä–æ–∫–∞ 155)
- `textBlock = result[0].content[0] as ContentBlock` (—Å—Ç—Ä–æ–∫–∞ 164)

### üìÇ build-src/src/api/providers/fetchers

#### üìÑ unbound.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await axios.get("https://api.getunbound.ai/models", { headers })` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ requesty.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `url = "https://router.requesty.ai/v1/models"` (—Å—Ç—Ä–æ–∫–∞ 17)
- `response = await axios.get(url, { headers })` (—Å—Ç—Ä–æ–∫–∞ 18)
- `rawModels = response.data.data` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ openrouter.ts

**–¢–∏–ø—ã:**

- `type OpenRouterModelsResponse` (—Å—Ç—Ä–æ–∫–∞ 73)
- `type OpenRouterModelEndpointsResponse` (—Å—Ç—Ä–æ–∫–∞ 90)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterArchitectureSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 20)
- `openRouterPricingSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 25)
- `modelRouterBaseModelSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `openRouterModelsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 69)
- `openRouterModelEndpointsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 79)
- `baseURL = options?.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 98)
- `response = await axios.get<OpenRouterModelsResponse>(`${baseURL}/models`)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `result = openRouterModelsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `data = result.success ? result.data.data : response.data.data` (—Å—Ç—Ä–æ–∫–∞ 103)
- `baseURL = options?.openRouterBaseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 138)
- `response = await axios.get<OpenRouterModelEndpointsResponse>(`${baseURL}/models/${modelId}/endpoints`)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `result = openRouterModelEndpointsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `data = result.success ? result.data.data : response.data.data` (—Å—Ç—Ä–æ–∫–∞ 143)
- `cacheWritesPrice = model.pricing?.input_cache_write` (—Å—Ç—Ä–æ–∫–∞ 185)
- `cacheReadsPrice = model.pricing?.input_cache_read ? parseApiPrice(model.pricing?.input_cache_read) : undefined` (—Å—Ç—Ä–æ–∫–∞ 189)
- `supportsPromptCache = typeof cacheWritesPrice !== "undefined" && typeof cacheReadsPrice !== "undefined"` (—Å—Ç—Ä–æ–∫–∞ 191)

#### üìÑ ollama.ts

**–¢–∏–ø—ã:**

- `type OllamaModelsResponse` (—Å—Ç—Ä–æ–∫–∞ 36)
- `type OllamaModelInfoResponse` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `OllamaModelDetailsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 5)
- `OllamaModelSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 14)
- `OllamaModelInfoResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `OllamaModelsResponseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 32)
- `contextKey = Object.keys(rawModel.model_info).find((k) => k.includes("context_length"))` (—Å—Ç—Ä–æ–∫–∞ 41)
- `response = await axios.get<OllamaModelsResponse>(`${baseUrl}/api/tags`)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `parsedResponse = OllamaModelsResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ modelEndpointCache.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getCacheKey(router: R, modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async writeModelEndpoints(key: s, data: M)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `async readModelEndpoints(key: s): Promise<ModelRecord | undefined>` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `memoryCache = new NodeCache({ stdTTL: 5 * 60, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 15)
- `getCacheKey = (router: RouterName, modelId: string) => sanitize(`${router}_${modelId}`)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `filename = `${key}_endpoints.json`` (—Å—Ç—Ä–æ–∫–∞ 20)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filename = `${key}_endpoints.json`` (—Å—Ç—Ä–æ–∫–∞ 26)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `filePath = path.join(cacheDir, filename)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `exists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `key = getCacheKey(router, modelId)` (—Å—Ç—Ä–æ–∫–∞ 48)

#### üìÑ modelCache.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async writeModels(router: R, data: M)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `async readModels(router: R): Promise<ModelRecord | undefined>` (—Å—Ç—Ä–æ–∫–∞ 29)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `memoryCache = new NodeCache({ stdTTL: 5 * 60, checkperiod: 5 * 60 })` (—Å—Ç—Ä–æ–∫–∞ 21)
- `filename = `${router}_models.json`` (—Å—Ç—Ä–æ–∫–∞ 24)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `filename = `${router}_models.json`` (—Å—Ç—Ä–æ–∫–∞ 30)
- `cacheDir = await getCacheDirectoryPath(ContextProxy.instance.globalStorageUri.fsPath)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `filePath = path.join(cacheDir, filename)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `exists = await fileExistsAtPath(filePath)` (—Å—Ç—Ä–æ–∫–∞ 33)

#### üìÑ lmstudio.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `modelsWithLoadedDetails = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `lmsUrl = baseUrl.replace(/^http:\/\//, "ws://").replace(/^https:\/\//, "wss://")` (—Å—Ç—Ä–æ–∫–∞ 17)
- `client = new LMStudioClient({ baseUrl: lmsUrl })` (—Å—Ç—Ä–æ–∫–∞ 19)
- `contextLength = "contextLength" in rawModel ? rawModel.contextLength : rawModel.maxContextLength` (—Å—Ç—Ä–æ–∫–∞ 39)
- `lmsUrl = baseUrl.replace(/^http:\/\//, "ws://").replace(/^https:\/\//, "wss://")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `client = new LMStudioClient({ baseUrl: lmsUrl })` (—Å—Ç—Ä–æ–∫–∞ 72)
- `downloadedModels = await client.system.listDownloadedModels("llm")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `loadedModels = (await client.llm.listLoaded().then((models: LLM[]) => {` (—Å—Ç—Ä–æ–∫–∞ 85)

#### üìÑ litellm.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `urlObj = new URL(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `url = urlObj.href` (—Å—Ç—Ä–æ–∫–∞ 31)
- `response = await axios.get(url, { headers, timeout: 5000 })` (—Å—Ç—Ä–æ–∫–∞ 33)
- `computerModels = Array.from(LITELLM_COMPUTER_USE_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `modelName = model.model_name` (—Å—Ç—Ä–æ–∫–∞ 41)
- `modelInfo = model.model_info` (—Å—Ç—Ä–æ–∫–∞ 42)
- `litellmModelName = model?.litellm_params?.model as string | undefined` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ huggingface.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseHuggingFaceModel(model: H): ModelInfo` - Parse a HuggingFace model into ModelInfo format (—Å—Ç—Ä–æ–∫–∞ 95)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CacheEntry` - Cache entry for storing fetched models (—Å—Ç—Ä–æ–∫–∞ 81)

**–¢–∏–ø—ã:**

- `type HuggingFaceApiResponse` - Represents the response from the HuggingFace router API (—Å—Ç—Ä–æ–∫–∞ 74)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `huggingFaceProviderSchema = z.object({` - HuggingFace Provider Schema (—Å—Ç—Ä–æ–∫–∞ 15)
- `huggingFaceModelSchema = z.object({` - HuggingFace Model Schema (—Å—Ç—Ä–æ–∫–∞ 43)
- `huggingFaceApiResponseSchema = z.object({` - HuggingFace API Response Schema (—Å—Ç—Ä–æ–∫–∞ 64)
- `pricing = provider?.pricing || model.providers.find((p) => p.pricing)?.pricing` (—Å—Ç—Ä–æ–∫–∞ 102)
- `description = provider ? `${model.id} via ${provider.provider}` : `${model.id} via HuggingFace`` (—Å—Ç—Ä–æ–∫–∞ 105)
- `now = Date.now()` - Fetches available models from HuggingFace (—Å—Ç—Ä–æ–∫–∞ 126)
- `response = await axios.get<HuggingFaceApiResponse>(HUGGINGFACE_API_URL, {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `result = huggingFaceApiResponseSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `validModels = result.data.data.filter((model) => model.providers.length > 0)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `providerKey = `${model.id}:${provider.provider}`` (—Å—Ç—Ä–æ–∫–∞ 166)
- `providerModel = parseHuggingFaceModel(model, provider)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `cachedRawModels = getCachedRawHuggingFaceModels()` (—Å—Ç—Ä–æ–∫–∞ 250)
- `response = await axios.get(HUGGINGFACE_API_URL, {` (—Å—Ç—Ä–æ–∫–∞ 261)
- `models = response.data?.data || []` (—Å—Ç—Ä–æ–∫–∞ 275)

#### üìÑ glama.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await axios.get("https://glama.ai/api/gateway/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `rawModels = response.data` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ build-src/src/api/providers/__tests__

#### üìÑ xai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockConstructor = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `xaiApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `testModelId = "grok-3"` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handlerWithModel = new XAIHandler({ apiModelId: testModelId })` (—Å—Ç—Ä–æ–∫–∞ 65)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 66)
- `miniModelHandler = new XAIHandler({` (—Å—Ç—Ä–æ–∫–∞ 73)
- `messageGenerator = miniModelHandler.createMessage("test prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 90)
- `regularModelHandler = new XAIHandler({` (—Å—Ç—Ä–æ–∫–∞ 102)
- `messageGenerator = regularModelHandler.createMessage("test prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 119)
- `calls = mockCreate.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 123)
- `lastCall = calls[calls.length - 1][0]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `expectedResponse = "This is a test response"` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `errorMessage = "API error"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `testContent = "This is test content"` (—Å—Ç—Ä–æ–∫–∞ 144)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 164)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 165)
- `testReasoning = "Test reasoning content"` (—Å—Ç—Ä–æ–∫–∞ 176)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 196)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 197)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 232)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `modelId = "grok-3"` (—Å—Ç—Ä–æ–∫–∞ 248)
- `modelInfo = xaiModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 249)
- `handlerWithModel = new XAIHandler({ apiModelId: modelId })` (—Å—Ç—Ä–æ–∫–∞ 250)
- `systemPrompt = "Test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 264)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 268)

#### üìÑ vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGenerateContentStream = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockGenerateContent = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockGetGenerativeModel = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 105)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `testHandler = new VertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `modelInfo = testHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ unbound.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockWithResponse = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 72)
- `result = mockCreate(...args)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 153)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 207)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `nonAnthropicHandler = new UnboundHandler({` (—Å—Ç—Ä–æ–∫–∞ 256)
- `openaiHandler = new UnboundHandler({` (—Å—Ç—Ä–æ–∫–∞ 283)
- `modelInfo = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 309)
- `handlerWithInvalidModel = new UnboundHandler({ ...mockOptions, unboundModelId: "invalid/model" })` (—Å—Ç—Ä–æ–∫–∞ 315)
- `modelInfo = await handlerWithInvalidModel.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 316)

#### üìÑ sambanova.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMock = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `sambaNovaApiKey = "test-sambanova-api-key"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `handlerWithModel = new SambaNovaHandler({` (—Å—Ç—Ä–æ–∫–∞ 49)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `expectedResponse = "This is a test response from SambaNova"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `errorMessage = "SambaNova API error"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `testContent = "This is test content from SambaNova stream"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 90)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 112)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `modelInfo = sambaNovaModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 121)
- `handlerWithModel = new SambaNovaHandler({` (—Å—Ç—Ä–æ–∫–∞ 122)
- `systemPrompt = "Test system prompt for SambaNova"` (—Å—Ç—Ä–æ–∫–∞ 137)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 140)

#### üìÑ requesty.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handler = new RequestyHandler({})` (—Å—Ç—Ä–æ–∫–∞ 91)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `systemPrompt = "test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 143)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `generator = handler.createMessage("test", [])` (—Å—Ç—Ä–æ–∫–∞ 188)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `mockResponse = { choices: [{ message: { content: "test completion" } }] }` (—Å—Ç—Ä–æ–∫–∞ 196)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `mockError = new Error("API Error")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `handler = new RequestyHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 221)

#### üìÑ openrouter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `handler = new OpenRouterHandler({})` (—Å—Ç—Ä–æ–∫–∞ 86)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 100)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 126)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `systemPrompt = "test system prompt"` (—Å—Ç—Ä–æ–∫–∞ 147)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 150)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 151)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 193)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 202)
- `handler = new OpenRouterHandler({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 218)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 256)
- `mockCreate = vitest.fn().mockResolvedValue(mockStream)` (—Å—Ç—Ä–æ–∫–∞ 262)
- `generator = handler.createMessage("test", [])` (—Å—Ç—Ä–æ–∫–∞ 267)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockResponse = { choices: [{ message: { content: "test completion" } }] }` (—Å—Ç—Ä–æ–∫–∞ 275)
- `mockCreate = vitest.fn().mockResolvedValue(mockResponse)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 297)
- `mockError = {` (—Å—Ç—Ä–æ–∫–∞ 298)
- `mockCreate = vitest.fn().mockResolvedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `handler = new OpenRouterHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 314)
- `mockCreate = vitest.fn().mockRejectedValue(new Error("Unexpected error"))` (—Å—Ç—Ä–æ–∫–∞ 315)

#### üìÑ openai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockConstructor = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `customBaseUrl = "https://custom.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handlerWithCustomUrl = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 93)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `textChunk = chunks.find((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 159)
- `reasoningHandler = new OpenAiHandler(reasoningOptions)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `stream = reasoningHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 182)
- `noReasoningHandler = new OpenAiHandler(noReasoningOptions)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `stream = noReasoningHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 199)
- `handlerWithMaxTokens = new OpenAiHandler(optionsWithMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `stream = handlerWithMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 214)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handlerWithoutMaxTokens = new OpenAiHandler(optionsWithoutMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `stream = handlerWithoutMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 241)
- `handlerWithDefaultMaxTokens = new OpenAiHandler(optionsWithUndefinedMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `stream = handlerWithDefaultMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 262)
- `handlerWithUserMaxTokens = new OpenAiHandler(optionsWithUserMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `stream = handlerWithUserMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 278)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 284)
- `handlerWithoutUserMaxTokens = new OpenAiHandler(optionsWithoutUserMaxTokens)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `stream = handlerWithoutUserMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 306)
- `stream = handler.createMessage("system prompt", testMessages)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 337)
- `stream = handler.createMessage("system prompt", testMessages)` (—Å—Ç—Ä–æ–∫–∞ 342)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 381)
- `handlerWithoutModel = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 389)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 393)
- `azureOptions = {` (—Å—Ç—Ä–æ–∫–∞ 400)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 414)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 415)
- `stream = azureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 423)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 430)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 450)
- `azureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 455)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 459)
- `stream = azureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 467)
- `textChunk = chunks.find((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 474)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 475)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 496)
- `azureHandler = new OpenAiHandler(azureOptions)` (—Å—Ç—Ä–æ–∫–∞ 501)
- `result = await azureHandler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 513)
- `grokOptions = {` (—Å—Ç—Ä–æ–∫–∞ 519)
- `grokHandler = new OpenAiHandler(grokOptions)` (—Å—Ç—Ä–æ–∫–∞ 526)
- `grokHandler = new OpenAiHandler(grokOptions)` (—Å—Ç—Ä–æ–∫–∞ 532)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 533)
- `stream = grokHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 541)
- `mockCalls = mockCreate.mock.calls` (—Å—Ç—Ä–æ–∫–∞ 552)
- `lastCall = mockCalls[mockCalls.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 553)
- `o3Options = {` (—Å—Ç—Ä–æ–∫–∞ 559)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 571)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 577)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 585)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 613)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 618)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 626)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 651)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 656)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 662)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 670)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 695)
- `o3Handler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 700)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 704)
- `stream = o3Handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 712)
- `o3AzureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 724)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 729)
- `stream = o3AzureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 748)
- `o3AzureHandler = new OpenAiHandler({` (—Å—Ç—Ä–æ–∫–∞ 753)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 758)
- `stream = o3AzureHandler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 766)

#### üìÑ openai-usage-tracking.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 106)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `lastChunk = chunks[chunks.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 142)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 234)

#### üìÑ openai-native.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 72)
- `handlerWithoutKey = new OpenAiNativeHandler({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 154)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 212)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 226)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 258)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 293)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 308)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 336)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 350)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 370)
- `o1Models = ["o1", "o1-preview", "o1-mini"]` (—Å—Ç—Ä–æ–∫–∞ 392)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 418)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `callArgs = mockCreate.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 437)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 446)
- `handlerWithoutModel = new OpenAiNativeHandler({` (—Å—Ç—Ä–æ–∫–∞ 454)
- `modelInfo = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 457)

#### üìÑ ollama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `handlerWithoutUrl = new OllamaHandler({` (—Å—Ç—Ä–æ–∫–∞ 89)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 98)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 160)

#### üìÑ moonshot.spec.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestMoonshotHandler extends MoonshotHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 248)

- `class TestMoonshotHandler extends MoonshotHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 273)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `handlerWithoutBaseUrl = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `customBaseUrl = "https://api.moonshot.cn/v1"` (—Å—Ç—Ä–æ–∫–∞ 125)
- `handlerWithCustomUrl = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 126)
- `_handler = new MoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 141)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 148)
- `handlerWithInvalidModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 162)
- `handlerWithoutModel = new MoonshotHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 185)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 192)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 225)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `testHandler = new TestMoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 254)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 256)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `testHandler = new TestMoonshotHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 281)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 288)

#### üìÑ mistral.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `customBaseUrl = "https://custom.mistral.ai/v1"` (—Å—Ç—Ä–æ–∫–∞ 65)
- `handlerWithCustomUrl = new MistralHandler({` (—Å—Ç—Ä–æ–∫–∞ 66)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 84)
- `iterator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `result = await iterator.next()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `iterator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ lmstudio.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutUrl = new LmStudioHandler({` (—Å—Ç—Ä–æ–∫–∞ 87)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 96)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 153)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 160)

#### üìÑ lite-llm.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockCreate = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `generator = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 92)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 93)
- `createCall = mockOpenAIClient.chat.completions.create.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 99)
- `userMessageIndices = createCall.messages` (—Å—Ç—Ä–æ–∫–∞ 114)
- `lastUserIdx = userMessageIndices[userMessageIndices.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 118)
- `secondLastUserIdx = userMessageIndices[userMessageIndices.length - 2]` (—Å—Ç—Ä–æ–∫–∞ 119)
- `usageChunk = results.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 148)

#### üìÑ groq.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createMock = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `groqApiKey = "test-groq-api-key"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 42)
- `handlerWithModel = new GroqHandler({ apiModelId: testModelId, groqApiKey: "test-groq-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 49)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `expectedResponse = "This is a test response from Groq"` (—Å—Ç—Ä–æ–∫–∞ 56)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `errorMessage = "Groq API error"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `testContent = "This is test content from Groq stream"` (—Å—Ç—Ä–æ–∫–∞ 69)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 85)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 86)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 107)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `modelInfo = groqModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handlerWithModel = new GroqHandler({ apiModelId: modelId, groqApiKey: "test-groq-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `systemPrompt = "Test system prompt for Groq"` (—Å—Ç—Ä–æ–∫–∞ 129)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ glama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockWithResponse = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = mockCreate(...args)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 127)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 152)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 153)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `nonAnthropicOptions = {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `nonAnthropicHandler = new GlamaHandler(nonAnthropicOptions)` (—Å—Ç—Ä–æ–∫–∞ 203)
- `modelInfo = await handler.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 219)
- `handlerWithInvalidModel = new GlamaHandler({ ...mockOptions, glamaModelId: "invalid/model" })` (—Å—Ç—Ä–æ–∫–∞ 227)
- `modelInfo = await handlerWithInvalidModel.fetchModel()` (—Å—Ç—Ä–æ–∫–∞ 228)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `GEMINI_20_FLASH_THINKING_NAME = "gemini-2.0-flash-thinking-exp-1219"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `mockGenerateContentStream = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockGenerateContent = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockGetGenerativeModel = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 56)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 69)
- `mockError = new Error("Gemini API error")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockError = new Error("Gemini API error")` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `invalidHandler = new GeminiHandler({` (—Å—Ç—Ä–æ–∫–∞ 158)
- `modelInfo = invalidHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 162)
- `inputTokens = 10000 // Use larger numbers for per-million pricing` (—Å—Ç—Ä–æ–∫–∞ 181)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 182)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens })` (—Å—Ç—Ä–æ–∫–∞ 187)
- `inputTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 198)
- `expectedCost = (inputTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 200)
- `outputTokens = 15000` (—Å—Ç—Ä–æ–∫–∞ 205)
- `expectedCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 207)
- `inputTokens = 10000` (—Å—Ç—Ä–æ–∫–∞ 212)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 213)
- `cacheWriteTokens = 5000` (—Å—Ç—Ä–æ–∫–∞ 214)
- `CACHE_TTL = 5 // Match the constant in gemini.ts` (—Å—Ç—Ä–æ–∫–∞ 215)
- `expectedInputCost = (inputTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 218)
- `expectedOutputCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 219)
- `expectedCost = expectedInputCost + expectedOutputCost + expectedCacheWriteCost` (—Å—Ç—Ä–æ–∫–∞ 222)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `inputTokens = 10000 // Total logical input` (—Å—Ç—Ä–æ–∫–∞ 229)
- `outputTokens = 20000` (—Å—Ç—Ä–æ–∫–∞ 230)
- `cacheReadTokens = 8000 // Part of inputTokens read from cache` (—Å—Ç—Ä–æ–∫–∞ 231)
- `uncachedReadTokens = inputTokens - cacheReadTokens` (—Å—Ç—Ä–æ–∫–∞ 233)
- `expectedInputCost = (uncachedReadTokens / 1_000_000) * mockInfo.inputPrice!` (—Å—Ç—Ä–æ–∫–∞ 235)
- `expectedOutputCost = (outputTokens / 1_000_000) * mockInfo.outputPrice!` (—Å—Ç—Ä–æ–∫–∞ 236)
- `expectedCacheReadCost = mockInfo.cacheReadsPrice! * (cacheReadTokens / 1_000_000)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `expectedCost = expectedInputCost + expectedOutputCost + expectedCacheReadCost` (—Å—Ç—Ä–æ–∫–∞ 238)
- `cost = handler.calculateCost({ info: mockInfo, inputTokens, outputTokens, cacheReadTokens })` (—Å—Ç—Ä–æ–∫–∞ 240)
- `cost = handler.calculateCost({ info: incompleteInfo, inputTokens: 1000, outputTokens: 1000 })` (—Å—Ç—Ä–æ–∫–∞ 247)

#### üìÑ gemini-handler.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `options = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `stub = vi.fn().mockReturnValue((async function* () {})())` (—Å—Ç—Ä–æ–∫–∞ 14)
- `config = stub.mock.calls[0][0].config` (—Å—Ç—Ä–æ–∫–∞ 18)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `stub = vi.fn().mockResolvedValue({ text: "ok" })` (—Å—Ç—Ä–æ–∫–∞ 29)
- `res = await handler.completePrompt("hi")` (—Å—Ç—Ä–æ–∫–∞ 32)
- `promptConfig = stub.mock.calls[0][0].config` (—Å—Ç—Ä–æ–∫–∞ 34)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockStream = async function* () {` (—Å—Ç—Ä–æ–∫–∞ 46)
- `stub = vi.fn().mockReturnValue(mockStream())` (—Å—Ç—Ä–æ–∫–∞ 60)
- `messages = []` (—Å—Ç—Ä–æ–∫–∞ 64)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `mockStream = async function* () {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `stub = vi.fn().mockReturnValue(mockStream())` (—Å—Ç—Ä–æ–∫–∞ 99)
- `messages = []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `sourceMessage = messages.find((m) => m.type === "text" && m.text?.includes("[2]"))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `handler = new GeminiHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockError = new Error("API rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `stub = vi.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `generator = handler.createMessage("test", [] as any)` (—Å—Ç—Ä–æ–∫–∞ 132)

#### üìÑ deepseek.spec.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestDeepSeekHandler extends DeepSeekHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 254)

- `class TestDeepSeekHandler extends DeepSeekHandler (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Factory)` (—Å—Ç—Ä–æ–∫–∞ 282)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 2)
- `handlerWithoutModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 109)
- `handlerWithoutBaseUrl = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 117)
- `customBaseUrl = "https://custom.deepseek.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 131)
- `handlerWithCustomUrl = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 132)
- `_handler = new DeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `handlerWithInvalidModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 164)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `handlerWithoutModel = new DeepSeekHandler({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 198)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 219)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 231)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 244)
- `testHandler = new TestDeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `testHandler = new TestDeepSeekHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `usage = {` (—Å—Ç—Ä–æ–∫–∞ 290)
- `result = testHandler.testProcessUsageMetrics(usage)` (—Å—Ç—Ä–æ–∫–∞ 297)

#### üìÑ constants.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 23)
- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `userAgent = DEFAULT_HEADERS["User-Agent"]` (—Å—Ç—Ä–æ–∫–∞ 36)
- `version = userAgent.split("/")[1]` (—Å—Ç—Ä–æ–∫–∞ 37)
- `headerKeys = Object.keys(DEFAULT_HEADERS)` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ claude-code.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockRunClaudeCode = vi.mocked(runClaudeCode)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `mockFilterMessages = vi.mocked(filterMessagesForClaudeCode)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handlerWithInvalidModel = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `model = handlerWithInvalidModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `model = handlerWithMaxTokens.getModel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `model = handlerWithMaxTokens.getModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `filteredMessages = [{ role: "user" as const, content: "Hello (filtered)" }]` (—Å—Ç—Ä–æ–∫–∞ 80)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handlerWithMaxTokens = new ClaudeCodeHandler(options)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 117)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 118)
- `filteredMessages = [{ role: "user" as const, content: "Hello (filtered)" }]` (—Å—Ç—Ä–æ–∫–∞ 119)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `stream = handlerWithMaxTokens.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 146)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 150)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 177)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 178)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 192)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 193)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 196)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 223)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 237)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 238)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 241)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 273)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 291)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 292)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 295)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 303)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 321)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 322)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 325)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 378)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 379)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 402)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 406)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 458)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 481)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 482)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 485)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 512)
- `iterator = stream[Symbol.asyncIterator]()` (—Å—Ç—Ä–æ–∫–∞ 513)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 520)
- `messages = [{ role: "user" as const, content: "Hello" }]` (—Å—Ç—Ä–æ–∫–∞ 521)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 522)
- `mockGenerator = async function* (): AsyncGenerator<ClaudeCodeMessage | string> {` (—Å—Ç—Ä–æ–∫–∞ 525)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 554)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 555)

#### üìÑ claude-code-caching.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 78)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 80)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 86)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 166)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 168)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 173)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 230)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 232)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockStream = async function* (): AsyncGenerator<string | ClaudeCodeMessage> {` (—Å—Ç—Ä–æ–∫–∞ 246)
- `stream = handler.createMessage("System prompt", [{ role: "user", content: "Hello" }])` (—Å—Ç—Ä–æ–∫–∞ 294)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 296)
- `usageChunk = chunks.find((c) => c.type === "usage" && "totalCost" in c) as ApiStreamUsageChunk | undefined` (—Å—Ç—Ä–æ–∫–∞ 301)

#### üìÑ chutes.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `chutesApiKey = "test-chutes-api-key"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 121)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 135)
- `stream = handler.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 143)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 155)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 162)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 166)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 173)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 195)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 218)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `expectedResponse = "This is a test response from Chutes"` (—Å—Ç—Ä–æ–∫–∞ 240)
- `result = await handler.completePrompt("test prompt")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `errorMessage = "Chutes API error"` (—Å—Ç—Ä–æ–∫–∞ 247)
- `testContent = "This is test content from Chutes stream"` (—Å—Ç—Ä–æ–∫–∞ 253)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 269)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `stream = handler.createMessage("system prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 291)
- `firstChunk = await stream.next()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 309)
- `systemPrompt = "Test system prompt for Chutes"` (—Å—Ç—Ä–æ–∫–∞ 314)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `modelInfo = chutesModels[modelId]` (—Å—Ç—Ä–æ–∫–∞ 335)
- `handlerWithModel = new ChutesHandler({ apiModelId: modelId, chutesApiKey: "test-chutes-api-key" })` (—Å—Ç—Ä–æ–∫–∞ 336)
- `systemPrompt = "Test system prompt for Chutes"` (—Å—Ç—Ä–æ–∫–∞ 348)
- `messageGenerator = handlerWithModel.createMessage(systemPrompt, messages)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 368)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 372)
- `handlerWithModel = new ChutesHandler({` (—Å—Ç—Ä–æ–∫–∞ 378)
- `model = handlerWithModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ cerebras.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOptions = {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `handlerWithoutModel = new CerebrasHandler({ cerebrasApiKey: "test" })` (—Å—Ç—Ä–æ–∫–∞ 59)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `generator = handler.createMessage("System prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 96)
- `mockErrorResponse = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `generator = handler.createMessage("System prompt", [])` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handlerWithTemp = new CerebrasHandler({` (—Å—Ç—Ä–æ–∫–∞ 135)
- `requestBody = JSON.parse(vi.mocked(fetch).mock.calls[0][1]?.body as string)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 163)

#### üìÑ bedrock.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFromIni = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockSend = vi.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockConverseStreamCommand = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockConverseStreamCommand = vi.mocked(ConverseStreamCommand)` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockBedrockRuntimeClient = vi.mocked(BedrockRuntimeClient)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `customArnHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 63)
- `modelInfo = customArnHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `customArnHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 78)
- `modelInfo = customArnHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 98)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 106)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 114)
- `getPrefixForRegion = (AwsBedrockHandler as any).getPrefixForRegion` (—Å—Ç—Ä–æ–∫–∞ 122)
- `isSystemInferenceProfile = (AwsBedrockHandler as any).isSystemInferenceProfile` (—Å—Ç—Ä–æ–∫–∞ 132)
- `isSystemInferenceProfile = (AwsBedrockHandler as any).isSystemInferenceProfile` (—Å—Ç—Ä–æ–∫–∞ 140)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 190)
- `parseBaseModelId = (handler as any).parseBaseModelId.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 197)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 214)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `euHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `apacHandler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 235)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 248)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 256)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 261)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 269)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 276)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 283)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 285)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 295)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 302)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 304)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 314)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 321)
- `euResult = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 323)
- `apacResult = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 326)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 338)
- `parseArn = (handler as any).parseArn.bind(handler)` (—Å—Ç—Ä–æ–∫–∞ 345)
- `result = parseArn(` (—Å—Ç—Ä–æ–∫–∞ 348)
- `mockImageData = Buffer.from("test-image-data").toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 387)
- `commandArg = mockConverseStreamCommand.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 392)
- `imageBlock = commandArg.messages![0].content![0]` (—Å—Ç—Ä–æ–∫–∞ 395)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 419)
- `generator = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 456)
- `commandArg = mockConverseStreamCommand.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 461)
- `firstImage = commandArg.messages![0].content![0]` (—Å—Ç—Ä–æ–∫–∞ 464)
- `secondImage = commandArg.messages![0].content![2]` (—Å—Ç—Ä–æ–∫–∞ 465)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 513)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 521)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 534)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 543)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 551)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 558)

#### üìÑ bedrock-vpc-endpoint.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFromIni = vi.fn().mockReturnValue({` (—Å—Ç—Ä–æ–∫–∞ 3)
- `mockSend = vi.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockBedrockRuntimeClient = vi.fn().mockImplementation(() => ({` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockBedrockRuntimeClient = vi.mocked(BedrockRuntimeClient)` (—Å—Ç—Ä–æ–∫–∞ 30)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 79)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 105)
- `clientConfig = mockBedrockRuntimeClient.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 128)
- `handler = new AwsBedrockHandler({` (—Å—Ç—Ä–æ–∫–∞ 161)

#### üìÑ bedrock-reasoning.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 83)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 86)
- `reasoningChunks = chunks.filter((c) => c.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 101)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `metadata = {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `stream = handler.createMessage("System prompt", messages, metadata)` (—Å—Ç—Ä–æ–∫–∞ 134)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 135)
- `messages = [{ role: "user" as const, content: "Test" }]` (—Å—Ç—Ä–æ–∫–∞ 168)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 211)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 212)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 214)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 255)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 258)
- `reasoningChunks = chunks.filter((c) => c.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 276)
- `messages = [{ role: "user" as const, content: "Test message" }]` (—Å—Ç—Ä–æ–∫–∞ 304)
- `stream = handler.createMessage("System prompt", messages)` (—Å—Ç—Ä–æ–∫–∞ 305)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 307)
- `textChunks = chunks.filter((c) => c.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 323)

#### üìÑ bedrock-invokedModelId.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockStream(events: S)` (—Å—Ç—Ä–æ–∫–∞ 78)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSend = vitest.fn().mockImplementation(async () => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 106)
- `initialModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `getModelByIdSpy = vitest.spyOn(handler, "getModelById")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 156)
- `events = []` (—Å—Ç—Ä–æ–∫–∞ 159)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `usageEvents = events.filter((event) => event.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `lastUsageEvent = usageEvents[usageEvents.length - 1]` (—Å—Ç—Ä–æ–∫–∞ 177)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 198)
- `initialModelConfig = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 201)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 230)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 280)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 288)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 301)
- `messageGenerator = handler.createMessage("system prompt", [{ role: "user", content: "user message" }])` (—Å—Ç—Ä–æ–∫–∞ 339)
- `costModel = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 347)

#### üìÑ bedrock-inference-profiles.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createHandler(options: P)` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createHandler = (options: Partial<ApiHandlerOptions> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `lengths = AWS_INFERENCE_PROFILE_MAPPING.map(([pattern]) => pattern.length)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `sortedLengths = [...lengths].sort((a, b) => b - a)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 119)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 125)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 130)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 136)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 141)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 152)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 163)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 169)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 174)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 180)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 185)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 191)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `testModels = [` (—Å—Ç—Ä–æ–∫–∞ 208)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 216)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 222)
- `govHandler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 229)
- `govModel = govHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `usHandler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 239)
- `usModel = usHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 245)

#### üìÑ bedrock-error-handling.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSend = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `createMockError = (options: {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `error = new Error(options.message || "Test error") as any` (—Å—Ç—Ä–æ–∫–∞ 53)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 79)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 111)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `throttlingMessages = [` (—Å—Ç—Ä–æ–∫–∞ 142)
- `throttleError = createMockError({ message })` (—Å—Ç—Ä–æ–∫–∞ 153)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 167)
- `quotaError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 193)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `modelError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `serverError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 227)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 234)
- `tokenErrors = [` (—Å—Ç—Ä–æ–∫–∞ 244)
- `tokenError = createMockError({ message })` (—Å—Ç—Ä–æ–∫–∞ 252)
- `throttleError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 269)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 274)
- `generator = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 286)
- `genericError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 298)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 303)
- `generator = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 315)
- `mixedError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 336)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 344)
- `specificError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 353)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 361)
- `unknownError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 371)
- `result = await handler.completePrompt("test")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 388)
- `tokenError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 411)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 421)
- `stream = handler.createMessage("system", [{ role: "user", content: "test" }])` (—Å—Ç—Ä–æ–∫–∞ 434)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 451)
- `promises = Array.from({ length: 5 }, () => handler.completePrompt("test"))` (—Å—Ç—Ä–æ–∫–∞ 460)
- `results = await Promise.allSettled(promises)` (—Å—Ç—Ä–æ–∫–∞ 463)
- `mixedError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 475)
- `throttlingError = createMockError({` (—Å—Ç—Ä–æ–∫–∞ 498)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 504)
- `stream = handler.createMessage("", messages)` (—Å—Ç—Ä–æ–∫–∞ 517)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 518)
- `unusualError = {` (—Å—Ç—Ä–æ–∫–∞ 534)

#### üìÑ bedrock-custom-arn.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createHandler(options: P)` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockModule = {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `createHandler = (options: Partial<ApiHandlerOptions> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `arn = "arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `arn = "arn:aws:bedrock:us-west-2:123456789012:inference-profile/custom-profile"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `result = (handler as any).parseArn(arn, "us-west-2")` (—Å—Ç—Ä–æ–∫–∞ 92)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `arn = "arn:aws:bedrock:eu-west-1:123456789012:prompt-router/custom-router-name"` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = (handler as any).parseArn(arn, "eu-west-1")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 118)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `arn = "arn:aws:bedrock:eu-west-1::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"` (—Å—Ç—Ä–æ–∫–∞ 151)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 154)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 167)
- `arn = "arn:aws:bedrock:us-east-1:123456789012:some-other-resource"` (—Å—Ç—Ä–æ–∫–∞ 168)
- `result = (handler as any).parseArn(arn, "us-east-1")` (—Å—Ç—Ä–æ–∫–∞ 171)
- `handler = createHandler()` (—Å—Ç—Ä–æ–∫–∞ 183)
- `arn = "invalid-arn-format"` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = (handler as any).parseArn(arn)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `handler = new AwsBedrockHandler(mockOptions)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 210)
- `handler = createHandler({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `infoSpy = vitest.spyOn(logger, "info")` (—Å—Ç—Ä–æ–∫–∞ 233)

#### üìÑ anthropic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCreate = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockAnthropicConstructor = vitest.fn().mockImplementation(() => ({` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockAnthropicConstructor = vitest.mocked(Anthropic)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `handlerWithoutKey = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 89)
- `customBaseUrl = "https://custom.anthropic.com"` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 106)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 116)
- `customBaseUrl = "https://custom.anthropic.com"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `handlerWithCustomUrl = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 128)
- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 141)
- `stream = handler.createMessage(systemPrompt, [` (—Å—Ç—Ä–æ–∫–∞ 144)
- `usageChunk = chunks.find((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `handlerWithoutModel = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 221)
- `model = handlerWithoutModel.getModel()` (—Å—Ç—Ä–æ–∫–∞ 225)
- `model = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handler = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `handler = new AnthropicHandler({` (—Å—Ç—Ä–æ–∫–∞ 255)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 262)

#### üìÑ anthropic-vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 81)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 90)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 200)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 227)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `mockCreate = vitest.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 263)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 279)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 314)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 322)
- `stream = handler.createMessage(systemPrompt, [` (—Å—Ç—Ä–æ–∫–∞ 325)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 346)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 414)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 436)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 444)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `usageChunks = chunks.filter((chunk) => chunk.type === "usage")` (—Å—Ç—Ä–æ–∫–∞ 455)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 470)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 479)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 515)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 523)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 526)
- `reasoningChunks = chunks.filter((chunk) => chunk.type === "reasoning")` (—Å—Ç—Ä–æ–∫–∞ 534)
- `textChunks = chunks.filter((chunk) => chunk.type === "text")` (—Å—Ç—Ä–æ–∫–∞ 540)
- `mockStream = [` (—Å—Ç—Ä–æ–∫–∞ 553)
- `asyncIterator = {` (—Å—Ç—Ä–æ–∫–∞ 572)
- `mockCreate = vitest.fn().mockResolvedValue(asyncIterator)` (—Å—Ç—Ä–æ–∫–∞ 580)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 583)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 614)
- `mockError = new Error("Vertex API error")` (—Å—Ç—Ä–æ–∫–∞ 637)
- `mockCreate = vitest.fn().mockRejectedValue(mockError)` (—Å—Ç—Ä–æ–∫–∞ 638)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 653)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 658)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 669)
- `result = await handler.completePrompt("Test prompt")` (—Å—Ç—Ä–æ–∫–∞ 674)
- `modelInfo = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `handler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 695)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 702)
- `handler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 709)
- `result = handler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 716)
- `thinkingHandler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 725)
- `modelInfo = thinkingHandler.getModel()` (—Å—Ç—Ä–æ–∫–∞ 733)
- `handlerWithBudget = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 742)
- `handlerWithDefaultBudget = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 753)
- `handlerWithSmallMaxTokens = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 763)
- `thinkingHandler = new AnthropicVertexHandler({` (—Å—Ç—Ä–æ–∫–∞ 774)
- `mockCreate = vitest.fn().mockImplementation(async (options) => {` (—Å—Ç—Ä–æ–∫–∞ 782)

### üìÇ build-src/packages/types/src/providers

#### üìÑ xai.ts

#### üìÑ vscode-llm.ts

#### üìÑ vertex.ts

#### üìÑ unbound.ts

#### üìÑ sambanova.ts

#### üìÑ requesty.ts

#### üìÑ openrouter.ts

#### üìÑ openai.ts

#### üìÑ ollama.ts

#### üìÑ moonshot.ts

#### üìÑ mistral.ts

#### üìÑ lm-studio.ts

#### üìÑ lite-llm.ts

#### üìÑ index.ts

#### üìÑ huggingface.ts

#### üìÑ groq.ts

#### üìÑ glama.ts

#### üìÑ gemini.ts

#### üìÑ doubao.ts

#### üìÑ deepseek.ts

#### üìÑ claude-code.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `VERTEX_DATE_PATTERN = /-(\d{8})$/` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ chutes.ts

#### üìÑ cerebras.ts

#### üìÑ bedrock.ts

#### üìÑ anthropic.ts

### üìÇ build-src/packages/types/src/__tests__

#### üìÑ provider-settings.test.ts

#### üìÑ index.test.ts

### üìÇ build-src/packages/telemetry/src/__tests__

#### üìÑ PostHogTelemetryClient.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getPrivateProperty = <T>(instance: any, propertyName: string): T => {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 62)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 74)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 85)
- `isPropertyCapturable = getPrivateProperty<(propertyName: string) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 87)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 108)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 127)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 150)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 173)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 205)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 208)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 212)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 237)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 241)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 261)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 273)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 285)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 317)
- `captureCall = mockPostHogClient.capture.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 352)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 361)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 374)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 387)
- `client = new PostHogTelemetryClient()` (—Å—Ç—Ä–æ–∫–∞ 401)

#### üìÑ PostHogTelemetryClient.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 33)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 46)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 59)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 71)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 85)
- `client = new PostHogTelemetryClient(true) // debug mode` (—Å—Ç—Ä–æ–∫–∞ 94)

### üìÇ build-src/packages/evals/src/db

#### üìÑ schema.ts

#### üìÑ index.ts

#### üìÑ db.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `getProductionClient()` (—Å—Ç—Ä–æ–∫–∞ 22)
- `async disconnect()` (—Å—Ç—Ä–æ–∫–∞ 35)

**–¢–∏–ø—ã:**

- `type DatabaseOrTransaction` (—Å—Ç—Ä–æ–∫–∞ 43)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pgClient = postgres(process.env.DATABASE_URL!, { prepare: false })` (—Å—Ç—Ä–æ–∫–∞ 6)
- `client = drizzle({ client: pgClient, schema })` (—Å—Ç—Ä–æ–∫–∞ 7)
- `getProductionClient = () => {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `disconnect = async () => {` (—Å—Ç—Ä–æ–∫–∞ 35)

### üìÇ build-src/packages/evals/src/cli

#### üìÑ utils.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface LoggerOptions` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `timestamp = new Date().toISOString()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `logLine = `[${timestamp} | ${level} | ${this.tag}] ${message} ${` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ runUnitTest.ts

**–¢–∏–ø—ã:**

- `type RunUnitTestOptions` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `UNIT_TEST_TIMEOUT = 2 * 60 * 1_000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cmd = testCommands[task.language]` (—Å—Ç—Ä–æ–∫–∞ 27)
- `cwd = path.resolve(EVALS_REPO_PATH, task.language, task.exercise)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `commands = cmd.commands.map((cs) => parseCommandString(cs))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `subprocess = execa({ cwd, shell: "/bin/bash", reject: false })`${command}`` (—Å—Ç—Ä–æ–∫–∞ 36)
- `timeout = setTimeout(async () => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `descendants = await new Promise<number[]>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = await subprocess` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ runEvals.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await findRun(runId)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `tasks = await getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `containerized = isDockerContainer()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `logger = new Logger({` (—Å—Ç—Ä–æ–∫–∞ 25)
- `heartbeat = await startHeartbeat(run.id)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `queue = new PQueue({ concurrency: run.concurrency })` (—Å—Ç—Ä–æ–∫–∞ 38)
- `result = await finishRun(run.id)` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ runCi.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({ model: "anthropic/claude-sonnet-4", socketPath: "", concurrency })` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ redis.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 28)
- `runnersKey = getRunnersKey(runId)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `pid = process.pid.toString()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `heartbeatKey = getHeartbeatKey(runId)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 58)

#### üìÑ index.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async main()` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `main = async () => {` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ build-src/packages/evals/src/exercises

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `__dirname = path.dirname(fileURLToPath(import.meta.url))` (—Å—Ç—Ä–æ–∫–∞ 5)
- `targetPath = path.resolve(basePath, relativePath)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `entries = await fs.readdir(targetPath, { withFileTypes: true })` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/packages/cloud/src/auth

#### üìÑ index.ts

#### üìÑ StaticTokenAuthService.ts

#### üìÑ AuthService.ts

### üìÇ build-src/packages/cloud/src/__mocks__

#### üìÑ vscode.ts

### üìÇ build-src/packages/cloud/src/__tests__

#### üìÑ TelemetryClient.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `getPrivateProperty = <T>(instance: any, propertyName: string): T => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 57)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 71)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 88)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 105)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 120)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 133)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `isEventCapturable = getPrivateProperty<(eventName: TelemetryEventName) => boolean>(` (—Å—Ç—Ä–æ–∫–∞ 146)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 176)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 199)
- `consoleErrorSpy = vi.spyOn(console, "error")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `getEventProperties = getPrivateProperty<` (—Å—Ç—Ä–æ–∫–∞ 236)
- `result = await getEventProperties({` (—Å—Ç—Ä–æ–∫–∞ 240)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 332)
- `providerProperties = {` (—Å—Ç—Ä–æ–∫–∞ 334)
- `eventProperties = {` (—Å—Ç—Ä–æ–∫–∞ 344)
- `mockValidatedData = {` (—Å—Ç—Ä–æ–∫–∞ 348)
- `eventProperties = {` (—Å—Ç—Ä–æ–∫–∞ 383)
- `mockValidatedData = {` (—Å—Ç—Ä–æ–∫–∞ 400)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 442)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 451)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 453)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 469)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 471)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `providerProperties = {` (—Å—Ç—Ä–æ–∫–∞ 491)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 507)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 536)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 537)
- `propertiesJson = formData.get("properties") as string` (—Å—Ç—Ä–æ–∫–∞ 542)
- `parsedProperties = JSON.parse(propertiesJson)` (—Å—Ç—Ä–æ–∫–∞ 543)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 549)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 555)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 560)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 568)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 591)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 592)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 608)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 614)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 619)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 621)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 644)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 645)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 661)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 667)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 672)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 676)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 703)
- `client = new TelemetryClient(mockAuthService, mockSettingsService, true)` (—Å—Ç—Ä–æ–∫–∞ 720)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 722)
- `client = new TelemetryClient(mockAuthService, mockSettingsService)` (—Å—Ç—Ä–æ–∫–∞ 742)
- `call = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 758)
- `formData = call[1].body as FormData` (—Å—Ç—Ä–æ–∫–∞ 759)
- `fileField = formData.get("file") as File` (—Å—Ç—Ä–æ–∫–∞ 762)
- `fileContent = await fileField.text()` (—Å—Ç—Ä–æ–∫–∞ 768)

#### üìÑ StaticSettingsService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `validBase64 = Buffer.from(JSON.stringify(validSettings)).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `invalidJson = Buffer.from("{ invalid json }").toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `invalidSettings = { invalid: "schema" }` (—Å—Ç—Ä–æ–∫–∞ 45)
- `invalidBase64 = Buffer.from(JSON.stringify(invalidSettings)).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `service = new StaticSettingsService(validBase64)` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `consoleSpy = vi.spyOn(console, "log").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ ShareService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await shareService.shareTask("task-123", "organization")` (—Å—Ç—Ä–æ–∫–∞ 84)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 102)
- `result = await shareService.shareTask("task-123", "public")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await shareService.shareTask("task-123")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `mockResponseData = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `result = await shareService.shareTask("task-123", "organization")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 242)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 255)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 275)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `result = await shareService.canShareTask()` (—Å—Ç—Ä–æ–∫–∞ 293)

#### üìÑ RefreshTimer.test.ts

#### üìÑ CloudSettingsService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `service = new CloudSettingsService(mockContext, mockAuthService as unknown as AuthService)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `cachedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 100)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `cachedSettings = {` (—Å—Ç—Ä–æ–∫–∞ 130)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 172)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 182)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 192)
- `previousSettings = {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `newSettings = {` (—Å—Ç—Ä–æ–∫–∞ 199)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 222)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 249)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 268)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 303)
- `eventSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 310)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 316)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 337)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 354)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 355)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 372)
- `result = await timerCallback()` (—Å—Ç—Ä–æ–∫–∞ 373)
- `allowList = cloudSettingsService.getAllowList()` (—Å—Ç—Ä–æ–∫–∞ 388)
- `allowList = cloudSettingsService.getAllowList()` (—Å—Ç—Ä–æ–∫–∞ 393)
- `testContext = {` (—Å—Ç—Ä–æ–∫–∞ 401)
- `testAuthService = {` (—Å—Ç—Ä–æ–∫–∞ 409)
- `testService = new CloudSettingsService(` (—Å—Ç—Ä–æ–∫–∞ 416)
- `settings = testService.getSettings()` (—Å—Ç—Ä–æ–∫–∞ 423)
- `settings = cloudSettingsService.getSettings()` (—Å—Ç—Ä–æ–∫–∞ 430)
- `removeAllListenersSpy = vi.spyOn(cloudSettingsService, "removeAllListeners")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `authStateChangedHandler = mockAuthService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 451)
- `authStateChangedHandler = mockAuthService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 465)

#### üìÑ CloudService.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `cloudService = await CloudService.createInstance(mockContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 176)
- `mockLog = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `result = cloudService.isAuthenticated()` (—Å—Ç—Ä–æ–∫–∞ 218)
- `result = cloudService.hasActiveSession()` (—Å—Ç—Ä–æ–∫–∞ 224)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 235)
- `result = cloudService.getOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 244)
- `result = cloudService.getOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `result = cloudService.getOrganizationName()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `result = cloudService.getOrganizationName()` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 279)
- `result = cloudService.getOrganizationRole()` (—Å—Ç—Ä–æ–∫–∞ 288)
- `result = cloudService.getOrganizationRole()` (—Å—Ç—Ä–æ–∫–∞ 296)
- `result = cloudService.getAuthState()` (—Å—Ç—Ä–æ–∫–∞ 301)
- `result = cloudService.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 319)
- `result = cloudService.getStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 327)
- `result = cloudService.hasStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 334)
- `result = cloudService.hasStoredOrganizationId()` (—Å—Ç—Ä–æ–∫–∞ 341)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 382)
- `mockCloudSettingsService = Object.create(CloudSettingsService.prototype)` (—Å—Ç—Ä–æ–∫–∞ 390)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 403)
- `registeredListener = mockCloudSettingsService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 409)
- `mockStaticSettingsService = {` (—Å—Ç—Ä–æ–∫–∞ 424)
- `_cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 439)
- `settingsListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 459)
- `serviceSettingsListener = mockSettingsService.on.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 463)
- `settingsData = {` (—Å—Ç—Ä–æ–∫–∞ 470)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 505)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 506)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 516)
- `result = await cloudService.shareTask(taskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 519)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 528)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 529)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 539)
- `result = await cloudService.shareTask(taskId, visibility, clineMessages)` (—Å—Ç—Ä–æ–∫–∞ 546)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 557)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 558)
- `taskNotFoundError = new TaskNotFoundError(taskId)` (—Å—Ç—Ä–æ–∫–∞ 560)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 570)
- `visibility = "organization"` (—Å—Ç—Ä–æ–∫–∞ 571)
- `genericError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 581)
- `taskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 591)
- `expectedResult = { success: true, shareUrl: "https://example.com/share/123" }` (—Å—Ç—Ä–æ–∫–∞ 592)
- `result = await cloudService.shareTask(taskId)` (—Å—Ç—Ä–æ–∫–∞ 595)

#### üìÑ CloudService.integration.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 74)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 79)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 101)
- `validSettings = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `cloudService = await CloudService.createInstance(mockContext)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `settingsService = (cloudService as unknown as { settingsService: unknown }).settingsService` (—Å—Ç—Ä–æ–∫–∞ 139)

### üìÇ build-src/apps/web-roo-code/src/lib

#### üìÑ utils.ts

#### üìÑ stats.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatNumber(num: n): string` (—Å—Ç—Ä–æ–∫–∞ 106)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `res = await fetch("https://api.github.com/repos/RooCodeInc/Roo-Code")` (—Å—Ç—Ä–æ–∫–∞ 3)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `reviews = data?.results?.[0]?.extensions?.[0]?.reviews` (—Å—Ç—Ä–æ–∫–∞ 42)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `statistics = data?.results?.[0]?.extensions?.[0]?.statistics` (—Å—Ç—Ä–æ–∫–∞ 85)
- `installStat = statistics.find((stat: any) => stat.statisticName === "install")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `truncated = Math.floor((num / 1000) * 10) / 10` (—Å—Ç—Ä–æ–∫–∞ 109)

#### üìÑ index.ts

#### üìÑ format-tokens.ts

#### üìÑ format-score.ts

#### üìÑ format-duration.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `seconds = Math.floor(durationMs / 1000)` (—Å—Ç—Ä–æ–∫–∞ 2)
- `hours = Math.floor(seconds / 3600)` (—Å—Ç—Ä–æ–∫–∞ 3)
- `minutes = Math.floor((seconds % 3600) / 60)` (—Å—Ç—Ä–æ–∫–∞ 4)
- `remainingSeconds = seconds % 60` (—Å—Ç—Ä–æ–∫–∞ 5)
- `parts = []` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ format-currency.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatter = new Intl.NumberFormat("en-US", {` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ constants.ts

### üìÇ build-src/apps/web-roo-code/src/actions

#### üìÑ evals.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `languageScores = await getLanguageScores()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `runs = (await getRuns())` (—Å—Ç—Ä–æ–∫–∞ 11)
- `settings = rooCodeSettingsSchema.parse(run.settings)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/apps/web-neira-coder/src/lib

#### üìÑ utils.ts

#### üìÑ stats.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `formatNumber(num: n): string` (—Å—Ç—Ä–æ–∫–∞ 106)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `res = await fetch("https://api.github.com/repos/NeiraCoderInc/Neira-Coder")` (—Å—Ç—Ä–æ–∫–∞ 3)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 4)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `reviews = data?.results?.[0]?.extensions?.[0]?.reviews` (—Å—Ç—Ä–æ–∫–∞ 42)
- `res = await fetch("https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery", {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `data = await res.json()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `statistics = data?.results?.[0]?.extensions?.[0]?.statistics` (—Å—Ç—Ä–æ–∫–∞ 85)
- `installStat = statistics.find((stat: any) => stat.statisticName === "install")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `truncated = Math.floor((num / 1000) * 10) / 10` (—Å—Ç—Ä–æ–∫–∞ 109)

#### üìÑ index.ts

#### üìÑ format-tokens.ts

#### üìÑ format-score.ts

#### üìÑ format-duration.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `seconds = Math.floor(durationMs / 1000)` (—Å—Ç—Ä–æ–∫–∞ 2)
- `hours = Math.floor(seconds / 3600)` (—Å—Ç—Ä–æ–∫–∞ 3)
- `minutes = Math.floor((seconds % 3600) / 60)` (—Å—Ç—Ä–æ–∫–∞ 4)
- `remainingSeconds = seconds % 60` (—Å—Ç—Ä–æ–∫–∞ 5)
- `parts = []` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ format-currency.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatter = new Intl.NumberFormat("en-US", {` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ constants.ts

### üìÇ build-src/apps/web-neira-coder/src/actions

#### üìÑ evals.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `languageScores = await getLanguageScores()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `runs = (await getRuns())` (—Å—Ç—Ä–æ–∫–∞ 11)
- `settings = neiraCoderSettingsSchema.parse(run.settings)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/apps/web-evals/src/lib

#### üìÑ utils.ts

#### üìÑ schemas.ts

#### üìÑ formatters.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formatter = new Intl.NumberFormat("en-US", {` (—Å—Ç—Ä–æ–∫–∞ 1)
- `seconds = Math.floor(durationMs / 1000)` (—Å—Ç—Ä–æ–∫–∞ 9)
- `hours = Math.floor(seconds / 3600)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `minutes = Math.floor((seconds % 3600) / 60)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `remainingSeconds = seconds % 60` (—Å—Ç—Ä–æ–∫–∞ 12)
- `parts = []` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ actions.ts

### üìÇ build-src/apps/web-evals/src/hooks

#### üìÑ use-run-status.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tokenUsage = useRef<Map<number, TokenUsage & { duration?: number }>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 25)
- `startTimes = useRef<Map<number, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 26)
- `url = `/api/runs/${run.id}/stream`` (—Å—Ç—Ä–æ–∫–∞ 47)
- `onMessage = useCallback((messageEvent: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `result = taskEventSchema.safeParse(data)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `startTime = startTimes.current.get(taskId)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `duration = startTime ? Date.now() - startTime : undefined` (—Å—Ç—Ä–æ–∫–∞ 79)
- `sseStatus = useEventSource({ url, onMessage })` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ use-open-router-models.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = await fetch("https://openrouter.ai/api/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ use-event-source.ts

**–¢–∏–ø—ã:**

- `type UseEventSourceOptions` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sourceRef = useRef<EventSource | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `statusRef = useRef<EventSourceStatus>("waiting")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isUnmountedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `handleMessage = useCallback((event: MessageEvent) => onMessage(event), [onMessage])` (—Å—Ç—Ä–æ–∫–∞ 19)
- `cleanup = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `createEventSource = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `initialTimeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 87)

#### üìÑ use-copy-run.ts

### üìÇ build-src/apps/web-evals/src/actions

#### üìÑ tasks.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tasks = await _getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ runs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `EVALS_REPO_PATH = path.resolve(path.dirname(fileURLToPath(import.meta.url)), "../../../../../evals")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `run = await _createRun({` (—Å—Ç—Ä–æ–∫–∞ 26)
- `exercises = await getExercisesForLanguage(EVALS_REPO_PATH, language)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `isRunningInDocker = fs.existsSync("/.dockerenv")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `dockerArgs = [` (—Å—Ç—Ä–æ–∫–∞ 57)
- `cliCommand = `pnpm --filter @roo-code/evals cli --runId ${run.id}`` (—Å—Ç—Ä–æ–∫–∞ 66)
- `command = isRunningInDocker` (—Å—Ç—Ä–æ–∫–∞ 68)
- `childProcess = spawn("sh", ["-c", command], {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `logStream = fs.createWriteStream("/tmp/roo-code-evals.log", { flags: "a" })` (—Å—Ç—Ä–æ–∫–∞ 79)

#### üìÑ runners.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ heartbeat.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ exercises.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `__dirname = path.dirname(fileURLToPath(import.meta.url)) // <repo>/apps/web-evals/src/actions` (—Å—Ç—Ä–æ–∫–∞ 8)
- `EVALS_REPO_PATH = path.resolve(__dirname, "../../../../../evals")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `result = await Promise.all(` (—Å—Ç—Ä–æ–∫–∞ 13)
- `languagePath = path.join(EVALS_REPO_PATH, language)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `exercises = await listDirectories(__dirname, languagePath)` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/apps/vscode-e2e/src/types

#### üìÑ global.d.ts

### üìÇ build-src/apps/vscode-e2e/src/suite

#### üìÑ utils.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async check()` (—Å—Ç—Ä–æ–∫–∞ 16)

**–¢–∏–ø—ã:**

- `type WaitForOptions` (—Å—Ç—Ä–æ–∫–∞ 3)
- `type WaitUntilAbortedOptions` (—Å—Ç—Ä–æ–∫–∞ 42)
- `type WaitUntilCompletedOptions` (—Å—Ç—Ä–æ–∫–∞ 53)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `check = async () => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `result = condition()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isSatisfied = result instanceof Promise ? await result : result` (—Å—Ç—Ä–æ–∫–∞ 18)
- `set = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 48)
- `set = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ test-utils.ts

#### üìÑ task.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 12)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ subtasks.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 9)
- `childPrompt = "You are a calculator. Respond only with numbers. What is the square root of 9?"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `parentTaskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `anotherTaskId = await api.startNewTask({ text: childPrompt })` (—Å—Ç—Ä–æ–∫–∞ 57)

#### üìÑ modes.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `switchModesTaskId = await globalThis.api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ markdown-lists.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 12)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 22)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 30)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 41)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 49)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 59)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 67)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 78)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 86)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 104)
- `messageText = listMessage?.text || ""` (—Å—Ç—Ä–æ–∫–∞ 115)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskId = await api.startNewTask({` (—Å—Ç—Ä–æ–∫–∞ 148)
- `listMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ index.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `extension = vscode.extensions.getExtension<RooCodeAPI>("RooVeterinaryInc.roo-cline")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `api = extension.isActive ? extension.exports : await extension.activate()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mocha = new Mocha(mochaOptions)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `cwd = path.resolve(__dirname, "..")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `specificFile = process.env.TEST_FILE.endsWith(".js")` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ extension.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `expectedCommands = [` (—Å—Ç—Ä–æ–∫–∞ 10)
- `commands = new Set((await vscode.commands.getCommands(true)).filter((cmd) => cmd.startsWith("roo-cline")))` (—Å—Ç—Ä–æ–∫–∞ 41)

### üìÇ apps/web-neira-coder/src/lib/hooks

#### üìÑ use-open-router-models.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parsePrice()` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsePrice = (price?: string) => (price ? parseFloat(price) * 1_000_000 : undefined)` (—Å—Ç—Ä–æ–∫–∞ 6)
- `response = await fetch("https://openrouter.ai/api/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 42)

#### üìÑ use-logo-src.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentTheme = resolvedTheme || theme` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ index.ts

### üìÇ apps/web-neira-coder/src/components/ui

#### üìÑ index.ts

#### üìÑ table.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(` (—Å—Ç—Ä–æ–∫–∞ 5)
- `TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 14)
- `TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 19)
- `TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 26)
- `TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(` (—Å—Ç—Ä–æ–∫–∞ 37)
- `TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 63)
- `TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 78)

#### üìÑ scroll-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ScrollButtonProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `section = document.getElementById(targetId)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ modal.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Dialog = DialogPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DialogTrigger = DialogPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `DialogPortal = DialogPrimitive.Portal` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DialogClose = DialogPrimitive.Close` (—Å—Ç—Ä–æ–∫–∞ 14)
- `DialogOverlay = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DialogContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 31)
- `DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DialogTitle = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 64)
- `DialogDescription = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ chart.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `useChart()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `ChartStyle(id: s, config: C)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `getPayloadConfigFromPayload(config: C, payload: u, key: s)` (—Å—Ç—Ä–æ–∫–∞ 286)

**–¢–∏–ø—ã:**

- `type ChartContextProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `THEMES = { light: "", dark: ".dark" } as const` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ChartContext = React.createContext<ChartContextProps | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `context = React.useContext(ChartContext)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `ChartContainer = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 34)
- `uniqueId = React.useId()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `chartId = `chart-${id || uniqueId.replace(/:/g, "")}`` (—Å—Ç—Ä–æ–∫–∞ 42)
- `ChartStyle = ({ id, config }: { id: string` (—Å—Ç—Ä–æ–∫–∞ 62)
- `colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color` (—Å—Ç—Ä–æ–∫–∞ 78)
- `ChartTooltip = RechartsPrimitive.Tooltip` (—Å—Ç—Ä–æ–∫–∞ 91)
- `ChartTooltipContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 93)
- `tooltipLabel = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `key = `${labelKey || item?.dataKey || item?.name || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 130)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `nestLabel = payload.length === 1 && indicator !== "dot"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `key = `${nameKey || item.name || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 164)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `indicatorColor = color || item.payload.fill || item.color` (—Å—Ç—Ä–æ–∫–∞ 166)
- `ChartLegend = RechartsPrimitive.Legend` (—Å—Ç—Ä–æ–∫–∞ 232)
- `ChartLegendContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 234)
- `key = `${nameKey || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 257)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 258)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Button = React.forwardRef<HTMLButtonElement, ButtonProps>(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 41)

### üìÇ apps/web-neira-coder/src/components/providers

#### üìÑ index.ts

#### üìÑ providers.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ posthog-provider.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `PageViewTracker()` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `searchParams = useSearchParams()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `posthogKey = process.env.NEXT_PUBLIC_POSTHOG_KEY` (—Å—Ç—Ä–æ–∫–∞ 35)
- `posthogHost = process.env.NEXT_PUBLIC_POSTHOG_HOST` (—Å—Ç—Ä–æ–∫–∞ 36)

### üìÇ apps/web-neira-coder/src/components/homepage

#### üìÑ index.ts

#### üìÑ whats-new-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Feature(icon: I)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `updateCanvasSize()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `animate()` (—Å—Ç—Ä–æ–∫–∞ 77)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FeatureProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `bgColor = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `textColor = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `version = "v3.8.0"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `buttonRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `canvasRef = useRef<HTMLCanvasElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `canvas = canvasRef.current` (—Å—Ç—Ä–æ–∫–∞ 50)
- `button = buttonRef.current` (—Å—Ç—Ä–æ–∫–∞ 51)
- `ctx = canvas.getContext("2d")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `updateCanvasSize = () => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `rect = button.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `animate = () => {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `width = canvas.width - 4` (—Å—Ç—Ä–æ–∫–∞ 84)
- `height = canvas.height - 4` (—Å—Ç—Ä–æ–∫–∞ 85)
- `x = 2` (—Å—Ç—Ä–æ–∫–∞ 86)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 87)
- `radius = height / 2` (—Å—Ç—Ä–æ–∫–∞ 88)
- `centerX = canvas.width / 2` (—Å—Ç—Ä–æ–∫–∞ 106)
- `centerY = canvas.height / 2` (—Å—Ç—Ä–æ–∫–∞ 107)
- `blueColor = "70, 130, 255"` (—Å—Ç—Ä–æ–∫–∞ 108)
- `gradient = ctx.createConicGradient(position, centerX, centerY)` (—Å—Ç—Ä–æ–∫–∞ 111)

#### üìÑ testimonials.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 77)

#### üìÑ testimonials-mobile.tsx

#### üìÑ install-section.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface InstallSectionProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ features.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 95)

#### üìÑ features-mobile.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `autoplayPlugin = Autoplay({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `scrollTo = useCallback((index: number) => emblaApi && emblaApi.scrollTo(index), [emblaApi])` (—Å—Ç—Ä–æ–∫–∞ 30)
- `onInit = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `onSelect = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ faq-section.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `toggleFAQ(index: n)` (—Å—Ç—Ä–æ–∫–∞ 240)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FAQItem` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggleFAQ = (index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 240)

#### üìÑ company-logos.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logos = [` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ code-example.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `switchMode(mode: ")` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UserProfileProps` (—Å—Ç—Ä–æ–∫–∞ 112)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codeContainerRef = useRef<HTMLPreElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `nextMode = currentMode === "code" ? "architect" : currentMode === "architect" ? "debug" : "code"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `switchMode = (mode: "code" | "architect" | "debug") => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `codeExamples = {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `items = data?.items?.map(item => item.name) || []` (—Å—Ç—Ä–æ–∫–∞ 214)

### üìÇ apps/web-neira-coder/src/components/chromes

#### üìÑ index.ts

#### üìÑ theme-toggle.tsx

#### üìÑ stats-display.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stars = await getGitHubStars()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ nav-bar.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface NavBarProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ footer.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClickOutside(event: M)` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dropdownRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ apps/web-evals/src/lib/server

#### üìÑ sse-stream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buffer = typeof data === "object" ? JSON.stringify(data) : data` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ redis.ts

### üìÇ apps/web-evals/src/components/ui

#### üìÑ index.ts

#### üìÑ tooltip.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TooltipProvider()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `Tooltip()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `TooltipTrigger()` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ textarea.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Textarea()` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ tabs.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Tabs = TabsPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 9)
- `TabsList = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 11)
- `tabsListRef = useRef<HTMLDivElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `updateIndicator = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `activeTab = tabsListRef.current.querySelector<HTMLElement>('[data-state="active"]')` (—Å—Ç—Ä–æ–∫–∞ 29)
- `activeRect = activeTab.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `tabsRect = tabsListRef.current.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `timeoutId = setTimeout(updateIndicator, 0)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `observer = new MutationObserver(updateIndicator)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `TabsTrigger = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 91)
- `TabsContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ table.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Table()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `TableHeader()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `TableBody()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `TableFooter()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `TableRow()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `TableHead()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `TableCell()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `TableCaption()` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ sonner.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Toaster()` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Toaster = ({ ...props }: ToasterProps) => {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ slider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `_values = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ separator.tsx

#### üìÑ select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Select()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `SelectGroup()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `SelectValue()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `SelectLabel()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `SelectItem()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `SelectSeparator()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `SelectScrollUpButton()` (—Å—Ç—Ä–æ–∫–∞ 120)

#### üìÑ scroll-area.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ScrollArea()` (—Å—Ç—Ä–æ–∫–∞ 12)

**–¢–∏–ø—ã:**

- `type ScrollAreaProps` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ popover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Popover()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `PopoverTrigger()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `PopoverAnchor()` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ multi-select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleInputKeyDown(event: R)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `toggleOption(option: s)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handleTogglePopover()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `clearExtraOptions()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `onSelectAll()` (—Å—Ç—Ä–æ–∫–∞ 136)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MultiSelectProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof multiSelectVariants>` - Props for MultiSelect component (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `multiSelectVariants = cva("px-2 py-1", {` - Variants for the multi-select component to handle different styles. Uses class-variance-authority (cva) to define different styles based on "variant" prop. (—Å—Ç—Ä–æ–∫–∞ 16)
- `handleInputKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `newSelectedValues = [...selectedValues]` (—Å—Ç—Ä–æ–∫–∞ 108)
- `toggleOption = (option: string) => {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `newSelectedValues = selectedValues.includes(option)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handleTogglePopover = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `clearExtraOptions = () => {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `newSelectedValues = selectedValues.slice(0, maxCount)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `searchResultsRef = React.useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 133)
- `searchValueRef = React.useRef("")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `onSelectAll = () => {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `values = Array.from(searchResultsRef.current.keys())` (—Å—Ç—Ä–æ–∫–∞ 137)
- `onFilter = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ label.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Label()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ input.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Input()` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ form.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `useFormField()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `FormItem()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `FormLabel()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `FormControl()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `FormDescription()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `FormMessage()` (—Å—Ç—Ä–æ–∫–∞ 123)

**–¢–∏–ø—ã:**

- `type FormItemContextValue` (—Å—Ç—Ä–æ–∫–∞ 66)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Form = FormProvider` (—Å—Ç—Ä–æ–∫–∞ 19)
- `FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `FormField = <` (—Å—Ç—Ä–æ–∫–∞ 30)
- `useFormField = () => {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `fieldContext = React.useContext(FormFieldContext)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `itemContext = React.useContext(FormItemContext)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `formState = useFormState({ name: fieldContext.name })` (—Å—Ç—Ä–æ–∫–∞ 47)
- `fieldState = getFieldState(fieldContext.name, formState)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `id = React.useId()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `body = error ? String(error?.message ?? "") : props.children` (—Å—Ç—Ä–æ–∫–∞ 125)

#### üìÑ dropdown-menu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DropdownMenu()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DropdownMenuPortal()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `DropdownMenuTrigger()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DropdownMenuGroup()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `DropdownMenuRadioGroup()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `DropdownMenuSeparator()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `DropdownMenuShortcut()` (—Å—Ç—Ä–æ–∫–∞ 148)

#### üìÑ drawer.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Drawer()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DrawerTrigger()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DrawerPortal()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DrawerClose()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `DrawerOverlay()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `DrawerContent()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `DrawerHeader()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DrawerFooter()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `DrawerTitle()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `DrawerDescription()` (—Å—Ç—Ä–æ–∫–∞ 77)

#### üìÑ dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Dialog()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `DialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DialogClose()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `DialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `DialogContent()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `DialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `DialogDescription()` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ command.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Command()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CommandInput()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `CommandList()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `CommandEmpty()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `CommandGroup()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `CommandSeparator()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `CommandItem()` (—Å—Ç—Ä–æ–∫–∞ 100)
- `CommandShortcut()` (—Å—Ç—Ä–æ–∫–∞ 114)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ badge.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `badgeVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Comp = asChild ? Slot : "span"` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ alert-dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AlertDialog()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `AlertDialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `AlertDialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `AlertDialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `AlertDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `AlertDialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `AlertDialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `AlertDialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `AlertDialogAction()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `AlertDialogCancel()` (—Å—Ç—Ä–æ–∫–∞ 97)

### üìÇ apps/web-evals/src/components/providers

#### üìÑ index.ts

#### üìÑ theme-provider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `NextThemesProvider = dynamic(() => import("next-themes").then((e) => e.ThemeProvider), {` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ react-query-provider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

### üìÇ apps/vscode-e2e/src/suite/tools

#### üìÑ write-to-file.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 308)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 316)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 72)
- `fileContent = "Hello, this is a test file!"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `parsed = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `baseFileName = path.basename(testFilePath)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `possibleLocations = [` (—Å—Ç—Ä–æ–∫–∞ 166)
- `workspaceDirs = await fs` (—Å—Ç—Ä–æ–∫–∞ 178)
- `wsFilePath = path.join("/tmp", wsDir, baseFileName)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `tempFiles = await fs.readdir(tempDir)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `cwdFiles = await fs.readdir(process.cwd())` (—Å—Ç—Ä–æ–∫–∞ 227)
- `tmpFiles = await fs.readdir("/tmp")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 271)
- `content = "File in nested directory"` (—Å—Ç—Ä–æ–∫–∞ 273)
- `fileName = `file-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 274)
- `nestedPath = path.join(tempDir, "nested", "deep", "directory", fileName)` (—Å—Ç—Ä–æ–∫–∞ 275)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `parsed = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 308)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `workspaceDirs = await fs` (—Å—Ç—Ä–æ–∫–∞ 356)
- `wsNestedPath = path.join("/tmp", wsDir, "nested", "deep", "directory", fileName)` (—Å—Ç—Ä–æ–∫–∞ 363)
- `wsFilePath = path.join("/tmp", wsDir, fileName)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `wsPath = path.join("/tmp", wsDir)` (—Å—Ç—Ä–æ–∫–∞ 406)
- `files = await fs.readdir(wsPath)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `nestedDir = path.join(wsPath, "nested")` (—Å—Ç—Ä–æ–∫–∞ 412)

#### üìÑ use-mcp-tool.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 432)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 617)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 710)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 736)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 782)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 838)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 27)
- `rooDir = path.join(workspaceDir, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mcpConfig = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 78)
- `rooDir = path.join(workspaceDir, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 116)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 173)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `mcpConfigUri = vscode.Uri.file(testFiles.mcpConfig)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `document = await vscode.workspace.openTextDocument(mcpConfigUri)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `editor = await vscode.window.showTextDocument(document)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 198)
- `currentContent = document.getText()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `modifiedContent = currentContent.replace(` (—Å—Ç—Ä–æ–∫–∞ 200)
- `fullRange = new vscode.Range(document.positionAt(0), document.positionAt(document.getText().length))` (—Å—Ç—Ä–æ–∫–∞ 205)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 255)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 294)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `newFileName = `mcp-write-test-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 360)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 384)
- `hasFileName = responseText.includes(newFileName) || responseText.includes("mcp-write-test")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 422)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 432)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 478)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 511)
- `hasNeiraDir = responseText.includes(".neira")` (—Å—Ç—Ä–æ–∫–∞ 518)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 561)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 571)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 582)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 617)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 650)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 702)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 710)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 736)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 771)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 782)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 793)
- `hasType = typeof mcpRequest.type === "string"` (—Å—Ç—Ä–æ–∫–∞ 797)
- `hasServerName = typeof mcpRequest.serverName === "string"` (—Å—Ç—Ä–æ–∫–∞ 798)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 838)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 848)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 873)
- `hasSize = responseText.includes("size") && (responseText.includes("28") || /\d+/.test(responseText))` (—Å—Ç—Ä–æ–∫–∞ 876)

#### üìÑ search-and-replace.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `anotherOldFunction()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `anotherNewFunction()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 309)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 403)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 435)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 523)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 555)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 563)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 64)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 81)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 139)
- `testFile = testFiles.simpleReplace` (—Å—Ç—Ä–æ–∫–∞ 141)
- `expectedContent = "Hello Universe\nThis is a test file\nWith multiple lines\nHello again"` (—Å—Ç—Ä–æ–∫–∞ 142)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 259)
- `testFile = testFiles.regexReplace` (—Å—Ç—Ä–æ–∫–∞ 261)
- `expectedContent = `function newFunction() {` (—Å—Ç—Ä–æ–∫–∞ 262)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 309)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 317)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 365)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 388)
- `testFile = testFiles.multipleMatches` (—Å—Ç—Ä–æ–∫–∞ 390)
- `expectedContent = `DONE: Fix this bug` (—Å—Ç—Ä–æ–∫–∞ 391)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 403)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 435)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 443)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 490)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 513)
- `testFile = testFiles.noMatches` (—Å—Ç—Ä–æ–∫–∞ 515)
- `expectedContent = testFile.content // Should remain unchanged` (—Å—Ç—Ä–æ–∫–∞ 516)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 523)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 542)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 555)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 563)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 610)

#### üìÑ read-file.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 387)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 500)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 518)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 642)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 657)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 735)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 30)
- `largeContent = Array.from(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 124)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 205)
- `actualContent = (toolResult as string).replace(/^\d+\s*\|\s*/, "")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `hasContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 250)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 269)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 281)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 320)
- `fileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `lines = (toolResult as string).split("\n").map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `match = line.match(/^\d+\s*\|\s*(.*)$/)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `actualContent = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 354)
- `expectedContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 355)
- `hasLineCount = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 363)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 380)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 387)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 392)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 399)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `fileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 441)
- `hasLines = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 476)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 493)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 505)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 518)
- `nonExistentFile = `non-existent-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 528)
- `completionMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 546)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 565)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 571)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 576)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 591)
- `fileName = path.basename(testFiles.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 601)
- `hasXMLContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 619)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 636)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 647)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 657)
- `simpleFileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 667)
- `multilineFileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 668)
- `hasContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 692)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 709)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 715)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 720)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 735)
- `fileName = path.basename(testFiles.large)` (—Å—Ç—Ä–æ–∫–∞ 745)
- `hasPattern = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 763)

#### üìÑ list-files.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 287)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 316)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 397)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 426)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 514)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 529)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 31)
- `testDirName = `list-files-test-${Date.now()}`` (—Å—Ç—Ä–æ–∫–∞ 39)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `nestedDir = path.join(testDir, "nested")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `deepNestedDir = path.join(nestedDir, "deep")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 139)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 177)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 189)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 213)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 223)
- `expectedFiles = ["root-file-1.txt", "root-file-2.js", "config.yaml", "README.md", ".hidden-file"]` (—Å—Ç—Ä–æ–∫–∞ 246)
- `expectedDirs = ["nested/"]` (—Å—Ç—Ä–æ–∫–∞ 247)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 249)
- `nestedFiles = ["nested-file-1.md", "nested-file-2.json", "deep-nested-file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 263)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 280)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 292)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 301)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 326)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 348)
- `shouldIncludeFiles = [` (—Å—Ç—Ä–æ–∫–∞ 360)
- `shouldIncludeDirs = ["nested/", "deep/"]` (—Å—Ç—Ä–æ–∫–∞ 370)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 390)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 397)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 402)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 409)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 411)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 426)
- `testDirName = `symlink-test-${Date.now()}`` (—Å—Ç—Ä–æ–∫–∞ 436)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `sourceDir = path.join(testDir, "source")` (—Å—Ç—Ä–æ–∫–∞ 441)
- `sourceFile = path.join(sourceDir, "source-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 443)
- `symlinkFile = path.join(testDir, "link-to-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `symlinkDir = path.join(testDir, "link-to-dir")` (—Å—Ç—Ä–æ–∫–∞ 448)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 483)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 508)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 514)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 519)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 529)
- `completionMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 558)

#### üìÑ insert-content.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `goodbye()` (—Å—Ç—Ä–æ–∫–∞ 29)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 402)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 461)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 504)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 51)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 68)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 82)
- `testFile = testFiles.simpleText` (—Å—Ç—Ä–æ–∫–∞ 109)
- `insertContent = "New first line"` (—Å—Ç—Ä–æ–∫–∞ 110)
- `expectedContent = `${insertContent}` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 159)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 248)
- `testFile = testFiles.simpleText` (—Å—Ç—Ä–æ–∫–∞ 250)
- `insertContent = "New last line"` (—Å—Ç—Ä–æ–∫–∞ 251)
- `expectedContent = `${testFile.content}` (—Å—Ç—Ä–æ–∫–∞ 252)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 292)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 300)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 348)
- `testFile = testFiles.jsFile` (—Å—Ç—Ä–æ–∫–∞ 350)
- `insertContent = `// New import statements` (—Å—Ç—Ä–æ–∫–∞ 351)
- `expectedContent = `${insertContent}` (—Å—Ç—Ä–æ–∫–∞ 354)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 362)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 381)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 394)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 402)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 448)
- `testFile = testFiles.emptyFile` (—Å—Ç—Ä–æ–∫–∞ 450)
- `insertContent = `# My New File` (—Å—Ç—Ä–æ–∫–∞ 451)
- `expectedContent = insertContent` (—Å—Ç—Ä–æ–∫–∞ 454)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 461)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 504)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 547)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 581)

#### üìÑ execute-command.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 257)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 346)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 379)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 498)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 43)
- `subDir = path.join(workspaceDir, "test-subdir")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 116)
- `testFile = testFiles.simpleEcho` (—Å—Ç—Ä–æ–∫–∞ 117)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 159)
- `content = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 218)
- `subDir = path.join(workspaceDir, "test-subdir")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 230)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `outputPath = path.join(subDir, "output.txt")` (—Å—Ç—Ä–æ–∫–∞ 313)
- `content = await fs.readFile(outputPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 314)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 337)
- `testFile = testFiles.multiCommand` (—Å—Ç—Ä–æ–∫–∞ 338)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 346)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 356)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 371)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 379)
- `content = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 436)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 450)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 459)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 490)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 498)
- `sleepCommand = process.platform === "win32" ? "timeout /t 3 /nobreak" : "sleep 3"` (—Å—Ç—Ä–æ–∫–∞ 509)

#### üìÑ apply-diff.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `oldFunction()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `keepThis()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `validateInput()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 285)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 311)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `newFunction()` (—Å—Ç—Ä–æ–∫–∞ 391)
- `keepThis()` (—Å—Ç—Ä–æ–∫–∞ 396)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 407)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 506)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 538)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `checkInput()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 669)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 677)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `sum = x + y` (—Å—Ç—Ä–æ–∫–∞ 26)
- `product = x * y` (—Å—Ç—Ä–æ–∫–∞ 27)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 79)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 96)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 156)
- `testFile = testFiles.simpleModify` (—Å—Ç—Ä–æ–∫–∞ 158)
- `expectedContent = "Hello Universe\nThis is a test file\nWith multiple lines"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 247)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 272)
- `testFile = testFiles.multipleReplace` (—Å—Ç—Ä–æ–∫–∞ 274)
- `expectedContent = `function compute(a, b) {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `total = a + b` (—Å—Ç—Ä–æ–∫–∞ 276)
- `result = a * b` (—Å—Ç—Ä–æ–∫–∞ 277)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 285)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 298)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 387)
- `testFile = testFiles.lineNumbers` (—Å—Ç—Ä–æ–∫–∞ 389)
- `expectedContent = `// Header comment` (—Å—Ç—Ä–æ–∫–∞ 390)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 407)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 417)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 430)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 437)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 474)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 497)
- `testFile = testFiles.errorHandling` (—Å—Ç—Ä–æ–∫–∞ 499)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 506)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 525)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 538)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 545)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 585)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 608)
- `testFile = testFiles.multiSearchReplace` (—Å—Ç—Ä–æ–∫–∞ 610)
- `expectedContent = `function transformData(data) {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 617)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 636)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 655)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 669)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 677)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 728)

### üìÇ webview-ui/src/components/ui/hooks/__tests__

#### üìÑ useSelectedModel.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseRouterModels = useRouterModels as Mock<typeof useRouterModels>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockUseOpenRouterModelProviders = useOpenRouterModelProviders as Mock<typeof useOpenRouterModelProviders>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createWrapper = () => {` (—Å—Ç—Ä–æ–∫–∞ 20)
- `queryClient = new QueryClient({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 305)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 324)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 343)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 364)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 398)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 435)

### üìÇ webview-ui/src/components/settings/utils/__tests__

#### üìÑ organizationFilters.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProviders = [` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = filterProviders(mockProviders, undefined)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `result = filterProviders(mockProviders, allowList)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `result = filterProviders(mockProviders, allowList)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = filterModels(mockModels, "anthropic", undefined)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 116)

#### üìÑ headers.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 114)

### üìÇ packages/evals/src/db/queries/__tests__

#### üìÑ runs.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({ model: "gpt-4.1-mini", socketPath: "/tmp/roo.sock" })` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ copyRun.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `runTaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 31)
- `task1TaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 52)
- `task1 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 68)
- `task2TaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 80)
- `task2 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `task3 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 108)
- `toolError1 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 120)
- `toolError2 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `toolError3 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 138)
- `newRunId = await copyRun({ sourceDb: db, targetDb: db, runId: sourceRunId })` (—Å—Ç—Ä–æ–∫–∞ 171)
- `copiedRun = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 176)
- `copiedTasks = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `goTask = copiedTasks.find((t) => t.language === "go")!` (—Å—Ç—Ä–æ–∫–∞ 204)
- `pythonTask = copiedTasks.find((t) => t.language === "python")!` (—Å—Ç—Ä–æ–∫–∞ 214)
- `rustTask = copiedTasks.find((t) => t.language === "rust")!` (—Å—Ç—Ä–æ–∫–∞ 220)
- `copiedToolErrors = await db.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 225)
- `taskToolErrors = copiedToolErrors.filter((te) => te.taskId !== null)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `runToolErrors = copiedToolErrors.filter((te) => te.taskId === null)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `browserError = runToolErrors.find((te) => te.toolName === "browser_action")!` (—Å—Ç—Ä–æ–∫–∞ 237)
- `copiedRunForCleanup = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 243)
- `copiedTasksForCleanup = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 250)
- `taskMetricsToDelete = copiedTasksForCleanup` (—Å—Ç—Ä–æ–∫–∞ 255)
- `minimalRun = await createRun({ model: "gpt-3.5-turbo", socketPath: "/tmp/minimal.sock", timeout: 5 })` (—Å—Ç—Ä–æ–∫–∞ 275)
- `newRunId = await copyRun({ sourceDb: db, targetDb: db, runId: minimalRun.id })` (—Å—Ç—Ä–æ–∫–∞ 277)
- `copiedRun = await db.query.runs.findFirst({ where: eq(schema.runs.id, newRunId) })` (—Å—Ç—Ä–æ–∫–∞ 279)

### üìÇ build-src/webview-ui/src/components/ui/hooks

#### üìÑ useSelectedModel.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `provider = apiConfiguration?.apiProvider || "anthropic"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `openRouterModelId = provider === "openrouter" ? apiConfiguration?.openRouterModelId : undefined` (—Å—Ç—Ä–æ–∫–∞ 53)
- `lmStudioModelId = provider === "lmstudio" ? apiConfiguration?.lmStudioModelId : undefined` (—Å—Ç—Ä–æ–∫–∞ 54)
- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `openRouterModelProviders = useOpenRouterModelProviders(openRouterModelId)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `lmStudioModels = useLmStudioModels(lmStudioModelId)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `id = apiConfiguration.openRouterModelId ?? openRouterDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 107)
- `specificProvider = apiConfiguration.openRouterSpecificProvider` (—Å—Ç—Ä–æ–∫–∞ 109)
- `id = apiConfiguration.requestyModelId ?? requestyDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 123)
- `info = routerModels.requesty[id]` (—Å—Ç—Ä–æ–∫–∞ 124)
- `id = apiConfiguration.glamaModelId ?? glamaDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 128)
- `info = routerModels.glama[id]` (—Å—Ç—Ä–æ–∫–∞ 129)
- `id = apiConfiguration.unboundModelId ?? unboundDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 133)
- `info = routerModels.unbound[id]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `id = apiConfiguration.litellmModelId ?? litellmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 138)
- `info = routerModels.litellm[id]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `id = apiConfiguration.apiModelId ?? xaiDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 143)
- `info = xaiModels[id as keyof typeof xaiModels]` (—Å—Ç—Ä–æ–∫–∞ 144)
- `id = apiConfiguration.apiModelId ?? groqDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 148)
- `info = groqModels[id as keyof typeof groqModels]` (—Å—Ç—Ä–æ–∫–∞ 149)
- `id = apiConfiguration.huggingFaceModelId ?? "meta-llama/Llama-3.3-70B-Instruct"` (—Å—Ç—Ä–æ–∫–∞ 153)
- `info = {` (—Å—Ç—Ä–æ–∫–∞ 154)
- `id = apiConfiguration.apiModelId ?? chutesDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 163)
- `info = chutesModels[id as keyof typeof chutesModels]` (—Å—Ç—Ä–æ–∫–∞ 164)
- `id = apiConfiguration.apiModelId ?? bedrockDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 168)
- `info = bedrockModels[id as keyof typeof bedrockModels]` (—Å—Ç—Ä–æ–∫–∞ 169)
- `id = apiConfiguration.apiModelId ?? vertexDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 182)
- `info = vertexModels[id as keyof typeof vertexModels]` (—Å—Ç—Ä–æ–∫–∞ 183)
- `id = apiConfiguration.apiModelId ?? geminiDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 187)
- `info = geminiModels[id as keyof typeof geminiModels]` (—Å—Ç—Ä–æ–∫–∞ 188)
- `id = apiConfiguration.apiModelId ?? deepSeekDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 192)
- `info = deepSeekModels[id as keyof typeof deepSeekModels]` (—Å—Ç—Ä–æ–∫–∞ 193)
- `id = apiConfiguration.apiModelId ?? doubaoDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 197)
- `info = doubaoModels[id as keyof typeof doubaoModels]` (—Å—Ç—Ä–æ–∫–∞ 198)
- `id = apiConfiguration.apiModelId ?? moonshotDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 202)
- `info = moonshotModels[id as keyof typeof moonshotModels]` (—Å—Ç—Ä–æ–∫–∞ 203)
- `id = apiConfiguration.apiModelId ?? openAiNativeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 207)
- `info = openAiNativeModels[id as keyof typeof openAiNativeModels]` (—Å—Ç—Ä–æ–∫–∞ 208)
- `id = apiConfiguration.apiModelId ?? mistralDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 212)
- `info = mistralModels[id as keyof typeof mistralModels]` (—Å—Ç—Ä–æ–∫–∞ 213)
- `id = apiConfiguration.openAiModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 217)
- `info = apiConfiguration?.openAiCustomModelInfo ?? openAiModelInfoSaneDefaults` (—Å—Ç—Ä–æ–∫–∞ 218)
- `id = apiConfiguration.ollamaModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 222)
- `info = routerModels.ollama && routerModels.ollama[id]` (—Å—Ç—Ä–æ–∫–∞ 223)
- `id = apiConfiguration.lmStudioModelId ?? ""` (—Å—Ç—Ä–æ–∫–∞ 230)
- `info = lmStudioModels && lmStudioModels[apiConfiguration.lmStudioModelId!]` (—Å—Ç—Ä–æ–∫–∞ 231)
- `id = apiConfiguration?.vsCodeLmModelSelector` (—Å—Ç—Ä–æ–∫–∞ 238)
- `modelFamily = apiConfiguration?.vsCodeLmModelSelector?.family ?? vscodeLlmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 241)
- `info = vscodeLlmModels[modelFamily as keyof typeof vscodeLlmModels]` (—Å—Ç—Ä–æ–∫–∞ 242)
- `id = apiConfiguration.apiModelId ?? claudeCodeDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 247)
- `info = claudeCodeModels[id as keyof typeof claudeCodeModels]` (—Å—Ç—Ä–æ–∫–∞ 248)
- `id = apiConfiguration.apiModelId ?? cerebrasDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 252)
- `info = cerebrasModels[id as keyof typeof cerebrasModels]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `id = apiConfiguration.apiModelId ?? sambaNovaDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 257)
- `info = sambaNovaModels[id as keyof typeof sambaNovaModels]` (—Å—Ç—Ä–æ–∫–∞ 258)
- `id = apiConfiguration.apiModelId ?? anthropicDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 266)
- `info = anthropicModels[id as keyof typeof anthropicModels]` (—Å—Ç—Ä–æ–∫–∞ 267)

#### üìÑ useRouterModels.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getRouterModels = async () =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useRooPortal.ts

#### üìÑ useRequestyKeyInfo.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getRequestyKeyInfo()` (—Å—Ç—Ä–æ–∫–∞ 17)

**–¢–∏–ø—ã:**

- `type UseRequestyKeyInfoOptions` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestyKeyInfoSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 5)
- `response = await axios.get("https://api.requesty.ai/x/apikey", {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `result = requestyKeyInfoSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ useOpenRouterModelProviders.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getOpenRouterProvidersForModel(modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 42)

**–¢–∏–ø—ã:**

- `type OpenRouterModelProvider` (—Å—Ç—Ä–æ–∫–∞ 38)
- `type UseOpenRouterModelProvidersOptions` (—Å—Ç—Ä–æ–∫–∞ 110)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterEndpointsSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 11)
- `response = await axios.get(`https://openrouter.ai/api/v1/models/${modelId}/endpoints`)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = openRouterEndpointsSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `providerName = endpoint.name.split("|")[0].trim()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `inputPrice = parseApiPrice(endpoint.pricing?.prompt)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `outputPrice = parseApiPrice(endpoint.pricing?.completion)` (—Å—Ç—Ä–æ–∫–∞ 59)

#### üìÑ useOpenRouterKeyInfo.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getOpenRouterKeyInfo()` (—Å—Ç—Ä–æ–∫–∞ 22)

**–¢–∏–ø—ã:**

- `type UseOpenRouterKeyInfoOptions` (—Å—Ç—Ä–æ–∫–∞ 50)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `openRouterKeyInfoSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 6)
- `apiBaseUrl = baseUrl || "https://openrouter.ai/api/v1"` (—Å—Ç—Ä–æ–∫–∞ 27)
- `keyEndpoint = `${apiBaseUrl}/key`` (—Å—Ç—Ä–æ–∫–∞ 29)
- `response = await axios.get(keyEndpoint, {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `result = openRouterKeyInfoSchema.safeParse(response.data)` (—Å—Ç—Ä–æ–∫–∞ 37)

#### üìÑ useNonInteractiveClick.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleContentClick(e: M)` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleContentClick = (e: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `target = e.target as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ useLmStudioModels.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async getLmStudioModels()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getLmStudioModels = async () =>` (—Å—Ç—Ä–æ–∫–∞ 8)
- `cleanup = () => {` (—Å—Ç—Ä–æ–∫–∞ 10)
- `timeout = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ useClipboard.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `copy(value: s)` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `copy = (value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 10)

#### üìÑ index.ts

### üìÇ build-src/webview-ui/src/components/settings/utils

#### üìÑ organizationFilters.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `providerConfig = organizationAllowList.providers[provider.value]` (—Å—Ç—Ä–æ–∫–∞ 12)
- `providerConfig = organizationAllowList.providers[providerId]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `allowedModels = providerConfig.models || []` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ headers.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `trimmedKey = key.trim()` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ build-src/webview-ui/src/components/settings/providers

#### üìÑ index.ts

#### üìÑ XAI.tsx

**–¢–∏–ø—ã:**

- `type XAIProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Vertex.tsx

**–¢–∏–ø—ã:**

- `type VertexProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ VSCodeLM.tsx

**–¢–∏–ø—ã:**

- `type VSCodeLMProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 24)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `newModels = message.vsCodeLmModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ Unbound.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 87)

**–¢–∏–ø—ã:**

- `type UnboundProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = useQueryClient()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `didRefetchTimerRef = useRef<NodeJS.Timeout>()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `invalidKeyTimerRef = useRef<NodeJS.Timeout>()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 41)
- `saveConfiguration = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `waitForStateUpdate = new Promise<void>((resolve, reject) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `timeoutId = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 65)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 66)
- `requestModels = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `modelsPromise = new Promise<void>((resolve) => {` (—Å—Ç—Ä–æ–∫–∞ 86)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 88)
- `updatedModels = queryClient.getQueryData<{ unbound: RouterModels }>(["routerModels"])?.unbound` (—Å—Ç—Ä–æ–∫–∞ 105)
- `currentModelId = apiConfiguration?.unboundModelId` (—Å—Ç—Ä–æ–∫–∞ 107)
- `modelExists = currentModelId && Object.prototype.hasOwnProperty.call(updatedModels, currentModelId)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `firstAvailableModelId = Object.keys(updatedModels)[0]` (—Å—Ç—Ä–æ–∫–∞ 111)
- `handleRefresh = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `requestModelsResult = await requestModels()` (—Å—Ç—Ä–æ–∫–∞ 125)

#### üìÑ SambaNova.tsx

**–¢–∏–ø—ã:**

- `type SambaNovaProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ RequestyBalanceDisplay.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `balance = parseFloat(keyInfo.org_balance)` (—Å—Ç—Ä–æ–∫–∞ 13)
- `formattedBalance = balance.toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ Requesty.tsx

**–¢–∏–ø—ã:**

- `type RequestyProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ OpenRouterBalanceDisplay.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `formattedBalance = (keyInfo.limit - keyInfo.usage).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ OpenRouter.tsx

**–¢–∏–ø—ã:**

- `type OpenRouterProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ OpenAICompatible.tsx

**–¢–∏–ø—ã:**

- `type OpenAICompatibleProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `headers = apiConfiguration?.openAiHeaders || {}` (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleAddCustomHeader = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `handleUpdateHeaderKey = useCallback((index: number, newKey: string) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `updated = [...prev]` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handleUpdateHeaderValue = useCallback((index: number, newValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 69)
- `updated = [...prev]` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleRemoveCustomHeader = useCallback((index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `headerObject = convertHeadersToObject(customHeaders)` (—Å—Ç—Ä–æ–∫–∞ 90)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 97)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `updatedModels = message.openAiModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 113)
- `value = apiConfiguration?.openAiCustomModelInfo?.maxTokens` (—Å—Ç—Ä–æ–∫–∞ 300)
- `value = parseInt((e.target as HTMLInputElement).value)` (—Å—Ç—Ä–æ–∫–∞ 310)
- `value = apiConfiguration?.openAiCustomModelInfo?.contextWindow` (—Å—Ç—Ä–æ–∫–∞ 338)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 348)
- `parsed = parseInt(value)` (—Å—Ç—Ä–æ–∫–∞ 349)
- `value = apiConfiguration?.openAiCustomModelInfo?.inputPrice` (—Å—Ç—Ä–æ–∫–∞ 454)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 464)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 465)
- `value = apiConfiguration?.openAiCustomModelInfo?.outputPrice` (—Å—Ç—Ä–æ–∫–∞ 498)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 508)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 509)
- `value = apiConfiguration?.openAiCustomModelInfo?.cacheReadsPrice` (—Å—Ç—Ä–æ–∫–∞ 540)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 552)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 553)
- `value = apiConfiguration?.openAiCustomModelInfo?.cacheWritesPrice` (—Å—Ç—Ä–æ–∫–∞ 582)
- `value = (e.target as HTMLInputElement).value` (—Å—Ç—Ä–æ–∫–∞ 594)
- `parsed = parseFloat(value)` (—Å—Ç—Ä–æ–∫–∞ 595)

#### üìÑ OpenAI.tsx

**–¢–∏–ø—ã:**

- `type OpenAIProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 24)

#### üìÑ Ollama.tsx

**–¢–∏–ø—ã:**

- `type OllamaProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 26)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `newModels = message.ollamaModels ?? []` (—Å—Ç—Ä–æ–∫–∞ 43)
- `modelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `selectedModel = apiConfiguration?.ollamaModelId` (—Å—Ç—Ä–æ–∫–∞ 60)
- `availableModels = Object.keys(routerModels.data.ollama)` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ Moonshot.tsx

**–¢–∏–ø—ã:**

- `type MoonshotProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ Mistral.tsx

**–¢–∏–ø—ã:**

- `type MistralProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ LiteLLM.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 37)

**–¢–∏–ø—ã:**

- `type LiteLLMProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `litellmErrorJustReceived = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleMessage = (event: MessageEvent<ExtensionMessage>) => {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 38)
- `providerName = message.values?.provider as RouterName` (—Å—Ç—Ä–æ–∫–∞ 40)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 64)
- `handleRefreshModels = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `key = apiConfiguration.litellmApiKey` (—Å—Ç—Ä–æ–∫–∞ 80)
- `url = apiConfiguration.litellmBaseUrl` (—Å—Ç—Ä–æ–∫–∞ 81)
- `selectedModelId = apiConfiguration.litellmModelId || litellmDefaultModelId` (—Å—Ç—Ä–æ–∫–∞ 157)
- `selectedModel = routerModels?.litellm?.[selectedModelId]` (—Å—Ç—Ä–æ–∫–∞ 158)

#### üìÑ LMStudio.tsx

**–¢–∏–ø—ã:**

- `type LMStudioProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `routerModels = useRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 28)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `newModels = message.lmStudioModels ?? {}` (—Å—Ç—Ä–æ–∫–∞ 45)
- `modelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `selectedModel = apiConfiguration?.lmStudioModelId` (—Å—Ç—Ä–æ–∫–∞ 62)
- `availableModels = Object.keys(routerModels.data.lmstudio)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `draftModelNotAvailable = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `draftModel = apiConfiguration?.lmStudioDraftModelId` (—Å—Ç—Ä–æ–∫–∞ 83)
- `availableModels = Object.keys(routerModels.data.lmstudio)` (—Å—Ç—Ä–æ–∫–∞ 93)

#### üìÑ HuggingFace.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleModelSelect(modelId: s)` (—Å—Ç—Ä–æ–∫–∞ 108)
- `handleProviderSelect(provider: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `formatProviderName(provider: s)` (—Å—Ç—Ä–æ–∫–∞ 122)

**–¢–∏–ø—ã:**

- `type HuggingFaceModel` (—Å—Ç—Ä–æ–∫–∞ 17)
- `type HuggingFaceProps` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `onMessage = useCallback((event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `currentModel = models.find((m) => m.id === apiConfiguration?.huggingFaceModelId)` (—Å—Ç—Ä–æ–∫–∞ 80)
- `availableProviders = useMemo(() => currentModel?.providers || [], [currentModel?.providers])` (—Å—Ç—Ä–æ–∫–∞ 81)
- `savedProvider = apiConfiguration?.huggingFaceInferenceProvider` (—Å—Ç—Ä–æ–∫–∞ 86)
- `currentProvider = availableProviders.find((p) => p.provider === selectedProvider)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `defaultProvider = "auto"` (—Å—Ç—Ä–æ–∫–∞ 94)
- `handleModelSelect = (modelId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `defaultProvider = "auto"` (—Å—Ç—Ä–æ–∫–∞ 111)
- `handleProviderSelect = (provider: string) => {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `formatProviderName = (provider: string) => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `currentProvider = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 138)
- `modelCapabilities = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `supportsImages = false` (—Å—Ç—Ä–æ–∫–∞ 149)
- `supportsTools = currentProvider?.supports_tools || currentModel.providers.some((p) => p.supports_tools)` (—Å—Ç—Ä–æ–∫–∞ 154)

#### üìÑ Groq.tsx

**–¢–∏–ø—ã:**

- `type GroqProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Glama.tsx

**–¢–∏–ø—ã:**

- `type GlamaProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ Gemini.tsx

**–¢–∏–ø—ã:**

- `type GeminiProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ Doubao.tsx

**–¢–∏–ø—ã:**

- `type DoubaoProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ DeepSeek.tsx

**–¢–∏–ø—ã:**

- `type DeepSeekProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ ClaudeCode.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleInputChange(e: E)` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ClaudeCodeProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = (e: Event | React.FormEvent<HTMLElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `element = e.target as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 16)
- `maxOutputTokens = apiConfiguration?.claudeCodeMaxOutputTokens || 8000` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ Chutes.tsx

**–¢–∏–ø—ã:**

- `type ChutesProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ Cerebras.tsx

**–¢–∏–ø—ã:**

- `type CerebrasProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ BedrockCustomArn.tsx

**–¢–∏–ø—ã:**

- `type BedrockCustomArnProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `validation = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 17)

#### üìÑ Bedrock.tsx

**–¢–∏–ø—ã:**

- `type BedrockProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 27)

#### üìÑ Anthropic.tsx

**–¢–∏–ø—ã:**

- `type AnthropicProps` (—Å—Ç—Ä–æ–∫–∞ 12)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 22)

### üìÇ build-src/webview-ui/src/components/marketplace/__tests__

#### üìÑ MarketplaceViewStateManager.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 114)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 122)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `notifiedState = mockStateChangeHandler.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 143)
- `message1 = {` (—Å—Ç—Ä–æ–∫–∞ 150)
- `message2 = {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `finalState = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 170)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 178)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 252)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 264)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 272)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 284)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 292)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 305)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 325)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 356)
- `state1 = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 365)
- `state2 = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 366)
- `message = {` (—Å—Ç—Ä–æ–∫–∞ 374)
- `state = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 382)
- `newState = stateManager.getState()` (—Å—Ç—Ä–æ–∫–∞ 392)

#### üìÑ MarketplaceView.spec.tsx

#### üìÑ MarketplaceListView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithProviders()` (—Å—Ç—Ä–æ–∫–∞ 51)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTransition = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 37)
- `renderWithProviders = (props = {}) =>` (—Å—Ç—Ä–æ–∫–∞ 51)
- `searchInput = screen.getByPlaceholderText("marketplace:filters.search.placeholder")` (—Å—Ç—Ä–æ–∫–∞ 63)
- `searchInput = screen.getByPlaceholderText("marketplace:filters.search.placeholder")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 116)
- `clearButton = screen.getByText("marketplace:filters.tags.clear")` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ build-src/webview-ui/src/components/chat/hooks

#### üìÑ usePromptHistory.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UsePromptHistoryProps` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MAX_PROMPT_HISTORY_SIZE = 100` (—Å—Ç—Ä–æ–∫–∞ 35)
- `filteredPromptHistory = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `conversationPrompts = clineMessages` (—Å—Ç—Ä–æ–∫–∞ 45)
- `resetOnInputChange = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 81)
- `setCursorPosition = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 89)
- `len = length ?? textarea.value.length` (—Å—Ç—Ä–æ–∫–∞ 95)
- `navigateToHistory = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 106)
- `historicalPrompt = promptHistory[newIndex]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `returnToCurrentInput = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleHistoryNavigation = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 132)
- `textarea = event.currentTarget` (—Å—Ç—Ä–æ–∫–∞ 136)
- `hasSelection = selectionStart !== selectionEnd` (—Å—Ç—Ä–æ–∫–∞ 138)
- `isAtBeginning = selectionStart === 0 && selectionEnd === 0` (—Å—Ç—Ä–æ–∫–∞ 139)
- `isAtEnd = selectionStart === value.length && selectionEnd === value.length` (—Å—Ç—Ä–æ–∫–∞ 140)
- `resetHistoryNavigation = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 173)

### üìÇ build-src/webview-ui/src/components/chat/checkpoints

#### üìÑ schema.ts

#### üìÑ CheckpointSaved.tsx

**–¢–∏–ø—ã:**

- `type CheckpointSavedProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isCurrent = props.currentHash === props.commitHash` (—Å—Ç—Ä–æ–∫–∞ 16)
- `metadata = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = checkpointSchema.safeParse(checkpoint)` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ CheckpointMenu.tsx

**–¢–∏–ø—ã:**

- `type CheckpointMenuProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 22)
- `isCurrent = currentHash === commitHash` (—Å—Ç—Ä–æ–∫–∞ 24)
- `isFirst = checkpoint.isFirst` (—Å—Ç—Ä–æ–∫–∞ 25)
- `isDiffAvailable = !isFirst` (—Å—Ç—Ä–æ–∫–∞ 26)
- `isRestoreAvailable = !isFirst || !isCurrent` (—Å—Ç—Ä–æ–∫–∞ 27)
- `previousCommitHash = checkpoint?.from` (—Å—Ç—Ä–æ–∫–∞ 29)
- `onCheckpointDiff = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `onPreview = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `onRestore = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 43)

### üìÇ build-src/src/services/tree-sitter/__tests__/fixtures

#### üìÑ sample-zig.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `std = @import("std")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `point = Point.init(3.0, 4.0)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `dist = point.distance()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `Direction = enum {` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ sample-vue.ts

#### üìÑ sample-typescript.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestTypedClassDefinition implements TestInterfaceDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 90)

- `class TestTypedDecoratedClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 190)
  - `param1: string,`
  - `param2: number`

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TestInterfaceDefinition` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface TestGenericInterfaceDefinition` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface TestJsxPropsDefinition` (—Å—Ç—Ä–æ–∫–∞ 150)

**–¢–∏–ø—ã:**

- `type TestTypeDefinition` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = param1.repeat(param2)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `response = await fetch(url, options)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `testTypedJsxElementDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 156)
- `original = descriptor.value` (—Å—Ç—Ä–æ–∫–∞ 181)

#### üìÑ sample-toml.ts

#### üìÑ sample-tlaplus.ts

#### üìÑ sample-systemrdl.ts

#### üìÑ sample-solidity.ts

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ITestInterface` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ sample-scala.ts

**–ö–ª–∞—Å—Å—ã:**

- `class Container (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 8)

- `class PatternMatcher (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 46)

- `class ForComprehension (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Singleton)` (—Å—Ç—Ä–æ–∫–∞ 75)

#### üìÑ sample-rust.ts

**–¢–∏–ø—ã:**

- `type test_type_alias` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ sample-ocaml.ts

**–ö–ª–∞—Å—Å—ã:**

- `class virtual (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Standard Class)` (—Å—Ç—Ä–æ–∫–∞ 52)

**–¢–∏–ø—ã:**

- `type t` (—Å—Ç—Ä–æ–∫–∞ 9)
- `type shape` (—Å—Ç—Ä–æ–∫–∞ 26)
- `type person` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ sample-lua.ts

#### üìÑ sample-json.ts

#### üìÑ sample-javascript.ts

**–ö–ª–∞—Å—Å—ã:**

- `class TestClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 50)

- `class TestDecoratedClassDefinition (–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: Decorator)` (—Å—Ç—Ä–æ–∫–∞ 140)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = param1 + param2` (—Å—Ç—Ä–æ–∫–∞ 13)
- `response = await fetch(url, options)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `data = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `testArrowFunctionDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 40)
- `result = callback(param1)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `testObjectLiteralDefinition = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `testJsxElementDefinition = (` (—Å—Ç—Ä–æ–∫–∞ 112)
- `result = param1 + param2` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ sample-java.ts

#### üìÑ sample-html.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `testFunction()` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ sample-go.ts

#### üìÑ sample-embedded_template.ts

#### üìÑ sample-elixir.ts

#### üìÑ sample-elisp.ts

#### üìÑ sample-css.ts

#### üìÑ sample-c.ts

#### üìÑ sample-c-sharp.ts

### üìÇ build-src/src/services/code-index/vector-store/__tests__

#### üìÑ qdrant-client.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = await vitest.importActual("path")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `mockQdrantClientInstance = {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `mockCreateHashInstance = {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `mockWorkspacePath = "/test/workspace"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `mockQdrantUrl = "http://mock-qdrant:6333"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `mockApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 52)
- `mockVectorSize = 1536` (—Å—Ç—Ä–æ–∫–∞ 53)
- `mockHashedPath = "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6" // Needs to be long enough` (—Å—Ç—Ä–æ–∫–∞ 54)
- `expectedCollectionName = `ws-${mockHashedPath.substring(0, 16)}`` (—Å—Ç—Ä–æ–∫–∞ 55)
- `vectorStoreWithDefaults = new QdrantVectorStore(mockWorkspacePath, undefined as any, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `vectorStoreWithoutKey = new QdrantVectorStore(mockWorkspacePath, mockQdrantUrl, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 107)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 123)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "https://example.com:9000", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 157)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://example.com", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 178)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://localhost:8080", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `vectorStore = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 208)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "qdrant.example.com", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 229)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "localhost:6333", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 243)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "http://localhost:9000", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 257)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "192.168.1.100", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "192.168.1.100:6333", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 287)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, undefined as any, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 303)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "   ", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 331)
- `vectorStore = new QdrantVectorStore(mockWorkspacePath, "invalid-url-format", mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 347)
- `vectorStoreWithPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 364)
- `vectorStoreWithoutPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 383)
- `vectorStoreWithHttpsPrefix = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 402)
- `vectorStoreWithTrailingSlash = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 421)
- `vectorStoreWithMultipleTrailingSlashes = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 440)
- `vectorStoreWithMultiSegment = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 459)
- `complexUrl = "https://example.com/ollama/api/v1///?key=value#pos"` (—Å—Ç—Ä–æ–∫–∞ 478)
- `vectorStoreComplex = new QdrantVectorStore(mockWorkspacePath, complexUrl, mockVectorSize)` (—Å—Ç—Ä–æ–∫–∞ 479)
- `vectorStoreWithQueryParams = new QdrantVectorStore(` (—Å—Ç—Ä–æ–∫–∞ 494)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 525)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 561)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 579)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 601)
- `genericError = new Error("Generic Qdrant Error")` (—Å—Ç—Ä–æ–∫–∞ 627)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 631)
- `createError = new Error("Create Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 649)
- `indexError = new Error("Index creation failed")` (—Å—Ç—Ä–æ–∫–∞ 674)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 678)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 700)
- `deleteError = new Error("Delete Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 711)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 740)
- `createError = new Error("Create Collection Failed")` (—Å—Ç—Ä–æ–∫–∞ 759)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 788)
- `result = await vectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 810)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 822)
- `oldVectorSize = 2048` (—Å—Ç—Ä–æ–∫–∞ 870)
- `newVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 871)
- `newVectorStore = new QdrantVectorStore(mockWorkspacePath, mockQdrantUrl, newVectorSize, mockApiKey)` (—Å—Ç—Ä–æ–∫–∞ 874)
- `result = await newVectorStore.initialize()` (—Å—Ç—Ä–æ–∫–∞ 897)
- `differentVectorSize = 768` (—Å—Ç—Ä–æ–∫–∞ 913)
- `deleteError = new Error("Qdrant server unavailable")` (—Å—Ç—Ä–æ–∫–∞ 925)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 955)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 968)
- `genericError = new Error("Network error")` (—Å—Ç—Ä–æ–∫–∞ 976)
- `result = await vectorStore.collectionExists()` (—Å—Ç—Ä–æ–∫–∞ 980)
- `deleteError = new Error("Deletion failed")` (—Å—Ç—Ä–æ–∫–∞ 1015)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1033)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1143)
- `mockPoints = [` (—Å—Ç—Ä–æ–∫–∞ 1185)
- `upsertError = new Error("Upsert failed")` (—Å—Ç—Ä–æ–∫–∞ 1198)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1212)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1213)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1242)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1263)
- `directoryPrefix = "src/components"` (—Å—Ç—Ä–æ–∫–∞ 1264)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1265)
- `results = await vectorStore.search(queryVector, directoryPrefix)` (—Å—Ç—Ä–æ–∫–∞ 1283)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1314)
- `customMinScore = 0.8` (—Å—Ç—Ä–æ–∫–∞ 1315)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1316)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1338)
- `customMaxResults = 100` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1340)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1362)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1363)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1398)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1407)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1408)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1445)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1454)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1455)
- `results = await vectorStore.search(queryVector)` (—Å—Ç—Ä–æ–∫–∞ 1459)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1466)
- `directoryPrefix = "src/components/ui/forms"` (—Å—Ç—Ä–æ–∫–∞ 1467)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1468)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1509)
- `queryError = new Error("Query failed")` (—Å—Ç—Ä–æ–∫–∞ 1510)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1522)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1523)
- `callArgs = mockQdrantClientInstance.query.mock.calls[0][1]` (—Å—Ç—Ä–æ–∫–∞ 1529)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1536)
- `directoryPrefix = "."` (—Å—Ç—Ä–æ–∫–∞ 1537)
- `mockQdrantResults = {` (—Å—Ç—Ä–æ–∫–∞ 1538)
- `results = await vectorStore.search(queryVector, directoryPrefix)` (—Å—Ç—Ä–æ–∫–∞ 1556)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1576)
- `directoryPrefix = "./"` (—Å—Ç—Ä–æ–∫–∞ 1577)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1578)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1600)
- `directoryPrefix = ""` (—Å—Ç—Ä–æ–∫–∞ 1601)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1602)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1624)
- `directoryPrefix = ".\\"` (—Å—Ç—Ä–æ–∫–∞ 1625)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1626)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1648)
- `directoryPrefix = ".///"` (—Å—Ç—Ä–æ–∫–∞ 1649)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1650)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1672)
- `directoryPrefix = "./src"` (—Å—Ç—Ä–æ–∫–∞ 1673)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1674)
- `queryVector = [0.1, 0.2, 0.3]` (—Å—Ç—Ä–æ–∫–∞ 1703)
- `directoryPrefix = "src"` (—Å—Ç—Ä–æ–∫–∞ 1704)
- `mockQdrantResults = { points: [] }` (—Å—Ç—Ä–æ–∫–∞ 1705)

### üìÇ build-src/src/services/code-index/shared/__tests__

#### üìÑ validation-helpers.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `input = "Error reading file /Users/username/projects/myapp/src/index.ts"` (—Å—Ç—Ä–æ–∫–∞ 6)
- `expected = "Error reading file [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 7)
- `input = "Cannot access C:\\Users\\username\\Documents\\project\\file.js"` (—Å—Ç—Ä–æ–∫–∞ 12)
- `expected = "Cannot access [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 13)
- `input = "File not found: ./src/components/Button.tsx"` (—Å—Ç—Ä–æ–∫–∞ 18)
- `expected = "File not found: [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `input2 = "Cannot read ../config/settings.json"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `expected2 = "Cannot read [REDACTED_PATH]"` (—Å—Ç—Ä–æ–∫–∞ 23)
- `input = "Failed to connect to http://localhost:11434/api/embed"` (—Å—Ç—Ä–æ–∫–∞ 28)
- `expected = "Failed to connect to [REDACTED_URL]"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input2 = "Error fetching https://api.example.com:8080/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `expected2 = "Error fetching [REDACTED_URL]"` (—Å—Ç—Ä–æ–∫–∞ 33)
- `input = "Connection refused at 192.168.1.100"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `expected = "Connection refused at [REDACTED_IP]"` (—Å—Ç—Ä–æ–∫–∞ 39)
- `input = "Server running on :8080 failed"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `expected = "Server running on :[REDACTED_PORT] failed"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `input = "User john.doe@example.com not found"` (—Å—Ç—Ä–æ–∫–∞ 50)
- `expected = "User [REDACTED_EMAIL] not found"` (—Å—Ç—Ä–æ–∫–∞ 51)
- `input = 'Cannot open file "/home/user/documents/secret.txt"'` (—Å—Ç—Ä–æ–∫–∞ 56)
- `expected = 'Cannot open file "[REDACTED_PATH]"'` (—Å—Ç—Ä–æ–∫–∞ 57)
- `input = "Failed to fetch http://localhost:11434 from /Users/john/project at 192.168.1.1:3000"` (—Å—Ç—Ä–æ–∫–∞ 62)
- `expected = "Failed to fetch [REDACTED_URL] from [REDACTED_PATH] at [REDACTED_IP]:[REDACTED_PORT]"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `input = "Invalid JSON format"` (—Å—Ç—Ä–æ–∫–∞ 75)
- `input2 = "Connection timeout"` (—Å—Ç—Ä–æ–∫–∞ 78)
- `input = 'Error in "/path/to/file with spaces.txt"'` (—Å—Ç—Ä–æ–∫–∞ 83)
- `expected = 'Error in "[REDACTED_PATH]"'` (—Å—Ç—Ä–æ–∫–∞ 84)
- `input = "Copy from /src/file1.js to /dest/file2.js failed"` (—Å—Ç—Ä–æ–∫–∞ 89)
- `expected = "Copy from [REDACTED_PATH] to [REDACTED_PATH] failed"` (—Å—Ç—Ä–æ–∫–∞ 90)

#### üìÑ get-relative-path.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `filePath = "src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `filePath = path.join(path.sep, "absolute", "path", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 16)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `filePath = "./src/../src/file.ts"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = generateNormalizedAbsolutePath(filePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 34)
- `absolutePath = path.join(workspaceRoot, "src", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `absolutePath = path.join(path.sep, "outside", "workspace", "file.ts")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `workspaceRoot = path.join(path.sep, "custom", "workspace")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `absolutePath = workspaceRoot` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `workspaceRoot = path.join(path.sep, "Users", "test", "project")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `absolutePath = path.join(path.sep, "Users", "test", "admin", ".prettierrc.json")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `result = generateRelativeFilePath(absolutePath, workspaceRoot)` (—Å—Ç—Ä–æ–∫–∞ 59)

### üìÇ build-src/src/services/code-index/processors/__tests__

#### üìÑ scanner.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `largeFileStats = {` (—Å—Ç—Ä–æ–∫–∞ 160)
- `result = await scanner.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `scannerNoEmbeddings = new DirectoryScanner(` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = await scannerNoEmbeddings.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `scannerNoEmbeddings = new DirectoryScanner(` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = await scannerNoEmbeddings.scanDirectory("/test")` (—Å—Ç—Ä–æ–∫–∞ 326)
- `upsertCall = mockVectorStore.upsertPoints.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 382)
- `points = upsertCall[0]` (—Å—Ç—Ä–æ–∫–∞ 383)
- `pointIds = points.map((point: any) => point.id)` (—Å—Ç—Ä–æ–∫–∞ 386)

#### üìÑ file-watcher.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 153)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 191)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 222)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 258)

### üìÇ build-src/src/services/code-index/embedders/__tests__

#### üìÑ openai.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `consoleMocks = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `embedderWithoutKey = new OpenAiEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 75)
- `embedderWithDefaultModel = new OpenAiEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 92)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `testTexts = ["Hello world", "Another text"]` (—Å—Ç—Ä–æ–∫–∞ 115)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 138)
- `customModel = "text-embedding-ada-002"` (—Å—Ç—Ä–æ–∫–∞ 139)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 162)
- `testTexts = ["text1", "text2", "text3"]` (—Å—Ç—Ä–æ–∫–∞ 176)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 183)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 4 + 100)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `normalText = "normal text"` (—Å—Ç—Ä–æ–∫–∞ 193)
- `testTexts = [normalText, oversizedText, "another normal"]` (—Å—Ç—Ä–æ–∫–∞ 194)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `tokensPerText = 8000` (—Å—Ç—Ä–æ–∫–∞ 218)
- `largeText = "a".repeat(tokensPerText * 4) // 4 chars ‚âà 1 token` (—Å—Ç—Ä–æ–∫–∞ 219)
- `testTexts = Array(15).fill(largeText)` (—Å—Ç—Ä–æ–∫–∞ 221)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 4 + 100)` (—Å—Ç—Ä–æ–∫–∞ 250)
- `testTexts = [oversizedText, oversizedText]` (—Å—Ç—Ä–æ–∫–∞ 251)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 253)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 277)
- `rateLimitError = { status: 429, message: "Rate limit exceeded" }` (—Å—Ç—Ä–æ–∫–∞ 278)
- `resultPromise = embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 294)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 305)
- `authError = new Error("Unauthorized")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 320)
- `serverError = new Error("Internal server error")` (—Å—Ç—Ä–æ–∫–∞ 321)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `apiError = new Error("API connection failed")` (—Å—Ç—Ä–æ–∫–∞ 340)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 367)
- `malformedResponse = {` (—Å—Ç—Ä–æ–∫–∞ 368)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 379)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 380)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 391)
- `httpError = new Error("Bad request")` (—Å—Ç—Ä–æ–∫–∞ 392)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 403)
- `networkError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 414)
- `weirdError = { toString: () => "Custom error object" }` (—Å—Ç—Ä–æ–∫–∞ 415)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 425)
- `unknownError = null` (—Å—Ç—Ä–æ–∫–∞ 426)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 436)
- `stringError = "Something went wrong"` (—Å—Ç—Ä–æ–∫–∞ 437)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 447)
- `errorWithFailingToString = {` (—Å—Ç—Ä–æ–∫–∞ 451)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 465)
- `errorWithResponseStatus = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 482)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 488)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 499)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 503)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 510)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 514)
- `connectionError = new Error("ECONNREFUSED")` (—Å—Ç—Ä–æ–∫–∞ 521)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 524)
- `genericError = new Error("Unknown error")` (—Å—Ç—Ä–æ–∫–∞ 531)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 535)

#### üìÑ openai-compatible.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockResponse(data: a)` (—Å—Ç—Ä–æ–∫–∞ 656)
- `createBase64Embedding(values: n)` (—Å—Ç—Ä–æ–∫–∞ 664)
- `expectEmbeddingValues(actual: n, expected: n)` (—Å—Ç—Ä–æ–∫–∞ 670)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAI = OpenAI as MockedClass<typeof OpenAI>` (—Å—Ç—Ä–æ–∫–∞ 38)
- `testBaseUrl = "https://api.example.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 45)
- `testApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `tempEmbedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 125)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 139)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 146)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 160)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 161)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 184)
- `customModel = "custom-embedding-model"` (—Å—Ç—Ä–æ–∫–∞ 185)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 202)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 203)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 222)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 225)
- `buffer = Buffer.from(testEmbedding.buffer)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `base64String = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 229)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 253)
- `embedding1 = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 256)
- `embedding2 = new Float32Array([1.0, 1.25, 1.5])` (—Å—Ç—Ä–æ–∫–∞ 257)
- `base64String1 = Buffer.from(embedding1.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 260)
- `base64String2 = Buffer.from(embedding2.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 269)
- `testTexts = ["Hello world", "Goodbye world"]` (—Å—Ç—Ä–æ–∫–∞ 281)
- `embedding1 = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 284)
- `base64String1 = Buffer.from(embedding1.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 285)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `testTexts = ["text1", "text2", "text3"]` (—Å—Ç—Ä–æ–∫–∞ 314)
- `normalText = "Hello world"` (—Å—Ç—Ä–æ–∫–∞ 332)
- `oversizedText = "a".repeat(MAX_ITEM_TOKENS * 5) // Exceeds MAX_ITEM_TOKENS` (—Å—Ç—Ä–æ–∫–∞ 333)
- `testTexts = [normalText, oversizedText, normalText]` (—Å—Ç—Ä–æ–∫–∞ 334)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 336)
- `testTexts = ["text1", "text2"]` (—Å—Ç—Ä–æ–∫–∞ 352)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 381)
- `rateLimitError = { status: 429, message: "Rate limit exceeded" }` (—Å—Ç—Ä–æ–∫–∞ 382)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75])` (—Å—Ç—Ä–æ–∫–∞ 385)
- `base64String = Buffer.from(testEmbedding.buffer).toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 386)
- `resultPromise = embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 396)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 410)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 421)
- `authError = new Error("Unauthorized")` (—Å—Ç—Ä–æ–∫–∞ 422)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 436)
- `serverError = new Error("Internal server error")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 455)
- `apiError = new Error("API connection failed")` (—Å—Ç—Ä–æ–∫–∞ 456)
- `testTexts = ["text1", "text2"]` (—Å—Ç—Ä–æ–∫–∞ 471)
- `batchError = new Error("Batch processing failed")` (—Å—Ç—Ä–æ–∫–∞ 472)
- `result = await embedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 489)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 499)
- `malformedResponse = {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 511)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 512)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 523)
- `httpError = new Error("Bad request")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 535)
- `networkError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 536)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 546)
- `weirdError = { toString: () => "Custom error object" }` (—Å—Ç—Ä–æ–∫–∞ 547)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 557)
- `unknownError = null` (—Å—Ç—Ä–æ–∫–∞ 558)
- `testTexts = ["Hello world"]` (—Å—Ç—Ä–æ–∫–∞ 576)
- `realOpenAI = new ((await vi.importActual("openai")) as any).OpenAI({` (—Å—Ç—Ä–æ–∫–∞ 579)
- `testEmbedding = new Float32Array([0.25, 0.5, 0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 585)
- `buffer = Buffer.from(testEmbedding.buffer)` (—Å—Ç—Ä–æ–∫–∞ 586)
- `base64String = buffer.toString("base64")` (—Å—Ç—Ä–æ–∫–∞ 587)
- `mockApiResponse = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `mockMethodRequest = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 607)
- `mockAPIPromise = {` (—Å—Ç—Ä–æ–∫–∞ 608)
- `response = await realOpenAI.embeddings.create({` (—Å—Ç—Ä–æ–∫–∞ 623)
- `returnedBuffer = Buffer.from(response.data[0].embedding as string, "base64")` (—Å—Ç—Ä–æ–∫–∞ 635)
- `returnedFloat32Array = new Float32Array(` (—Å—Ç—Ä–æ–∫–∞ 636)
- `returnedArray = Array.from(returnedFloat32Array)` (—Å—Ç—Ä–æ–∫–∞ 641)
- `baseUrl = "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 653)
- `createMockResponse = (data: any, status = 200, ok = true) => ({` (—Å—Ç—Ä–æ–∫–∞ 656)
- `createBase64Embedding = (values: number[]) => {` (—Å—Ç—Ä–æ–∫–∞ 664)
- `embedding = new Float32Array(values)` (—Å—Ç—Ä–æ–∫–∞ 665)
- `expectEmbeddingValues = (actual: number[], expected: number[]) => {` (—Å—Ç—Ä–æ–∫–∞ 670)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 691)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 692)
- `testUrls = [` (—Å—Ç—Ä–æ–∫–∞ 698)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 706)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 707)
- `testUrls = [` (—Å—Ç—Ä–æ–∫–∞ 713)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 721)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 722)
- `endpointUrls = [` (—Å—Ç—Ä–æ–∫–∞ 728)
- `embedder = new OpenAICompatibleEmbedder(url, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 737)
- `isFullUrl = (embedder as any).isFullEndpointUrl(url)` (—Å—Ç—Ä–æ–∫–∞ 738)
- `testTexts = ["Test text"]` (—Å—Ç—Ä–æ–∫–∞ 746)
- `base64String = createBase64Embedding([0.1, 0.2, 0.3])` (—Å—Ç—Ä–æ–∫–∞ 747)
- `azureEmbedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 750)
- `mockFetchResponse = createMockResponse({` (—Å—Ç—Ä–æ–∫–∞ 751)
- `azureResult = await azureEmbedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 757)
- `baseEmbedder = new OpenAICompatibleEmbedder(baseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 773)
- `baseResult = await baseEmbedder.createEmbeddings(testTexts)` (—Å—Ç—Ä–æ–∫–∞ 779)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 789)
- `mockResponse = createMockResponse({}, status, false)` (—Å—Ç—Ä–æ–∫–∞ 790)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 798)
- `base64String = createBase64Embedding([0.1, 0.2, 0.3])` (—Å—Ç—Ä–æ–∫–∞ 799)
- `resultPromise = embedder.createEmbeddings(["test"])` (—Å—Ç—Ä–æ–∫–∞ 811)
- `result = await resultPromise` (—Å—Ç—Ä–æ–∫–∞ 825)
- `embedder = new OpenAICompatibleEmbedder(azureUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 835)
- `base64_1 = createBase64Embedding([0.25, 0.5])` (—Å—Ç—Ä–æ–∫–∞ 838)
- `base64_2 = createBase64Embedding([0.75, 1.0])` (—Å—Ç—Ä–æ–∫–∞ 839)
- `mockResponse = createMockResponse({` (—Å—Ç—Ä–æ–∫–∞ 840)
- `result = await embedder.createEmbeddings(["test1", "test2"])` (—Å—Ç—Ä–æ–∫–∞ 846)
- `networkError = new Error("Network failed")` (—Å—Ç—Ä–æ–∫–∞ 852)
- `embedder = new OpenAICompatibleEmbedder(` (—Å—Ç—Ä–æ–∫–∞ 864)
- `mockFetch = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 871)
- `embedder = new OpenAICompatibleEmbedder("https://api.example.com/v1/embed", "test-key")` (—Å—Ç—Ä–æ–∫–∞ 890)
- `mockFetch = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 892)
- `embedder = new OpenAICompatibleEmbedder("https://api.openai.com/v1", "test-key")` (—Å—Ç—Ä–æ–∫–∞ 908)
- `mockCreate = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 911)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 940)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 946)
- `fullUrl = "https://api.example.com/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 958)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 971)
- `authError = new Error("Invalid API key")` (—Å—Ç—Ä–æ–∫–∞ 989)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 993)
- `connectionError = new Error("ECONNREFUSED")` (—Å—Ç—Ä–æ–∫–∞ 1002)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `fullUrl = "https://api.example.com/v1/embeddings"` (—Å—Ç—Ä–æ–∫–∞ 1012)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `rateLimitError = new Error("Rate limit exceeded")` (—Å—Ç—Ä–æ–∫–∞ 1031)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1035)
- `genericError = new Error("Unknown error")` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 1048)

#### üìÑ openai-compatible-rate-limit.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAI = OpenAI as MockedClass<typeof OpenAI>` (—Å—Ç—Ä–æ–∫–∞ 30)
- `testBaseUrl = "https://api.openai.com/v1"` (—Å—Ç—Ä–æ–∫–∞ 36)
- `testApiKey = "test-api-key"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `testModelId = "text-embedding-3-small"` (—Å—Ç—Ä–æ–∫–∞ 38)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `embedder1 = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `embedder2 = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 74)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 77)
- `batch1Promise = embedder1.createEmbeddings(["test1"])` (—Å—Ç—Ä–æ–∫–∞ 88)
- `batch2Promise = embedder2.createEmbeddings(["test2"])` (—Å—Ç—Ä–æ–∫–∞ 94)
- `state = (embedder1 as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 97)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 116)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 118)
- `promise1 = embedder.createEmbeddings(["test1"])` (—Å—Ç—Ä–æ–∫–∞ 131)
- `previousCount = state.consecutiveRateLimitErrors` (—Å—Ç—Ä–æ–∫–∞ 156)
- `promise2 = embedder.createEmbeddings(["test2"])` (—Å—Ç—Ä–æ–∫–∞ 158)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 171)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 177)
- `embedder = new OpenAICompatibleEmbedder(testBaseUrl, testApiKey, testModelId)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `state = (embedder as any).constructor.globalRateLimitState` (—Å—Ç—Ä–æ–∫–∞ 194)
- `rateLimitError = new Error("Rate limit exceeded") as any` (—Å—Ç—Ä–æ–∫–∞ 199)
- `now = Date.now()` (—Å—Ç—Ä–æ–∫–∞ 206)
- `delay = state.rateLimitResetTime - now` (—Å—Ç—Ä–æ–∫–∞ 207)

#### üìÑ ollama.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `consoleMocks = {` (—Å—Ç—Ä–æ–∫–∞ 50)
- `embedderWithDefaults = new CodeIndexOllamaEmbedder({})` (—Å—Ç—Ä–æ–∫–∞ 80)
- `embedderWithTrailingSlash = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 86)
- `embedderWithoutTrailingSlash = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 114)
- `embedderWithMultipleTrailingSlashes = new CodeIndexOllamaEmbedder({` (—Å—Ç—Ä–æ–∫–∞ 142)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 195)
- `firstCall = mockFetch.mock.calls[0]` (—Å—Ç—Ä–æ–∫–∞ 202)
- `secondCall = mockFetch.mock.calls[1]` (—Å—Ç—Ä–æ–∫–∞ 209)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 234)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 294)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 303)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 312)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 321)

#### üìÑ mistral.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `apiKey = "test-mistral-api-key"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `apiKey = "test-mistral-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `modelId = "custom-embed-model"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 75)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await embedder.createEmbeddings(texts)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = await embedder.createEmbeddings(texts, "codestral-embed-2505")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `texts = ["test text"]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = new Error("Embedding failed")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 174)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MockedOpenAICompatibleEmbedder = OpenAICompatibleEmbedder as MockedClass<typeof OpenAICompatibleEmbedder>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `apiKey = "test-gemini-api-key"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `apiKey = "test-gemini-api-key"` (—Å—Ç—Ä–æ–∫–∞ 46)
- `modelId = "text-embedding-004"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `info = embedder.embedderInfo` (—Å—Ç—Ä–æ–∫–∞ 75)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 94)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await embedder.createEmbeddings(texts)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `texts = ["test text 1", "test text 2"]` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `result = await embedder.createEmbeddings(texts, "gemini-embedding-001")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `texts = ["test text"]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `error = new Error("Embedding failed")` (—Å—Ç—Ä–æ–∫–∞ 135)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `result = await embedder.validateConfiguration()` (—Å—Ç—Ä–æ–∫–∞ 174)

### üìÇ build-src/src/integrations/terminal/__tests__/streamUtils

#### üìÑ pwshStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `escapedCommand = command.replace(/'/g, "'\\''")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `escapedCommand = command.replace(/\\/g, "\\\\").replace(/"/g, '\\"')` (—Å—Ç—Ä–æ–∫–∞ 26)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)

#### üìÑ mockStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stream = {` - Base function to create a mock stream with predefined output for testing without executing real commands (—Å—Ç—Ä–æ–∫–∞ 11)
- `unixOutput = output.replace(/\r\n/g, "\n")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `windowsOutput = output.replace(/\n/g, "\r\n").replace(/\r\r\n/g, "\r\n")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `normalizedOutput = output.replace(/\r\n/g, "\n")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `stream = {` - Creates a mock stream that yields output in chunks to simulate real terminal behavior (—Å—Ç—Ä–æ–∫–∞ 73)
- `actualChunkSize = Math.min(remaining.length, chunkSize + Math.floor(Math.random() * 20) - 10)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `chunk = remaining.substring(0, actualChunkSize)` (—Å—Ç—Ä–æ–∫–∞ 88)

#### üìÑ index.ts

#### üìÑ cmdStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `shellCommand = `cmd.exe /c ${command}`` (—Å—Ç—Ä–æ–∫–∞ 17)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ bashStream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `signalNum = signals[error.signal]` (—Å—Ç—Ä–æ–∫–∞ 34)
- `stream = {` (—Å—Ç—Ä–æ–∫–∞ 49)

### üìÇ build-src/src/integrations/misc/__tests__/performance

#### üìÑ processCarriageReturns.benchmark.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `random()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `generateTestData(size: n, complexity: "): string` (—Å—Ç—Ä–æ–∫–∞ 25)
- `generateLongLineTestData(lineLengthKB: n, updateCount: n): string` (—Å—Ç—Ä–æ–∫–∞ 98)
- `generateHighDensityCRData(size: n): string` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getIterationCount(size: n): number` (—Å—Ç—Ä–æ–∫–∞ 157)
- `calculateStats(durations: n)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `runBaselineTest(input: s, iterations: n)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `runBenchmark()` (—Å—Ç—Ä–æ–∫–∞ 290)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SEED = 12345` (—Å—Ç—Ä–æ–∫–∞ 15)
- `x = Math.sin(seed++) * 10000` (—Å—Ç—Ä–æ–∫–∞ 20)
- `line = `Processing file ${i}: `` (—Å—Ç—Ä–æ–∫–∞ 32)
- `progress = Math.floor((p / progressUpdates) * 100)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `progressChars = Math.max(0, p)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `remainingChars = Math.max(0, 20 - p)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `bar = `${line}[${"=".repeat(progressChars)}>${"-".repeat(remainingChars)}] ${progress}%\r`` (—Å—Ç—Ä–æ–∫–∞ 56)
- `baseLength = lineLengthKB * 1024` (—Å—Ç—Ä–æ–∫–∞ 100)
- `updateLength = Math.floor(baseLength / updateCount)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `updatePosition = updateLength * i` (—Å—Ç—Ä–æ–∫–∞ 114)
- `modificationLength = Math.floor(updateLength * 0.1)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `segmentLength = 3 + Math.floor(random() * 8)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `sorted = [...durations].sort((a, b) => a - b)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `mean = durations.reduce((a, b) => a + b, 0) / durations.length` (—Å—Ç—Ä–æ–∫–∞ 170)
- `warmupResult = fn(input, ...args)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `resultSize = (warmupResult.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `reduction = (100 - (warmupResult.length / input.length) * 100).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `startTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `endTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 209)
- `stats = calculateStats(durations)` (—Å—Ç—Ä–æ–∫–∞ 223)
- `totalSizeProcessed = (input.length * iterations) / (1024 * 1024) // MB` (—Å—Ç—Ä–æ–∫–∞ 226)
- `totalBenchmarkTime = durations.reduce((a, b) => a + b, 0) / 1000 // seconds` (—Å—Ç—Ä–æ–∫–∞ 227)
- `averageThroughput = (totalSizeProcessed / totalBenchmarkTime).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 228)
- `peakThroughput = (input.length / (1024 * 1024) / (stats.min / 1000)).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 229)
- `reliableThroughput = (input.length / (1024 * 1024) / (stats.p95 / 1000)).toFixed(2) // MB/s` (—Å—Ç—Ä–æ–∫–∞ 231)
- `runs = 5 // Run 5 times for better variance analysis` (—Å—Ç—Ä–æ–∫–∞ 264)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 265)
- `meanTimes = results.map((r) => r.stats.mean)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `avgMean = meanTimes.reduce((a, b) => a + b, 0) / runs` (—Å—Ç—Ä–æ–∫–∞ 273)
- `maxVariation = Math.max(...meanTimes.map((t) => Math.abs(((t - avgMean) / avgMean) * 100)))` (—Å—Ç—Ä–æ–∫–∞ 274)
- `throughputs = results.map((r) => parseFloat(r.peakThroughput))` (—Å—Ç—Ä–æ–∫–∞ 276)
- `avgThroughput = throughputs.reduce((a, b) => a + b, 0) / runs` (—Å—Ç—Ä–æ–∫–∞ 277)
- `throughputVariation = Math.max(` (—Å—Ç—Ä–æ–∫–∞ 278)
- `warmupData = generateTestData(5000, "complex")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `testData = generateTestData(size, complexity)` (—Å—Ç—Ä–æ–∫–∞ 338)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 339)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 340)
- `carriageReturns = (testData.match(/\r/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 345)
- `newLines = (testData.match(/\n/g) || []).length` (—Å—Ç—Ä–æ–∫–∞ 346)
- `iterations = getIterationCount(size)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `lineLimit = 500 // Standard line limit for truncation` (—Å—Ç—Ä–æ–∫–∞ 354)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 388)
- `testData = generateLongLineTestData(lineLength, updateCount)` (—Å—Ç—Ä–æ–∫–∞ 389)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 390)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 391)
- `iterations = Math.max(3, Math.min(10, getIterationCount(lineLength * 100)))` (—Å—Ç—Ä–æ–∫–∞ 397)
- `startGenTime = performance.now()` (—Å—Ç—Ä–æ–∫–∞ 414)
- `testData = generateHighDensityCRData(size)` (—Å—Ç—Ä–æ–∫–∞ 415)
- `genTime = performance.now() - startGenTime` (—Å—Ç—Ä–æ–∫–∞ 416)
- `dataSize = (testData.length / (1024 * 1024)).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 417)
- `iterations = Math.max(5, Math.floor(getIterationCount(size) / 2))` (—Å—Ç—Ä–æ–∫–∞ 422)

### üìÇ build-src/src/core/prompts/tools/__tests__

#### üìÑ attempt-completion.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `args = {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `description = getAttemptCompletionDescription(args)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `description = getAttemptCompletionDescription()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `args = {` (—Å—Ç—Ä–æ–∫–∞ 42)
- `description = getAttemptCompletionDescription(args)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `description = getAttemptCompletionDescription()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `coreText = "After each tool use, the user will respond with the result of that tool use"` (—Å—Ç—Ä–æ–∫–∞ 59)
- `importantNote = "IMPORTANT NOTE: This tool CANNOT be used until you've confirmed"` (—Å—Ç—Ä–æ–∫–∞ 63)

### üìÇ build-src/src/core/prompts/sections/__tests__

#### üìÑ tool-use-guidelines.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCodeIndexManagerEnabled = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockCodeIndexManagerDisabled = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `guidelines = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `guidelinesEnabled = getToolUseGuidelinesSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `guidelinesDisabled = getToolUseGuidelinesSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 73)

#### üìÑ objective.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCodeIndexManagerEnabled = {` (—Å—Ç—Ä–æ–∫–∞ 6)
- `mockCodeIndexManagerDisabled = {` (—Å—Ç—Ä–æ–∫–∞ 13)
- `objective = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `objective = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `objectiveEnabled = getObjectiveSection(mockCodeIndexManagerEnabled)` (—Å—Ç—Ä–æ–∫–∞ 69)
- `objectiveDisabled = getObjectiveSection(mockCodeIndexManagerDisabled)` (—Å—Ç—Ä–æ–∫–∞ 70)

#### üìÑ custom-system-prompt.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedReadFile = readFile as Mock<typeof readFile>` (—Å—Ç—Ä–æ–∫–∞ 13)
- `mockCwd = "/mock/cwd"` (—Å—Ç—Ä–æ–∫–∞ 20)
- `expectedFilePath = path.join(mockCwd, ".roo", `system-prompt-${mockMode}`)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 36)
- `expectedError = new Error("Some other error")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `template = "Workspace is: {{workspace}}"` (—Å—Ç—Ä–æ–∫–∞ 69)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `template = "Path: {{workspace}}/{{workspace}}"` (—Å—Ç—Ä–æ–∫–∞ 82)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `template = "Workspace: {{workspace}}, Unused: {{unusedVar}}, Another: {{another}}"` (—Å—Ç—Ä–æ–∫–∞ 95)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `template = "Workspace: {{workspace}}, Missing: {{missingPlaceholder}}"` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `template = "This is a static prompt."` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await loadSystemPromptFile(mockCwd, mockMode, mockVariables)` (—Å—Ç—Ä–æ–∫–∞ 128)

#### üìÑ custom-instructions.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 11)
- `cleanArgs = args` (—Å—Ç—Ä–æ–∫–∞ 13)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `cleanArgs = args` (—Å—Ç—Ä–æ–∫–∞ 34)
- `separator = process.platform === "win32" ? "\\" : "/"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `parts = path.split(/[/\\]/)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `readFileMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `statMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `readdirMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 55)
- `readlinkMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `lstatMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `originalCwd = process.cwd` (—Å—Ç—Ä–æ–∫–∞ 67)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `error = new Error("Permission denied") as NodeJS.ErrnoException` (—Å—Ç—Ä–æ–∫–∞ 109)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 190)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `expectedRulesDir = process.platform === "win32" ? "\\fake\\path\\.neira\\rules" : "/fake/path/.neira/rules"` (—Å—Ç—Ä–æ–∫–∞ 213)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 261)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 296)
- `expectedCacheFiles = [` (—Å—Ç—Ä–æ–∫–∞ 311)
- `expectedPath = process.platform === "win32" ? cacheFile.replace(/\//g, "\\") : cacheFile` (—Å—Ç—Ä–æ–∫–∞ 321)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 364)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 408)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 422)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 424)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 437)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 494)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 516)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 526)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 533)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 551)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 558)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 576)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 586)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 593)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 612)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 631)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 641)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 651)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 672)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 683)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 692)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 693)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 704)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 705)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 712)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 739)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 750)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 757)
- `result = await addCustomInstructions("", "", "/fake/path", "", {})` (—Å—Ç—Ä–æ–∫–∞ 784)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 794)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 812)
- `error = new Error("Permission denied") as NodeJS.ErrnoException` (—Å—Ç—Ä–æ–∫–∞ 829)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 849)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 885)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 900)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 902)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 912)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 967)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 992)
- `normalizedPath = filePath.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1025)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `result = await addCustomInstructions(` (—Å—Ç—Ä–æ–∫–∞ 1048)
- `expectedRulesDir = process.platform === "win32" ? "\\fake\\path\\.roo\\rules" : "/fake/path/.neira/rules"` (—Å—Ç—Ä–æ–∫–∞ 1091)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1102)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1185)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1187)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1203)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1274)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1276)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1289)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1326)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1327)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1340)
- `alphaIndex = result.indexOf("alpha content")` (—Å—Ç—Ä–æ–∫–∞ 1343)
- `betaIndex = result.indexOf("beta content")` (—Å—Ç—Ä–æ–∫–∞ 1344)
- `zebraIndex = result.indexOf("zebra content")` (—Å—Ç—Ä–æ–∫–∞ 1345)
- `normalizedPath = path.toString().replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1405)
- `pathStr = filePath.toString()` (—Å—Ç—Ä–æ–∫–∞ 1420)
- `normalizedPath = pathStr.replace(/\\/g, "/")` (—Å—Ç—Ä–æ–∫–∞ 1421)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1434)
- `firstIndex = result.indexOf("content from zzz-last.txt") // from 01-first.link` (—Å—Ç—Ä–æ–∫–∞ 1438)
- `secondIndex = result.indexOf("content from aaa-first.txt") // from 02-second.link` (—Å—Ç—Ä–æ–∫–∞ 1439)
- `thirdIndex = result.indexOf("content from mmm-middle.txt") // from 03-third.link` (—Å—Ç—Ä–æ–∫–∞ 1440)
- `result = await loadRuleFiles("/fake/path")` (—Å—Ç—Ä–æ–∫–∞ 1468)

#### üìÑ custom-instructions-path-detection.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fakeHomeDir = "/Users/john.roo.smith"` (—Å—Ç—Ä–æ–∫–∞ 8)
- `globalRooDir = path.join(fakeHomeDir, ".roo") // "/Users/john.roo.smith/.roo"` (—Å—Ç—Ä–æ–∫–∞ 9)
- `projectRooDir = "/projects/my-project/.roo"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `isGlobalForGlobalDir = path.resolve(globalRooDir) === path.resolve(globalRooDir)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `isGlobalForProjectDir = path.resolve(projectRooDir) === path.resolve(globalRooDir)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `oldLogicGlobal = globalRooDir.includes(path.join(fakeHomeDir, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 28)
- `oldLogicProject = projectRooDir.includes(path.join(fakeHomeDir, ".roo"))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 40)
- `isGlobalForGlobal = path.resolve(global) === path.resolve(global)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `isGlobalForProject = path.resolve(project) === path.resolve(global)` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ custom-instructions-global.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCwd = "/mock/project"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mockHomeDir = "/mock/home"` (—Å—Ç—Ä–æ–∫–∞ 42)
- `globalRooDir = path.join(mockHomeDir, ".roo")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `projectRooDir = path.join(mockCwd, ".roo")` (—Å—Ç—Ä–æ–∫–∞ 44)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 75)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `globalIndex = result.indexOf("global rule content")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `projectIndex = result.indexOf("project rule content")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `result = await loadRuleFiles(mockCwd)` (—Å—Ç—Ä–æ–∫–∞ 164)
- `mode = "code"` (—Å—Ç—Ä–æ–∫–∞ 172)
- `result = await addCustomInstructions("", "", mockCwd, mode)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `mode = "code"` (—Å—Ç—Ä–æ–∫–∞ 210)
- `result = await addCustomInstructions("", "", mockCwd, mode)` (—Å—Ç—Ä–æ–∫–∞ 226)

### üìÇ build-src/src/api/transform/caching/__tests__

#### üìÑ vertex.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 17)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `originalMessage1 = JSON.parse(JSON.stringify(messages[0]))` (—Å—Ç—Ä–æ–∫–∞ 63)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `originalMessage1 = JSON.parse(JSON.stringify(messages[0]))` (—Å—Ç—Ä–æ–∫–∞ 89)
- `originalAssistant1 = JSON.parse(JSON.stringify(messages[1]))` (—Å—Ç—Ä–æ–∫–∞ 90)
- `originalAssistant2 = JSON.parse(JSON.stringify(messages[3]))` (—Å—Ç—Ä–æ–∫–∞ 91)
- `originalAssistant3 = JSON.parse(JSON.stringify(messages[5]))` (—Å—Ç—Ä–æ–∫–∞ 92)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `originalMessage2 = JSON.parse(JSON.stringify(messages[1]))` (—Å—Ç—Ä–æ–∫–∞ 152)
- `result = addCacheBreakpoints(messages)` (—Å—Ç—Ä–æ–∫–∞ 154)
- `originalMessagesCopy = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 171)

#### üìÑ gemini.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 8)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 22)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 32)
- `originalContent = originalMessages[i].content` (—Å—Ç—Ä–æ–∫–∞ 41)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 51)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 73)
- `indices = []` (—Å—Ç—Ä–æ–∫–∞ 87)
- `content = messages[i].content?.[0]` (—Å—Ç—Ä–æ–∫–∞ 90)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 116)
- `nthUserMessage = messages.filter((m) => m.role === "user")[frequency - 1]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `nPlusOneUserMessage = messages.filter((m) => m.role === "user")[frequency]` (—Å—Ç—Ä–æ–∫–∞ 140)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 145)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 173)
- `frequency = 5` (—Å—Ç—Ä–æ–∫–∞ 196)
- `frequency = 0` (—Å—Ç—Ä–æ–∫–∞ 226)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `originalContent = originalMessages[i].content` (—Å—Ç—Ä–æ–∫–∞ 245)
- `content = messages[i].content` (—Å—Ç—Ä–æ–∫–∞ 253)
- `contentParts = content` (—Å—Ç—Ä–æ–∫–∞ 257)

#### üìÑ anthropic.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `systemPrompt = "You are a helpful assistant."` (—Å—Ç—Ä–æ–∫–∞ 8)
- `originalMessages = JSON.parse(JSON.stringify(messages))` (—Å—Ç—Ä–æ–∫–∞ 25)
- `userMessages = messages.filter((m) => m.role === "user")` (—Å—Ç—Ä–æ–∫–∞ 99)

### üìÇ build-src/src/api/transform/cache-strategy/__tests__

#### üìÑ cache-strategy.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createConfig(overrides: P): CacheStrategyConfig` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createMessageWithTokens(role: ", tokenCount: n)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `hasCachePoint(block: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 34)
- `createMessage(role: ", content: s, tokenCount: n)` (—Å—Ç—Ä–æ–∫–∞ 653)
- `logPlacements(placements: a)` (—Å—Ç—Ä–æ–∫–∞ 664)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CacheConfig` (—Å—Ç—Ä–æ–∫–∞ 45)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `createConfig = (overrides: Partial<CacheStrategyConfig> = {}): CacheStrategyConfig => ({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createMessageWithTokens = (role: "user" | "assistant", tokenCount: number) => ({` (—Å—Ç—Ä–æ–∫–∞ 29)
- `hasCachePoint = (block: ContentBlock | SystemContentBlock): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `convertToBedrockConverseMessagesMock = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `config = createConfig({ usePromptCache: false })` (—Å—Ç—Ä–æ–∫–∞ 71)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 78)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 88)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 97)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 104)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 137)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 148)
- `shortSystemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 157)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 159)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 171)
- `shortSystemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 180)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 182)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 201)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 202)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 213)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 240)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 247)
- `systemPrompt = "You are a helpful assistant"` (—Å—Ç—Ä–æ–∫–∞ 278)
- `mockInvoke = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 308)
- `messages = args[0]` (—Å—Ç—Ä–æ–∫–∞ 332)
- `systemMessage = args[1]` (—Å—Ç—Ä–æ–∫–∞ 333)
- `usePromptCache = args[2]` (—Å—Ç—Ä–æ–∫–∞ 334)
- `modelInfo = args[3]` (—Å—Ç—Ä–æ–∫–∞ 335)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 352)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 364)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 381)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 405)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `mockInvoke = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 452)
- `messages = args[0]` (—Å—Ç—Ä–æ–∫–∞ 476)
- `systemMessage = args[1]` (—Å—Ç—Ä–æ–∫–∞ 477)
- `usePromptCache = args[2]` (—Å—Ç—Ä–æ–∫–∞ 478)
- `modelInfo = args[3]` (—Å—Ç—Ä–æ–∫–∞ 479)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 496)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 506)
- `strategy = new MultiPointStrategy(convertToBedrockConverseMessagesMock.lastConfig as any)` (—Å—Ç—Ä–æ–∫–∞ 519)
- `mockSend = vitest.fn().mockResolvedValue({` (—Å—Ç—Ä–æ–∫–∞ 535)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 556)
- `mockApiResponse = {` (—Å—Ç—Ä–æ–∫–∞ 590)
- `mockStream = {` (—Å—Ç—Ä–æ–∫–∞ 601)
- `mockSend = vitest.fn().mockImplementation(() => {` (—Å—Ç—Ä–æ–∫–∞ 607)
- `stream = handler.createMessage(systemPrompt, mockMessages)` (—Å—Ç—Ä–æ–∫–∞ 619)
- `chunks = []` (—Å—Ç—Ä–æ–∫–∞ 620)
- `createMessage = (role: "user" | "assistant", content: string, tokenCount: number) => {` (—Å—Ç—Ä–æ–∫–∞ 653)
- `paddingNeeded = Math.max(0, tokenCount * 4 - content.length)` (—Å—Ç—Ä–æ–∫–∞ 655)
- `padding = " ".repeat(paddingNeeded)` (—Å—Ç—Ä–æ–∫–∞ 656)
- `logPlacements = (placements: any[]) => {` (—Å—Ç—Ä–æ–∫–∞ 664)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 674)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 681)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 688)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 689)
- `firstPlacement = result.messageCachePointPlacements?.[0]` (—Å—Ç—Ä–æ–∫–∞ 701)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 716)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 734)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 742)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 743)
- `secondPlacement = result.messageCachePointPlacements[1]` (—Å—Ç—Ä–æ–∫–∞ 762)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 773)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 798)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 806)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 807)
- `secondPlacement = result.messageCachePointPlacements[1]` (—Å—Ç—Ä–æ–∫–∞ 826)
- `thirdPlacement = result.messageCachePointPlacements[2]` (—Å—Ç—Ä–æ–∫–∞ 834)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 845)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 877)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 885)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `_messages = [` (—Å—Ç—Ä–æ–∫–∞ 933)
- `originalConsoleLog = console.log` (—Å—Ç—Ä–æ–∫–∞ 985)
- `mockConsoleLog = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 986)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 991)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 1028)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 1036)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 1037)
- `messages = [` (—Å—Ç—Ä–æ–∫–∞ 1062)
- `config = createConfig({` (—Å—Ç—Ä–æ–∫–∞ 1095)
- `strategy = new MultiPointStrategy(config)` (—Å—Ç—Ä–æ–∫–∞ 1103)
- `result = strategy.determineOptimalCachePoints()` (—Å—Ç—Ä–æ–∫–∞ 1104)

### üìÇ build-src/src/api/providers/fetchers/__tests__

#### üìÑ openrouter.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `models = await getOpenRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `openRouterSupportedCaching = Object.entries(models)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `excludedModels = new Set([` (—Å—Ç—Ä–æ–∫–∞ 31)
- `ourCachingModels = Array.from(OPEN_ROUTER_PROMPT_CACHING_MODELS).filter(` (—Å—Ç—Ä–æ–∫–∞ 37)
- `expectedCachingModels = openRouterSupportedCaching.filter((id) => !excludedModels.has(id)).sort()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `excludedReasoningBudgetModels = new Set([` (—Å—Ç—Ä–æ–∫–∞ 121)
- `expectedReasoningBudgetModels = Array.from(OPEN_ROUTER_REASONING_BUDGET_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `excludedRequiredReasoningBudgetModels = new Set(["google/gemini-2.5-pro"])` (—Å—Ç—Ä–æ–∫–∞ 138)
- `expectedRequiredReasoningBudgetModels = Array.from(OPEN_ROUTER_REQUIRED_REASONING_BUDGET_MODELS)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `anthropicModels = Object.entries(models)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `endpoints = await getOpenRouterModelEndpoints("google/gemini-2.5-pro-preview")` (—Å—Ç—Ä–æ–∫–∞ 218)
- `mockModel = {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `result = parseOpenRouterModel({` (—Å—Ç—Ä–æ–∫–∞ 268)
- `mockModel = {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `result = parseOpenRouterModel({` (—Å—Ç—Ä–æ–∫–∞ 291)

#### üìÑ ollama.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `modelData = ollamaModelsData["qwen3-2to16:latest"]` (—Å—Ç—Ä–æ–∫–∞ 18)
- `parsedModel = parseOllamaModel(modelData)` (—Å—Ç—Ä–æ–∫–∞ 19)
- `modelDataWithNullFamilies = {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `parsedModel = parseOllamaModel(modelDataWithNullFamilies as any)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 63)
- `modelName = "devstral2to16:latest"` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockApiTagsResponse = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `mockApiShowResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `expectedParsedDetails = parseOllamaModel(mockApiShowResponse as any)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 127)
- `consoleInfoSpy = vi.spyOn(console, "error").mockImplementation(() => {}) // Spy and suppress output` (—Å—Ç—Ä–æ–∫–∞ 129)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `consoleInfoSpy = vi.spyOn(console, "warn").mockImplementation(() => {}) // Spy and suppress output` (—Å—Ç—Ä–æ–∫–∞ 141)
- `econnrefusedError = new Error("Connection refused") as any` (—Å—Ç—Ä–æ–∫–∞ 143)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 147)
- `baseUrl = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `modelName = "test-model:latest"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `mockApiTagsResponse = {` (—Å—Ç—Ä–æ–∫–∞ 162)
- `mockApiShowResponse = {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `result = await getOllamaModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 205)

#### üìÑ modelCache.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockGetLiteLLMModels = getLiteLLMModels as Mock<typeof getLiteLLMModels>` (—Å—Ç—Ä–æ–∫–∞ 37)
- `mockGetOpenRouterModels = getOpenRouterModels as Mock<typeof getOpenRouterModels>` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockGetRequestyModels = getRequestyModels as Mock<typeof getRequestyModels>` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockGetGlamaModels = getGlamaModels as Mock<typeof getGlamaModels>` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockGetUnboundModels = getUnboundModels as Mock<typeof getUnboundModels>` (—Å—Ç—Ä–æ–∫–∞ 41)
- `DUMMY_REQUESTY_KEY = "requesty-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 43)
- `DUMMY_UNBOUND_KEY = "unbound-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `result = await getModels({` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `result = await getModels({ provider: "openrouter" })` (—Å—Ç—Ä–æ–∫–∞ 83)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 90)
- `result = await getModels({ provider: "requesty", apiKey: DUMMY_REQUESTY_KEY })` (—Å—Ç—Ä–æ–∫–∞ 100)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 107)
- `result = await getModels({ provider: "glama" })` (—Å—Ç—Ä–æ–∫–∞ 117)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `result = await getModels({ provider: "unbound", apiKey: DUMMY_UNBOUND_KEY })` (—Å—Ç—Ä–æ–∫–∞ 134)
- `expectedError = new Error("LiteLLM connection failed")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `unknownProvider = "unknown" as any` (—Å—Ç—Ä–æ–∫–∞ 156)

#### üìÑ lmstudio.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as any` (—Å—Ç—Ä–æ–∫–∞ 9)
- `mockGetModelInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockListLoaded = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `mockListDownloadedModels = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `MockedLMStudioClientConstructor = LMStudioClient as any` (—Å—Ç—Ä–æ–∫–∞ 27)
- `result = parseLMStudioModel(rawModel)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `baseUrl = "http://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 76)
- `lmsUrl = "ws://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 77)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 113)
- `expectedParsedModel = parseLMStudioModel(mockLLMInfo)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `expectedParsedModel = parseLMStudioModel(mockRawModel)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `defaultBaseUrl = "http://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 147)
- `defaultLmsUrl = "ws://localhost:1234"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `httpsBaseUrl = "https://securehost:4321"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `wssLmsUrl = "wss://securehost:4321"` (—Å—Ç—Ä–æ–∫–∞ 160)
- `unparsableBaseUrl = "http://localhost:invalid:port" // Leads to ws://localhost:invalid:port` (—Å—Ç—Ä–æ–∫–∞ 171)
- `result = await getLMStudioModels(unparsableBaseUrl)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 181)
- `networkError = new Error("Network connection failed")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `consoleInfoSpy = vi.spyOn(console, "warn").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 199)
- `econnrefusedError = new Error("Connection refused")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 204)
- `consoleErrorSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 216)
- `listError = new Error("LMStudio SDK internal error")` (—Å—Ç—Ä–æ–∫–∞ 217)
- `result = await getLMStudioModels(baseUrl)` (—Å—Ç—Ä–æ–∫–∞ 222)

#### üìÑ litellm.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedAxios = axios as typeof axios & {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DUMMY_INVALID_KEY = "invalid-key-for-testing"` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 106)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 148)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 169)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 244)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 264)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 297)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 323)
- `axiosError = {` (—Å—Ç—Ä–æ–∫–∞ 338)
- `axiosError = {` (—Å—Ç—Ä–æ–∫–∞ 355)
- `genericError = new Error("Network timeout")` (—Å—Ç—Ä–æ–∫–∞ 369)
- `mockResponse = { data: { data: [] } }` (—Å—Ç—Ä–æ–∫–∞ 380)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 394)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 408)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 443)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 469)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 517)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 554)
- `result = await getLiteLLMModels("test-api-key", "http://localhost:4000")` (—Å—Ç—Ä–æ–∫–∞ 599)

### üìÇ build-src/packages/types/src/providers/__tests__

#### üìÑ claude-code.spec.ts

### üìÇ build-src/packages/evals/src/db/queries

#### üìÑ toolErrors.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 7)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ tasks.ts

**–¢–∏–ø—ã:**

- `type GetTask` (—Å—Ç—Ä–æ–∫–∞ 49)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.tasks.findFirst({ where: eq(tasks.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 11)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 21)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `records = await db.update(tasks).set(values).where(eq(tasks.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 40)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ taskMetrics.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.taskMetrics.findFirst({ where: eq(taskMetrics.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 9)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 19)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 27)
- `records = await db.update(taskMetrics).set(values).where(eq(taskMetrics.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ runs.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await db.query.runs.findFirst({ where: eq(schema.runs.id, id) })` (—Å—Ç—Ä–æ–∫–∞ 13)
- `records = await db` (—Å—Ç—Ä–æ–∫–∞ 23)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 31)
- `records = await db.update(schema.runs).set(values).where(eq(schema.runs.id, id)).returning()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `record = records[0]` (—Å—Ç—Ä–æ–∫–∞ 42)
- `tasks = await getTasks(runId)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `toolUsage = tasks.reduce((acc, task) => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `tool = key as keyof ToolUsage` (—Å—Ç—Ä–æ–∫–∞ 80)
- `taskMetrics = await createTaskMetrics({ ...rest, toolUsage })` (—Å—Ç—Ä–æ–∫–∞ 90)
- `run = await findRun(runId)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `run = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 103)
- `tasks = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 112)
- `taskMetricsIds = tasks` (—Å—Ç—Ä–æ–∫–∞ 129)

#### üìÑ errors.ts

#### üìÑ copyRun.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sourceRun = await sourceDb.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `newRunTaskMetrics = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 41)
- `createdRunTaskMetrics = newRunTaskMetrics[0]` (—Å—Ç—Ä–æ–∫–∞ 49)
- `newRuns = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 70)
- `newRun = newRuns[0]` (—Å—Ç—Ä–æ–∫–∞ 75)
- `newRunId = newRun.id` (—Å—Ç—Ä–æ–∫–∞ 81)
- `sourceTasks = await sourceDb.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 83)
- `taskIdMapping = new Map<number, number>()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `newTaskMetrics = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 105)
- `createdTaskMetrics = newTaskMetrics[0]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `newTasks = await targetDb` (—Å—Ç—Ä–æ–∫–∞ 129)
- `newTask = newTasks[0]` (—Å—Ç—Ä–æ–∫–∞ 134)
- `sourceTaskToolErrors = await sourceDb.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 144)
- `sourceRunToolErrors = await sourceDb.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 163)

### üìÇ build-src/packages/cloud/src/__tests__/auth

#### üìÑ WebAuthService.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 207)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1042)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1069)
- `onDidChangeCallback(e: {, key: s)` (—Å—Ç—Ä–æ–∫–∞ 1093)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockFetch = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `MockedRefreshTimer = vi.mocked(RefreshTimer)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `serviceWithoutLog = new WebAuthService(mockContext as unknown as vscode.ExtensionContext)` (—Å—Ç—Ä–æ–∫–∞ 142)
- `firstCallCount = vi.mocked(mockContext.secrets.onDidChange).mock.calls.length` (—Å—Ç—Ä–æ–∫–∞ 158)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 168)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 178)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 181)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 197)
- `newCredentials = { clientToken: "new-token", sessionId: "new-session" }` (—Å—Ç—Ä–æ–∫–∞ 217)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `mockOpenExternal = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 236)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 237)
- `mockOpenExternal = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 255)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 256)
- `calledUri = mockOpenExternal.mock.calls[0][0]` (—Å—Ç—Ä–æ–∫–∞ 270)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 290)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 291)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 311)
- `mockResponse = {` (—Å—Ç—Ä–æ–∫–∞ 315)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 328)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 341)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 350)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 367)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 375)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 376)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 396)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 397)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 409)
- `vscode = await import("vscode")` (—Å—Ç—Ä–æ–∫–∞ 417)
- `mockShowInfo = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 418)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 438)
- `authenticatedService = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 441)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 464)
- `attemptingService = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 467)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 483)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 509)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 510)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 515)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 545)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 555)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 569)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 576)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 597)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 604)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 625)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: null }` (—Å—Ç—Ä–æ–∫–∞ 651)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 681)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 687)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: "org_1" }` (—Å—Ç—Ä–æ–∫–∞ 697)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 743)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 749)
- `credentials = { clientToken: "test-token", sessionId: "test-session", organizationId: null }` (—Å—Ç—Ä–æ–∫–∞ 762)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 787)
- `userInfo = authService.getUserInfo()` (—Å—Ç—Ä–æ–∫–∞ 793)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 804)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 813)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 816)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 829)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 853)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 856)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 870)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 893)
- `timerCallback = vi.mocked(RefreshTimer).mock.calls[0][0].callback` (—Å—Ç—Ä–æ–∫–∞ 896)
- `storedState = "valid-state"` (—Å—Ç—Ä–æ–∫–∞ 940)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 968)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 982)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 983)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 995)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 999)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 1000)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1012)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1015)
- `credentials = { clientToken: "test-token", sessionId: "test-session" }` (—Å—Ç—Ä–æ–∫–∞ 1016)
- `loadedCredentials = await service["loadCredentials"]()` (—Å—Ç—Ä–æ–∫–∞ 1020)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1027)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1030)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1039)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1049)
- `newCredentials = { clientToken: "new-token", sessionId: "new-session" }` (—Å—Ç—Ä–æ–∫–∞ 1053)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1056)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1066)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1079)
- `customUrl = "https://custom.clerk.com"` (—Å—Ç—Ä–æ–∫–∞ 1090)
- `service = new WebAuthService(mockContext as unknown as vscode.ExtensionContext, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 1100)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 1103)

#### üìÑ StaticTokenAuthService.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockLog(args: u)` (—Å—Ç—Ä–æ–∫–∞ 23)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testToken = "test-static-token"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockContextPartial = {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `serviceWithoutLog = new StaticTokenAuthService(` (—Å—Ç—Ä–æ–∫–∞ 67)
- `spy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `differentToken = "different-token"` (—Å—Ç—Ä–æ–∫–∞ 103)
- `differentService = new StaticTokenAuthService(mockContext, differentToken, mockLog)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `expectedErrorMessage = "Authentication methods are disabled in StaticTokenAuthService"` (—Å—Ç—Ä–æ–∫–∞ 140)
- `authStateChangedSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 161)
- `userInfoSpy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 162)

### üìÇ build-src/apps/web-roo-code/src/lib/hooks

#### üìÑ use-open-router-models.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parsePrice()` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsePrice = (price?: string) => (price ? parseFloat(price) * 1_000_000 : undefined)` (—Å—Ç—Ä–æ–∫–∞ 6)
- `response = await fetch("https://openrouter.ai/api/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 42)

#### üìÑ use-logo-src.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentTheme = resolvedTheme || theme` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ index.ts

### üìÇ build-src/apps/web-roo-code/src/components/ui

#### üìÑ index.ts

#### üìÑ table.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(` (—Å—Ç—Ä–æ–∫–∞ 5)
- `TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 14)
- `TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 19)
- `TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 26)
- `TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(` (—Å—Ç—Ä–æ–∫–∞ 37)
- `TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 63)
- `TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 78)

#### üìÑ scroll-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ScrollButtonProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `section = document.getElementById(targetId)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ modal.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Dialog = DialogPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DialogTrigger = DialogPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `DialogPortal = DialogPrimitive.Portal` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DialogClose = DialogPrimitive.Close` (—Å—Ç—Ä–æ–∫–∞ 14)
- `DialogOverlay = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DialogContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 31)
- `DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DialogTitle = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 64)
- `DialogDescription = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ chart.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `useChart()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `ChartStyle(id: s, config: C)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `getPayloadConfigFromPayload(config: C, payload: u, key: s)` (—Å—Ç—Ä–æ–∫–∞ 286)

**–¢–∏–ø—ã:**

- `type ChartContextProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `THEMES = { light: "", dark: ".dark" } as const` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ChartContext = React.createContext<ChartContextProps | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `context = React.useContext(ChartContext)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `ChartContainer = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 34)
- `uniqueId = React.useId()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `chartId = `chart-${id || uniqueId.replace(/:/g, "")}`` (—Å—Ç—Ä–æ–∫–∞ 42)
- `ChartStyle = ({ id, config }: { id: string` (—Å—Ç—Ä–æ–∫–∞ 62)
- `colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color` (—Å—Ç—Ä–æ–∫–∞ 78)
- `ChartTooltip = RechartsPrimitive.Tooltip` (—Å—Ç—Ä–æ–∫–∞ 91)
- `ChartTooltipContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 93)
- `tooltipLabel = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `key = `${labelKey || item?.dataKey || item?.name || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 130)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `nestLabel = payload.length === 1 && indicator !== "dot"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `key = `${nameKey || item.name || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 164)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `indicatorColor = color || item.payload.fill || item.color` (—Å—Ç—Ä–æ–∫–∞ 166)
- `ChartLegend = RechartsPrimitive.Legend` (—Å—Ç—Ä–æ–∫–∞ 232)
- `ChartLegendContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 234)
- `key = `${nameKey || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 257)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 258)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Button = React.forwardRef<HTMLButtonElement, ButtonProps>(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 41)

### üìÇ build-src/apps/web-roo-code/src/components/providers

#### üìÑ index.ts

#### üìÑ providers.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ posthog-provider.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `PageViewTracker()` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `searchParams = useSearchParams()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `posthogKey = process.env.NEXT_PUBLIC_POSTHOG_KEY` (—Å—Ç—Ä–æ–∫–∞ 35)
- `posthogHost = process.env.NEXT_PUBLIC_POSTHOG_HOST` (—Å—Ç—Ä–æ–∫–∞ 36)

### üìÇ build-src/apps/web-roo-code/src/components/homepage

#### üìÑ index.ts

#### üìÑ whats-new-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Feature(icon: I)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `updateCanvasSize()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `animate()` (—Å—Ç—Ä–æ–∫–∞ 77)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FeatureProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `bgColor = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `textColor = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `version = "v3.8.0"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `buttonRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `canvasRef = useRef<HTMLCanvasElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `canvas = canvasRef.current` (—Å—Ç—Ä–æ–∫–∞ 50)
- `button = buttonRef.current` (—Å—Ç—Ä–æ–∫–∞ 51)
- `ctx = canvas.getContext("2d")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `updateCanvasSize = () => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `rect = button.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `animate = () => {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `width = canvas.width - 4` (—Å—Ç—Ä–æ–∫–∞ 84)
- `height = canvas.height - 4` (—Å—Ç—Ä–æ–∫–∞ 85)
- `x = 2` (—Å—Ç—Ä–æ–∫–∞ 86)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 87)
- `radius = height / 2` (—Å—Ç—Ä–æ–∫–∞ 88)
- `centerX = canvas.width / 2` (—Å—Ç—Ä–æ–∫–∞ 106)
- `centerY = canvas.height / 2` (—Å—Ç—Ä–æ–∫–∞ 107)
- `blueColor = "70, 130, 255"` (—Å—Ç—Ä–æ–∫–∞ 108)
- `gradient = ctx.createConicGradient(position, centerX, centerY)` (—Å—Ç—Ä–æ–∫–∞ 111)

#### üìÑ testimonials.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 77)

#### üìÑ testimonials-mobile.tsx

#### üìÑ install-section.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface InstallSectionProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ features.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 99)

#### üìÑ features-mobile.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `autoplayPlugin = Autoplay({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `scrollTo = useCallback((index: number) => emblaApi && emblaApi.scrollTo(index), [emblaApi])` (—Å—Ç—Ä–æ–∫–∞ 30)
- `onInit = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `onSelect = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ faq-section.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `toggleFAQ(index: n)` (—Å—Ç—Ä–æ–∫–∞ 240)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FAQItem` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggleFAQ = (index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 240)

#### üìÑ company-logos.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logos = [` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ code-example.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `switchMode(mode: ")` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UserProfileProps` (—Å—Ç—Ä–æ–∫–∞ 112)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codeContainerRef = useRef<HTMLPreElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `nextMode = currentMode === "code" ? "architect" : currentMode === "architect" ? "debug" : "code"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `switchMode = (mode: "code" | "architect" | "debug") => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `codeExamples = {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `items = data?.items?.map(item => item.name) || []` (—Å—Ç—Ä–æ–∫–∞ 214)

### üìÇ build-src/apps/web-roo-code/src/components/chromes

#### üìÑ index.ts

#### üìÑ theme-toggle.tsx

#### üìÑ stats-display.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stars = await getGitHubStars()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ nav-bar.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface NavBarProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ footer.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClickOutside(event: M)` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dropdownRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/apps/web-neira-coder/src/lib/hooks

#### üìÑ use-open-router-models.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `parsePrice()` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parsePrice = (price?: string) => (price ? parseFloat(price) * 1_000_000 : undefined)` (—Å—Ç—Ä–æ–∫–∞ 6)
- `response = await fetch("https://openrouter.ai/api/v1/models")` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = z.object({ data: z.array(openRouterModelSchema) }).safeParse(await response.json())` (—Å—Ç—Ä–æ–∫–∞ 42)

#### üìÑ use-logo-src.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentTheme = resolvedTheme || theme` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ index.ts

### üìÇ build-src/apps/web-neira-coder/src/components/ui

#### üìÑ index.ts

#### üìÑ table.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(` (—Å—Ç—Ä–æ–∫–∞ 5)
- `TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 14)
- `TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 19)
- `TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 26)
- `TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(` (—Å—Ç—Ä–æ–∫–∞ 37)
- `TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(` (—Å—Ç—Ä–æ–∫–∞ 63)
- `TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(` (—Å—Ç—Ä–æ–∫–∞ 78)

#### üìÑ scroll-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ScrollButtonProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `section = document.getElementById(targetId)` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ modal.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Dialog = DialogPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DialogTrigger = DialogPrimitive.Trigger` (—Å—Ç—Ä–æ–∫–∞ 10)
- `DialogPortal = DialogPrimitive.Portal` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DialogClose = DialogPrimitive.Close` (—Å—Ç—Ä–æ–∫–∞ 14)
- `DialogOverlay = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DialogContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 31)
- `DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 54)
- `DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DialogTitle = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 64)
- `DialogDescription = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 76)

#### üìÑ chart.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `useChart()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `ChartStyle(id: s, config: C)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `getPayloadConfigFromPayload(config: C, payload: u, key: s)` (—Å—Ç—Ä–æ–∫–∞ 286)

**–¢–∏–ø—ã:**

- `type ChartContextProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `THEMES = { light: "", dark: ".dark" } as const` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ChartContext = React.createContext<ChartContextProps | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `context = React.useContext(ChartContext)` (—Å—Ç—Ä–æ–∫–∞ 25)
- `ChartContainer = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 34)
- `uniqueId = React.useId()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `chartId = `chart-${id || uniqueId.replace(/:/g, "")}`` (—Å—Ç—Ä–æ–∫–∞ 42)
- `ChartStyle = ({ id, config }: { id: string` (—Å—Ç—Ä–æ–∫–∞ 62)
- `colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color` (—Å—Ç—Ä–æ–∫–∞ 78)
- `ChartTooltip = RechartsPrimitive.Tooltip` (—Å—Ç—Ä–æ–∫–∞ 91)
- `ChartTooltipContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 93)
- `tooltipLabel = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `key = `${labelKey || item?.dataKey || item?.name || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 130)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 131)
- `nestLabel = payload.length === 1 && indicator !== "dot"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `key = `${nameKey || item.name || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 164)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `indicatorColor = color || item.payload.fill || item.color` (—Å—Ç—Ä–æ–∫–∞ 166)
- `ChartLegend = RechartsPrimitive.Legend` (—Å—Ç—Ä–æ–∫–∞ 232)
- `ChartLegendContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 234)
- `key = `${nameKey || item.dataKey || "value"}`` (—Å—Ç—Ä–æ–∫–∞ 257)
- `itemConfig = getPayloadConfigFromPayload(config, item, key)` (—Å—Ç—Ä–æ–∫–∞ 258)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Button = React.forwardRef<HTMLButtonElement, ButtonProps>(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 41)

### üìÇ build-src/apps/web-neira-coder/src/components/providers

#### üìÑ index.ts

#### üìÑ providers.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ posthog-provider.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `PageViewTracker()` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `pathname = usePathname()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `searchParams = useSearchParams()` (—Å—Ç—Ä–æ–∫–∞ 11)
- `posthogKey = process.env.NEXT_PUBLIC_POSTHOG_KEY` (—Å—Ç—Ä–æ–∫–∞ 35)
- `posthogHost = process.env.NEXT_PUBLIC_POSTHOG_HOST` (—Å—Ç—Ä–æ–∫–∞ 36)

### üìÇ build-src/apps/web-neira-coder/src/components/homepage

#### üìÑ index.ts

#### üìÑ whats-new-button.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Feature(icon: I)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `updateCanvasSize()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `animate()` (—Å—Ç—Ä–æ–∫–∞ 77)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FeatureProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `bgColor = {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `textColor = {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `version = "v3.8.0"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `buttonRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `canvasRef = useRef<HTMLCanvasElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 46)
- `canvas = canvasRef.current` (—Å—Ç—Ä–æ–∫–∞ 50)
- `button = buttonRef.current` (—Å—Ç—Ä–æ–∫–∞ 51)
- `ctx = canvas.getContext("2d")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `updateCanvasSize = () => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `rect = button.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `animate = () => {` (—Å—Ç—Ä–æ–∫–∞ 77)
- `width = canvas.width - 4` (—Å—Ç—Ä–æ–∫–∞ 84)
- `height = canvas.height - 4` (—Å—Ç—Ä–æ–∫–∞ 85)
- `x = 2` (—Å—Ç—Ä–æ–∫–∞ 86)
- `y = 2` (—Å—Ç—Ä–æ–∫–∞ 87)
- `radius = height / 2` (—Å—Ç—Ä–æ–∫–∞ 88)
- `centerX = canvas.width / 2` (—Å—Ç—Ä–æ–∫–∞ 106)
- `centerY = canvas.height / 2` (—Å—Ç—Ä–æ–∫–∞ 107)
- `blueColor = "70, 130, 255"` (—Å—Ç—Ä–æ–∫–∞ 108)
- `gradient = ctx.createConicGradient(position, centerX, centerY)` (—Å—Ç—Ä–æ–∫–∞ 111)

#### üìÑ testimonials.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 62)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 77)

#### üìÑ testimonials-mobile.tsx

#### üìÑ install-section.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface InstallSectionProps` (—Å—Ç—Ä–æ–∫–∞ 7)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 12)

#### üìÑ features.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `containerVariants = {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `itemVariants = {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `backgroundVariants = {` (—Å—Ç—Ä–æ–∫–∞ 95)

#### üìÑ features-mobile.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `autoplayPlugin = Autoplay({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `scrollTo = useCallback((index: number) => emblaApi && emblaApi.scrollTo(index), [emblaApi])` (—Å—Ç—Ä–æ–∫–∞ 30)
- `onInit = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `onSelect = useCallback((emblaApi: any) => {` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ faq-section.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `toggleFAQ(index: n)` (—Å—Ç—Ä–æ–∫–∞ 240)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FAQItem` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `toggleFAQ = (index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 240)

#### üìÑ company-logos.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logos = [` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ code-example.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `switchMode(mode: ")` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface UserProfileProps` (—Å—Ç—Ä–æ–∫–∞ 112)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `codeContainerRef = useRef<HTMLPreElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 11)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 16)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `nextMode = currentMode === "code" ? "architect" : currentMode === "architect" ? "debug" : "code"` (—Å—Ç—Ä–æ–∫–∞ 30)
- `switchMode = (mode: "code" | "architect" | "debug") => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `codeExamples = {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `items = data?.items?.map(item => item.name) || []` (—Å—Ç—Ä–æ–∫–∞ 214)

### üìÇ build-src/apps/web-neira-coder/src/components/chromes

#### üìÑ index.ts

#### üìÑ theme-toggle.tsx

#### üìÑ stats-display.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `stars = await getGitHubStars()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ nav-bar.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface NavBarProps` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ footer.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClickOutside(event: M)` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `dropdownRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `logoSrc = useLogoSrc()` (—Å—Ç—Ä–æ–∫–∞ 16)

### üìÇ build-src/apps/web-evals/src/lib/server

#### üìÑ sse-stream.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buffer = typeof data === "object" ? JSON.stringify(data) : data` (—Å—Ç—Ä–æ–∫–∞ 19)

#### üìÑ redis.ts

### üìÇ build-src/apps/web-evals/src/components/ui

#### üìÑ index.ts

#### üìÑ tooltip.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TooltipProvider()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `Tooltip()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `TooltipTrigger()` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ textarea.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Textarea()` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ tabs.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Tabs = TabsPrimitive.Root` (—Å—Ç—Ä–æ–∫–∞ 9)
- `TabsList = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 11)
- `tabsListRef = useRef<HTMLDivElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `updateIndicator = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `activeTab = tabsListRef.current.querySelector<HTMLElement>('[data-state="active"]')` (—Å—Ç—Ä–æ–∫–∞ 29)
- `activeRect = activeTab.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `tabsRect = tabsListRef.current.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `timeoutId = setTimeout(updateIndicator, 0)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `observer = new MutationObserver(updateIndicator)` (—Å—Ç—Ä–æ–∫–∞ 52)
- `TabsTrigger = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 91)
- `TabsContent = React.forwardRef<` (—Å—Ç—Ä–æ–∫–∞ 107)

#### üìÑ table.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Table()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `TableHeader()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `TableBody()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `TableFooter()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `TableRow()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `TableHead()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `TableCell()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `TableCaption()` (—Å—Ç—Ä–æ–∫–∞ 69)

#### üìÑ sonner.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Toaster()` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Toaster = ({ ...props }: ToasterProps) => {` (—Å—Ç—Ä–æ–∫–∞ 6)

#### üìÑ slider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `_values = React.useMemo(` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ separator.tsx

#### üìÑ select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Select()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `SelectGroup()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `SelectValue()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `SelectLabel()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `SelectItem()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `SelectSeparator()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `SelectScrollUpButton()` (—Å—Ç—Ä–æ–∫–∞ 120)

#### üìÑ scroll-area.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ScrollArea()` (—Å—Ç—Ä–æ–∫–∞ 12)

**–¢–∏–ø—ã:**

- `type ScrollAreaProps` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ popover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Popover()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `PopoverTrigger()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `PopoverAnchor()` (—Å—Ç—Ä–æ–∫–∞ 38)

#### üìÑ multi-select.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleInputKeyDown(event: R)` (—Å—Ç—Ä–æ–∫–∞ 104)
- `toggleOption(option: s)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `handleTogglePopover()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `clearExtraOptions()` (—Å—Ç—Ä–æ–∫–∞ 127)
- `onSelectAll()` (—Å—Ç—Ä–æ–∫–∞ 136)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MultiSelectProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof multiSelectVariants>` - Props for MultiSelect component (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `multiSelectVariants = cva("px-2 py-1", {` - Variants for the multi-select component to handle different styles. Uses class-variance-authority (cva) to define different styles based on "variant" prop. (—Å—Ç—Ä–æ–∫–∞ 16)
- `handleInputKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 104)
- `newSelectedValues = [...selectedValues]` (—Å—Ç—Ä–æ–∫–∞ 108)
- `toggleOption = (option: string) => {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `newSelectedValues = selectedValues.includes(option)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handleTogglePopover = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `clearExtraOptions = () => {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `newSelectedValues = selectedValues.slice(0, maxCount)` (—Å—Ç—Ä–æ–∫–∞ 128)
- `searchResultsRef = React.useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 133)
- `searchValueRef = React.useRef("")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `onSelectAll = () => {` (—Å—Ç—Ä–æ–∫–∞ 136)
- `values = Array.from(searchResultsRef.current.keys())` (—Å—Ç—Ä–æ–∫–∞ 137)
- `onFilter = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 152)

#### üìÑ label.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Label()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ input.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Input()` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ form.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `useFormField()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `FormItem()` (—Å—Ç—Ä–æ–∫–∞ 72)
- `FormLabel()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `FormControl()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `FormDescription()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `FormMessage()` (—Å—Ç—Ä–æ–∫–∞ 123)

**–¢–∏–ø—ã:**

- `type FormItemContextValue` (—Å—Ç—Ä–æ–∫–∞ 66)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Form = FormProvider` (—Å—Ç—Ä–æ–∫–∞ 19)
- `FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `FormField = <` (—Å—Ç—Ä–æ–∫–∞ 30)
- `useFormField = () => {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `fieldContext = React.useContext(FormFieldContext)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `itemContext = React.useContext(FormItemContext)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `formState = useFormState({ name: fieldContext.name })` (—Å—Ç—Ä–æ–∫–∞ 47)
- `fieldState = getFieldState(fieldContext.name, formState)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue)` (—Å—Ç—Ä–æ–∫–∞ 70)
- `id = React.useId()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `body = error ? String(error?.message ?? "") : props.children` (—Å—Ç—Ä–æ–∫–∞ 125)

#### üìÑ dropdown-menu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `DropdownMenu()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DropdownMenuPortal()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `DropdownMenuTrigger()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DropdownMenuGroup()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `DropdownMenuRadioGroup()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `DropdownMenuSeparator()` (—Å—Ç—Ä–æ–∫–∞ 138)
- `DropdownMenuShortcut()` (—Å—Ç—Ä–æ–∫–∞ 148)

#### üìÑ drawer.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Drawer()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `DrawerTrigger()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `DrawerPortal()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `DrawerClose()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `DrawerOverlay()` (—Å—Ç—Ä–æ–∫–∞ 24)
- `DrawerContent()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `DrawerHeader()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DrawerFooter()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `DrawerTitle()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `DrawerDescription()` (—Å—Ç—Ä–æ–∫–∞ 77)

#### üìÑ dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Dialog()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `DialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `DialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `DialogClose()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `DialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 25)
- `DialogContent()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `DialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `DialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `DialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `DialogDescription()` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ command.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Command()` (—Å—Ç—Ä–æ–∫–∞ 10)
- `CommandInput()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `CommandList()` (—Å—Ç—Ä–æ–∫–∞ 63)
- `CommandEmpty()` (—Å—Ç—Ä–æ–∫–∞ 73)
- `CommandGroup()` (—Å—Ç—Ä–æ–∫–∞ 77)
- `CommandSeparator()` (—Å—Ç—Ä–æ–∫–∞ 90)
- `CommandItem()` (—Å—Ç—Ä–æ–∫–∞ 100)
- `CommandShortcut()` (—Å—Ç—Ä–æ–∫–∞ 114)

#### üìÑ button.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Comp = asChild ? Slot : "button"` (—Å—Ç—Ä–æ–∫–∞ 46)

#### üìÑ badge.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `badgeVariants = cva(` (—Å—Ç—Ä–æ–∫–∞ 7)
- `Comp = asChild ? Slot : "span"` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ alert-dialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AlertDialog()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `AlertDialogTrigger()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `AlertDialogPortal()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `AlertDialogOverlay()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `AlertDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `AlertDialogHeader()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `AlertDialogFooter()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `AlertDialogTitle()` (—Å—Ç—Ä–æ–∫–∞ 70)
- `AlertDialogAction()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `AlertDialogCancel()` (—Å—Ç—Ä–æ–∫–∞ 97)

### üìÇ build-src/apps/web-evals/src/components/providers

#### üìÑ index.ts

#### üìÑ theme-provider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `NextThemesProvider = dynamic(() => import("next-themes").then((e) => e.ThemeProvider), {` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ react-query-provider.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 6)

### üìÇ build-src/apps/vscode-e2e/src/suite/tools

#### üìÑ write-to-file.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 116)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 282)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 308)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 316)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 72)
- `fileContent = "Hello, this is a test file!"` (—Å—Ç—Ä–æ–∫–∞ 74)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `parsed = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 116)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 124)
- `baseFileName = path.basename(testFilePath)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `possibleLocations = [` (—Å—Ç—Ä–æ–∫–∞ 166)
- `workspaceDirs = await fs` (—Å—Ç—Ä–æ–∫–∞ 178)
- `wsFilePath = path.join("/tmp", wsDir, baseFileName)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `tempFiles = await fs.readdir(tempDir)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `cwdFiles = await fs.readdir(process.cwd())` (—Å—Ç—Ä–æ–∫–∞ 227)
- `tmpFiles = await fs.readdir("/tmp")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 271)
- `content = "File in nested directory"` (—Å—Ç—Ä–æ–∫–∞ 273)
- `fileName = `file-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 274)
- `nestedPath = path.join(tempDir, "nested", "deep", "directory", fileName)` (—Å—Ç—Ä–æ–∫–∞ 275)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 282)
- `parsed = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 293)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 308)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `workspaceDirs = await fs` (—Å—Ç—Ä–æ–∫–∞ 356)
- `wsNestedPath = path.join("/tmp", wsDir, "nested", "deep", "directory", fileName)` (—Å—Ç—Ä–æ–∫–∞ 363)
- `wsFilePath = path.join("/tmp", wsDir, fileName)` (—Å—Ç—Ä–æ–∫–∞ 373)
- `wsPath = path.join("/tmp", wsDir)` (—Å—Ç—Ä–æ–∫–∞ 406)
- `files = await fs.readdir(wsPath)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `nestedDir = path.join(wsPath, "nested")` (—Å—Ç—Ä–æ–∫–∞ 412)

#### üìÑ use-mcp-tool.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 127)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 304)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 350)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 432)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 478)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 617)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 710)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 736)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 782)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 838)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 27)
- `rooDir = path.join(workspaceDir, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `mcpConfig = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 78)
- `rooDir = path.join(workspaceDir, ".neira")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 116)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 127)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 173)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `mcpConfigUri = vscode.Uri.file(testFiles.mcpConfig)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `document = await vscode.workspace.openTextDocument(mcpConfigUri)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `editor = await vscode.window.showTextDocument(document)` (—Å—Ç—Ä–æ–∫–∞ 195)
- `edit = new vscode.WorkspaceEdit()` (—Å—Ç—Ä–æ–∫–∞ 198)
- `currentContent = document.getText()` (—Å—Ç—Ä–æ–∫–∞ 199)
- `modifiedContent = currentContent.replace(` (—Å—Ç—Ä–æ–∫–∞ 200)
- `fullRange = new vscode.Range(document.positionAt(0), document.positionAt(document.getText().length))` (—Å—Ç—Ä–æ–∫–∞ 205)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 225)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 255)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 294)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 315)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `newFileName = `mcp-write-test-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 360)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 384)
- `hasFileName = responseText.includes(newFileName) || responseText.includes("mcp-write-test")` (—Å—Ç—Ä–æ–∫–∞ 394)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 422)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 432)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 478)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 511)
- `hasNeiraDir = responseText.includes(".neira")` (—Å—Ç—Ä–æ–∫–∞ 518)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 561)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 571)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 582)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 617)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 650)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 702)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 710)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 736)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 771)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 782)
- `mcpRequest = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 793)
- `hasType = typeof mcpRequest.type === "string"` (—Å—Ç—Ä–æ–∫–∞ 797)
- `hasServerName = typeof mcpRequest.serverName === "string"` (—Å—Ç—Ä–æ–∫–∞ 798)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 838)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 848)
- `responseText = mcpServerResponse as string` (—Å—Ç—Ä–æ–∫–∞ 873)
- `hasSize = responseText.includes("size") && (responseText.includes("28") || /\d+/.test(responseText))` (—Å—Ç—Ä–æ–∫–∞ 876)

#### üìÑ search-and-replace.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `anotherOldFunction()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 149)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 181)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `anotherNewFunction()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 277)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 309)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 317)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 403)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 435)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 443)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 523)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 555)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 563)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 64)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 81)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 139)
- `testFile = testFiles.simpleReplace` (—Å—Ç—Ä–æ–∫–∞ 141)
- `expectedContent = "Hello Universe\nThis is a test file\nWith multiple lines\nHello again"` (—Å—Ç—Ä–æ–∫–∞ 142)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 181)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 259)
- `testFile = testFiles.regexReplace` (—Å—Ç—Ä–æ–∫–∞ 261)
- `expectedContent = `function newFunction() {` (—Å—Ç—Ä–æ–∫–∞ 262)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 277)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 296)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 309)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 317)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 365)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 388)
- `testFile = testFiles.multipleMatches` (—Å—Ç—Ä–æ–∫–∞ 390)
- `expectedContent = `DONE: Fix this bug` (—Å—Ç—Ä–æ–∫–∞ 391)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 403)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 422)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 435)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 443)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 490)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 513)
- `testFile = testFiles.noMatches` (—Å—Ç—Ä–æ–∫–∞ 515)
- `expectedContent = testFile.content // Should remain unchanged` (—Å—Ç—Ä–æ–∫–∞ 516)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 523)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 542)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 555)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 563)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 610)

#### üìÑ read-file.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 194)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 276)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 320)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 387)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 431)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 500)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 518)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 571)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 642)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 657)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 715)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 735)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceDir = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath || tempDir` (—Å—Ç—Ä–æ–∫–∞ 30)
- `largeContent = Array.from(` (—Å—Ç—Ä–æ–∫–∞ 48)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 124)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 133)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 138)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 145)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 194)
- `fileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 205)
- `actualContent = (toolResult as string).replace(/^\d+\s*\|\s*/, "")` (—Å—Ç—Ä–æ–∫–∞ 242)
- `hasContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 250)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 269)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 281)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 288)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 320)
- `fileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 330)
- `lines = (toolResult as string).split("\n").map((line) => {` (—Å—Ç—Ä–æ–∫–∞ 350)
- `match = line.match(/^\d+\s*\|\s*(.*)$/)` (—Å—Ç—Ä–æ–∫–∞ 351)
- `actualContent = lines.join("\n")` (—Å—Ç—Ä–æ–∫–∞ 354)
- `expectedContent = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5"` (—Å—Ç—Ä–æ–∫–∞ 355)
- `hasLineCount = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 363)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 380)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 387)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 392)
- `requestData = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 399)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 431)
- `fileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 441)
- `hasLines = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 476)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 493)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 500)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 505)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 518)
- `nonExistentFile = `non-existent-${Date.now()}.txt`` (—Å—Ç—Ä–æ–∫–∞ 528)
- `completionMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 546)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 565)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 571)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 576)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 591)
- `fileName = path.basename(testFiles.xmlContent)` (—Å—Ç—Ä–æ–∫–∞ 601)
- `hasXMLContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 619)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 636)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 642)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 647)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 657)
- `simpleFileName = path.basename(testFiles.simple)` (—Å—Ç—Ä–æ–∫–∞ 667)
- `multilineFileName = path.basename(testFiles.multiline)` (—Å—Ç—Ä–æ–∫–∞ 668)
- `hasContent = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 692)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 709)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 715)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 720)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 735)
- `fileName = path.basename(testFiles.large)` (—Å—Ç—Ä–æ–∫–∞ 745)
- `hasPattern = messages.some(` (—Å—Ç—Ä–æ–∫–∞ 763)

#### üìÑ list-files.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 184)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 287)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 316)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 397)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 426)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 514)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 529)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 31)
- `testDirName = `list-files-test-${Date.now()}`` (—Å—Ç—Ä–æ–∫–∞ 39)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 40)
- `nestedDir = path.join(testDir, "nested")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `deepNestedDir = path.join(nestedDir, "deep")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 139)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 140)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 177)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 184)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 189)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 213)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 223)
- `expectedFiles = ["root-file-1.txt", "root-file-2.js", "config.yaml", "README.md", ".hidden-file"]` (—Å—Ç—Ä–æ–∫–∞ 246)
- `expectedDirs = ["nested/"]` (—Å—Ç—Ä–æ–∫–∞ 247)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 249)
- `nestedFiles = ["nested-file-1.md", "nested-file-2.json", "deep-nested-file.ts"]` (—Å—Ç—Ä–æ–∫–∞ 263)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 280)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 292)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 299)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 301)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 316)
- `testDirName = path.basename(path.dirname(testFiles.rootFile1))` (—Å—Ç—Ä–æ–∫–∞ 326)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 348)
- `shouldIncludeFiles = [` (—Å—Ç—Ä–æ–∫–∞ 360)
- `shouldIncludeDirs = ["nested/", "deep/"]` (—Å—Ç—Ä–æ–∫–∞ 370)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 390)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 397)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 402)
- `jsonMatch = text.match(/\{"request":".*?"\}/)` (—Å—Ç—Ä–æ–∫–∞ 409)
- `requestData = JSON.parse(jsonMatch[0])` (—Å—Ç—Ä–æ–∫–∞ 411)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 426)
- `testDirName = `symlink-test-${Date.now()}`` (—Å—Ç—Ä–æ–∫–∞ 436)
- `testDir = path.join(workspaceDir, testDirName)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `sourceDir = path.join(testDir, "source")` (—Å—Ç—Ä–æ–∫–∞ 441)
- `sourceFile = path.join(sourceDir, "source-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 443)
- `symlinkFile = path.join(testDir, "link-to-file.txt")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `symlinkDir = path.join(testDir, "link-to-dir")` (—Å—Ç—Ä–æ–∫–∞ 448)
- `results = listResults as string` (—Å—Ç—Ä–æ–∫–∞ 483)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 508)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 514)
- `text = message.text || ""` (—Å—Ç—Ä–æ–∫–∞ 519)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 529)
- `completionMessage = messages.find(` (—Å—Ç—Ä–æ–∫–∞ 558)

#### üìÑ insert-content.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `goodbye()` (—Å—Ç—Ä–æ–∫–∞ 29)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 260)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 292)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 300)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 394)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 402)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 461)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 496)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 504)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 51)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 68)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 82)
- `testFile = testFiles.simpleText` (—Å—Ç—Ä–æ–∫–∞ 109)
- `insertContent = "New first line"` (—Å—Ç—Ä–æ–∫–∞ 110)
- `expectedContent = `${insertContent}` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 138)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 159)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 202)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 248)
- `testFile = testFiles.simpleText` (—Å—Ç—Ä–æ–∫–∞ 250)
- `insertContent = "New last line"` (—Å—Ç—Ä–æ–∫–∞ 251)
- `expectedContent = `${testFile.content}` (—Å—Ç—Ä–æ–∫–∞ 252)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 260)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 279)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 292)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 300)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 343)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 348)
- `testFile = testFiles.jsFile` (—Å—Ç—Ä–æ–∫–∞ 350)
- `insertContent = `// New import statements` (—Å—Ç—Ä–æ–∫–∞ 351)
- `expectedContent = `${insertContent}` (—Å—Ç—Ä–æ–∫–∞ 354)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 362)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 381)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 394)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 402)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 448)
- `testFile = testFiles.emptyFile` (—Å—Ç—Ä–æ–∫–∞ 450)
- `insertContent = `# My New File` (—Å—Ç—Ä–æ–∫–∞ 451)
- `expectedContent = insertContent` (—Å—Ç—Ä–æ–∫–∞ 454)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 461)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 483)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 504)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 547)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 581)

#### üìÑ execute-command.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 257)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 346)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 379)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 459)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 490)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 498)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 43)
- `subDir = path.join(workspaceDir, "test-subdir")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 116)
- `testFile = testFiles.simpleEcho` (—Å—Ç—Ä–æ–∫–∞ 117)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 125)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 151)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 159)
- `content = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 218)
- `subDir = path.join(workspaceDir, "test-subdir")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 230)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 257)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `outputPath = path.join(subDir, "output.txt")` (—Å—Ç—Ä–æ–∫–∞ 313)
- `content = await fs.readFile(outputPath, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 314)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 337)
- `testFile = testFiles.multiCommand` (—Å—Ç—Ä–æ–∫–∞ 338)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 346)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 356)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 371)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 379)
- `content = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 436)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 450)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 459)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 475)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 490)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 498)
- `sleepCommand = process.platform === "win32" ? "timeout /t 3 /nobreak" : "sleep 3"` (—Å—Ç—Ä–æ–∫–∞ 509)

#### üìÑ apply-diff.test.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `oldFunction()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `keepThis()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `validateInput()` (—Å—Ç—Ä–æ–∫–∞ 65)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 166)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 285)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 311)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 319)
- `newFunction()` (—Å—Ç—Ä–æ–∫–∞ 391)
- `keepThis()` (—Å—Ç—Ä–æ–∫–∞ 396)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 407)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 430)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 437)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 506)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 538)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `checkInput()` (—Å—Ç—Ä–æ–∫–∞ 622)
- `messageHandler(message: C)` (—Å—Ç—Ä–æ–∫–∞ 636)
- `taskStartedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 669)
- `taskCompletedHandler(id: s)` (—Å—Ç—Ä–æ–∫–∞ 677)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `testFiles = {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `sum = x + y` (—Å—Ç—Ä–æ–∫–∞ 26)
- `product = x * y` (—Å—Ç—Ä–æ–∫–∞ 27)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `workspaceFolders = vscode.workspace.workspaceFolders` (—Å—Ç—Ä–æ–∫–∞ 79)
- `exists = await fs` (—Å—Ç—Ä–æ–∫–∞ 96)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 156)
- `testFile = testFiles.simpleModify` (—Å—Ç—Ä–æ–∫–∞ 158)
- `expectedContent = "Hello Universe\nThis is a test file\nWith multiple lines"` (—Å—Ç—Ä–æ–∫–∞ 159)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 166)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 198)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 247)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 272)
- `testFile = testFiles.multipleReplace` (—Å—Ç—Ä–æ–∫–∞ 274)
- `expectedContent = `function compute(a, b) {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `total = a + b` (—Å—Ç—Ä–æ–∫–∞ 276)
- `result = a * b` (—Å—Ç—Ä–æ–∫–∞ 277)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 285)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 298)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 311)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 362)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 387)
- `testFile = testFiles.lineNumbers` (—Å—Ç—Ä–æ–∫–∞ 389)
- `expectedContent = `// Header comment` (—Å—Ç—Ä–æ–∫–∞ 390)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 407)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 417)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 430)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 437)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 474)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 497)
- `testFile = testFiles.errorHandling` (—Å—Ç—Ä–æ–∫–∞ 499)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 506)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 525)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 538)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 545)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 585)
- `api = globalThis.api` (—Å—Ç—Ä–æ–∫–∞ 608)
- `testFile = testFiles.multiSearchReplace` (—Å—Ç—Ä–æ–∫–∞ 610)
- `expectedContent = `function transformData(data) {` (—Å—Ç—Ä–æ–∫–∞ 611)
- `config = {` (—Å—Ç—Ä–æ–∫–∞ 617)
- `messageHandler = ({ message }: { message: ClineMessage }) => {` (—Å—Ç—Ä–æ–∫–∞ 636)
- `requestData = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 655)
- `taskStartedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 669)
- `taskCompletedHandler = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 677)
- `actualContent = await fs.readFile(testFile.path, "utf-8")` (—Å—Ç—Ä–æ–∫–∞ 728)

### üìÇ apps/web-evals/src/lib/server/__tests__

#### üìÑ sse-stream.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `writePromise = stream.write("test message")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `result = await writePromise` (—Å—Ç—Ä–æ–∫–∞ 28)
- `testData = { message: "test", id: 123 }` (—Å—Ç—Ä–æ–∫–∞ 34)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `writePromise = stream.write(testData)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `result = await writePromise` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await stream.write("test message")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `writePromise = stream.write("hello world")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `text = decoder.decode(value)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `testData = { type: "test", message: "hello" }` (—Å—Ç—Ä–æ–∫–∞ 99)
- `writePromise = stream.write(testData)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `text = decoder.decode(value)` (—Å—Ç—Ä–æ–∫–∞ 104)

### üìÇ apps/web-evals/src/app/api/health

#### üìÑ route.ts

### üìÇ build-src/webview-ui/src/components/ui/hooks/__tests__

#### üìÑ useSelectedModel.spec.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 20)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseRouterModels = useRouterModels as Mock<typeof useRouterModels>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockUseOpenRouterModelProviders = useOpenRouterModelProviders as Mock<typeof useOpenRouterModelProviders>` (—Å—Ç—Ä–æ–∫–∞ 18)
- `createWrapper = () => {` (—Å—Ç—Ä–æ–∫–∞ 20)
- `queryClient = new QueryClient({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 132)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 184)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 305)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 324)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 343)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 364)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 398)
- `wrapper = createWrapper()` (—Å—Ç—Ä–æ–∫–∞ 435)

### üìÇ build-src/webview-ui/src/components/settings/utils/__tests__

#### üìÑ organizationFilters.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockProviders = [` (—Å—Ç—Ä–æ–∫–∞ 6)
- `result = filterProviders(mockProviders, undefined)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `result = filterProviders(mockProviders, allowList)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `result = filterProviders(mockProviders, allowList)` (—Å—Ç—Ä–æ–∫–∞ 41)
- `result = filterModels(mockModels, "anthropic", undefined)` (—Å—Ç—Ä–æ–∫–∞ 50)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = filterModels(mockModels, "anthropic", allowList)` (—Å—Ç—Ä–æ–∫–∞ 116)

#### üìÑ headers.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 10)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 24)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 68)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 84)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `result = convertHeadersToObject(headers)` (—Å—Ç—Ä–æ–∫–∞ 114)

### üìÇ build-src/packages/evals/src/db/queries/__tests__

#### üìÑ runs.test.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({ model: "gpt-4.1-mini", socketPath: "/tmp/roo.sock" })` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ copyRun.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await createRun({` (—Å—Ç—Ä–æ–∫–∞ 21)
- `runTaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 31)
- `task1TaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 52)
- `task1 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 68)
- `task2TaskMetrics = await createTaskMetrics({` (—Å—Ç—Ä–æ–∫–∞ 80)
- `task2 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 96)
- `task3 = await createTask({` (—Å—Ç—Ä–æ–∫–∞ 108)
- `toolError1 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 120)
- `toolError2 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 129)
- `toolError3 = await createToolError({` (—Å—Ç—Ä–æ–∫–∞ 138)
- `newRunId = await copyRun({ sourceDb: db, targetDb: db, runId: sourceRunId })` (—Å—Ç—Ä–æ–∫–∞ 171)
- `copiedRun = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 176)
- `copiedTasks = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 196)
- `goTask = copiedTasks.find((t) => t.language === "go")!` (—Å—Ç—Ä–æ–∫–∞ 204)
- `pythonTask = copiedTasks.find((t) => t.language === "python")!` (—Å—Ç—Ä–æ–∫–∞ 214)
- `rustTask = copiedTasks.find((t) => t.language === "rust")!` (—Å—Ç—Ä–æ–∫–∞ 220)
- `copiedToolErrors = await db.query.toolErrors.findMany({` (—Å—Ç—Ä–æ–∫–∞ 225)
- `taskToolErrors = copiedToolErrors.filter((te) => te.taskId !== null)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `runToolErrors = copiedToolErrors.filter((te) => te.taskId === null)` (—Å—Ç—Ä–æ–∫–∞ 232)
- `browserError = runToolErrors.find((te) => te.toolName === "browser_action")!` (—Å—Ç—Ä–æ–∫–∞ 237)
- `copiedRunForCleanup = await db.query.runs.findFirst({` (—Å—Ç—Ä–æ–∫–∞ 243)
- `copiedTasksForCleanup = await db.query.tasks.findMany({` (—Å—Ç—Ä–æ–∫–∞ 250)
- `taskMetricsToDelete = copiedTasksForCleanup` (—Å—Ç—Ä–æ–∫–∞ 255)
- `minimalRun = await createRun({ model: "gpt-3.5-turbo", socketPath: "/tmp/minimal.sock", timeout: 5 })` (—Å—Ç—Ä–æ–∫–∞ 275)
- `newRunId = await copyRun({ sourceDb: db, targetDb: db, runId: minimalRun.id })` (—Å—Ç—Ä–æ–∫–∞ 277)
- `copiedRun = await db.query.runs.findFirst({ where: eq(schema.runs.id, newRunId) })` (—Å—Ç—Ä–æ–∫–∞ 279)

### üìÇ build-src/apps/web-evals/src/lib/server/__tests__

#### üìÑ sse-stream.spec.ts

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `writePromise = stream.write("test message")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `result = await writePromise` (—Å—Ç—Ä–æ–∫–∞ 28)
- `testData = { message: "test", id: 123 }` (—Å—Ç—Ä–æ–∫–∞ 34)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `writePromise = stream.write(testData)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `result = await writePromise` (—Å—Ç—Ä–æ–∫–∞ 46)
- `result = await stream.write("test message")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 78)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 79)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `writePromise = stream.write("hello world")` (—Å—Ç—Ä–æ–∫–∞ 82)
- `text = decoder.decode(value)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `response = stream.getResponse()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `reader = response.body?.getReader()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `decoder = new TextDecoder()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `testData = { type: "test", message: "hello" }` (—Å—Ç—Ä–æ–∫–∞ 99)
- `writePromise = stream.write(testData)` (—Å—Ç—Ä–æ–∫–∞ 100)
- `text = decoder.decode(value)` (—Å—Ç—Ä–æ–∫–∞ 104)

### üìÇ build-src/apps/web-evals/src/app/api/health

#### üìÑ route.ts

### üìÇ apps/web-evals/src/app/api/runs/[id]/stream

#### üìÑ route.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async onMessage(data: s)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `async disconnect()` (—Å—Ç—Ä–æ–∫–∞ 39)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestId = crypto.randomUUID()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `stream = new SSEStream()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `run = await findRun(Number(id))` (—Å—Ç—Ä–æ–∫–∞ 15)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `channelName = `evals:${run.id}`` (—Å—Ç—Ä–æ–∫–∞ 19)
- `onMessage = async (data: string) => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `taskEvent = taskEventSchema.parse(JSON.parse(data))` (—Å—Ç—Ä–æ–∫–∞ 27)
- `writeSuccess = await stream.write(JSON.stringify(taskEvent))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `disconnect = async () => {` (—Å—Ç—Ä–æ–∫–∞ 39)

### üìÇ build-src/apps/web-evals/src/app/api/runs/[id]/stream

#### üìÑ route.ts

**–§—É–Ω–∫—Ü–∏–∏:**

- `async onMessage(data: s)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `async disconnect()` (—Å—Ç—Ä–æ–∫–∞ 39)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `requestId = crypto.randomUUID()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `stream = new SSEStream()` (—Å—Ç—Ä–æ–∫–∞ 14)
- `run = await findRun(Number(id))` (—Å—Ç—Ä–æ–∫–∞ 15)
- `redis = await redisClient()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `channelName = `evals:${run.id}`` (—Å—Ç—Ä–æ–∫–∞ 19)
- `onMessage = async (data: string) => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `taskEvent = taskEventSchema.parse(JSON.parse(data))` (—Å—Ç—Ä–æ–∫–∞ 27)
- `writeSuccess = await stream.write(JSON.stringify(taskEvent))` (—Å—Ç—Ä–æ–∫–∞ 29)
- `disconnect = async () => {` (—Å—Ç—Ä–æ–∫–∞ 39)

### üìÇ webview-ui/src/context

#### üìÑ ExtensionStateContext.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `customModePrompts = { ...prevCustomModePrompts, ...newCustomModePrompts }` (—Å—Ç—Ä–æ–∫–∞ 165)
- `experiments = { ...prevExperiments, ...newExperiments }` (—Å—Ç—Ä–æ–∫–∞ 166)
- `rest = { ...prevRest, ...newRest }` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setListApiConfigMeta = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setApiConfiguration = useCallback((value: ProviderSettings) => {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `handleMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 285)
- `newState = message.state!` (—Å—Ç—Ä–æ–∫–∞ 290)
- `paths = message.filePaths ?? []` (—Å—Ç—Ä–æ–∫–∞ 322)
- `tabs = message.openedTabs ?? []` (—Å—Ç—Ä–æ–∫–∞ 323)
- `clineMessage = message.clineMessage!` (—Å—Ç—Ä–æ–∫–∞ 334)
- `lastIndex = findLastIndex(prevState.clineMessages, (msg) => msg.ts === clineMessage.ts)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `newClineMessages = [...prevState.clineMessages]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `currentPinned = prevState.pinnedApiConfigs || {}` (—Å—Ç—Ä–æ–∫–∞ 483)
- `newPinned = {` (—Å—Ç—Ä–æ–∫–∞ 484)
- `context = useContext(ExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 526)

### üìÇ webview-ui/src/i18n/__tests__

#### üìÑ TranslationContext.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestComponent()` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 42)

### üìÇ webview-ui/src/i18n/__mocks__

#### üìÑ TranslationContext.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockTranslate(key: s): string` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTranslate = (key: string, options?: Record<string, any>): string => {` (—Å—Ç—Ä–æ–∫–∞ 4)

### üìÇ webview-ui/src/context/__tests__

#### üìÑ ExtensionStateContext.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestComponent()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ApiConfigTestComponent()` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ApiConfigTestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `consoleSpy = vi.spyOn(console, "error")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `initialContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 126)
- `updatedContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 133)
- `updatedConfig = JSON.parse(updatedContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `initialContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 157)
- `initialConfig = JSON.parse(initialContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `updatedContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 172)
- `updatedConfig = JSON.parse(updatedContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = mergeExtensionState(prevState, newState)` (—Å—Ç—Ä–æ–∫–∞ 237)

### üìÇ webview-ui/src/components/welcome

#### üìÑ WelcomeView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `WelcomeView()` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `WelcomeView = () => {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `setApiConfigurationFieldForApiOptions = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)
- `handleSubmit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `error = apiConfiguration ? validateApiConfiguration(apiConfiguration) : undefined` (—Å—Ç—Ä–æ–∫–∞ 33)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 46)
- `providers = [` (—Å—Ç—Ä–æ–∫–∞ 72)
- `orderedProviders = [...providers]` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ RooTips.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `RooTips()` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tips = [` (—Å—Ç—Ä–æ–∫–∞ 7)
- `RooTips = () => {` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ RooHero.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `RooHero()` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `RooHero = () => {` (—Å—Ç—Ä–æ–∫–∞ 3)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ RooCloudCTA.tsx

### üìÇ webview-ui/src/components/modes

#### üìÑ ModesView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGroupName(group: G): ToolGroup` (—Å—Ç—Ä–æ–∫–∞ 63)
- `ModesView()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `findMode(m: M): boolean` (—Å—Ç—Ä–æ–∫–∞ 209)
- `handleClickOutside()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 444)

**–¢–∏–ø—ã:**

- `type ModeSource` (—Å—Ç—Ä–æ–∫–∞ 56)
- `type ModesViewProps` (—Å—Ç—Ä–æ–∫–∞ 58)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `availableGroups = (Object.keys(TOOL_GROUPS) as ToolGroup[]).filter((group) => !TOOL_GROUPS[group].alwaysAvailable)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `ModesView = ({ onDone }: ModesViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `modes = useMemo(() => getAllModes(customModes), [customModes])` (—Å—Ç—Ä–æ–∫–∞ 88)
- `searchInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `updateAgentPrompt = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 119)
- `existingPrompt = customModePrompts?.[mode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 121)
- `updatedPrompt = { ...existingPrompt, ...promptData }` (—Å—Ç—Ä–æ–∫–∞ 122)
- `updateCustomMode = useCallback((slug: string, modeConfig: ModeConfig) => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `source = modeConfig.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `findModeBySlug = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 158)
- `switchMode = useCallback((slug: string) => {` (—Å—Ç—Ä–æ–∫–∞ 165)
- `handleModeSwitch = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 173)
- `onOpenChange = useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 190)
- `onClearSearch = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `getCurrentMode = useCallback((): ModeConfig | undefined => {` (—Å—Ç—Ä–æ–∫–∞ 208)
- `findMode = (m: ModeConfig): boolean => m.slug === visualMode` (—Å—Ç—Ä–æ–∫–∞ 209)
- `checkRulesDirectory = useCallback((slug: string) => {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 223)
- `getModeProperty = <T extends keyof ModeConfig>(` (—Å—Ç—Ä–æ–∫–∞ 238)
- `resetFormState = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `generateSlug = useCallback((name: string, attempt = 0): string => {` (—Å—Ç—Ä–æ–∫–∞ 289)
- `baseSlug = name` (—Å—Ç—Ä–æ–∫–∞ 290)
- `handleNameChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 298)
- `handleCreateMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 306)
- `source = newModeSource` (—Å—Ç—Ä–æ–∫–∞ 314)
- `result = modeConfigSchema.safeParse(newMode)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `field = error.path[0] as string` (—Å—Ç—Ä–æ–∫–∞ 332)
- `message = error.message` (—Å—Ç—Ä–æ–∫–∞ 333)
- `isNameOrSlugTaken = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 373)
- `openCreateModeDialog = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `baseNamePrefix = "New Custom Mode"` (—Å—Ç—Ä–æ–∫–∞ 381)
- `handleGroupChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 397)
- `target = (e as CustomEvent)?.detail?.target || (e.target as HTMLInputElement)` (—Å—Ç—Ä–æ–∫–∞ 401)
- `checked = target.checked` (—Å—Ç—Ä–æ–∫–∞ 402)
- `oldGroups = customMode?.groups || []` (—Å—Ç—Ä–æ–∫–∞ 403)
- `source = customMode.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 411)
- `handleClickOutside = () => {` (—Å—Ç—Ä–æ–∫–∞ 425)
- `modeToDeleteRef = useRef(modeToDelete)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 444)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 445)
- `currentModeToDelete = modeToDeleteRef.current` (—Å—Ç—Ä–æ–∫–∞ 477)
- `handleAgentReset = (` (—Å—Ç—Ä–æ–∫–∞ 492)
- `existingPrompt = customModePrompts?.[modeSlug] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 497)
- `updatedPrompt = { ...existingPrompt }` (—Å—Ç—Ä–æ–∫–∞ 498)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 751)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 761)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 780)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 813)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 830)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 831)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 842)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 873)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 889)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 890)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 897)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 927)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 944)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 945)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 952)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `isCustomMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `customMode = isCustomMode` (—Å—Ç—Ä–æ–∫–∞ 1006)
- `isGroupEnabled = isCustomMode` (—Å—Ç—Ä–æ–∫–∞ 1007)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `editGroup = currentMode?.groups?.find(` (—Å—Ç—Ä–æ–∫–∞ 1023)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `enabledGroups = currentMode?.groups || []` (—Å—Ç—Ä–æ–∫–∞ 1045)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 1054)
- `displayName = t(`prompts:tools.toolNames.${groupName}`)` (—Å—Ç—Ä–æ–∫–∞ 1055)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1080)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 1100)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1111)
- `existingPrompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1144)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1170)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1186)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1207)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1264)
- `target = ((e as CustomEvent)?.detail?.target ||` (—Å—Ç—Ä–æ–∫–∞ 1402)
- `checked = target.checked` (—Å—Ç—Ä–æ–∫–∞ 1494)
- `selectedLevel = (` (—Å—Ç—Ä–æ–∫–∞ 1613)

#### üìÑ DeleteModeDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DeleteModeDialogProps` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ webview-ui/src/components/mcp

#### üìÑ McpView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpView()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ServerRow(server: M)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `getStatusColor()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handleRowClick()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handleRestart()` (—Å—Ç—Ä–æ–∫–∞ 237)
- `handleTimeoutChange(event: R)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 256)

**–¢–∏–ø—ã:**

- `type McpViewProps` (—Å—Ç—Ä–æ–∫–∞ 37)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpView = ({ onDone }: McpViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ServerRow = ({ server, alwaysAllowMcp }: { server: McpServer` (—Å—Ç—Ä–æ–∫–∞ 200)
- `configTimeout = JSON.parse(server.config)?.timeout` (—Å—Ç—Ä–æ–∫–∞ 205)
- `timeoutOptions = [` (—Å—Ç—Ä–æ–∫–∞ 209)
- `getStatusColor = () => {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handleRowClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handleRestart = () => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `handleTimeoutChange = (event: React.ChangeEvent<HTMLSelectElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 245)
- `seconds = parseInt(event.target.value)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 256)

#### üìÑ McpToolRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpToolRow()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `handleAlwaysAllowChange()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleEnabledForPromptChange()` (—Å—Ç—Ä–æ–∫–∞ 32)

**–¢–∏–ø—ã:**

- `type McpToolRowProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpToolRow = ({ tool, serverName, serverSource, alwaysAllowMcp, isInChatContext = false }: McpToolRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isToolEnabled = tool.enabledForPrompt ?? true` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleAlwaysAllowChange = () => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleEnabledForPromptChange = () => {` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ McpResourceRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpResourceRow()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–¢–∏–ø—ã:**

- `type McpResourceRowProps` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpResourceRow = ({ item }: McpResourceRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `hasUri = "uri" in item` (—Å—Ç—Ä–æ–∫–∞ 8)
- `uri = hasUri ? item.uri : item.uriTemplate` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ McpErrorRow.tsx

**–¢–∏–ø—ã:**

- `type McpErrorRowProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `color = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ McpEnabledToggle.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpEnabledToggle()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `handleChange(e: E)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpEnabledToggle = () => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `handleChange = (e: Event | FormEvent<HTMLElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `target = ("target" in e ? e.target : null) as HTMLInputElement | null` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ webview-ui/src/components/human-relay

#### üìÑ HumanRelayDialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleCopy()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleSubmit(e: R)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleCancel()` (—Å—Ç—Ä–æ–∫–∞ 62)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface HumanRelayDialogProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleCopy = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleSubmit = (e: React.FormEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 62)

### üìÇ webview-ui/src/components/common

#### üìÑ ZoomControls.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `startContinuousZoom(amount: n)` - Start continuous zoom on mouse down (—Å—Ç—Ä–æ–∫–∞ 33)
- `stopContinuousZoom()` - Stop continuous zoom on mouse up or mouse leave (—Å—Ç—Ä–æ–∫–∞ 53)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ZoomControlsProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `zoomIntervalRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `startContinuousZoom = (amount: number) => {` - Start continuous zoom on mouse down (—Å—Ç—Ä–æ–∫–∞ 33)
- `stopContinuousZoom = () => {` - Stop continuous zoom on mouse up or mouse leave (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ VersionIndicator.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface VersionIndicatorProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ VSCodeButtonLink.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface VSCodeButtonLinkProps` (—Å—Ç—Ä–æ–∫–∞ 4)

#### üìÑ ToolUseBlock.tsx

#### üìÑ Thumbnails.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Thumbnails()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `handleDelete(index: n)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `handleImageClick(image: s)` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ThumbnailsProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Thumbnails = ({ images, style, setImages, onHeightChange }: ThumbnailsProps) => {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handleDelete = (index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `isDeletable = setImages !== undefined` (—Å—Ç—Ä–æ–∫–∞ 33)
- `handleImageClick = (image: string) => {` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ TelemetryBanner.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TelemetryBanner()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `handleAllow()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleDeny()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleOpenSettings()` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BannerContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 11)
- `ButtonContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 21)
- `TelemetryBanner = () => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `handleAllow = () => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleDeny = () => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleOpenSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ TabButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TabButtonProps` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ Tab.tsx

**–¢–∏–ø—ã:**

- `type TabProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onWheel = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 23)
- `target = e.target as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 29)

#### üìÑ Modal.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModalProps` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ MermaidButton.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleZoom(e: R)` - Opens a modal with the diagram for zooming (—Å—Ç—Ä–æ–∫–∞ 37)
- `async handleCopy(e: R)` - Copies the diagram text to clipboard (—Å—Ç—Ä–æ–∫–∞ 47)
- `async handleSave(e: R)` - Saves the diagram as an image file (—Å—Ç—Ä–æ–∫–∞ 64)
- `adjustZoom(amount: n)` - Adjust zoom level in the modal (—Å—Ç—Ä–æ–∫–∞ 91)
- `handleMouseEnter()` - Handle mouse enter event for diagram container (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleMouseLeave()` - Handle mouse leave event for diagram container (—Å—Ç—Ä–æ–∫–∞ 121)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MIN_ZOOM = 0.5` (—Å—Ç—Ä–æ–∫–∞ 12)
- `MAX_ZOOM = 20` (—Å—Ç—Ä–æ–∫–∞ 13)
- `handleZoom = async (e: React.MouseEvent) => {` - Opens a modal with the diagram for zooming (—Å—Ç—Ä–æ–∫–∞ 37)
- `handleCopy = async (e: React.MouseEvent) => {` - Copies the diagram text to clipboard (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleSave = async (e: React.MouseEvent) => {` - Saves the diagram as an image file (—Å—Ç—Ä–æ–∫–∞ 64)
- `svgEl = containerRef.current?.querySelector("svg")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `pngDataUrl = await svgToPng(svgEl)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `adjustZoom = (amount: number) => {` - Adjust zoom level in the modal (—Å—Ç—Ä–æ–∫–∞ 91)
- `newZoom = prev + amount` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handleWheel = useCallback((e: React.WheelEvent) => {` - Handle wheel event for zooming with scroll wheel (—Å—Ç—Ä–æ–∫–∞ 101)
- `delta = e.deltaY > 0 ? -0.2 : 0.2` (—Å—Ç—Ä–æ–∫–∞ 107)
- `handleMouseEnter = () => {` - Handle mouse enter event for diagram container (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleMouseLeave = () => {` - Handle mouse leave event for diagram container (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ MermaidBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleClick()` - Called when user clicks the rendered diagram. Converts the <svg> to a PNG and sends it to the extension. (—Å—Ç—Ä–æ–∫–∞ 138)
- `async svgToPng(svgEl: S): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 226)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MermaidBlockProps` (—Å—Ç—Ä–æ–∫–∞ 86)

- `interface SvgContainerProps` (—Å—Ç—Ä–æ–∫–∞ 312)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MERMAID_THEME = {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `id = `mermaid-${Math.random().toString(36).substring(2)}`` (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleClick = async () => {` - Called when user clicks the rendered diagram. Converts the <svg> to a PNG and sends it to the extension. (—Å—Ç—Ä–æ–∫–∞ 138)
- `svgEl = containerRef.current.querySelector("svg")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `pngDataUrl = await svgToPng(svgEl)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `combinedContent = `Error: ${error}\n\n\`\`\`mermaid\n${code}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 195)
- `svgClone = svgEl.cloneNode(true) as SVGElement` (—Å—Ç—Ä–æ–∫–∞ 228)
- `viewBox = svgClone.getAttribute("viewBox")?.split(" ").map(Number) || []` (—Å—Ç—Ä–æ–∫–∞ 231)
- `originalWidth = viewBox[2] || svgClone.clientWidth` (—Å—Ç—Ä–æ–∫–∞ 232)
- `originalHeight = viewBox[3] || svgClone.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 233)
- `editorWidth = 3_600` (—Å—Ç—Ä–æ–∫–∞ 239)
- `scale = editorWidth / originalWidth` (—Å—Ç—Ä–æ–∫–∞ 241)
- `scaledHeight = originalHeight * scale` (—Å—Ç—Ä–æ–∫–∞ 242)
- `serializer = new XMLSerializer()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `svgString = serializer.serializeToString(svgClone)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `encodedSvg = encodeURIComponent(svgString).replace(/'/g, "%27").replace(/"/g, "%22")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `svgDataUrl = `data:image/svg+xml` (—Å—Ç—Ä–æ–∫–∞ 255)
- `img = new Image()` (—Å—Ç—Ä–æ–∫–∞ 258)
- `canvas = document.createElement("canvas")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `ctx = canvas.getContext("2d")` (—Å—Ç—Ä–æ–∫–∞ 265)
- `MermaidBlockContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 283)
- `LoadingMessage = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 288)
- `CopyButton = styled.button`` (—Å—Ç—Ä–æ–∫–∞ 295)
- `SvgContainer = styled.div<SvgContainerProps>`` (—Å—Ç—Ä–æ–∫–∞ 316)

#### üìÑ MermaidActionButtons.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MermaidActionButtonsProps` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ MarkdownBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick(e: R)` (—Å—Ç—Ä–æ–∫–∞ 197)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarkdownBlockProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `StyledMarkdown = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 18)
- `MarkdownBlock = memo(({ markdown }: MarkdownBlockProps) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `components = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 187)
- `handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 197)
- `isLocalPath = href?.startsWith("file://") || href?.startsWith("/") || !href?.includes("://")` (—Å—Ç—Ä–æ–∫–∞ 199)
- `match = filePath.match(/(.*):(\d+)(-\d+)?$/)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `codeEl = children as React.ReactElement` (—Å—Ç—Ä–æ–∫–∞ 238)
- `match = /language-(\w+)/.exec(className)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `language = match ? match[1] : "text"` (—Å—Ç—Ä–æ–∫–∞ 265)

#### üìÑ IconButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IconButtonProps` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sizeClasses = {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `variantClasses = {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `handleClick = onClick || ((_event: React.MouseEvent) => {})` (—Å—Ç—Ä–æ–∫–∞ 34)
- `button = (` (—Å—Ç—Ä–æ–∫–∞ 36)

#### üìÑ FormattedTextField.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FormattedTextFieldProps` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInput = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 41)
- `input = e.target as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 43)
- `parsedValue = formatter.parse(filteredValue)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleBlur = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `displayValue = isTyping ? rawInput : formatter.format(value)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `value = parseInt(input)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `value = parseFloat(input)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `firstDotIndex = cleanValue.indexOf(".")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `beforeDot = cleanValue.substring(0, firstDotIndex + 1)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `afterDot = cleanValue.substring(firstDotIndex + 1).replace(/\./g, "")` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ DecoratedVSCodeTextField.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface WebComponentWithShadowRoot extends HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `inputRef = useRef<HTMLInputElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleVSCodeFieldRef = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)
- `webComponent = element as unknown as WebComponentWithShadowRoot` (—Å—Ç—Ä–æ–∫–∞ 29)
- `focusInput = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `hasLeftNodes = leftNodes && leftNodes.filter(Boolean).length > 0` (—Å—Ç—Ä–æ–∫–∞ 52)
- `hasRightNodes = rightNodes && rightNodes.filter(Boolean).length > 0` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ CodeBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async highlight()` (—Å—Ç—Ä–æ–∫–∞ 265)
- `handleScroll()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `handleOuterScroll()` (—Å—Ç—Ä–æ–∫–∞ 390)
- `handleScroll()` (—Å—Ç—Ä–æ–∫–∞ 494)
- `handleResize()` (—Å—Ç—Ä–æ–∫–∞ 495)
- `getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 565)
- `animate()` (—Å—Ç—Ä–æ–∫–∞ 576)
- `handleWheel(e: W)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `handleMouseDown(e: M)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `handleMouseUp()` (—Å—Ç—Ä–æ–∫–∞ 659)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeBlockProps` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CodeBlockButton = styled.button`` (—Å—Ç—Ä–æ–∫–∞ 44)
- `CodeBlockButtonWrapper = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 72)
- `CodeBlockContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 100)
- `LanguageSelect = styled.select`` (—Å—Ç—Ä–æ–∫–∞ 170)
- `CodeBlock = memo(` (—Å—Ç—Ä–æ–∫–∞ 216)
- `userChangedLanguageRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `codeBlockRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `preRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `copyButtonWrapperRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isMountedRef = useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `buttonPositionTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `collapseTimeout1Ref = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `collapseTimeout2Ref = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `normalizedLang = normalizeLanguage(language)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `fallback = (` (—Å—Ç—Ä–æ–∫–∞ 259)
- `highlight = async () => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `highlighter = await getHighlighter(currentLanguage)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `hast = await highlighter.codeToHast(source || "", {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `reactElement = toJsxRuntime(hast, {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 349)
- `actualHeight = codeBlock.scrollHeight` (—Å—Ç—Ä–æ–∫–∞ 352)
- `wasScrolledUpRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `outerContainerNearBottomRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 366)
- `handleScroll = () => {` (—Å—Ç—Ä–æ–∫–∞ 369)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 387)
- `handleOuterScroll = () => {` (—Å—Ç—Ä–æ–∫–∞ 390)
- `shouldScrollAfterHighlightRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `updateCodeBlockButtonPosition = useCallback((forceHide = false) => {` (—Å—Ç—Ä–æ–∫–∞ 420)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 421)
- `copyWrapper = copyButtonWrapperRef.current` (—Å—Ç—Ä–æ–∫–∞ 422)
- `rectCodeBlock = codeBlock.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 428)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 429)
- `copyRect = copyWrapper.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 439)
- `buttonRect = copyWrapper.children[0].getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 446)
- `buttonStyle = window.getComputedStyle(copyWrapper.children[0] as Element)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `fontSize = parseInt(window.getComputedStyle(document.body).getPropertyValue("font-size"), 10)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `scrollRect = scrollContainer.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `copyButtonEdge = 48` (—Å—Ç—Ä–æ–∫–∞ 462)
- `computedStyle = window.getComputedStyle(codeBlock)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `paddingValue = parseInt(computedStyle.getPropertyValue("padding") || "0", 10)` (—Å—Ç—Ä–æ–∫–∞ 469)
- `isVisible = !forceHide && isPartiallyVisible` (—Å—Ç—Ä–æ–∫–∞ 474)
- `topPosition = Math.max(` (—Å—Ç—Ä–æ–∫–∞ 482)
- `rightPosition = Math.max(margin, scrollRect.right - rectCodeBlock.right + margin)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `handleScroll = () => updateCodeBlockButtonPosition()` (—Å—Ç—Ä–æ–∫–∞ 494)
- `handleResize = () => updateCodeBlockButtonPosition()` (—Å—Ç—Ä–æ–∫–∞ 495)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 497)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 535)
- `getScrollContainer = () => {` (—Å—Ç—Ä–æ–∫–∞ 565)
- `FRICTION = 0.85 // Friction coefficient (lower = more friction)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `MIN_VELOCITY = 0.5 // Minimum velocity before stopping` (—Å—Ç—Ä–æ–∫–∞ 573)
- `animate = () => {` (—Å—Ç—Ä–æ–∫–∞ 576)
- `scrollContainer = getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 577)
- `handleWheel = (e: WheelEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 592)
- `hasScrollbar = preRef.current.scrollHeight > preRef.current.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 601)
- `scrollContainer = getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 608)
- `isAtVeryTop = preRef.current.scrollTop === 0` (—Å—Ç—Ä–æ–∫–∞ 612)
- `boost = 0.15` (—Å—Ç—Ä–æ–∫–∞ 621)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 632)
- `handleMouseDown = (e: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 652)
- `handleMouseUp = () => {` (—Å—Ç—Ä–æ–∫–∞ 659)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 663)
- `handleCopy = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 673)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 678)
- `textToCopy = rawSource !== undefined ? rawSource : source || ""` (—Å—Ç—Ä–æ–∫–∞ 682)
- `newLang = normalizeLanguage(e.target.value)` (—Å—Ç—Ä–æ–∫–∞ 719)
- `normalizedLang = normalizeLanguage(lang)` (—Å—Ç—Ä–æ–∫–∞ 736)
- `codeBlock = codeBlockRef.current // Capture ref early` (—Å—Ç—Ä–æ–∫–∞ 759)
- `MemoizedCodeContent = memo(({ children }: { children: React.ReactNode }) => <>{children}</>)` (—Å—Ç—Ä–æ–∫–∞ 810)
- `MemoizedStyledPre = memo(` (—Å—Ç—Ä–æ–∫–∞ 813)

#### üìÑ CodeAccordian.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeAccordianProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CodeAccordian = ({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `inferredLanguage = useMemo(() => language ?? (path ? getLanguageFromPath(path) : "txt"), [path, language])` (—Å—Ç—Ä–æ–∫–∞ 35)
- `source = useMemo(() => code.trim(), [code])` (—Å—Ç—Ä–æ–∫–∞ 36)
- `hasHeader = Boolean(path || isFeedback || header)` (—Å—Ç—Ä–æ–∫–∞ 37)

### üìÇ webview-ui/src/components/chat

#### üìÑ UpdateTodoListToolBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `genId()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleContentChange(id: s, value: s)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleStatusChange(id: s, status: s)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `handleDelete(id: s)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `confirmDelete()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `cancelDelete()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `handleAdd()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleNewInputKeyDown(e: R)` (—Å—Ç—Ä–æ–∫–∞ 138)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TodoItem` (—Å—Ç—Ä–æ–∫–∞ 5)

- `interface UpdateTodoListToolBlockProps` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `STATUS_OPTIONS = [` (—Å—Ç—Ä–æ–∫–∞ 29)
- `genId = () => Math.random().toString(36).slice(2, 10)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `newInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `handleContentChange = (id: string, value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `newTodos = editTodos.map((todo) => (todo.id === id ? { ...todo, content: value } : todo))` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleStatusChange = (id: string, status: string) => {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `newTodos = editTodos.map((todo) => (todo.id === id ? { ...todo, status } : todo))` (—Å—Ç—Ä–æ–∫–∞ 104)
- `handleDelete = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 110)
- `confirmDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `newTodos = editTodos.filter((todo) => todo.id !== deleteId)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `cancelDelete = () => setDeleteId(null)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `handleAdd = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `newTodos = [...editTodos, newTodo]` (—Å—Ç—Ä–æ–∫–∞ 130)
- `handleNewInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 138)

#### üìÑ TodoListDisplay.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMostImportantTodoIcon()` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ulRef = useRef<HTMLUListElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 5)
- `itemRefs = useRef<(HTMLLIElement | null)[]>([])` (—Å—Ç—Ä–æ–∫–∞ 6)
- `scrollIndex = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `inProgressIdx = todos.findIndex((todo: any) => todo.status === "in_progress")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mostImportantTodo = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `inProgress = todos.find((todo: any) => todo.status === "in_progress")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `target = itemRefs.current[scrollIndex]` (—Å—Ç—Ä–æ–∫–∞ 23)
- `ul = ulRef.current` (—Å—Ç—Ä–æ–∫–∞ 25)
- `targetTop = target.offsetTop - ul.offsetTop` (—Å—Ç—Ä–æ–∫–∞ 26)
- `targetHeight = target.offsetHeight` (—Å—Ç—Ä–æ–∫–∞ 27)
- `ulHeight = ul.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 28)
- `scrollTo = targetTop - (ulHeight / 2 - targetHeight / 2)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `totalCount = todos.length` (—Å—Ç—Ä–æ–∫–∞ 35)
- `completedCount = todos.filter((todo: any) => todo.status === "completed").length` (—Å—Ç—Ä–æ–∫–∞ 36)
- `allCompleted = completedCount === totalCount && totalCount > 0` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getMostImportantTodoIcon = () => {` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ TaskHeader.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TaskHeader = ({` (—Å—Ç—Ä–æ–∫–∞ 39)
- `textContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `textRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `contextWindow = model?.contextWindow || 1` (—Å—Ç—Ä–æ–∫–∞ 59)
- `condenseButton = (` (—Å—Ç—Ä–æ–∫–∞ 63)
- `hasTodos = todos && Array.isArray(todos) && todos.length > 0` (—Å—Ç—Ä–æ–∫–∞ 74)

#### üìÑ TaskActions.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TaskActionsProps` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ SystemPromptWarning.tsx

#### üìÑ SlashCommandsPopover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleRefresh()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `handleOpenChange(open: b)` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandsPopoverProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `handleRefresh = () => {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `handleOpenChange = (open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `trigger = (` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ SlashCommandsList.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleDeleteClick(command: C)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleDeleteConfirm()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleDeleteCancel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handleCreateCommand(source: ", name: s)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `handleCommandClick(command: C)` (—Å—Ç—Ä–æ–∫–∞ 84)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandsListProps` (—Å—Ç—Ä–æ–∫–∞ 23)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasWorkspace = Boolean(cwd)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `handleDeleteClick = (command: Command) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleDeleteConfirm = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleDeleteCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handleCreateCommand = (source: "global" | "project", name: string) => {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `fileName = name.trim().endsWith(".md") ? name.trim() : `${name.trim()}.md`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `handleCommandClick = (command: Command) => {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `globalCommands = commands.filter((cmd) => cmd.source === "global")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `projectCommands = commands.filter((cmd) => cmd.source === "project")` (—Å—Ç—Ä–æ–∫–∞ 94)

#### üìÑ SlashCommandItem.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleEdit()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandItemProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleEdit = () => {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ ShareButton.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handleShare(visibility: S)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleConnectToCloud()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleShareButtonClick()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getShareButtonState()` (—Å—Ç—Ä–æ–∫–∞ 121)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ShareButtonProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasUnauthenticatedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `initiatedAuthFromThisButtonRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 60)
- `handleShare = (visibility: ShareVisibility) => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleConnectToCloud = () => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleShareButtonClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getShareButtonState = () => {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `shareButtonState = getShareButtonState()` (—Å—Ç—Ä–æ–∫–∞ 143)

#### üìÑ ReasoningBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ReasoningBlockProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contentRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `elapsedRef = useRef<number>(0)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `cursorRef = useRef<number>(0)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `queueRef = useRef<string[]>([])` (—Å—Ç—Ä–æ–∫–∞ 23)
- `processNextTransition = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `nextThought = queueRef.current.pop()` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ QueuedMessages.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEditState(messageId: s, currentText: s)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `setEditState(messageId: s, isEditing: b)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleSaveEdit(index: n, messageId: s, newValue: s)` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface QueuedMessagesProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getEditState = (messageId: string, currentText: string) => {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `setEditState = (messageId: string, isEditing: boolean, value?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleSaveEdit = (index: number, messageId: string, newValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `editState = getEditState(message.id, message.text)` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ ProgressIndicator.tsx

#### üìÑ ProfileViolationWarning.tsx

#### üìÑ ModeSelector.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModeSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SEARCH_THRESHOLD = 6` (—Å—Ç—Ä–æ–∫–∞ 17)
- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `trackModeSelectorOpened = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `modes = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `selectedMode = React.useMemo(() => modes.find((mode) => mode.slug === value), [modes, value])` (—Å—Ç—Ä–æ–∫–∞ 70)
- `nameSearchItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `descriptionSearchItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 80)
- `nameFzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 88)
- `descriptionFzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `filteredModes = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `nameMatches = nameFzfInstance.find(searchValue)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `nameMatchedModes = new Set(nameMatches.map((result) => result.item.original.slug))` (—Å—Ç—Ä–æ–∫–∞ 106)
- `descriptionMatches = descriptionFzfInstance.find(searchValue)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `combinedResults = [` (—Å—Ç—Ä–æ–∫–∞ 112)
- `onClearSearch = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `handleSelect = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 127)
- `onOpenChange = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `showSearch = !disableSearch && modes.length > SEARCH_THRESHOLD` (—Å—Ç—Ä–æ–∫–∞ 157)
- `instructionText = `${t("chat:modeSelector.description")} ${modeShortcutText}`` (—Å—Ç—Ä–æ–∫–∞ 160)
- `trigger = (` (—Å—Ç—Ä–æ–∫–∞ 162)

#### üìÑ MessageModificationConfirmationDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MessageModificationConfirmationDialogProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isEdit = type === "edit"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `title = isEdit ? t("common:confirmation.editMessage") : t("common:confirmation.deleteMessage")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `description = isEdit ? t("common:confirmation.editWarning") : t("common:confirmation.deleteWarning")` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ Mention.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MentionProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parts = text.split(mentionRegexGlobal).map((part, index) => {` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ McpExecution.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface McpExecutionProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tryParseJson = useCallback((text: string): { isJson: boolean` (—Å—Ç—Ä–æ–∫–∞ 56)
- `parsed = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `responseData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `argumentsData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `trimmed = argumentsText.trim()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `parsed = JSON.parse(trimmed)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `formattedResponseText = responseData.formatted` (—Å—Ç—Ä–æ–∫–∞ 117)
- `formattedArgumentsText = argumentsData.formatted` (—Å—Ç—Ä–æ–∫–∞ 118)
- `responseIsJson = responseData.isJson` (—Å—Ç—Ä–æ–∫–∞ 119)
- `onToggleResponseExpand = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = mcpExecutionStatusSchema.safeParse(safeJsonParse(message.text || "{}", {}))` (—Å—Ç—Ä–æ–∫–∞ 132)
- `data = result.data` (—Å—Ç—Ä–æ–∫–∞ 135)
- `ResponseContainerInternal = ({` (—Å—Ç—Ä–æ–∫–∞ 291)
- `ResponseContainer = memo(ResponseContainerInternal)` (—Å—Ç—Ä–æ–∫–∞ 330)

#### üìÑ Markdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `success = await copyWithFeedback(markdown)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `button = document.activeElement as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 51)

#### üìÑ IndexingStatusBadge.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `getTooltipText()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `handleMouseEnterButton()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleMouseLeaveButton()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getStatusColorClass()` (—Å—Ç—Ä–æ–∫–∞ 82)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IndexingStatusBadgeProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent<IndexingStatusUpdateMessage>) => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `status = event.data.values` (—Å—Ç—Ä–æ–∫–∞ 33)
- `progressPercentage = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 47)
- `getTooltipText = () => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `handleMouseEnterButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleMouseLeaveButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getStatusColorClass = () => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `statusColors = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `colors = statusColors[indexingStatus.systemStatus as keyof typeof statusColors] || statusColors.Standby` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ IconButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonClasses = cn(` (—Å—Ç—Ä–æ–∫–∞ 22)
- `iconClasses = cn("codicon", iconClass, isLoading && "codicon-modifier-spin")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `button = (` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ FollowUpSuggest.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FollowUpSuggestProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_FOLLOWUP_TIMEOUT_MS = 60000` (—Å—Ç—Ä–æ–∫–∞ 10)
- `COUNTDOWN_INTERVAL_MS = 1000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `intervalId = setInterval(() => {` (—Å—Ç—Ä–æ–∫–∞ 54)
- `handleSuggestionClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 83)
- `isFirstSuggestion = index === 0` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ EditModeControls.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface EditModeControlsProps` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ ContextWindowProgress.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContextWindowProgressProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tokenDistribution = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 18)
- `safeContextWindow = Math.max(0, contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `safeContextTokens = Math.max(0, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `tooltipContent = (` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ ContextMenu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderOptionContent(option: C)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `getIconForOption(option: C): string` (—Å—Ç—Ä–æ–∫–∞ 210)
- `getMaterialIconForOption(option: C): string` (—Å—Ç—Ä–æ–∫–∞ 237)
- `isOptionSelectable(option: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 246)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContextMenuProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `menuRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `filteredOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `selectedElement = menuRef.current.children[selectedIndex] as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 51)
- `menuRect = menuRef.current.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `selectedRect = selectedElement.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 67)
- `renderOptionContent = (option: ContextMenuQueryItem) => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `path = removeLeadingNonAlphanumeric(option.value || "").replace(/\/$/, "")` (—Å—Ç—Ä–æ–∫–∞ 172)
- `pathList = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `filename = pathList.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `folderPath = pathList.slice(0, -1).join("/")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `getIconForOption = (option: ContextMenuQueryItem): string => {` (—Å—Ç—Ä–æ–∫–∞ 210)
- `getMaterialIconForOption = (option: ContextMenuQueryItem): string => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `name = option.value?.split("/").filter(Boolean).at(-1) ?? ""` (—Å—Ç—Ä–æ–∫–∞ 240)
- `isOptionSelectable = (option: ContextMenuQueryItem): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 246)

#### üìÑ ContextCondenseRow.tsx

#### üìÑ CommandPatternSelector.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleOpenSettings()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `getPatternStatus(pattern: s): "allowed" | "denied" | "none"` (—Å—Ç—Ä–æ–∫–∞ 60)
- `getEditState(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `setEditState(pattern: s, isEditing: b)` (—Å—Ç—Ä–æ–∫–∞ 70)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CommandPattern` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface CommandPatternSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleOpenSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `allPatterns = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `trimmedCommand = command.trim()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `seenPatterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `uniquePatterns = patterns.filter((p) => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `getPatternStatus = (pattern: string): "allowed" | "denied" | "none" => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `getEditState = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `setEditState = (pattern: string, isEditing: boolean, value?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 70)
- `editState = getEditState(item.pattern)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `status = getPatternStatus(editState.value)` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ CommandExecutionError.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onClick = useCallback((e: React.MouseEvent<HTMLAnchorElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ CommandExecution.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleAllowPatternChange(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `handleDenyPatternChange(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `OutputContainerInternal(isExpanded: b, output: s)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `parseCommandAndOutput(text: s)` (—Å—Ç—Ä–æ–∫–∞ 222)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CommandPattern` (—Å—Ç—Ä–æ–∫–∞ 21)

- `interface CommandExecutionProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `output = streamingOutput || parsedOutput` (—Å—Ç—Ä–æ–∫–∞ 53)
- `commandPatterns = useMemo<CommandPattern[]>(() => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `allCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `allPatterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 61)
- `patterns = extractPatternsFromCommand(cmd)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `handleAllowPatternChange = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `isAllowed = allowedCommands.includes(pattern)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `newAllowed = isAllowed ? allowedCommands.filter((p) => p !== pattern) : [...allowedCommands, pattern]` (—Å—Ç—Ä–æ–∫–∞ 84)
- `newDenied = deniedCommands.filter((p) => p !== pattern)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `handleDenyPatternChange = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `isDenied = deniedCommands.includes(pattern)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `newDenied = isDenied ? deniedCommands.filter((p) => p !== pattern) : [...deniedCommands, pattern]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `newAllowed = allowedCommands.filter((p) => p !== pattern)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = commandExecutionStatusSchema.safeParse(safeJsonParse(message.text, {}))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `data = result.data` (—Å—Ç—Ä–æ–∫–∞ 112)
- `OutputContainerInternal = ({ isExpanded, output }: { isExpanded: boolean` (—Å—Ç—Ä–æ–∫–∞ 210)
- `OutputContainer = memo(OutputContainerInternal)` (—Å—Ç—Ä–æ–∫–∞ 220)
- `parseCommandAndOutput = (text: string | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `index = text.indexOf(COMMAND_OUTPUT_STRING)` (—Å—Ç—Ä–æ–∫–∞ 227)

#### üìÑ CodebaseSearchResultsDisplay.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodebaseSearchResultsDisplayProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ CodebaseSearchResult.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodebaseSearchResultProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ CodeIndexPopover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createValidationSchema(provider: E, t: a)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getDefaultSettings(): LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 168)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 280)
- `updateWithSecrets(prev: L): LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 286)
- `updateSetting(key: k, value: a)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `validateSettings(): boolean` (—Å—Ç—Ä–æ–∫–∞ 370)
- `handleSaveSettings()` (—Å—Ç—Ä–æ–∫–∞ 447)
- `getAvailableModels()` (—Å—Ç—Ä–æ–∫–∞ 493)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeIndexPopoverProps` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 55)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_QDRANT_URL = "http://localhost:6333"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `DEFAULT_OLLAMA_URL = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `createValidationSchema = (provider: EmbedderProvider, t: any) => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `baseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 77)
- `SECRET_PLACEHOLDER = "‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `confirmDialogHandler = useRef<(() => void) | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `getDefaultSettings = (): LocalCodeIndexSettings => ({` (—Å—Ç—Ä–æ–∫–∞ 168)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 199)
- `currentSettingsRef = useRef(currentSettings)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `handleMessage = (event: MessageEvent<any>) => {` (—Å—Ç—Ä–æ–∫–∞ 240)
- `savedSettings = { ...currentSettingsRef.current }` (—Å—Ç—Ä–æ–∫–∞ 254)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `secretStatus = event.data.values` (—Å—Ç—Ä–æ–∫–∞ 283)
- `updateWithSecrets = (prev: LocalCodeIndexSettings): LocalCodeIndexSettings => {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `updated = { ...prev }` (—Å—Ç—Ä–æ–∫–∞ 287)
- `hasUnsavedChanges = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 329)
- `allKeys = [...Object.keys(initialSettings), ...Object.keys(currentSettings)] as Array<` (—Å—Ç—Ä–æ–∫–∞ 331)
- `uniqueKeys = Array.from(new Set(allKeys))` (—Å—Ç—Ä–æ–∫–∞ 336)
- `currentValue = currentSettings[key]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `initialValue = initialSettings[key]` (—Å—Ç—Ä–æ–∫–∞ 340)
- `updateSetting = (key: keyof LocalCodeIndexSettings, value: any) => {` (—Å—Ç—Ä–æ–∫–∞ 357)
- `newErrors = { ...prev }` (—Å—Ç—Ä–æ–∫–∞ 362)
- `validateSettings = (): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 370)
- `schema = createValidationSchema(currentSettings.codebaseIndexEmbedderProvider, t)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `checkUnsavedChanges = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 412)
- `onConfirmDialogResult = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 424)
- `handlePopoverClose = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 438)
- `handleSaveSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 447)
- `progressPercentage = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 483)
- `transformStyleString = `translateX(-${100 - progressPercentage}%)`` (—Å—Ç—Ä–æ–∫–∞ 491)
- `getAvailableModels = () => {` (—Å—Ç—Ä–æ–∫–∞ 493)
- `models = codebaseIndexModels[currentSettings.codebaseIndexEmbedderProvider]` (—Å—Ç—Ä–æ–∫–∞ 496)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 500)
- `value = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 765)
- `value = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 873)

#### üìÑ CheckpointWarning.tsx

#### üìÑ ChatView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getAudioUrl(path: s)` (—Å—Ç—Ä–æ–∫–∞ 219)
- `playSound(audioType: A)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `playTts(text: s)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `isBrowserSessionMessage(message: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 1214)
- `endBrowserSession()` (—Å—Ç—Ä–æ–∫–∞ 1232)
- `async autoApproveOrReject()` (—Å—Ç—Ä–æ–∫–∞ 1559)
- `handleCondenseContext(taskId: s)` (—Å—Ç—Ä–æ–∫–∞ 1726)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isMac = navigator.platform.toUpperCase().indexOf("MAC") >= 0` (—Å—Ç—Ä–æ–∫–∞ 71)
- `isMountedRef = useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 77)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 79)
- `modeShortcutText = `${isMac ? "‚åò" : "Ctrl"} + . ${t("chat:forNextMode")}, ${isMac ? "‚åò" : "Ctrl"} + Shift + . ${t("chat:forPreviousMode")}`` (—Å—Ç—Ä–æ–∫–∞ 84)
- `messagesRef = useRef(messages)` (—Å—Ç—Ä–æ–∫–∞ 119)
- `toggleExpanded = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `newState = !isExpanded` (—Å—Ç—Ä–æ–∫–∞ 132)
- `task = useMemo(() => messages.at(0), [messages])` (—Å—Ç—Ä–æ–∫–∞ 141)
- `latestTodos = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 143)
- `modifiedMessages = useMemo(() => combineApiRequests(combineCommandSequences(messages.slice(1))), [messages])` (—Å—Ç—Ä–æ–∫–∞ 147)
- `apiMetrics = useMemo(() => getApiMetrics(modifiedMessages), [modifiedMessages])` (—Å—Ç—Ä–æ–∫–∞ 150)
- `textAreaRef = useRef<HTMLTextAreaElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `isProcessingQueueRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `retryCountRef = useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 158)
- `MAX_RETRY_ATTEMPTS = 3` (—Å—Ç—Ä–æ–∫–∞ 159)
- `virtuosoRef = useRef<VirtuosoHandle>(null)` (—Å—Ç—Ä–æ–∫–∞ 167)
- `prevExpandedRowsRef = useRef<Record<number, boolean>>()` (—Å—Ç—Ä–æ–∫–∞ 169)
- `scrollContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `disableAutoScrollRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 171)
- `lastTtsRef = useRef<string>("")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `everVisibleMessagesTsRef = useRef<LRUCache<number, boolean>>(` (—Å—Ç—Ä–æ–∫–∞ 179)
- `autoApproveTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `userRespondedRef = useRef<boolean>(false)` (—Å—Ç—Ä–æ–∫–∞ 186)
- `clineAskRef = useRef(clineAsk)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `isProfileDisabled = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 201)
- `lastMessage = useMemo(() => messages.at(-1), [messages])` (—Å—Ç—Ä–æ–∫–∞ 208)
- `secondLastMessage = useMemo(() => messages.at(-2), [messages])` (—Å—Ç—Ä–æ–∫–∞ 209)
- `volume = typeof soundVolume === "number" ? soundVolume : 0.5` (—Å—Ç—Ä–æ–∫–∞ 212)
- `soundConfig = {` (—Å—Ç—Ä–æ–∫–∞ 213)
- `getAudioUrl = (path: string) => {` (—Å—Ç—Ä–æ–∫–∞ 219)
- `isPartial = lastMessage.partial === true` (—Å—Ç—Ä–æ–∫–∞ 259)
- `tool = JSON.parse(lastMessage.text || "{}") as ClineSayTool` (—Å—Ç—Ä–æ–∫–∞ 298)
- `prev = prevExpandedRowsRef.current` (—Å—Ç—Ä–æ–∫–∞ 461)
- `ts = Number(tsKey)` (—Å—Ç—Ä–æ–∫–∞ 466)
- `isStreaming = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 480)
- `isLastAsk = !!modifiedMessages.at(-1)?.ask` (—Å—Ç—Ä–æ–∫–∞ 488)
- `isLastMessagePartial = modifiedMessages.at(-1)?.partial === true` (—Å—Ç—Ä–æ–∫–∞ 497)
- `lastApiReqStarted = findLast(modifiedMessages, (message) => message.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `cost = JSON.parse(lastApiReqStarted.text).cost` (—Å—Ç—Ä–æ–∫–∞ 510)
- `markFollowUpAsAnswered = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 521)
- `lastFollowUpMessage = messagesRef.current.findLast((msg) => msg.ask === "followup")` (—Å—Ç—Ä–æ–∫–∞ 522)
- `handleChatReset = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 528)
- `handleSendMessage = useCallback(` - Handles sending messages to the extension (—Å—Ç—Ä–æ–∫–∞ 555)
- `messageId = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`` (—Å—Ç—Ä–æ–∫–∞ 563)
- `retryCount = retryCountRef.current.get(nextMessage.id) || 0` (—Å—Ç—Ä–æ–∫–∞ 654)
- `handleSetChatBoxMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 676)
- `retryCountMap = retryCountRef.current` (—Å—Ç—Ä–æ–∫–∞ 694)
- `isProcessingRef = isProcessingQueueRef` (—Å—Ç—Ä–æ–∫–∞ 695)
- `startNewTask = useCallback(() => vscode.postMessage({ type: "clearTask" }), [])` (—Å—Ç—Ä–æ–∫–∞ 703)
- `handlePrimaryButtonClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 708)
- `trimmedInput = text?.trim()` (—Å—Ç—Ä–æ–∫–∞ 713)
- `handleSecondaryButtonClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 755)
- `trimmedInput = text?.trim()` (—Å—Ç—Ä–æ–∫–∞ 760)
- `handleTaskCloseButtonClick = useCallback(() => startNewTask(), [startNewTask])` (—Å—Ç—Ä–æ–∫–∞ 805)
- `selectImages = useCallback(() => vscode.postMessage({ type: "selectImages" }), [])` (—Å—Ç—Ä–æ–∫–∞ 809)
- `shouldDisableImages = !model?.supportsImages || selectedImages.length >= MAX_IMAGES_PER_MESSAGE` (—Å—Ç—Ä–æ–∫–∞ 811)
- `handleMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 813)
- `visibleMessages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 900)
- `newVisibleMessages = modifiedMessages.filter((message) => {` (—Å—Ç—Ä–æ–∫–∞ 901)
- `alwaysHiddenOnceProcessedSay = [` (—Å—Ç—Ä–æ–∫–∞ 910)
- `last1 = modifiedMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 941)
- `last2 = modifiedMessages.at(-2)` (—Å—Ç—Ä–æ–∫–∞ 942)
- `isReadOnlyToolAction = useCallback((message: ClineMessage | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 965)
- `tool = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 971)
- `isWriteToolAction = useCallback((message: ClineMessage | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 987)
- `tool = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 993)
- `isMcpToolAlwaysAllowed = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1007)
- `mcpServerUse = JSON.parse(message.text) as { type: string` (—Å—Ç—Ä–æ–∫–∞ 1014)
- `server = mcpServers?.find((s: McpServer) => s.name === mcpServerUse.serverName)` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `tool = server?.tools?.find((t: McpTool) => t.name === mcpServerUse.toolName)` (—Å—Ç—Ä–æ–∫–∞ 1018)
- `getCommandDecisionForMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1029)
- `isAllowedCommand = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1038)
- `isDeniedCommand = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1046)
- `getDeniedPrefix = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1054)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 1059)
- `deniedMatch = findLongestPrefixMatch(cmd, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 1061)
- `autoApprovalToggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 1072)
- `isAutoApproved = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `isOutsideWorkspace = !!tool.isOutsideWorkspace` (—Å—Ç—Ä–æ–∫–∞ 1141)
- `isProtected = message.isProtected` (—Å—Ç—Ä–æ–∫–∞ 1142)
- `mermaidRegex = /```mermaid[\s\S]*?```/g` (—Å—Ç—Ä–æ–∫–∞ 1192)
- `isBrowserSessionMessage = (message: ClineMessage): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 1214)
- `groupedMessages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 1227)
- `endBrowserSession = () => {` (—Å—Ç—Ä–æ–∫–∞ 1232)
- `lastApiReqStarted = [...currentGroup].reverse().find((m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 1254)
- `info = JSON.parse(lastApiReqStarted.text)` (—Å—Ç—Ä–æ–∫–∞ 1257)
- `isCancelled = info.cancelReason !== null && info.cancelReason !== undefined` (—Å—Ç—Ä–æ–∫–∞ 1258)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 1273)
- `scrollToBottomSmooth = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 1308)
- `scrollToBottomAuto = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1324)
- `handleSetExpandedRow = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1331)
- `toggleRowExpansion = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1339)
- `handleRowHeightChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1348)
- `handleWheel = useCallback((event: Event) => {` (—Å—Ç—Ä–æ–∫–∞ 1373)
- `wheelEvent = event as WheelEvent` (—Å—Ç—Ä–æ–∫–∞ 1374)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 1390)
- `placeholderText = task ? t("chat:typeMessage") : t("chat:typeTask")` (—Å—Ç—Ä–æ–∫–∞ 1407)
- `switchToMode = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `handleSuggestionClickInRow = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1424)
- `isManualClick = !!event` (—Å—Ç—Ä–æ–∫–∞ 1439)
- `handleBatchFileResponse = useCallback((response: { [key: string]: boolean }) => {` (—Å—Ç—Ä–æ–∫–∞ 1458)
- `handleFollowUpUnmount = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1464)
- `itemContent = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1469)
- `autoApproveOrReject = async () => {` (—Å—Ç—Ä–æ–∫–∞ 1559)
- `deniedPrefix = getDeniedPrefix(lastMessage.text || "")` (—Å—Ç—Ä–æ–∫–∞ 1563)
- `autoDenyMessage = tSettings("autoApprove.execute.autoDenied", { prefix: deniedPrefix })` (—Å—Ç—Ä–æ–∫–∞ 1566)
- `firstSuggestion = followUpData.suggest[0]` (—Å—Ç—Ä–æ–∫–∞ 1612)
- `switchToNextMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1671)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 1672)
- `currentModeIndex = allModes.findIndex((m) => m.slug === mode)` (—Å—Ç—Ä–æ–∫–∞ 1673)
- `nextModeIndex = (currentModeIndex + 1) % allModes.length` (—Å—Ç—Ä–æ–∫–∞ 1674)
- `switchToPreviousMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1680)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 1681)
- `currentModeIndex = allModes.findIndex((m) => m.slug === mode)` (—Å—Ç—Ä–æ–∫–∞ 1682)
- `previousModeIndex = (currentModeIndex - 1 + allModes.length) % allModes.length` (—Å—Ç—Ä–æ–∫–∞ 1683)
- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1689)
- `handleCondenseContext = (taskId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1726)
- `areButtonsVisible = showScrollToBottom || primaryButtonText || secondaryButtonText || isStreaming` (—Å—Ç—Ä–æ–∫–∞ 1735)
- `ChatView = forwardRef(ChatViewComponent)` (—Å—Ç—Ä–æ–∫–∞ 2027)

#### üìÑ ChatTextArea.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClickOutside()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleClickOutside(event: M)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `isValidCommand(commandName: s): boolean` (—Å—Ç—Ä–æ–∫–∞ 718)
- `renderModeSelector()` (—Å—Ç—Ä–æ–∫–∞ 901)
- `renderNonEditModeControls()` (—Å—Ç—Ä–æ–∫–∞ 919)
- `renderTextAreaSection()` (—Å—Ç—Ä–æ–∫–∞ 989)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(` (—Å—Ç—Ä–æ–∫–∞ 56)
- `currentConfig = listApiConfigMeta?.find((config) => config.name === currentApiConfigName)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleClickOutside = () => {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 124)
- `textarea = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 132)
- `textarea = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 152)
- `currentValue = inputValue` (—Å—Ç—Ä–æ–∫–∞ 153)
- `cursorPos = textarea.selectionStart || 0` (—Å—Ç—Ä–æ–∫–∞ 154)
- `textBefore = currentValue.slice(0, cursorPos)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `needsSpaceBefore = textBefore.length > 0 && !textBefore.endsWith(" ")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `prefix = needsSpaceBefore ? " " : ""` (—Å—Ç—Ä–æ–∫–∞ 159)
- `newCursorPos = cursorPos + prefix.length + message.text.length + 1` (—Å—Ç—Ä–æ–∫–∞ 171)
- `commits = message.commits.map((commit: any) => ({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `textAreaRef = useRef<HTMLTextAreaElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `highlightLayerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `contextMenuContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `handleEnhancePrompt = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `trimmedInput = inputValue.trim()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `allModes = useMemo(() => getAllModes(customModes), [customModes])` (—Å—Ç—Ä–æ–∫–∞ 248)
- `queryItems = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 250)
- `handleClickOutside = (event: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `handleMentionSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 290)
- `commandMention = `/${value}`` (—Å—Ç—Ä–æ–∫–∞ 312)
- `isSlashCommand = type === ContextMenuOptionType.Mode || type === ContextMenuOptionType.Command` (—Å—Ç—Ä–æ–∫–∞ 360)
- `newCursorPosition = newValue.indexOf(" ", mentionIndex + insertValue.length) + 1` (—Å—Ç—Ä–æ–∫–∞ 370)
- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 387)
- `direction = event.key === "ArrowUp" ? -1 : 1` (—Å—Ç—Ä–æ–∫–∞ 399)
- `options = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 400)
- `optionsLength = options.length` (—Å—Ç—Ä–æ–∫–∞ 408)
- `selectableOptions = options.filter(` (—Å—Ç—Ä–æ–∫–∞ 413)
- `currentSelectableIndex = selectableOptions.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 423)
- `selectedOption = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 438)
- `isComposing = event.nativeEvent?.isComposing ?? false` (—Å—Ç—Ä–æ–∫–∞ 458)
- `charBeforeCursor = inputValue[cursorPosition - 1]` (—Å—Ç—Ä–æ–∫–∞ 474)
- `charAfterCursor = inputValue[cursorPosition + 1]` (—Å—Ç—Ä–æ–∫–∞ 475)
- `newCursorPosition = cursorPosition - 1` (—Å—Ç—Ä–æ–∫–∞ 489)
- `searchTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 547)
- `newValue = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 549)
- `newCursorPosition = e.target.selectionStart` (—Å—Ç—Ä–æ–∫–∞ 555)
- `showMenu = shouldShowContextMenu(newValue, newCursorPosition)` (—Å—Ç—Ä–æ–∫–∞ 558)
- `query = newValue` (—Å—Ç—Ä–æ–∫–∞ 564)
- `lastAtIndex = newValue.lastIndexOf("@", newCursorPosition - 1)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `query = newValue.slice(lastAtIndex + 1, newCursorPosition)` (—Å—Ç—Ä–æ–∫–∞ 573)
- `reqId = Math.random().toString(36).substring(2, 9)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `handleBlur = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 621)
- `handlePaste = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 630)
- `items = e.clipboardData.items` (—Å—Ç—Ä–æ–∫–∞ 632)
- `pastedText = e.clipboardData.getData("text")` (—Å—Ç—Ä–æ–∫–∞ 634)
- `urlRegex = /^\S+:\/\/\S+$/` (—Å—Ç—Ä–æ–∫–∞ 637)
- `trimmedUrl = pastedText.trim()` (—Å—Ç—Ä–æ–∫–∞ 640)
- `newCursorPosition = cursorPosition + trimmedUrl.length + 1` (—Å—Ç—Ä–æ–∫–∞ 644)
- `acceptedTypes = ["png", "jpeg", "webp"]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `imageItems = Array.from(items).filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 662)
- `imagePromises = imageItems.map((item) => {` (—Å—Ç—Ä–æ–∫–∞ 670)
- `blob = item.getAsFile()` (—Å—Ç—Ä–æ–∫–∞ 672)
- `reader = new FileReader()` (—Å—Ç—Ä–æ–∫–∞ 679)
- `result = reader.result` (—Å—Ç—Ä–æ–∫–∞ 686)
- `imageDataArray = await Promise.all(imagePromises)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `dataUrls = imageDataArray.filter((dataUrl): dataUrl is string => dataUrl !== null)` (—Å—Ç—Ä–æ–∫–∞ 696)
- `handleMenuMouseDown = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 708)
- `updateHighlights = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 712)
- `text = textAreaRef.current.value` (—Å—Ç—Ä–æ–∫–∞ 715)
- `isValidCommand = (commandName: string): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 718)
- `startsWithSpace = match.startsWith(" ")` (—Å—Ç—Ä–æ–∫–∞ 733)
- `commandPart = `/${commandName}`` (—Å—Ç—Ä–æ–∫–∞ 734)
- `updateCursorPosition = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 757)
- `handleKeyUp = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 763)
- `handleDrop = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 772)
- `textFieldList = e.dataTransfer.getData("text")` (—Å—Ç—Ä–æ–∫–∞ 777)
- `textUriList = e.dataTransfer.getData("application/vnd.code.uri-list")` (—Å—Ç—Ä–æ–∫–∞ 778)
- `text = textFieldList || textUriList` (—Å—Ç—Ä–æ–∫–∞ 780)
- `lines = text.split(/\r?\n/).filter((line) => line.trim() !== "")` (—Å—Ç—Ä–æ–∫–∞ 783)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 792)
- `mentionText = convertToMentionPath(line, cwd)` (—Å—Ç—Ä–æ–∫–∞ 794)
- `newCursorPosition = cursorPosition + totalLength` (—Å—Ç—Ä–æ–∫–∞ 810)
- `files = Array.from(e.dataTransfer.files)` (—Å—Ç—Ä–æ–∫–∞ 818)
- `acceptedTypes = ["png", "jpeg", "webp"]` (—Å—Ç—Ä–æ–∫–∞ 821)
- `imageFiles = files.filter((file) => {` (—Å—Ç—Ä–æ–∫–∞ 823)
- `imagePromises = imageFiles.map((file) => {` (—Å—Ç—Ä–æ–∫–∞ 829)
- `reader = new FileReader()` (—Å—Ç—Ä–æ–∫–∞ 831)
- `result = reader.result` (—Å—Ç—Ä–æ–∫–∞ 838)
- `imageDataArray = await Promise.all(imagePromises)` (—Å—Ç—Ä–æ–∫–∞ 847)
- `dataUrls = imageDataArray.filter((dataUrl): dataUrl is string => dataUrl !== null)` (—Å—Ç—Ä–æ–∫–∞ 848)
- `placeholderBottomText = `\n(${t("chat:addContext")}${shouldDisableImages ? `, ${t("chat:dragFiles")}` : `, ${t("chat:dragFilesImages")}`})`` (—Å—Ç—Ä–æ–∫–∞ 889)
- `handleModeChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 892)
- `renderModeSelector = () => (` (—Å—Ç—Ä–æ–∫–∞ 901)
- `handleApiConfigChange = useCallback((value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 914)
- `renderNonEditModeControls = () => (` (—Å—Ç—Ä–æ–∫–∞ 919)
- `renderTextAreaSection = () => (` (—Å—Ç—Ä–æ–∫–∞ 989)
- `rect = e.currentTarget.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 1184)

#### üìÑ ChatRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `getIconSpan(iconName: s, color: s)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `toolIcon(name: s)` (—Å—Ç—Ä–æ–∫–∞ 353)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatRowProps` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface ChatRowContentProps extends Omit<ChatRowProps, "onHeightChange">` (—Å—Ç—Ä–æ–∫–∞ 66)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ChatRow = memo(` (—Å—Ç—Ä–æ–∫–∞ 68)
- `prevHeightRef = useRef(0)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `isInitialRender = prevHeightRef.current === 0 // prevents scrolling when new element is added since we already scroll for that` (—Å—Ç—Ä–æ–∫–∞ 84)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `msg = event.data` (—Å—Ç—Ä–æ–∫–∞ 130)
- `handleToggleExpand = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleEditClick = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 146)
- `handleCancelEdit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handleSaveEdit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 164)
- `handleSelectImages = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 176)
- `info = safeJsonParse<ClineApiReqInfo>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 182)
- `isMcpServerResponding = isLast && lastModifiedMessage?.say === "mcp_server_request_started"` (—Å—Ç—Ä–æ–∫–∞ 200)
- `type = message.type === "ask" ? message.ask : message.say` (—Å—Ç—Ä–æ–∫–∞ 202)
- `normalColor = "var(--vscode-foreground)"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `errorColor = "var(--vscode-errorForeground)"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `successColor = "var(--vscode-charts-green)"` (—Å—Ç—Ä–æ–∫–∞ 206)
- `cancelledColor = "var(--vscode-descriptionForeground)"` (—Å—Ç—Ä–æ–∫–∞ 207)
- `mcpServerUse = safeJsonParse<ClineAskUseMcpServer>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `getIconSpan = (iconName: string, color: string) => (` (—Å—Ç—Ä–æ–∫–∞ 265)
- `tool = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 340)
- `followUpData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `toolIcon = (name: string) => (` (—Å—Ç—Ä–æ–∫–∞ 353)
- `todos = (tool as any).todos || []` (—Å—Ç—Ä–æ–∫–∞ 497)
- `isBatchRequest = message.type === "ask" && tool.batchFiles && Array.isArray(tool.batchFiles)` (—Å—Ç—Ä–æ–∫–∞ 542)
- `tool = safeJsonParse<ClineSayTool>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `messageJson = safeJsonParse<any>(message.text, {})` (—Å—Ç—Ä–æ–∫–∞ 1245)
- `server = mcpServers.find((server) => server.name === useMcpServer.serverName)` (—Å—Ç—Ä–æ–∫–∞ 1260)

#### üìÑ BrowserSessionRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getBrowserActionText(action: B)` (—Å—Ç—Ä–æ–∫–∞ 512)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BrowserSessionRowProps` (—Å—Ç—Ä–æ–∫–∞ 18)

- `interface BrowserSessionRowContentProps extends Omit<BrowserSessionRowProps, "messages">` (—Å—Ç—Ä–æ–∫–∞ 415)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BrowserSessionRow = memo((props: BrowserSessionRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `prevHeightRef = useRef(0)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `aspectRatio = ((viewportHeight / viewportWidth) * 100).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `defaultMousePosition = `${Math.round(viewportWidth / 2)},${Math.round(viewportHeight / 2)}`` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isLastApiReqInterrupted = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `lastApiReqStarted = [...messages].reverse().find((m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `info = JSON.parse(lastApiReqStarted.text) as { cancelReason: string | null }` (—Å—Ç—Ä–æ–∫–∞ 44)
- `lastApiReqFailed = isLast && lastModifiedMessage?.ask === "api_req_failed"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `isBrowsing = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `pages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `resultData = JSON.parse(message.text || "{}") as BrowserActionResult` (—Å—Ç—Ä–æ–∫–∞ 89)
- `initialUrl = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `launchMessage = messages.find((m) => m.ask === "browser_action_launch")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `latestState = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `page = pages[i]` (—Å—Ç—Ä–æ–∫–∞ 157)
- `currentPage = pages[currentPageIndex]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `isLastPage = currentPageIndex === pages.length - 1` (—Å—Ç—Ä–æ–∫–∞ 171)
- `displayState = isLastPage` (—Å—Ç—Ä–æ–∫–∞ 174)
- `latestClickPosition = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 215)
- `actions = currentPage?.nextAction?.messages || []` (—Å—Ç—Ä–æ–∫–∞ 219)
- `message = actions[i]` (—Å—Ç—Ä–æ–∫–∞ 221)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 223)
- `mousePosition = isBrowsing` (—Å—Ç—Ä–æ–∫–∞ 233)
- `isInitialRender = prevHeightRef.current === 0` (—Å—Ç—Ä–æ–∫–∞ 403)
- `BrowserSessionRowContent = ({` (—Å—Ç—Ä–æ–∫–∞ 421)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 463)
- `BrowserActionBox = ({` (—Å—Ç—Ä–æ–∫–∞ 502)
- `getBrowserActionText = (action: BrowserAction, coordinate?: string, text?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 512)

#### üìÑ BatchFilePermission.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FilePermissionItem` (—Å—Ç—Ä–æ–∫–∞ 7)

- `interface BatchFilePermissionProps` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ BatchDiffApproval.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleToggleExpand(filePath: s)` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FileDiff` (—Å—Ç—Ä–æ–∫–∞ 4)

- `interface BatchDiffApprovalProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleToggleExpand = (filePath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `combinedDiff = file.diffs?.map((diff) => diff.content).join("\n\n") || file.content` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ AutoApprovedRequestLimitWarning.tsx

**–¢–∏–ø—ã:**

- `type AutoApprovedRequestLimitWarningProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isCostLimit = type === "cost"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `titleKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 22)
- `descriptionKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 25)
- `buttonKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ AutoApproveMenu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AutoApproveMenu()` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AutoApproveMenuProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `AutoApproveMenu = ({ style }: AutoApproveMenuProps) => {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `baseToggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `toggles = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 46)
- `onAutoApproveToggle = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 56)
- `updatedToggles = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `willHaveEnabledOptions = Object.values(updatedToggles).some((v) => !!v)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `toggleExpanded = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `enabledActionsList = Object.entries(toggles)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `displayText = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleOpenSettings = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 148)
- `newValue = !(autoApprovalEnabled ?? false)` (—Å—Ç—Ä–æ–∫–∞ 187)

#### üìÑ ApiConfigSelector.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiConfigSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `searchableItems = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fzfInstance = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `filteredConfigs = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `matchingItems = fzfInstance.find(searchValue).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `pinned = filteredConfigs.filter((config) => pinnedApiConfigs?.[config.id])` (—Å—Ç—Ä–æ–∫–∞ 64)
- `unpinned = filteredConfigs.filter((config) => !pinnedApiConfigs?.[config.id])` (—Å—Ç—Ä–æ–∫–∞ 65)
- `handleSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 69)
- `handleEditClick = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `renderConfigItem = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 86)
- `isCurrentConfig = config.id === value` (—Å—Ç—Ä–æ–∫–∞ 88)
- `triggerContent = (` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ Announcement.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Announcement()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DiscordLink()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `RedditLink()` (—Å—Ç—Ä–æ–∫–∞ 120)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AnnouncementProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Announcement = ({ hideAnnouncement }: AnnouncementProps) => {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DiscordLink = () => (` (—Å—Ç—Ä–æ–∫–∞ 106)
- `RedditLink = () => (` (—Å—Ç—Ä–æ–∫–∞ 120)

### üìÇ webview-ui/src/components/account

#### üìÑ AccountView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleConnectClick()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `handleLogoutClick()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handleVisitCloudWebsite()` (—Å—Ç—Ä–æ–∫–∞ 47)

**–¢–∏–ø—ã:**

- `type AccountViewProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasAuthenticatedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `rooLogoUri = (window as any).IMAGES_BASE_URI + "/roo-logo.svg"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `handleConnectClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `handleLogoutClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handleVisitCloudWebsite = () => {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `cloudUrl = cloudApiUrl || "https://app.neira.app"` (—Å—Ç—Ä–æ–∫–∞ 50)

### üìÇ webview-ui/src/components/__tests__

#### üìÑ ErrorBoundary.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ErrorThrowingComponent()` (—Å—Ç—Ä–æ–∫–∞ 34)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ErrorThrowingComponent = ({ shouldThrow = false }) => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 43)
- `errorTitle = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorTitle = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 83)
- `errorTitleAfterRerender = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 94)

### üìÇ build-src/webview-ui/src/context

#### üìÑ ExtensionStateContext.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `customModePrompts = { ...prevCustomModePrompts, ...newCustomModePrompts }` (—Å—Ç—Ä–æ–∫–∞ 165)
- `experiments = { ...prevExperiments, ...newExperiments }` (—Å—Ç—Ä–æ–∫–∞ 166)
- `rest = { ...prevRest, ...newRest }` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setListApiConfigMeta = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setApiConfiguration = useCallback((value: ProviderSettings) => {` (—Å—Ç—Ä–æ–∫–∞ 275)
- `handleMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 285)
- `newState = message.state!` (—Å—Ç—Ä–æ–∫–∞ 290)
- `paths = message.filePaths ?? []` (—Å—Ç—Ä–æ–∫–∞ 322)
- `tabs = message.openedTabs ?? []` (—Å—Ç—Ä–æ–∫–∞ 323)
- `clineMessage = message.clineMessage!` (—Å—Ç—Ä–æ–∫–∞ 334)
- `lastIndex = findLastIndex(prevState.clineMessages, (msg) => msg.ts === clineMessage.ts)` (—Å—Ç—Ä–æ–∫–∞ 337)
- `newClineMessages = [...prevState.clineMessages]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `currentPinned = prevState.pinnedApiConfigs || {}` (—Å—Ç—Ä–æ–∫–∞ 483)
- `newPinned = {` (—Å—Ç—Ä–æ–∫–∞ 484)
- `context = useContext(ExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 526)

### üìÇ apps/web-neira-coder/src/components

#### üìÑ animated-text.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AnimatedTextProps` (—Å—Ç—Ä–æ–∫–∞ 6)

### üìÇ apps/web-neira-coder/src/app

#### üìÑ shell.tsx

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ layout.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `inter = Inter({ subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ apps/web-evals/src/app

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runs = await getRuns()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ layout.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fontSans = Geist({ variable: "--font-sans", subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 10)
- `fontMono = Geist_Mono({ variable: "--font-mono", subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ webview-ui/src/components/welcome/__tests__

#### üìÑ RooTips.spec.tsx

### üìÇ webview-ui/src/components/ui/__tests__

#### üìÑ tooltip.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `tooltips = screen.getAllByText(/This is a very long tooltip text/)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `tooltips = screen.getAllByText("Long tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 144)
- `tooltips = screen.getAllByText("Long tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 149)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `tooltips = screen.getAllByText(longContent)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 176)

#### üìÑ toggle-switch.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 59)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 75)
- `toggle = screen.getByTestId("custom-toggle")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ select-dropdown.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `postMessageMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `options = [` (—Å—Ç—Ä–æ–∫–∞ 75)
- `onChangeMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `dropdown = screen.getByTestId("dropdown-root")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 148)
- `optionsWithTypedSeparator = [` (—Å—Ç—Ä–æ–∫–∞ 155)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 164)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `shortcutText = "Ctrl+K"` (—Å—Ç—Ä–æ–∫–∞ 179)
- `optionsWithShortcut = [` (—Å—Ç—Ä–æ–∫–∞ 180)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 199)
- `optionsWithAction = [` (—Å—Ç—Ä–æ–∫–∞ 208)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `optionsForTest = [` (—Å—Ç—Ä–æ–∫–∞ 234)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 265)

### üìÇ webview-ui/src/components/settings/__tests__

#### üìÑ TodoListSettingsControl.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `label = screen.getByText("Enable todo list tool")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `description = screen.getByText(/When enabled, Roo can create and manage todo lists/)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ ThinkingBudget.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ TemperatureControl.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 50)
- `input = screen.getByRole("slider")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 86)

#### üìÑ SettingsView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `renderSettingsView()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `activateTab(tabId: s)` (—Å—Ç—Ä–æ–∫–∞ 247)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `onValueChange = (window as any).__onValueChange` (—Å—Ç—Ä–æ–∫–∞ 92)
- `tabContent = document.querySelector(`[data-tab-content="${value}"]`)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `renderSettingsView = () => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 232)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `result = render(` (—Å—Ç—Ä–æ–∫–∞ 235)
- `activateTab = (tabId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 247)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 288)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 334)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 353)
- `speedSlider = screen.getByTestId("tts-speed-slider")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 370)
- `volumeSlider = screen.getByTestId("sound-volume-slider")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 387)
- `speedSlider = screen.getByTestId("tts-speed-slider")` (—Å—Ç—Ä–æ–∫–∞ 391)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 413)
- `volumeSlider = screen.getByTestId("sound-volume-slider")` (—Å—Ç—Ä–æ–∫–∞ 417)
- `saveButtons = screen.getAllByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 421)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 457)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 472)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 476)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 479)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 500)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 504)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 506)
- `removeButton = screen.getByTestId("remove-command-0")` (—Å—Ç—Ä–æ–∫–∞ 510)
- `tabList = screen.getByTestId("settings-tab-list")` (—Å—Ç—Ä–æ–∫–∞ 532)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 547)
- `doneButton = screen.getByText("settings:common.done")` (—Å—Ç—Ä–æ–∫–∞ 551)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 590)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 594)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 595)
- `commands = screen.getAllByText("npm test")` (—Å—Ç—Ä–æ–∫–∞ 606)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 618)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 622)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 624)
- `saveButtons = screen.getAllByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 628)

#### üìÑ ModelPicker.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderModelPicker()` (—Å—Ç—Ä–æ–∫–∞ 52)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `renderModelPicker = () => {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `button = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `modelInput = screen.getByTestId("model-input")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `modelItem = screen.getByTestId("model-option-model2")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `button = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `customModelId = "custom-model-id"` (—Å—Ç—Ä–æ–∫–∞ 121)
- `modelInput = screen.getByTestId("model-input")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `customOption = screen.getByTestId("use-custom-model")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `errorMessage = "Model not available for your organization"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `propsWithError = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `errorMessage = "Invalid model selected"` (—Å—Ç—Ä–æ–∫–∞ 179)
- `propsWithError = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modelSelector = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `errorContainer = screen.getByTestId("api-error-message")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `errorElement = screen.getByText(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `initialError = "Initial error"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `updatedError = "Updated error"` (—Å—Ç—Ä–æ–∫–∞ 206)
- `errorMessage = "Temporary error"` (—Å—Ç—Ä–æ–∫–∞ 232)

#### üìÑ MaxRequestsInput.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnValueChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ MaxCostInput.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnValueChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 79)

#### üìÑ ContextManagementSettings.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentValue = value?.[0] ?? 0` (—Å—Ç—Ä–æ–∫–∞ 28)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 141)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox").querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 144)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 222)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 228)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 243)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `largeNumber = 1000` (—Å—Ç—Ä–æ–∫–∞ 249)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 282)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 285)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 294)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 297)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 307)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 310)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 321)
- `maxReadFileInput = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 328)
- `alwaysFullReadCheckbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 333)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 339)
- `input = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 345)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 352)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 358)
- `propsWithAutoCondense = {` (—Å—Ç—Ä–æ–∫–∞ 365)
- `autoCondenseCheckbox = screen.getByTestId("auto-condense-context-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 373)
- `slider = screen.getByTestId("condense-threshold-slider")` (—Å—Ç—Ä–æ–∫–∞ 377)
- `selects = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `autoCondenseProps = {` (—Å—Ç—Ä–æ–∫–∞ 386)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 397)
- `props = { ...autoCondenseProps, setCachedStateField: mockSetCachedStateField }` (—Å—Ç—Ä–æ–∫–∞ 398)
- `checkbox = screen.getByTestId("auto-condense-context-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 401)
- `input = checkbox.querySelector('input[type="checkbox"]')` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 420)
- `props = { ...autoCondenseProps, setCachedStateField: mockSetCachedStateField }` (—Å—Ç—Ä–æ–∫–∞ 421)
- `slider = screen.getByTestId("condense-threshold-slider")` (—Å—Ç—Ä–æ–∫–∞ 425)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 441)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `input = checkbox.querySelector('input[type="checkbox"]')` (—Å—Ç—Ä–æ–∫–∞ 448)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 453)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 454)
- `propsWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 468)
- `propsWithoutAutoCondense = {` (—Å—Ç—Ä–æ–∫–∞ 485)
- `propsWithoutMaxReadFile = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `input = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 503)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 504)
- `propsWithMaxReadFile = {` (—Å—Ç—Ä–æ–∫–∞ 530)

#### üìÑ AutoApproveToggle.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = vi.importActual("@/i18n/TranslationContext")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mockOnToggle = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `initialProps = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `button = screen.getByTestId(config.testId)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `writeToggleButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowWrite.testId)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `readOnlyButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowReadOnly.testId)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `writeToggleButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowWrite.testId)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `updatedProps = { ...initialProps, alwaysAllowWrite: true }` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ ApiOptions.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderApiOptions(props: P)` (—Å—Ç—Ä–æ–∫–∞ 267)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `renderApiOptions = (props: Partial<ApiOptionsProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 267)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 268)
- `providerSelectContainer = screen.getByTestId("provider-select")` (—Å—Ç—Ä–æ–∫–∞ 353)
- `providerSelect = providerSelectContainer.querySelector("select") as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 357)
- `options = providerSelect.querySelectorAll("option")` (—Å—Ç—Ä–æ–∫–∞ 361)
- `optionTexts = Array.from(options).map((opt) => opt.textContent)` (—Å—Ç—Ä–æ–∫–∞ 365)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 375)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 376)
- `updateCall = mockSetApiConfigurationField.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 404)
- `updatedInfo = updateCall![1]` (—Å—Ç—Ä–æ–∫–∞ 410)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 418)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 437)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 438)
- `checkbox = screen.getByTestId("checkbox-input-settings:providers.setreasoninglevel")` (—Å—Ç—Ä–æ–∫–∞ 451)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 465)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `selectContainer = screen.getByTestId("reasoning-effort")` (—Å—Ç—Ä–æ–∫–∞ 486)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 526)
- `baseUrlInput = screen.getByTestId("litellm-base-url")` (—Å—Ç—Ä–æ–∫–∞ 534)
- `apiKeyInput = screen.getByTestId("litellm-api-key")` (—Å—Ç—Ä–æ–∫–∞ 535)

#### üìÑ ApiConfigManager.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getRenameForm()` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 132)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnSelectConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `mockOnDeleteConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockOnRenameConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `mockOnUpsertConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `getRenameForm = () => screen.getByTestId("rename-form")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getDialogContent = () => screen.getByTestId("dialog-content")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 148)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `dialogContent = getDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `errorMessage = within(dialogContent).getByTestId("error-message")` (—Å—Ç—Ä–æ–∫–∞ 179)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 196)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 209)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 223)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 227)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 231)
- `renameForm = getRenameForm()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `errorMessage = within(renameForm).getByTestId("error-message")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `selectElement = screen.getByTestId("select-component") as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 262)
- `deleteButton = screen.getByTestId("delete-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 273)
- `deleteButton = screen.getByTestId("delete-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 283)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 291)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 295)
- `cancelButton = screen.getByTestId("cancel-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 313)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 316)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 335)

### üìÇ webview-ui/src/components/modes/__tests__

#### üìÑ ModesView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderPromptsView()` (—Å—Ç—Ä–æ–∫–∞ 31)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `renderPromptsView = (props = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockOnDone = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 64)
- `searchInput = screen.getByTestId("mode-search-input")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `codeOption = await waitFor(() => screen.getByTestId("mode-option-code"))` (—Å—Ç—Ä–æ–∫–∞ 82)
- `textarea = await waitFor(() => screen.getByTestId("code-prompt-textarea"))` (—Å—Ç—Ä–æ–∫–∞ 100)
- `changeEvent = new CustomEvent("change", {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `customMode = {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resetButton = screen.getByTestId("role-definition-reset")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `customMode = {` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setCustomInstructions = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `textarea = screen.getByTestId("global-custom-instructions-textarea")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `changeEvent = new Event("change", { bubbles: true })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 257)

### üìÇ webview-ui/src/components/mcp/__tests__

#### üìÑ McpToolRow.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTool = {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `alwaysAllowedTool = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `checkbox = screen.getByRole("checkbox") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 101)
- `mockOnClick = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `container = screen.getByTestId("tool-row-container")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `toolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 120)
- `toggleSwitch = screen.getByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 150)
- `toggleSwitch = screen.queryByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 157)
- `disabledTool = { ...mockTool, enabledForPrompt: false }` (—Å—Ç—Ä–æ–∫–∞ 169)
- `toggleSwitch = screen.getByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 179)
- `disabledTool = { ...mockTool, enabledForPrompt: false }` (—Å—Ç—Ä–æ–∫–∞ 192)
- `enabledTool = { ...mockTool, enabledForPrompt: true }` (—Å—Ç—Ä–æ–∫–∞ 199)
- `disabledToolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `enabledToolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 229)
- `disabledTool = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `toolName = screen.getByText("test-tool")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `toolDescription = screen.getByText("A disabled tool")` (—Å—Ç—Ä–æ–∫–∞ 260)
- `enabledTool = {` (—Å—Ç—Ä–æ–∫–∞ 270)
- `toolName = screen.getByText("test-tool")` (—Å—Ç—Ä–æ–∫–∞ 277)
- `toolDescription = screen.getByText("An enabled tool")` (—Å—Ç—Ä–æ–∫–∞ 278)

### üìÇ webview-ui/src/components/marketplace/components

#### üìÑ MarketplaceItemCard.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `handleInstallClick()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `handleOpenAuthorUrl()` (—Å—Ç—Ä–æ–∫–∞ 260)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ItemInstalledMetadata` (—Å—Ç—Ä–æ–∫–∞ 24)

- `interface MarketplaceItemCardProps` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface AuthorInfoProps` (—Å—Ç—Ä–æ–∫–∞ 252)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 49)
- `typeLabel = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `isInstalledGlobally = !!installed.global` (—Å—Ç—Ä–æ–∫–∞ 76)
- `isInstalledInProject = !!installed.project` (—Å—Ç—Ä–æ–∫–∞ 77)
- `isInstalled = isInstalledGlobally || isInstalledInProject` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleInstallClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 80)
- `target = isInstalledInProject ? "project" : "global"` (—Å—Ç—Ä–æ–∫–∞ 128)
- `newTags = filters.tags.includes(tag)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `handleOpenAuthorUrl = () => {` (—Å—Ç—Ä–æ–∫–∞ 260)

#### üìÑ MarketplaceInstallModal.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `handleInstall()` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handlePostInstallAction(tab: ")` (—Å—Ç—Ä–æ–∫–∞ 197)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarketplaceInstallModalProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasMultipleMethods = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `methodNames = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `effectiveParameters = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `globalParams = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 64)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 69)
- `paramMap = new Map<string, McpParameter>()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `effectivePrerequisites = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `globalPrereqs = item.prerequisites || []` (—Å—Ç—Ä–æ–∫–∞ 85)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 90)
- `allPrereqs = [...globalPrereqs, ...methodPrereqs]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `globalParams = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 107)
- `paramMap = new Map<string, McpParameter>()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `currentEffectiveParams = Array.from(paramMap.values())` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 133)
- `handleInstall = () => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handlePostInstallAction = (tab: "mcp" | "modes") => {` (—Å—Ç—Ä–æ–∫–∞ 197)

### üìÇ webview-ui/src/components/history/__tests__

#### üìÑ useTaskSearch.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseExtensionState = useExtensionState as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `incompleteTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 225)

#### üìÑ TaskItemHeader.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ TaskItemFooter.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockItemWithCache = {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `mockItemWithoutCache = {` (—Å—Ç—Ä–æ–∫–∞ 62)

#### üìÑ TaskItem.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `onToggleSelection = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `mockTaskWithCache = {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockTaskWithoutCache = {` (—Å—Ç—Ä–æ–∫–∞ 101)

#### üìÑ HistoryView.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 16)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `doneButton = screen.getByText("history:done")` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ HistoryPreview.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseTaskSearch = useTaskSearch as any` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockTaskItem = TaskItem as any` (—Å—Ç—Ä–æ–∫–∞ 23)
- `threeTasks = mockTasks.slice(0, 3)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `oneTask = mockTasks.slice(0, 1)` (—Å—Ç—Ä–æ–∫–∞ 154)

#### üìÑ ExportButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `exportButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ DeleteTaskDialog.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseKeyPress = useKeyPress as any` (—Å—Ç—Ä–æ–∫–∞ 29)
- `mockTaskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockOnOpenChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `dialogContent = screen.getByRole("alertdialog")` (—Å—Ç—Ä–æ–∫–∞ 111)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ DeleteButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `deleteButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ CopyButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCopy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `copyButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ BatchDeleteTaskDialog.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTaskIds = ["task-1", "task-2", "task-3"]` (—Å—Ç—Ä–æ–∫–∞ 25)
- `mockOnOpenChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `deleteButton = screen.getByText("Delete 3 items")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `deleteButton = screen.getByText("Delete 0 items")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `singleTaskId = ["task-1"]` (—Å—Ç—Ä–æ–∫–∞ 76)
- `deleteButton = screen.getByText("Delete 3 items")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `trashIcon = deleteButton.querySelector(".codicon-trash")` (—Å—Ç—Ä–æ–∫–∞ 87)

### üìÇ webview-ui/src/components/common/__mocks__

#### üìÑ MarkdownBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarkdownBlockProps` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ CodeBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeBlockProps` (—Å—Ç—Ä–æ–∫–∞ 3)

### üìÇ webview-ui/src/components/common/__tests__

#### üìÑ MarkdownBlock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `markdown = "Check out this link: https://example.com."` (—Å—Ç—Ä–æ–∫–∞ 20)
- `nestedLinks = container.querySelectorAll("a a")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `linkElement = screen.getByRole("link")` (—Å—Ç—Ä–æ–∫–∞ 31)
- `paragraph = container.querySelector("p")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `markdown = `Here are some items:` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ulElements = container.querySelectorAll("ul")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `liElements = container.querySelectorAll("li")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `markdown = `And a numbered list:` (—Å—Ç—Ä–æ–∫–∞ 68)
- `olElements = container.querySelectorAll("ol")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `liElements = container.querySelectorAll("li")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `markdown = `Complex list:` (—Å—Ç—Ä–æ–∫–∞ 93)
- `olElements = container.querySelectorAll("ol")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `ulElements = container.querySelectorAll("ul")` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ FormattedTextField.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByTestId("test-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = screen.getByTestId("test-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 109)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 152)
- `input = screen.getByTestId("decimal-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 162)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `input = screen.getByTestId("decimal-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ CodeBlock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockHighlighter = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `theme = options.theme === "github-light" ? "light" : "dark"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `theme = options.theme === "github-light" ? "light" : "dark"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `preNode = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockIntersectionObserver = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `originalGetComputedStyle = window.getComputedStyle` (—Å—Ç—Ä–æ–∫–∞ 96)
- `scrollContainer = document.createElement("div")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 116)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 124)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 134)
- `code = "some code"` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockError = new Error("WASM load failed")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `highlighterUtil = await import("../../../utils/highlighter")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 169)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 170)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 188)
- `highlighterUtil = await import("../../../utils/highlighter")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 201)
- `codeBlock = container.querySelector("[data-partially-visible]")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 211)
- `copyButton = buttons.find((btn) => btn.querySelector("svg.lucide-copy"))` (—Å—Ç—Ä–æ–∫–∞ 212)

### üìÇ webview-ui/src/components/chat/__tests__

#### üìÑ TaskHeader.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderTaskHeader(props: P)` (—Å—Ç—Ä–æ–∫–∞ 61)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `renderTaskHeader = (props: Partial<TaskHeaderProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleCondenseContext = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 108)
- `handleCondenseContext = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ TaskActions.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vi.mocked(vscode.postMessage)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `mockUseExtensionState = vi.mocked(useExtensionState)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 94)
- `buttons = screen.queryAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 103)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 117)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 128)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 141)
- `orgOption = screen.getByText("Share with Organization")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 159)
- `publicOption = screen.getByText("Share Publicly")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 185)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 207)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 221)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 233)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `connectOption = screen.getByText("Connect")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 258)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `connectButton = screen.getByText("Connect")` (—Å—Ç—Ä–æ–∫–∞ 312)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 341)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 348)
- `deleteButton = screen.getByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `itemWithoutSize = { ...mockItem, size: 0 }` (—Å—Ç—Ä–æ–∫–∞ 365)
- `deleteButton = screen.queryByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 368)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 379)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 380)
- `copyButton = buttons.find((btn) => btn.querySelector(".codicon-copy"))` (—Å—Ç—Ä–æ–∫–∞ 381)
- `deleteButton = screen.getByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ ShareButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseTranslation = vi.mocked(useTranslation)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockVscode = vi.mocked(vscode)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockT = vi.fn((key: string) => key)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `orgButton = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `publicButton = screen.getByText("chat:task.sharePublicly")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockRemoveEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 125)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 140)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 169)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 178)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 181)
- `publicEvent = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 216)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 219)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 254)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 263)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `orgButton = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `orgButton2 = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 314)

#### üìÑ ModeSelector.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = await vi.importActual<typeof import("@roo/modes")>("@roo/modes")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `searchInput = screen.getByTestId("mode-search-input")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `modeItems = screen.getAllByTestId("mode-selector-item")` (—Å—Ç—Ä–æ–∫–∞ 147)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 199)

#### üìÑ IndexingStatusBadge.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderComponent()` (—Å—Ç—Ä–æ–∫–∞ 108)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cleanKey = key.includes(":") ? key.split(":")[1] : key` (—Å—Ç—Ä–æ–∫–∞ 85)
- `renderComponent = (props = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `postMessageSpy = vi.spyOn(window, "postMessage")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 233)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 244)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 253)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 270)

#### üìÑ FollowUpSuggest.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithTestProviders(component: R, extensionState: T)` (—Å—Ç—Ä–æ–∫–∞ 56)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TestExtensionState` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestExtensionStateContext = createContext<TestExtensionState | undefined>(undefined)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `context = useContext(TestExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `renderWithTestProviders = (component: React.ReactElement, extensionState: TestExtensionState) => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `mockSuggestions = [{ answer: "First suggestion" }, { answer: "Second suggestion" }]` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockOnSuggestionClick = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockOnCancelAutoApproval = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ EditModeControls.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 115)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `modeSelector = screen.getByTitle("chat:selectMode")` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ CommandPatternSelector.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestWrapper(children: R)` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestWrapper = ({ children }: { children: React.ReactNode }) => <TooltipProvider>{children}</TooltipProvider>` (—Å—Ç—Ä–æ–∫–∞ 25)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 103)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `npmInstallPattern = screen.getByText("npm install").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `allowButton = npmInstallPattern?.querySelector('button[aria-label*="removeFromAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 126)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `gitPushPattern = screen.getByText("git push").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 147)
- `denyButton = gitPushPattern?.querySelector('button[aria-label*="removeFromDenied"]')` (—Å—Ç—Ä–æ–∫–∞ 150)
- `mockOnAllowPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 155)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 168)
- `fullCommandPattern = screen.getByText("npm install express").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 172)
- `allowButton = fullCommandPattern?.querySelector('button[aria-label*="addToAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 173)
- `mockOnDenyPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 181)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `fullCommandPattern = screen.getByText("npm install express").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `denyButton = fullCommandPattern?.querySelector('button[aria-label*="addToDenied"]')` (—Å—Ç—Ä–æ–∫–∞ 199)
- `mockOnAllowPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 208)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 228)
- `patternRow = input.closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `allowButton = patternRow?.querySelector('button[aria-label*="addToAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 236)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 254)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 258)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 262)

#### üìÑ CommandExecution.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ExtensionStateWrapper(children: R)` (—Å—Ç—Ä–æ–∫–∞ 43)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `ExtensionStateWrapper = ({ children }: { children: React.ReactNode }) => (` (—Å—Ç—Ä–æ–∫–∞ 43)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `icon = <span data-testid="custom-icon">üì¶</span>` (—Å—Ç—Ä–æ–∫–∞ 74)
- `title = <span data-testid="custom-title">Installing Dependencies</span>` (—Å—Ç—Ä–æ–∫–∞ 75)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `allowButton = screen.getByText("Allow git push")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `denyButton = screen.getByText("Deny docker run")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `stateWithNpmTest = {` (—Å—Ç—Ä–æ–∫–∞ 134)
- `allowButton = screen.getByText("Allow npm test")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `stateWithRmRf = {` (—Å—Ç—Ä–æ–∫–∞ 158)
- `denyButton = screen.getByText("Deny rm -rf")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 181)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 196)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 207)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 211)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `disabledState = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 257)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 268)
- `stateWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 274)
- `stateWithRmInDenied = {` (—Å—Ç—Ä–æ–∫–∞ 292)
- `allowButton = screen.getByText("Allow rm file.txt")` (—Å—Ç—Ä–æ–∫–∞ 304)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `commandWithOutput = `npm install` (—Å—Ç—Ä–æ–∫–∞ 328)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 344)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 369)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `commandWithMixedContent = `npm test` (—Å—Ç—Ä–æ–∫–∞ 387)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `conflictState = {` (—Å—Ç—Ä–æ–∫–∞ 411)
- `allowButton = screen.getByText("Allow git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 424)
- `commandWithQuotes = "echo 'test with unclosed quote"` (—Å—Ç—Ä–æ–∫–∞ 434)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 446)
- `outputOnly = `Some output without a command` (—Å—Ç—Ä–æ–∫–∞ 466)
- `codeBlock = screen.getByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 477)
- `plainCommand = "docker build ."` (—Å—Ç—Ä–æ–∫–∞ 485)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 497)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `commandWithNumericOutput = `wc -l *.go *.java` (—Å—Ç—Ä–æ–∫–∞ 507)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 521)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 525)
- `commandWithZeroTotal = `wc -l *.go *.java` (—Å—Ç—Ä–æ–∫–∞ 537)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 548)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 555)

#### üìÑ ChatView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: P)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 280)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 13)

- `interface ExtensionState` (—Å—Ç—Ä–æ–∫–∞ 22)

- `interface ChatTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 168)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPlayFunction = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockVersionIndicator = vi.mocked(` (—Å—Ç—Ä–æ–∫–∞ 70)
- `React = require("react")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockInputRef = React.createRef<HTMLInputElement>()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `mockFocus = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `mockReact = require("react")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `mockPostMessage = (state: Partial<ExtensionState>) => {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 315)
- `chainedCommands = [` (—Å—Ç—Ä–æ–∫–∞ 691)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1206)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1231)
- `chatTextArea = getByTestId("chat-textarea")` (—Å—Ç—Ä–æ–∫–∞ 1463)
- `input = chatTextArea.querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 1464)
- `chatTextArea = getByTestId("chat-textarea")` (—Å—Ç—Ä–æ–∫–∞ 1491)
- `input = chatTextArea.querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 1492)

#### üìÑ ChatView.keyboard-fix.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 126)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 126)
- `callsAfterPeriod = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 169)
- `modeSwitchAfterPeriod = callsAfterPeriod.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `callsAfterV = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 189)
- `modeSwitchAfterV = callsAfterV.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `event = new KeyboardEvent("keydown", {` (—Å—Ç—Ä–æ–∫–∞ 204)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `calls = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 251)
- `modeSwitch = calls.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `calls = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 284)
- `modeSwitch = calls.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 285)

#### üìÑ ChatView.auto-approve.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ ChatView.auto-approve-new.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 91)
- `toolRequests = [` (—Å—Ç—Ä–æ–∫–∞ 437)

#### üìÑ ChatTextArea.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1047)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `relativePath = path.substring(cwd.length)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockPostMessage = vscode.postMessage as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockConvertToMentionPath = pathMentions.convertToMentionPath as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 32)
- `getEnhancePromptButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `apiConfiguration = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `animatingIcon = enhanceButton.querySelector(".animate-spin")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `mockExecCommand = vi.fn().mockReturnValue(true)` (—Å—Ç—Ä–æ–∫–∞ 191)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 201)
- `mockSelect = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `mockFocus = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 226)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 251)
- `mockCwd = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 290)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 312)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `initialCursorPosition = 5` (—Å—Ç—Ä–æ–∫–∞ 339)
- `textArea = container.querySelector("textarea")` (—Å—Ç—Ä–æ–∫–∞ 346)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 353)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 378)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 399)
- `specialPath1 = "/Users/test/project/file with spaces.js"` (—Å—Ç—Ä–æ–∫–∞ 404)
- `specialPath2 = "/Users/test/project/file-with-dashes.js"` (—Å—Ç—Ä–æ–∫–∞ 405)
- `specialPath3 = "/Users/test/project/file_with_underscores.js"` (—Å—Ç—Ä–æ–∫–∞ 406)
- `specialPath4 = "/Users/test/project/file.with.dots.js"` (—Å—Ç—Ä–æ–∫–∞ 407)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 410)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 435)
- `outsidePath = "/Users/other/project/file.js"` (—Å—Ç—Ä–æ–∫–∞ 440)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 448)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 467)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 474)
- `mockClineMessages = [` (—Å—Ç—Ä–æ–∫–∞ 493)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 513)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 518)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 530)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 535)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 550)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 555)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 568)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 573)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 587)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 592)
- `onSend = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 606)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 607)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 617)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 630)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 635)
- `mixedClineMessages = [` (—Å—Ç—Ä–æ–∫–∞ 647)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 664)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 669)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 692)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 697)
- `clineMessagesWithEmpty = [` (—Å—Ç—Ä–æ–∫–∞ 705)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 723)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 728)
- `mockTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 740)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 757)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 762)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 774)
- `textarea = document.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 796)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 826)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 831)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 846)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 851)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 866)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 871)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 891)
- `mockCommands = [` (—Å—Ç—Ä–æ–∫–∞ 908)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 927)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 938)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 952)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 967)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 979)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 992)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 1007)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `getApiConfigDropdown = () => {` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `apiConfigDropdown = getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1052)
- `apiConfigDropdown = getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `cancelButton = screen.getByRole("button", { name: /cancel/i })` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `saveButton = screen.getByRole("button", { name: /save/i })` (—Å—Ç—Ä–æ–∫–∞ 1080)
- `sendButton = screen.queryByRole("button", { name: /send.*message/i })` (—Å—Ç—Ä–æ–∫–∞ 1084)
- `cancelButton = screen.queryByRole("button", { name: /cancel/i })` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `sendButton = screen.getByRole("button", { name: /send.*message/i })` (—Å—Ç—Ä–æ–∫–∞ 1103)
- `saveButton = screen.queryByRole("button", { name: /save/i })` (—Å—Ç—Ä–æ–∫–∞ 1107)

#### üìÑ BatchFilePermission.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockVscodePostMessage = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `mockOnPermissionResponse = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 18)
- `filePathElement = screen.getByText(/Button\.tsx.*export const Button/)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `headerElement = filePathElement.closest(".flex.items-center.select-none")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `filesWithDotPath = [` (—Å—Ç—Ä–æ–∫–∞ 116)
- `externalLinkIcons = screen.getAllByText((_content, element) => {` (—Å—Ç—Ä–æ–∫–∞ 173)

#### üìÑ AutoApproveMenu.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vscode.postMessage as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `masterCheckbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `masterCheckbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 168)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `mockSetAlwaysAllowWrite = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 186)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 196)
- `writeButton = screen.getByTestId("always-allow-write-toggle")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `mockSetAutoApprovalEnabled = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 244)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockSetAutoApprovalEnabled = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 269)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 283)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 291)

#### üìÑ ApiConfigSelector.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `mockTogglePinnedApiConfig = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `icon = trigger.querySelector(".codicon-chevron-up")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `customTitle = "Custom tooltip text"` (—Å—Ç—Ä–æ–∫–∞ 91)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `customClass = "custom-trigger-class"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 110)
- `popoverContent = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 136)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 223)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 226)
- `clearButton = screen.getByTestId("popover-content").querySelector(".cursor-pointer")` (—Å—Ç—Ä–æ–∫–∞ 232)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `config2 = screen.getByText("Config 2")` (—Å—Ç—Ä–æ–∫–∞ 248)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `config1Elements = screen.getAllByText("Config 1")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `configInDropdown = config1Elements.find((el) => el.closest('[data-testid="popover-content"]'))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `selectedConfigRow = configInDropdown?.closest("div")` (—Å—Ç—Ä–æ–∫–∞ 265)
- `checkIcon = selectedConfigRow?.querySelector(".codicon-check")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `content = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `configTexts = content.querySelectorAll(".truncate")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 294)
- `config2Row = screen.getByText("Config 2").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 298)
- `pinButton = config2Row?.querySelector("button")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `popoverContent = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `settingsButton = popoverContent.querySelector('[aria-label="chat:edit"]') as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 320)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 331)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 345)
- `infoIcon = screen.getByTestId("popover-content").querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 352)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `infoIcon = screen.getByTestId("popover-content").querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 366)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 371)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 388)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 405)
- `config2Row = screen.getByText("Config 2").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `pinButton = config2Row?.querySelector("button")` (—Å—Ç—Ä–æ–∫–∞ 410)

#### üìÑ Announcement.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockHideAnnouncement = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `expectedVersion = Package.version` (—Å—Ç—Ä–æ–∫–∞ 34)

### üìÇ webview-ui/src/components/account/__tests__

#### üìÑ AccountView.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 68)

### üìÇ build-src/webview-ui/src/i18n/__tests__

#### üìÑ TranslationContext.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestComponent()` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 42)

### üìÇ build-src/webview-ui/src/i18n/__mocks__

#### üìÑ TranslationContext.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockTranslate(key: s): string` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTranslate = (key: string, options?: Record<string, any>): string => {` (—Å—Ç—Ä–æ–∫–∞ 4)

### üìÇ build-src/webview-ui/src/context/__tests__

#### üìÑ ExtensionStateContext.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestComponent()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ApiConfigTestComponent()` (—Å—Ç—Ä–æ–∫–∞ 30)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 9)
- `ApiConfigTestComponent = () => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `consoleSpy = vi.spyOn(console, "error")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `initialContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 126)
- `updatedContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 133)
- `updatedConfig = JSON.parse(updatedContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `initialContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 157)
- `initialConfig = JSON.parse(initialContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `updatedContent = screen.getByTestId("api-configuration").textContent!` (—Å—Ç—Ä–æ–∫–∞ 172)
- `updatedConfig = JSON.parse(updatedContent || "{}")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `result = mergeExtensionState(prevState, newState)` (—Å—Ç—Ä–æ–∫–∞ 237)

### üìÇ build-src/webview-ui/src/components/welcome

#### üìÑ WelcomeView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `WelcomeView()` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `WelcomeView = () => {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `setApiConfigurationFieldForApiOptions = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)
- `handleSubmit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `error = apiConfiguration ? validateApiConfiguration(apiConfiguration) : undefined` (—Å—Ç—Ä–æ–∫–∞ 33)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 46)
- `providers = [` (—Å—Ç—Ä–æ–∫–∞ 72)
- `orderedProviders = [...providers]` (—Å—Ç—Ä–æ–∫–∞ 89)

#### üìÑ RooTips.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `RooTips()` (—Å—Ç—Ä–æ–∫–∞ 22)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tips = [` (—Å—Ç—Ä–æ–∫–∞ 7)
- `RooTips = () => {` (—Å—Ç—Ä–æ–∫–∞ 22)

#### üìÑ RooHero.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `RooHero()` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `RooHero = () => {` (—Å—Ç—Ä–æ–∫–∞ 3)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ RooCloudCTA.tsx

### üìÇ build-src/webview-ui/src/components/mcp

#### üìÑ McpView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpView()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ServerRow(server: M)` (—Å—Ç—Ä–æ–∫–∞ 200)
- `getStatusColor()` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handleRowClick()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handleRestart()` (—Å—Ç—Ä–æ–∫–∞ 237)
- `handleTimeoutChange(event: R)` (—Å—Ç—Ä–æ–∫–∞ 245)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 256)

**–¢–∏–ø—ã:**

- `type McpViewProps` (—Å—Ç—Ä–æ–∫–∞ 37)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpView = ({ onDone }: McpViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ServerRow = ({ server, alwaysAllowMcp }: { server: McpServer` (—Å—Ç—Ä–æ–∫–∞ 200)
- `configTimeout = JSON.parse(server.config)?.timeout` (—Å—Ç—Ä–æ–∫–∞ 205)
- `timeoutOptions = [` (—Å—Ç—Ä–æ–∫–∞ 209)
- `getStatusColor = () => {` (—Å—Ç—Ä–æ–∫–∞ 220)
- `handleRowClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `handleRestart = () => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `handleTimeoutChange = (event: React.ChangeEvent<HTMLSelectElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 245)
- `seconds = parseInt(event.target.value)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 256)

#### üìÑ McpToolRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpToolRow()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `handleAlwaysAllowChange()` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleEnabledForPromptChange()` (—Å—Ç—Ä–æ–∫–∞ 32)

**–¢–∏–ø—ã:**

- `type McpToolRowProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpToolRow = ({ tool, serverName, serverSource, alwaysAllowMcp, isInChatContext = false }: McpToolRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `isToolEnabled = tool.enabledForPrompt ?? true` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleAlwaysAllowChange = () => {` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleEnabledForPromptChange = () => {` (—Å—Ç—Ä–æ–∫–∞ 32)

#### üìÑ McpResourceRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpResourceRow()` (—Å—Ç—Ä–æ–∫–∞ 7)

**–¢–∏–ø—ã:**

- `type McpResourceRowProps` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpResourceRow = ({ item }: McpResourceRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `hasUri = "uri" in item` (—Å—Ç—Ä–æ–∫–∞ 8)
- `uri = hasUri ? item.uri : item.uriTemplate` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ McpErrorRow.tsx

**–¢–∏–ø—ã:**

- `type McpErrorRowProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `color = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ McpEnabledToggle.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `McpEnabledToggle()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `handleChange(e: E)` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `McpEnabledToggle = () => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `handleChange = (e: Event | FormEvent<HTMLElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `target = ("target" in e ? e.target : null) as HTMLInputElement | null` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ build-src/webview-ui/src/components/modes

#### üìÑ ModesView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getGroupName(group: G): ToolGroup` (—Å—Ç—Ä–æ–∫–∞ 63)
- `ModesView()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `findMode(m: M): boolean` (—Å—Ç—Ä–æ–∫–∞ 209)
- `handleClickOutside()` (—Å—Ç—Ä–æ–∫–∞ 425)
- `handler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 444)

**–¢–∏–ø—ã:**

- `type ModeSource` (—Å—Ç—Ä–æ–∫–∞ 56)
- `type ModesViewProps` (—Å—Ç—Ä–æ–∫–∞ 58)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `availableGroups = (Object.keys(TOOL_GROUPS) as ToolGroup[]).filter((group) => !TOOL_GROUPS[group].alwaysAvailable)` (—Å—Ç—Ä–æ–∫–∞ 54)
- `ModesView = ({ onDone }: ModesViewProps) => {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `modes = useMemo(() => getAllModes(customModes), [customModes])` (—Å—Ç—Ä–æ–∫–∞ 88)
- `searchInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `updateAgentPrompt = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 119)
- `existingPrompt = customModePrompts?.[mode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 121)
- `updatedPrompt = { ...existingPrompt, ...promptData }` (—Å—Ç—Ä–æ–∫–∞ 122)
- `updateCustomMode = useCallback((slug: string, modeConfig: ModeConfig) => {` (—Å—Ç—Ä–æ–∫–∞ 144)
- `source = modeConfig.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 145)
- `findModeBySlug = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 158)
- `switchMode = useCallback((slug: string) => {` (—Å—Ç—Ä–æ–∫–∞ 165)
- `handleModeSwitch = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 173)
- `onOpenChange = useCallback((open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 190)
- `onClearSearch = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 202)
- `getCurrentMode = useCallback((): ModeConfig | undefined => {` (—Å—Ç—Ä–æ–∫–∞ 208)
- `findMode = (m: ModeConfig): boolean => m.slug === visualMode` (—Å—Ç—Ä–æ–∫–∞ 209)
- `checkRulesDirectory = useCallback((slug: string) => {` (—Å—Ç—Ä–æ–∫–∞ 214)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 223)
- `getModeProperty = <T extends keyof ModeConfig>(` (—Å—Ç—Ä–æ–∫–∞ 238)
- `resetFormState = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 263)
- `generateSlug = useCallback((name: string, attempt = 0): string => {` (—Å—Ç—Ä–æ–∫–∞ 289)
- `baseSlug = name` (—Å—Ç—Ä–æ–∫–∞ 290)
- `handleNameChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 298)
- `handleCreateMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 306)
- `source = newModeSource` (—Å—Ç—Ä–æ–∫–∞ 314)
- `result = modeConfigSchema.safeParse(newMode)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `field = error.path[0] as string` (—Å—Ç—Ä–æ–∫–∞ 332)
- `message = error.message` (—Å—Ç—Ä–æ–∫–∞ 333)
- `isNameOrSlugTaken = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 373)
- `openCreateModeDialog = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 380)
- `baseNamePrefix = "New Custom Mode"` (—Å—Ç—Ä–æ–∫–∞ 381)
- `handleGroupChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 397)
- `target = (e as CustomEvent)?.detail?.target || (e.target as HTMLInputElement)` (—Å—Ç—Ä–æ–∫–∞ 401)
- `checked = target.checked` (—Å—Ç—Ä–æ–∫–∞ 402)
- `oldGroups = customMode?.groups || []` (—Å—Ç—Ä–æ–∫–∞ 403)
- `source = customMode.source || "global"` (—Å—Ç—Ä–æ–∫–∞ 411)
- `handleClickOutside = () => {` (—Å—Ç—Ä–æ–∫–∞ 425)
- `modeToDeleteRef = useRef(modeToDelete)` (—Å—Ç—Ä–æ–∫–∞ 436)
- `handler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 444)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 445)
- `currentModeToDelete = modeToDeleteRef.current` (—Å—Ç—Ä–æ–∫–∞ 477)
- `handleAgentReset = (` (—Å—Ç—Ä–æ–∫–∞ 492)
- `existingPrompt = customModePrompts?.[modeSlug] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 497)
- `updatedPrompt = { ...existingPrompt }` (—Å—Ç—Ä–æ–∫–∞ 498)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 751)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 761)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 780)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 813)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 830)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 831)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 842)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 873)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 889)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 890)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 897)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 927)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 944)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 945)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 952)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1004)
- `isCustomMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1005)
- `customMode = isCustomMode` (—Å—Ç—Ä–æ–∫–∞ 1006)
- `isGroupEnabled = isCustomMode` (—Å—Ç—Ä–æ–∫–∞ 1007)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1022)
- `editGroup = currentMode?.groups?.find(` (—Å—Ç—Ä–æ–∫–∞ 1023)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1044)
- `enabledGroups = currentMode?.groups || []` (—Å—Ç—Ä–æ–∫–∞ 1045)
- `groupName = getGroupName(group)` (—Å—Ç—Ä–æ–∫–∞ 1054)
- `displayName = t(`prompts:tools.toolNames.${groupName}`)` (—Å—Ç—Ä–æ–∫–∞ 1055)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1080)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `prompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 1100)
- `customMode = findModeBySlug(visualMode, customModes)` (—Å—Ç—Ä–æ–∫–∞ 1111)
- `existingPrompt = customModePrompts?.[visualMode] as PromptComponent` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1144)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1170)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1186)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1207)
- `currentMode = getCurrentMode()` (—Å—Ç—Ä–æ–∫–∞ 1264)
- `target = ((e as CustomEvent)?.detail?.target ||` (—Å—Ç—Ä–æ–∫–∞ 1402)
- `checked = target.checked` (—Å—Ç—Ä–æ–∫–∞ 1494)
- `selectedLevel = (` (—Å—Ç—Ä–æ–∫–∞ 1613)

#### üìÑ DeleteModeDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface DeleteModeDialogProps` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ build-src/webview-ui/src/components/human-relay

#### üìÑ HumanRelayDialog.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleCopy()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleSubmit(e: R)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleCancel()` (—Å—Ç—Ä–æ–∫–∞ 62)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface HumanRelayDialogProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleCopy = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleSubmit = (e: React.FormEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 62)

### üìÇ build-src/webview-ui/src/components/common

#### üìÑ ZoomControls.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `startContinuousZoom(amount: n)` - Start continuous zoom on mouse down (—Å—Ç—Ä–æ–∫–∞ 33)
- `stopContinuousZoom()` - Stop continuous zoom on mouse up or mouse leave (—Å—Ç—Ä–æ–∫–∞ 53)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ZoomControlsProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `zoomIntervalRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `startContinuousZoom = (amount: number) => {` - Start continuous zoom on mouse down (—Å—Ç—Ä–æ–∫–∞ 33)
- `stopContinuousZoom = () => {` - Stop continuous zoom on mouse up or mouse leave (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ VersionIndicator.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface VersionIndicatorProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ VSCodeButtonLink.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface VSCodeButtonLinkProps` (—Å—Ç—Ä–æ–∫–∞ 4)

#### üìÑ ToolUseBlock.tsx

#### üìÑ Thumbnails.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Thumbnails()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `handleDelete(index: n)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `handleImageClick(image: s)` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ThumbnailsProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Thumbnails = ({ images, style, setImages, onHeightChange }: ThumbnailsProps) => {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 14)
- `handleDelete = (index: number) => {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `isDeletable = setImages !== undefined` (—Å—Ç—Ä–æ–∫–∞ 33)
- `handleImageClick = (image: string) => {` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ TelemetryBanner.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TelemetryBanner()` (—Å—Ç—Ä–æ–∫–∞ 30)
- `handleAllow()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleDeny()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleOpenSettings()` (—Å—Ç—Ä–æ–∫–∞ 44)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BannerContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 11)
- `ButtonContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 21)
- `TelemetryBanner = () => {` (—Å—Ç—Ä–æ–∫–∞ 30)
- `handleAllow = () => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `handleDeny = () => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleOpenSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ TabButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TabButtonProps` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ Tab.tsx

**–¢–∏–ø—ã:**

- `type TabProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onWheel = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 23)
- `target = e.target as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 29)

#### üìÑ Modal.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModalProps` (—Å—Ç—Ä–æ–∫–∞ 1)

#### üìÑ MermaidButton.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleZoom(e: R)` - Opens a modal with the diagram for zooming (—Å—Ç—Ä–æ–∫–∞ 37)
- `async handleCopy(e: R)` - Copies the diagram text to clipboard (—Å—Ç—Ä–æ–∫–∞ 47)
- `async handleSave(e: R)` - Saves the diagram as an image file (—Å—Ç—Ä–æ–∫–∞ 64)
- `adjustZoom(amount: n)` - Adjust zoom level in the modal (—Å—Ç—Ä–æ–∫–∞ 91)
- `handleMouseEnter()` - Handle mouse enter event for diagram container (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleMouseLeave()` - Handle mouse leave event for diagram container (—Å—Ç—Ä–æ–∫–∞ 121)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MIN_ZOOM = 0.5` (—Å—Ç—Ä–æ–∫–∞ 12)
- `MAX_ZOOM = 20` (—Å—Ç—Ä–æ–∫–∞ 13)
- `handleZoom = async (e: React.MouseEvent) => {` - Opens a modal with the diagram for zooming (—Å—Ç—Ä–æ–∫–∞ 37)
- `handleCopy = async (e: React.MouseEvent) => {` - Copies the diagram text to clipboard (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleSave = async (e: React.MouseEvent) => {` - Saves the diagram as an image file (—Å—Ç—Ä–æ–∫–∞ 64)
- `svgEl = containerRef.current?.querySelector("svg")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `pngDataUrl = await svgToPng(svgEl)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `adjustZoom = (amount: number) => {` - Adjust zoom level in the modal (—Å—Ç—Ä–æ–∫–∞ 91)
- `newZoom = prev + amount` (—Å—Ç—Ä–æ–∫–∞ 93)
- `handleWheel = useCallback((e: React.WheelEvent) => {` - Handle wheel event for zooming with scroll wheel (—Å—Ç—Ä–æ–∫–∞ 101)
- `delta = e.deltaY > 0 ? -0.2 : 0.2` (—Å—Ç—Ä–æ–∫–∞ 107)
- `handleMouseEnter = () => {` - Handle mouse enter event for diagram container (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleMouseLeave = () => {` - Handle mouse leave event for diagram container (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ MermaidBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleClick()` - Called when user clicks the rendered diagram. Converts the <svg> to a PNG and sends it to the extension. (—Å—Ç—Ä–æ–∫–∞ 138)
- `async svgToPng(svgEl: S): Promise<string>` (—Å—Ç—Ä–æ–∫–∞ 226)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MermaidBlockProps` (—Å—Ç—Ä–æ–∫–∞ 86)

- `interface SvgContainerProps` (—Å—Ç—Ä–æ–∫–∞ 312)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `MERMAID_THEME = {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `containerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 91)
- `id = `mermaid-${Math.random().toString(36).substring(2)}`` (—Å—Ç—Ä–æ–∫–∞ 114)
- `handleClick = async () => {` - Called when user clicks the rendered diagram. Converts the <svg> to a PNG and sends it to the extension. (—Å—Ç—Ä–æ–∫–∞ 138)
- `svgEl = containerRef.current.querySelector("svg")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `pngDataUrl = await svgToPng(svgEl)` (—Å—Ç—Ä–æ–∫–∞ 144)
- `combinedContent = `Error: ${error}\n\n\`\`\`mermaid\n${code}\n\`\`\``` (—Å—Ç—Ä–æ–∫–∞ 195)
- `svgClone = svgEl.cloneNode(true) as SVGElement` (—Å—Ç—Ä–æ–∫–∞ 228)
- `viewBox = svgClone.getAttribute("viewBox")?.split(" ").map(Number) || []` (—Å—Ç—Ä–æ–∫–∞ 231)
- `originalWidth = viewBox[2] || svgClone.clientWidth` (—Å—Ç—Ä–æ–∫–∞ 232)
- `originalHeight = viewBox[3] || svgClone.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 233)
- `editorWidth = 3_600` (—Å—Ç—Ä–æ–∫–∞ 239)
- `scale = editorWidth / originalWidth` (—Å—Ç—Ä–æ–∫–∞ 241)
- `scaledHeight = originalHeight * scale` (—Å—Ç—Ä–æ–∫–∞ 242)
- `serializer = new XMLSerializer()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `svgString = serializer.serializeToString(svgClone)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `encodedSvg = encodeURIComponent(svgString).replace(/'/g, "%27").replace(/"/g, "%22")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `svgDataUrl = `data:image/svg+xml` (—Å—Ç—Ä–æ–∫–∞ 255)
- `img = new Image()` (—Å—Ç—Ä–æ–∫–∞ 258)
- `canvas = document.createElement("canvas")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `ctx = canvas.getContext("2d")` (—Å—Ç—Ä–æ–∫–∞ 265)
- `MermaidBlockContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 283)
- `LoadingMessage = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 288)
- `CopyButton = styled.button`` (—Å—Ç—Ä–æ–∫–∞ 295)
- `SvgContainer = styled.div<SvgContainerProps>`` (—Å—Ç—Ä–æ–∫–∞ 316)

#### üìÑ MermaidActionButtons.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MermaidActionButtonsProps` (—Å—Ç—Ä–æ–∫–∞ 7)

#### üìÑ MarkdownBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick(e: R)` (—Å—Ç—Ä–æ–∫–∞ 197)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarkdownBlockProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `StyledMarkdown = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 18)
- `MarkdownBlock = memo(({ markdown }: MarkdownBlockProps) => {` (—Å—Ç—Ä–æ–∫–∞ 186)
- `components = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 187)
- `handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 197)
- `isLocalPath = href?.startsWith("file://") || href?.startsWith("/") || !href?.includes("://")` (—Å—Ç—Ä–æ–∫–∞ 199)
- `match = filePath.match(/(.*):(\d+)(-\d+)?$/)` (—Å—Ç—Ä–æ–∫–∞ 211)
- `codeEl = children as React.ReactElement` (—Å—Ç—Ä–æ–∫–∞ 238)
- `match = /language-(\w+)/.exec(className)` (—Å—Ç—Ä–æ–∫–∞ 264)
- `language = match ? match[1] : "text"` (—Å—Ç—Ä–æ–∫–∞ 265)

#### üìÑ IconButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IconButtonProps` (—Å—Ç—Ä–æ–∫–∞ 3)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `sizeClasses = {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `variantClasses = {` (—Å—Ç—Ä–æ–∫–∞ 29)
- `handleClick = onClick || ((_event: React.MouseEvent) => {})` (—Å—Ç—Ä–æ–∫–∞ 34)
- `button = (` (—Å—Ç—Ä–æ–∫–∞ 36)

#### üìÑ FormattedTextField.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FormattedTextFieldProps` (—Å—Ç—Ä–æ–∫–∞ 21)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleInput = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 41)
- `input = e.target as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 43)
- `parsedValue = formatter.parse(filteredValue)` (—Å—Ç—Ä–æ–∫–∞ 53)
- `handleBlur = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `displayValue = isTyping ? rawInput : formatter.format(value)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `value = parseInt(input)` (—Å—Ç—Ä–æ–∫–∞ 86)
- `value = parseFloat(input)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `firstDotIndex = cleanValue.indexOf(".")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `beforeDot = cleanValue.substring(0, firstDotIndex + 1)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `afterDot = cleanValue.substring(firstDotIndex + 1).replace(/\./g, "")` (—Å—Ç—Ä–æ–∫–∞ 113)

#### üìÑ DecoratedVSCodeTextField.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface WebComponentWithShadowRoot extends HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `inputRef = useRef<HTMLInputElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 21)
- `handleVSCodeFieldRef = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 25)
- `webComponent = element as unknown as WebComponentWithShadowRoot` (—Å—Ç—Ä–æ–∫–∞ 29)
- `focusInput = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `hasLeftNodes = leftNodes && leftNodes.filter(Boolean).length > 0` (—Å—Ç—Ä–æ–∫–∞ 52)
- `hasRightNodes = rightNodes && rightNodes.filter(Boolean).length > 0` (—Å—Ç—Ä–æ–∫–∞ 53)

#### üìÑ CodeBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async highlight()` (—Å—Ç—Ä–æ–∫–∞ 265)
- `handleScroll()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `handleOuterScroll()` (—Å—Ç—Ä–æ–∫–∞ 390)
- `handleScroll()` (—Å—Ç—Ä–æ–∫–∞ 494)
- `handleResize()` (—Å—Ç—Ä–æ–∫–∞ 495)
- `getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 565)
- `animate()` (—Å—Ç—Ä–æ–∫–∞ 576)
- `handleWheel(e: W)` (—Å—Ç—Ä–æ–∫–∞ 592)
- `handleMouseDown(e: M)` (—Å—Ç—Ä–æ–∫–∞ 652)
- `handleMouseUp()` (—Å—Ç—Ä–æ–∫–∞ 659)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeBlockProps` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CodeBlockButton = styled.button`` (—Å—Ç—Ä–æ–∫–∞ 44)
- `CodeBlockButtonWrapper = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 72)
- `CodeBlockContainer = styled.div`` (—Å—Ç—Ä–æ–∫–∞ 100)
- `LanguageSelect = styled.select`` (—Å—Ç—Ä–æ–∫–∞ 170)
- `CodeBlock = memo(` (—Å—Ç—Ä–æ–∫–∞ 216)
- `userChangedLanguageRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 230)
- `codeBlockRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 233)
- `preRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 234)
- `copyButtonWrapperRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `isMountedRef = useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 238)
- `buttonPositionTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 239)
- `collapseTimeout1Ref = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `collapseTimeout2Ref = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 241)
- `normalizedLang = normalizeLanguage(language)` (—Å—Ç—Ä–æ–∫–∞ 246)
- `fallback = (` (—Å—Ç—Ä–æ–∫–∞ 259)
- `highlight = async () => {` (—Å—Ç—Ä–æ–∫–∞ 265)
- `highlighter = await getHighlighter(currentLanguage)` (—Å—Ç—Ä–æ–∫–∞ 273)
- `hast = await highlighter.codeToHast(source || "", {` (—Å—Ç—Ä–æ–∫–∞ 276)
- `reactElement = toJsxRuntime(hast, {` (—Å—Ç—Ä–æ–∫–∞ 304)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 349)
- `actualHeight = codeBlock.scrollHeight` (—Å—Ç—Ä–æ–∫–∞ 352)
- `wasScrolledUpRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 359)
- `outerContainerNearBottomRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 362)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 366)
- `handleScroll = () => {` (—Å—Ç—Ä–æ–∫–∞ 369)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 387)
- `handleOuterScroll = () => {` (—Å—Ç—Ä–æ–∫–∞ 390)
- `shouldScrollAfterHighlightRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 408)
- `updateCodeBlockButtonPosition = useCallback((forceHide = false) => {` (—Å—Ç—Ä–æ–∫–∞ 420)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 421)
- `copyWrapper = copyButtonWrapperRef.current` (—Å—Ç—Ä–æ–∫–∞ 422)
- `rectCodeBlock = codeBlock.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 428)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 429)
- `copyRect = copyWrapper.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 439)
- `buttonRect = copyWrapper.children[0].getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 446)
- `buttonStyle = window.getComputedStyle(copyWrapper.children[0] as Element)` (—Å—Ç—Ä–æ–∫–∞ 447)
- `fontSize = parseInt(window.getComputedStyle(document.body).getPropertyValue("font-size"), 10)` (—Å—Ç—Ä–æ–∫–∞ 457)
- `scrollRect = scrollContainer.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 461)
- `copyButtonEdge = 48` (—Å—Ç—Ä–æ–∫–∞ 462)
- `computedStyle = window.getComputedStyle(codeBlock)` (—Å—Ç—Ä–æ–∫–∞ 468)
- `paddingValue = parseInt(computedStyle.getPropertyValue("padding") || "0", 10)` (—Å—Ç—Ä–æ–∫–∞ 469)
- `isVisible = !forceHide && isPartiallyVisible` (—Å—Ç—Ä–æ–∫–∞ 474)
- `topPosition = Math.max(` (—Å—Ç—Ä–æ–∫–∞ 482)
- `rightPosition = Math.max(margin, scrollRect.right - rectCodeBlock.right + margin)` (—Å—Ç—Ä–æ–∫–∞ 486)
- `handleScroll = () => updateCodeBlockButtonPosition()` (—Å—Ç—Ä–æ–∫–∞ 494)
- `handleResize = () => updateCodeBlockButtonPosition()` (—Å—Ç—Ä–æ–∫–∞ 495)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 497)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 535)
- `getScrollContainer = () => {` (—Å—Ç—Ä–æ–∫–∞ 565)
- `FRICTION = 0.85 // Friction coefficient (lower = more friction)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `MIN_VELOCITY = 0.5 // Minimum velocity before stopping` (—Å—Ç—Ä–æ–∫–∞ 573)
- `animate = () => {` (—Å—Ç—Ä–æ–∫–∞ 576)
- `scrollContainer = getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 577)
- `handleWheel = (e: WheelEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 592)
- `hasScrollbar = preRef.current.scrollHeight > preRef.current.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 601)
- `scrollContainer = getScrollContainer()` (—Å—Ç—Ä–æ–∫–∞ 608)
- `isAtVeryTop = preRef.current.scrollTop === 0` (—Å—Ç—Ä–æ–∫–∞ 612)
- `boost = 0.15` (—Å—Ç—Ä–æ–∫–∞ 621)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 632)
- `handleMouseDown = (e: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 652)
- `handleMouseUp = () => {` (—Å—Ç—Ä–æ–∫–∞ 659)
- `preElement = preRef.current` (—Å—Ç—Ä–æ–∫–∞ 663)
- `handleCopy = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 673)
- `codeBlock = codeBlockRef.current` (—Å—Ç—Ä–æ–∫–∞ 678)
- `textToCopy = rawSource !== undefined ? rawSource : source || ""` (—Å—Ç—Ä–æ–∫–∞ 682)
- `newLang = normalizeLanguage(e.target.value)` (—Å—Ç—Ä–æ–∫–∞ 719)
- `normalizedLang = normalizeLanguage(lang)` (—Å—Ç—Ä–æ–∫–∞ 736)
- `codeBlock = codeBlockRef.current // Capture ref early` (—Å—Ç—Ä–æ–∫–∞ 759)
- `MemoizedCodeContent = memo(({ children }: { children: React.ReactNode }) => <>{children}</>)` (—Å—Ç—Ä–æ–∫–∞ 810)
- `MemoizedStyledPre = memo(` (—Å—Ç—Ä–æ–∫–∞ 813)

#### üìÑ CodeAccordian.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeAccordianProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `CodeAccordian = ({` (—Å—Ç—Ä–æ–∫–∞ 23)
- `inferredLanguage = useMemo(() => language ?? (path ? getLanguageFromPath(path) : "txt"), [path, language])` (—Å—Ç—Ä–æ–∫–∞ 35)
- `source = useMemo(() => code.trim(), [code])` (—Å—Ç—Ä–æ–∫–∞ 36)
- `hasHeader = Boolean(path || isFeedback || header)` (—Å—Ç—Ä–æ–∫–∞ 37)

### üìÇ build-src/webview-ui/src/components/account

#### üìÑ AccountView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleConnectClick()` (—Å—Ç—Ä–æ–∫–∞ 35)
- `handleLogoutClick()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handleVisitCloudWebsite()` (—Å—Ç—Ä–æ–∫–∞ 47)

**–¢–∏–ø—ã:**

- `type AccountViewProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasAuthenticatedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 20)
- `rooLogoUri = (window as any).IMAGES_BASE_URI + "/roo-logo.svg"` (—Å—Ç—Ä–æ–∫–∞ 22)
- `handleConnectClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `handleLogoutClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 41)
- `handleVisitCloudWebsite = () => {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `cloudUrl = cloudApiUrl || "https://app.neira.app"` (—Å—Ç—Ä–æ–∫–∞ 50)

### üìÇ build-src/webview-ui/src/components/__tests__

#### üìÑ ErrorBoundary.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ErrorThrowingComponent()` (—Å—Ç—Ä–æ–∫–∞ 34)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ErrorThrowingComponent = ({ shouldThrow = false }) => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `originalConsoleError = console.error` (—Å—Ç—Ä–æ–∫–∞ 43)
- `errorTitle = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 70)
- `errorTitle = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 83)
- `errorTitleAfterRerender = screen.getByRole("heading", { level: 2 })` (—Å—Ç—Ä–æ–∫–∞ 94)

### üìÇ build-src/webview-ui/src/components/chat

#### üìÑ UpdateTodoListToolBlock.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `genId()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `handleContentChange(id: s, value: s)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleStatusChange(id: s, status: s)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `handleDelete(id: s)` (—Å—Ç—Ä–æ–∫–∞ 110)
- `confirmDelete()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `cancelDelete()` (—Å—Ç—Ä–æ–∫–∞ 120)
- `handleAdd()` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleNewInputKeyDown(e: R)` (—Å—Ç—Ä–æ–∫–∞ 138)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TodoItem` (—Å—Ç—Ä–æ–∫–∞ 5)

- `interface UpdateTodoListToolBlockProps` (—Å—Ç—Ä–æ–∫–∞ 16)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `STATUS_OPTIONS = [` (—Å—Ç—Ä–æ–∫–∞ 29)
- `genId = () => Math.random().toString(36).slice(2, 10)` (—Å—Ç—Ä–æ–∫–∞ 47)
- `newInputRef = useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 61)
- `handleContentChange = (id: string, value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `newTodos = editTodos.map((todo) => (todo.id === id ? { ...todo, content: value } : todo))` (—Å—Ç—Ä–æ–∫–∞ 97)
- `handleStatusChange = (id: string, status: string) => {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `newTodos = editTodos.map((todo) => (todo.id === id ? { ...todo, status } : todo))` (—Å—Ç—Ä–æ–∫–∞ 104)
- `handleDelete = (id: string) => {` (—Å—Ç—Ä–æ–∫–∞ 110)
- `confirmDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `newTodos = editTodos.filter((todo) => todo.id !== deleteId)` (—Å—Ç—Ä–æ–∫–∞ 115)
- `cancelDelete = () => setDeleteId(null)` (—Å—Ç—Ä–æ–∫–∞ 120)
- `handleAdd = () => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `newTodos = [...editTodos, newTodo]` (—Å—Ç—Ä–æ–∫–∞ 130)
- `handleNewInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 138)

#### üìÑ TodoListDisplay.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getMostImportantTodoIcon()` (—Å—Ç—Ä–æ–∫–∞ 41)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ulRef = useRef<HTMLUListElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 5)
- `itemRefs = useRef<(HTMLLIElement | null)[]>([])` (—Å—Ç—Ä–æ–∫–∞ 6)
- `scrollIndex = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 7)
- `inProgressIdx = todos.findIndex((todo: any) => todo.status === "in_progress")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mostImportantTodo = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 14)
- `inProgress = todos.find((todo: any) => todo.status === "in_progress")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `target = itemRefs.current[scrollIndex]` (—Å—Ç—Ä–æ–∫–∞ 23)
- `ul = ulRef.current` (—Å—Ç—Ä–æ–∫–∞ 25)
- `targetTop = target.offsetTop - ul.offsetTop` (—Å—Ç—Ä–æ–∫–∞ 26)
- `targetHeight = target.offsetHeight` (—Å—Ç—Ä–æ–∫–∞ 27)
- `ulHeight = ul.clientHeight` (—Å—Ç—Ä–æ–∫–∞ 28)
- `scrollTo = targetTop - (ulHeight / 2 - targetHeight / 2)` (—Å—Ç—Ä–æ–∫–∞ 29)
- `totalCount = todos.length` (—Å—Ç—Ä–æ–∫–∞ 35)
- `completedCount = todos.filter((todo: any) => todo.status === "completed").length` (—Å—Ç—Ä–æ–∫–∞ 36)
- `allCompleted = completedCount === totalCount && totalCount > 0` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getMostImportantTodoIcon = () => {` (—Å—Ç—Ä–æ–∫–∞ 41)

#### üìÑ TaskHeader.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TaskHeader = ({` (—Å—Ç—Ä–æ–∫–∞ 39)
- `textContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 57)
- `textRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `contextWindow = model?.contextWindow || 1` (—Å—Ç—Ä–æ–∫–∞ 59)
- `condenseButton = (` (—Å—Ç—Ä–æ–∫–∞ 63)
- `hasTodos = todos && Array.isArray(todos) && todos.length > 0` (—Å—Ç—Ä–æ–∫–∞ 74)

#### üìÑ TaskActions.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TaskActionsProps` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ SystemPromptWarning.tsx

#### üìÑ SlashCommandsPopover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleRefresh()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `handleOpenChange(open: b)` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandsPopoverProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 23)
- `handleRefresh = () => {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `handleOpenChange = (open: boolean) => {` (—Å—Ç—Ä–æ–∫–∞ 36)
- `trigger = (` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ SlashCommandsList.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleDeleteClick(command: C)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleDeleteConfirm()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleDeleteCancel()` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handleCreateCommand(source: ", name: s)` (—Å—Ç—Ä–æ–∫–∞ 63)
- `handleCommandClick(command: C)` (—Å—Ç—Ä–æ–∫–∞ 84)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandsListProps` (—Å—Ç—Ä–æ–∫–∞ 23)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasWorkspace = Boolean(cwd)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `handleDeleteClick = (command: Command) => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `handleDeleteConfirm = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `handleDeleteCancel = () => {` (—Å—Ç—Ä–æ–∫–∞ 58)
- `handleCreateCommand = (source: "global" | "project", name: string) => {` (—Å—Ç—Ä–æ–∫–∞ 63)
- `fileName = name.trim().endsWith(".md") ? name.trim() : `${name.trim()}.md`` (—Å—Ç—Ä–æ–∫–∞ 67)
- `handleCommandClick = (command: Command) => {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `globalCommands = commands.filter((cmd) => cmd.source === "global")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `projectCommands = commands.filter((cmd) => cmd.source === "project")` (—Å—Ç—Ä–æ–∫–∞ 94)

#### üìÑ SlashCommandItem.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleEdit()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleDelete()` (—Å—Ç—Ä–æ–∫–∞ 35)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface SlashCommandItemProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleEdit = () => {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `handleDelete = () => {` (—Å—Ç—Ä–æ–∫–∞ 35)

#### üìÑ ShareButton.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `handleShare(visibility: S)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleConnectToCloud()` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleShareButtonClick()` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getShareButtonState()` (—Å—Ç—Ä–æ–∫–∞ 121)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ShareButtonProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `wasUnauthenticatedRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `initiatedAuthFromThisButtonRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 60)
- `handleShare = (visibility: ShareVisibility) => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleConnectToCloud = () => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleShareButtonClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 107)
- `getShareButtonState = () => {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `shareButtonState = getShareButtonState()` (—Å—Ç—Ä–æ–∫–∞ 143)

#### üìÑ ReasoningBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ReasoningBlockProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contentRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `elapsedRef = useRef<number>(0)` (—Å—Ç—Ä–æ–∫–∞ 17)
- `cursorRef = useRef<number>(0)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `queueRef = useRef<string[]>([])` (—Å—Ç—Ä–æ–∫–∞ 23)
- `processNextTransition = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `nextThought = queueRef.current.pop()` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ QueuedMessages.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEditState(messageId: s, currentText: s)` (—Å—Ç—Ä–æ–∫–∞ 22)
- `setEditState(messageId: s, isEditing: b)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleSaveEdit(index: n, messageId: s, newValue: s)` (—Å—Ç—Ä–æ–∫–∞ 33)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface QueuedMessagesProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `getEditState = (messageId: string, currentText: string) => {` (—Å—Ç—Ä–æ–∫–∞ 22)
- `setEditState = (messageId: string, isEditing: boolean, value?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 26)
- `handleSaveEdit = (index: number, messageId: string, newValue: string) => {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `editState = getEditState(message.id, message.text)` (—Å—Ç—Ä–æ–∫–∞ 43)

#### üìÑ ProgressIndicator.tsx

#### üìÑ ProfileViolationWarning.tsx

#### üìÑ ModeSelector.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ModeSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 19)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `SEARCH_THRESHOLD = 6` (—Å—Ç—Ä–æ–∫–∞ 17)
- `searchInputRef = React.useRef<HTMLInputElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 44)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `trackModeSelectorOpened = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `modes = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 62)
- `selectedMode = React.useMemo(() => modes.find((mode) => mode.slug === value), [modes, value])` (—Å—Ç—Ä–æ–∫–∞ 70)
- `nameSearchItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 73)
- `descriptionSearchItems = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 80)
- `nameFzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 88)
- `descriptionFzfInstance = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `filteredModes = React.useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 101)
- `nameMatches = nameFzfInstance.find(searchValue)` (—Å—Ç—Ä–æ–∫–∞ 105)
- `nameMatchedModes = new Set(nameMatches.map((result) => result.item.original.slug))` (—Å—Ç—Ä–æ–∫–∞ 106)
- `descriptionMatches = descriptionFzfInstance.find(searchValue)` (—Å—Ç—Ä–æ–∫–∞ 109)
- `combinedResults = [` (—Å—Ç—Ä–æ–∫–∞ 112)
- `onClearSearch = React.useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 122)
- `handleSelect = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 127)
- `onOpenChange = React.useCallback(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `showSearch = !disableSearch && modes.length > SEARCH_THRESHOLD` (—Å—Ç—Ä–æ–∫–∞ 157)
- `instructionText = `${t("chat:modeSelector.description")} ${modeShortcutText}`` (—Å—Ç—Ä–æ–∫–∞ 160)
- `trigger = (` (—Å—Ç—Ä–æ–∫–∞ 162)

#### üìÑ MessageModificationConfirmationDialog.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MessageModificationConfirmationDialogProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isEdit = type === "edit"` (—Å—Ç—Ä–æ–∫–∞ 29)
- `title = isEdit ? t("common:confirmation.editMessage") : t("common:confirmation.deleteMessage")` (—Å—Ç—Ä–æ–∫–∞ 30)
- `description = isEdit ? t("common:confirmation.editWarning") : t("common:confirmation.deleteWarning")` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ Mention.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MentionProps` (—Å—Ç—Ä–æ–∫–∞ 5)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `parts = text.split(mentionRegexGlobal).map((part, index) => {` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ McpExecution.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface McpExecutionProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tryParseJson = useCallback((text: string): { isJson: boolean` (—Å—Ç—Ä–æ–∫–∞ 56)
- `parsed = JSON.parse(text)` (—Å—Ç—Ä–æ–∫–∞ 60)
- `responseData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 74)
- `argumentsData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 87)
- `trimmed = argumentsText.trim()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `parsed = JSON.parse(trimmed)` (—Å—Ç—Ä–æ–∫–∞ 102)
- `formattedResponseText = responseData.formatted` (—Å—Ç—Ä–æ–∫–∞ 117)
- `formattedArgumentsText = argumentsData.formatted` (—Å—Ç—Ä–æ–∫–∞ 118)
- `responseIsJson = responseData.isJson` (—Å—Ç—Ä–æ–∫–∞ 119)
- `onToggleResponseExpand = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 126)
- `result = mcpExecutionStatusSchema.safeParse(safeJsonParse(message.text || "{}", {}))` (—Å—Ç—Ä–æ–∫–∞ 132)
- `data = result.data` (—Å—Ç—Ä–æ–∫–∞ 135)
- `ResponseContainerInternal = ({` (—Å—Ç—Ä–æ–∫–∞ 291)
- `ResponseContainer = memo(ResponseContainerInternal)` (—Å—Ç—Ä–æ–∫–∞ 330)

#### üìÑ Markdown.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `success = await copyWithFeedback(markdown)` (—Å—Ç—Ä–æ–∫–∞ 49)
- `button = document.activeElement as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 51)

#### üìÑ IndexingStatusBadge.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `getTooltipText()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `handleMouseEnterButton()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleMouseLeaveButton()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getStatusColorClass()` (—Å—Ç—Ä–æ–∫–∞ 82)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IndexingStatusBadgeProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent<IndexingStatusUpdateMessage>) => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `status = event.data.values` (—Å—Ç—Ä–æ–∫–∞ 33)
- `progressPercentage = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 47)
- `getTooltipText = () => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `handleMouseEnterButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `handleMouseLeaveButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getStatusColorClass = () => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `statusColors = {` (—Å—Ç—Ä–æ–∫–∞ 83)
- `colors = statusColors[indexingStatus.systemStatus as keyof typeof statusColors] || statusColors.Standby` (—Å—Ç—Ä–æ–∫–∞ 102)

#### üìÑ IconButton.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface IconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>` (—Å—Ç—Ä–æ–∫–∞ 4)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `buttonClasses = cn(` (—Å—Ç—Ä–æ–∫–∞ 22)
- `iconClasses = cn("codicon", iconClass, isLoading && "codicon-modifier-spin")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `button = (` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ FollowUpSuggest.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FollowUpSuggestProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_FOLLOWUP_TIMEOUT_MS = 60000` (—Å—Ç—Ä–æ–∫–∞ 10)
- `COUNTDOWN_INTERVAL_MS = 1000` (—Å—Ç—Ä–æ–∫–∞ 11)
- `intervalId = setInterval(() => {` (—Å—Ç—Ä–æ–∫–∞ 54)
- `handleSuggestionClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 83)
- `isFirstSuggestion = index === 0` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ EditModeControls.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface EditModeControlsProps` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ ContextWindowProgress.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContextWindowProgressProps` (—Å—Ç—Ä–æ–∫–∞ 8)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tokenDistribution = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 18)
- `safeContextWindow = Math.max(0, contextWindow)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `safeContextTokens = Math.max(0, contextTokens)` (—Å—Ç—Ä–æ–∫–∞ 28)
- `tooltipContent = (` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ ContextMenu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderOptionContent(option: C)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `getIconForOption(option: C): string` (—Å—Ç—Ä–æ–∫–∞ 210)
- `getMaterialIconForOption(option: C): string` (—Å—Ç—Ä–æ–∫–∞ 237)
- `isOptionSelectable(option: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 246)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContextMenuProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `menuRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 43)
- `filteredOptions = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 45)
- `selectedElement = menuRef.current.children[selectedIndex] as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 51)
- `menuRect = menuRef.current.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 53)
- `selectedRect = selectedElement.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 54)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 67)
- `renderOptionContent = (option: ContextMenuQueryItem) => {` (—Å—Ç—Ä–æ–∫–∞ 71)
- `path = removeLeadingNonAlphanumeric(option.value || "").replace(/\/$/, "")` (—Å—Ç—Ä–æ–∫–∞ 172)
- `pathList = path.split("/")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `filename = pathList.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `folderPath = pathList.slice(0, -1).join("/")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `getIconForOption = (option: ContextMenuQueryItem): string => {` (—Å—Ç—Ä–æ–∫–∞ 210)
- `getMaterialIconForOption = (option: ContextMenuQueryItem): string => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `name = option.value?.split("/").filter(Boolean).at(-1) ?? ""` (—Å—Ç—Ä–æ–∫–∞ 240)
- `isOptionSelectable = (option: ContextMenuQueryItem): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 246)

#### üìÑ ContextCondenseRow.tsx

#### üìÑ CommandPatternSelector.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleOpenSettings()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `getPatternStatus(pattern: s): "allowed" | "denied" | "none"` (—Å—Ç—Ä–æ–∫–∞ 60)
- `getEditState(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 66)
- `setEditState(pattern: s, isEditing: b)` (—Å—Ç—Ä–æ–∫–∞ 70)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CommandPattern` (—Å—Ç—Ä–æ–∫–∞ 8)

- `interface CommandPatternSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 13)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleOpenSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 34)
- `allPatterns = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 39)
- `trimmedCommand = command.trim()` (—Å—Ç—Ä–æ–∫–∞ 41)
- `seenPatterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 45)
- `uniquePatterns = patterns.filter((p) => {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `getPatternStatus = (pattern: string): "allowed" | "denied" | "none" => {` (—Å—Ç—Ä–æ–∫–∞ 60)
- `getEditState = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `setEditState = (pattern: string, isEditing: boolean, value?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 70)
- `editState = getEditState(item.pattern)` (—Å—Ç—Ä–æ–∫–∞ 117)
- `status = getPatternStatus(editState.value)` (—Å—Ç—Ä–æ–∫–∞ 118)

#### üìÑ CommandExecutionError.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onClick = useCallback((e: React.MouseEvent<HTMLAnchorElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 9)

#### üìÑ CommandExecution.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleAllowPatternChange(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 82)
- `handleDenyPatternChange(pattern: s)` (—Å—Ç—Ä–æ–∫–∞ 93)
- `OutputContainerInternal(isExpanded: b, output: s)` (—Å—Ç—Ä–æ–∫–∞ 210)
- `parseCommandAndOutput(text: s)` (—Å—Ç—Ä–æ–∫–∞ 222)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CommandPattern` (—Å—Ç—Ä–æ–∫–∞ 21)

- `interface CommandExecutionProps` (—Å—Ç—Ä–æ–∫–∞ 26)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `output = streamingOutput || parsedOutput` (—Å—Ç—Ä–æ–∫–∞ 53)
- `commandPatterns = useMemo<CommandPattern[]>(() => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `allCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `allPatterns = new Set<string>()` (—Å—Ç—Ä–æ–∫–∞ 61)
- `patterns = extractPatternsFromCommand(cmd)` (—Å—Ç—Ä–æ–∫–∞ 72)
- `handleAllowPatternChange = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `isAllowed = allowedCommands.includes(pattern)` (—Å—Ç—Ä–æ–∫–∞ 83)
- `newAllowed = isAllowed ? allowedCommands.filter((p) => p !== pattern) : [...allowedCommands, pattern]` (—Å—Ç—Ä–æ–∫–∞ 84)
- `newDenied = deniedCommands.filter((p) => p !== pattern)` (—Å—Ç—Ä–æ–∫–∞ 85)
- `handleDenyPatternChange = (pattern: string) => {` (—Å—Ç—Ä–æ–∫–∞ 93)
- `isDenied = deniedCommands.includes(pattern)` (—Å—Ç—Ä–æ–∫–∞ 94)
- `newDenied = isDenied ? deniedCommands.filter((p) => p !== pattern) : [...deniedCommands, pattern]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `newAllowed = allowedCommands.filter((p) => p !== pattern)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `onMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 104)
- `result = commandExecutionStatusSchema.safeParse(safeJsonParse(message.text, {}))` (—Å—Ç—Ä–æ–∫–∞ 109)
- `data = result.data` (—Å—Ç—Ä–æ–∫–∞ 112)
- `OutputContainerInternal = ({ isExpanded, output }: { isExpanded: boolean` (—Å—Ç—Ä–æ–∫–∞ 210)
- `OutputContainer = memo(OutputContainerInternal)` (—Å—Ç—Ä–æ–∫–∞ 220)
- `parseCommandAndOutput = (text: string | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `index = text.indexOf(COMMAND_OUTPUT_STRING)` (—Å—Ç—Ä–æ–∫–∞ 227)

#### üìÑ CodebaseSearchResultsDisplay.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodebaseSearchResultsDisplayProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ CodebaseSearchResult.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodebaseSearchResultProps` (—Å—Ç—Ä–æ–∫–∞ 6)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 18)

#### üìÑ CodeIndexPopover.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createValidationSchema(provider: E, t: a)` (—Å—Ç—Ä–æ–∫–∞ 76)
- `getDefaultSettings(): LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 168)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 240)
- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 280)
- `updateWithSecrets(prev: L): LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 286)
- `updateSetting(key: k, value: a)` (—Å—Ç—Ä–æ–∫–∞ 357)
- `validateSettings(): boolean` (—Å—Ç—Ä–æ–∫–∞ 370)
- `handleSaveSettings()` (—Å—Ç—Ä–æ–∫–∞ 447)
- `getAvailableModels()` (—Å—Ç—Ä–æ–∫–∞ 493)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeIndexPopoverProps` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface LocalCodeIndexSettings` (—Å—Ç—Ä–æ–∫–∞ 55)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `DEFAULT_QDRANT_URL = "http://localhost:6333"` (—Å—Ç—Ä–æ–∫–∞ 47)
- `DEFAULT_OLLAMA_URL = "http://localhost:11434"` (—Å—Ç—Ä–æ–∫–∞ 48)
- `createValidationSchema = (provider: EmbedderProvider, t: any) => {` (—Å—Ç—Ä–æ–∫–∞ 76)
- `baseSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 77)
- `SECRET_PLACEHOLDER = "‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"` (—Å—Ç—Ä–æ–∫–∞ 148)
- `confirmDialogHandler = useRef<(() => void) | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 165)
- `getDefaultSettings = (): LocalCodeIndexSettings => ({` (—Å—Ç—Ä–æ–∫–∞ 168)
- `settings = {` (—Å—Ç—Ä–æ–∫–∞ 199)
- `currentSettingsRef = useRef(currentSettings)` (—Å—Ç—Ä–æ–∫–∞ 235)
- `handleMessage = (event: MessageEvent<any>) => {` (—Å—Ç—Ä–æ–∫–∞ 240)
- `savedSettings = { ...currentSettingsRef.current }` (—Å—Ç—Ä–æ–∫–∞ 254)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `secretStatus = event.data.values` (—Å—Ç—Ä–æ–∫–∞ 283)
- `updateWithSecrets = (prev: LocalCodeIndexSettings): LocalCodeIndexSettings => {` (—Å—Ç—Ä–æ–∫–∞ 286)
- `updated = { ...prev }` (—Å—Ç—Ä–æ–∫–∞ 287)
- `hasUnsavedChanges = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 329)
- `allKeys = [...Object.keys(initialSettings), ...Object.keys(currentSettings)] as Array<` (—Å—Ç—Ä–æ–∫–∞ 331)
- `uniqueKeys = Array.from(new Set(allKeys))` (—Å—Ç—Ä–æ–∫–∞ 336)
- `currentValue = currentSettings[key]` (—Å—Ç—Ä–æ–∫–∞ 339)
- `initialValue = initialSettings[key]` (—Å—Ç—Ä–æ–∫–∞ 340)
- `updateSetting = (key: keyof LocalCodeIndexSettings, value: any) => {` (—Å—Ç—Ä–æ–∫–∞ 357)
- `newErrors = { ...prev }` (—Å—Ç—Ä–æ–∫–∞ 362)
- `validateSettings = (): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 370)
- `schema = createValidationSchema(currentSettings.codebaseIndexEmbedderProvider, t)` (—Å—Ç—Ä–æ–∫–∞ 371)
- `checkUnsavedChanges = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 412)
- `onConfirmDialogResult = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 424)
- `handlePopoverClose = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 438)
- `handleSaveSettings = () => {` (—Å—Ç—Ä–æ–∫–∞ 447)
- `progressPercentage = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 483)
- `transformStyleString = `translateX(-${100 - progressPercentage}%)`` (—Å—Ç—Ä–æ–∫–∞ 491)
- `getAvailableModels = () => {` (—Å—Ç—Ä–æ–∫–∞ 493)
- `models = codebaseIndexModels[currentSettings.codebaseIndexEmbedderProvider]` (—Å—Ç—Ä–æ–∫–∞ 496)
- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 500)
- `value = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 765)
- `value = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 873)

#### üìÑ CheckpointWarning.tsx

#### üìÑ ChatView.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getAudioUrl(path: s)` (—Å—Ç—Ä–æ–∫–∞ 222)
- `playSound(audioType: A)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `playTts(text: s)` (—Å—Ç—Ä–æ–∫–∞ 249)
- `isBrowserSessionMessage(message: C): boolean` (—Å—Ç—Ä–æ–∫–∞ 1217)
- `endBrowserSession()` (—Å—Ç—Ä–æ–∫–∞ 1235)
- `async autoApproveOrReject()` (—Å—Ç—Ä–æ–∫–∞ 1562)
- `handleCondenseContext(taskId: s)` (—Å—Ç—Ä–æ–∫–∞ 1729)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isMac = navigator.platform.toUpperCase().indexOf("MAC") >= 0` (—Å—Ç—Ä–æ–∫–∞ 73)
- `isMountedRef = useRef(true)` (—Å—Ç—Ä–æ–∫–∞ 79)
- `w = window as any` (—Å—Ç—Ä–æ–∫–∞ 81)
- `modeShortcutText = `${isMac ? "‚åò" : "Ctrl"} + . ${t("chat:forNextMode")}, ${isMac ? "‚åò" : "Ctrl"} + Shift + . ${t("chat:forPreviousMode")}`` (—Å—Ç—Ä–æ–∫–∞ 86)
- `messagesRef = useRef(messages)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `toggleExpanded = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 134)
- `newState = !isExpanded` (—Å—Ç—Ä–æ–∫–∞ 135)
- `task = useMemo(() => messages.at(0), [messages])` (—Å—Ç—Ä–æ–∫–∞ 144)
- `latestTodos = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 146)
- `modifiedMessages = useMemo(() => combineApiRequests(combineCommandSequences(messages.slice(1))), [messages])` (—Å—Ç—Ä–æ–∫–∞ 150)
- `apiMetrics = useMemo(() => getApiMetrics(modifiedMessages), [modifiedMessages])` (—Å—Ç—Ä–æ–∫–∞ 153)
- `textAreaRef = useRef<HTMLTextAreaElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `isProcessingQueueRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 160)
- `retryCountRef = useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 161)
- `MAX_RETRY_ATTEMPTS = 3` (—Å—Ç—Ä–æ–∫–∞ 162)
- `virtuosoRef = useRef<VirtuosoHandle>(null)` (—Å—Ç—Ä–æ–∫–∞ 170)
- `prevExpandedRowsRef = useRef<Record<number, boolean>>()` (—Å—Ç—Ä–æ–∫–∞ 172)
- `scrollContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 173)
- `disableAutoScrollRef = useRef(false)` (—Å—Ç—Ä–æ–∫–∞ 174)
- `lastTtsRef = useRef<string>("")` (—Å—Ç—Ä–æ–∫–∞ 177)
- `everVisibleMessagesTsRef = useRef<LRUCache<number, boolean>>(` (—Å—Ç—Ä–æ–∫–∞ 182)
- `autoApproveTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 188)
- `userRespondedRef = useRef<boolean>(false)` (—Å—Ç—Ä–æ–∫–∞ 189)
- `clineAskRef = useRef(clineAsk)` (—Å—Ç—Ä–æ–∫–∞ 192)
- `isProfileDisabled = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 204)
- `lastMessage = useMemo(() => messages.at(-1), [messages])` (—Å—Ç—Ä–æ–∫–∞ 211)
- `secondLastMessage = useMemo(() => messages.at(-2), [messages])` (—Å—Ç—Ä–æ–∫–∞ 212)
- `volume = typeof soundVolume === "number" ? soundVolume : 0.5` (—Å—Ç—Ä–æ–∫–∞ 215)
- `soundConfig = {` (—Å—Ç—Ä–æ–∫–∞ 216)
- `getAudioUrl = (path: string) => {` (—Å—Ç—Ä–æ–∫–∞ 222)
- `isPartial = lastMessage.partial === true` (—Å—Ç—Ä–æ–∫–∞ 262)
- `tool = JSON.parse(lastMessage.text || "{}") as ClineSayTool` (—Å—Ç—Ä–æ–∫–∞ 301)
- `prev = prevExpandedRowsRef.current` (—Å—Ç—Ä–æ–∫–∞ 464)
- `ts = Number(tsKey)` (—Å—Ç—Ä–æ–∫–∞ 469)
- `isStreaming = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 483)
- `isLastAsk = !!modifiedMessages.at(-1)?.ask` (—Å—Ç—Ä–æ–∫–∞ 491)
- `isLastMessagePartial = modifiedMessages.at(-1)?.partial === true` (—Å—Ç—Ä–æ–∫–∞ 500)
- `lastApiReqStarted = findLast(modifiedMessages, (message) => message.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 505)
- `cost = JSON.parse(lastApiReqStarted.text).cost` (—Å—Ç—Ä–æ–∫–∞ 513)
- `markFollowUpAsAnswered = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 524)
- `lastFollowUpMessage = messagesRef.current.findLast((msg) => msg.ask === "followup")` (—Å—Ç—Ä–æ–∫–∞ 525)
- `handleChatReset = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 531)
- `handleSendMessage = useCallback(` - Handles sending messages to the extension (—Å—Ç—Ä–æ–∫–∞ 558)
- `messageId = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`` (—Å—Ç—Ä–æ–∫–∞ 566)
- `retryCount = retryCountRef.current.get(nextMessage.id) || 0` (—Å—Ç—Ä–æ–∫–∞ 657)
- `handleSetChatBoxMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 679)
- `retryCountMap = retryCountRef.current` (—Å—Ç—Ä–æ–∫–∞ 697)
- `isProcessingRef = isProcessingQueueRef` (—Å—Ç—Ä–æ–∫–∞ 698)
- `startNewTask = useCallback(() => vscode.postMessage({ type: "clearTask" }), [])` (—Å—Ç—Ä–æ–∫–∞ 706)
- `handlePrimaryButtonClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 711)
- `trimmedInput = text?.trim()` (—Å—Ç—Ä–æ–∫–∞ 716)
- `handleSecondaryButtonClick = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 758)
- `trimmedInput = text?.trim()` (—Å—Ç—Ä–æ–∫–∞ 763)
- `handleTaskCloseButtonClick = useCallback(() => startNewTask(), [startNewTask])` (—Å—Ç—Ä–æ–∫–∞ 808)
- `selectImages = useCallback(() => vscode.postMessage({ type: "selectImages" }), [])` (—Å—Ç—Ä–æ–∫–∞ 812)
- `shouldDisableImages = !model?.supportsImages || selectedImages.length >= MAX_IMAGES_PER_MESSAGE` (—Å—Ç—Ä–æ–∫–∞ 814)
- `handleMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 816)
- `visibleMessages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 903)
- `newVisibleMessages = modifiedMessages.filter((message) => {` (—Å—Ç—Ä–æ–∫–∞ 904)
- `alwaysHiddenOnceProcessedSay = [` (—Å—Ç—Ä–æ–∫–∞ 913)
- `last1 = modifiedMessages.at(-1)` (—Å—Ç—Ä–æ–∫–∞ 944)
- `last2 = modifiedMessages.at(-2)` (—Å—Ç—Ä–æ–∫–∞ 945)
- `isReadOnlyToolAction = useCallback((message: ClineMessage | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 968)
- `tool = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 974)
- `isWriteToolAction = useCallback((message: ClineMessage | undefined) => {` (—Å—Ç—Ä–æ–∫–∞ 990)
- `tool = JSON.parse(message.text)` (—Å—Ç—Ä–æ–∫–∞ 996)
- `isMcpToolAlwaysAllowed = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1010)
- `mcpServerUse = JSON.parse(message.text) as { type: string` (—Å—Ç—Ä–æ–∫–∞ 1017)
- `server = mcpServers?.find((s: McpServer) => s.name === mcpServerUse.serverName)` (—Å—Ç—Ä–æ–∫–∞ 1020)
- `tool = server?.tools?.find((t: McpTool) => t.name === mcpServerUse.toolName)` (—Å—Ç—Ä–æ–∫–∞ 1021)
- `getCommandDecisionForMessage = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1032)
- `isAllowedCommand = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1041)
- `isDeniedCommand = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1049)
- `getDeniedPrefix = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `subCommands = parseCommand(command)` (—Å—Ç—Ä–æ–∫–∞ 1062)
- `deniedMatch = findLongestPrefixMatch(cmd, deniedCommands)` (—Å—Ç—Ä–æ–∫–∞ 1064)
- `autoApprovalToggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 1075)
- `isAutoApproved = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1079)
- `isOutsideWorkspace = !!tool.isOutsideWorkspace` (—Å—Ç—Ä–æ–∫–∞ 1144)
- `isProtected = message.isProtected` (—Å—Ç—Ä–æ–∫–∞ 1145)
- `mermaidRegex = /```mermaid[\s\S]*?```/g` (—Å—Ç—Ä–æ–∫–∞ 1195)
- `isBrowserSessionMessage = (message: ClineMessage): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 1217)
- `groupedMessages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 1230)
- `endBrowserSession = () => {` (—Å—Ç—Ä–æ–∫–∞ 1235)
- `lastApiReqStarted = [...currentGroup].reverse().find((m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 1257)
- `info = JSON.parse(lastApiReqStarted.text)` (—Å—Ç—Ä–æ–∫–∞ 1260)
- `isCancelled = info.cancelReason !== null && info.cancelReason !== undefined` (—Å—Ç—Ä–æ–∫–∞ 1261)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 1276)
- `scrollToBottomSmooth = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 1311)
- `scrollToBottomAuto = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1327)
- `handleSetExpandedRow = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1334)
- `toggleRowExpansion = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1342)
- `handleRowHeightChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1351)
- `handleWheel = useCallback((event: Event) => {` (—Å—Ç—Ä–æ–∫–∞ 1376)
- `wheelEvent = event as WheelEvent` (—Å—Ç—Ä–æ–∫–∞ 1377)
- `timer = setTimeout(() => {` (—Å—Ç—Ä–æ–∫–∞ 1393)
- `placeholderText = task ? t("chat:typeMessage") : t("chat:typeTask")` (—Å—Ç—Ä–æ–∫–∞ 1410)
- `switchToMode = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1413)
- `handleSuggestionClickInRow = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1427)
- `isManualClick = !!event` (—Å—Ç—Ä–æ–∫–∞ 1442)
- `handleBatchFileResponse = useCallback((response: { [key: string]: boolean }) => {` (—Å—Ç—Ä–æ–∫–∞ 1461)
- `handleFollowUpUnmount = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1467)
- `itemContent = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1472)
- `autoApproveOrReject = async () => {` (—Å—Ç—Ä–æ–∫–∞ 1562)
- `deniedPrefix = getDeniedPrefix(lastMessage.text || "")` (—Å—Ç—Ä–æ–∫–∞ 1566)
- `autoDenyMessage = tSettings("autoApprove.execute.autoDenied", { prefix: deniedPrefix })` (—Å—Ç—Ä–æ–∫–∞ 1569)
- `firstSuggestion = followUpData.suggest[0]` (—Å—Ç—Ä–æ–∫–∞ 1615)
- `switchToNextMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1674)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 1675)
- `currentModeIndex = allModes.findIndex((m) => m.slug === mode)` (—Å—Ç—Ä–æ–∫–∞ 1676)
- `nextModeIndex = (currentModeIndex + 1) % allModes.length` (—Å—Ç—Ä–æ–∫–∞ 1677)
- `switchToPreviousMode = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 1683)
- `allModes = getAllModes(customModes)` (—Å—Ç—Ä–æ–∫–∞ 1684)
- `currentModeIndex = allModes.findIndex((m) => m.slug === mode)` (—Å—Ç—Ä–æ–∫–∞ 1685)
- `previousModeIndex = (currentModeIndex - 1 + allModes.length) % allModes.length` (—Å—Ç—Ä–æ–∫–∞ 1686)
- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 1692)
- `handleCondenseContext = (taskId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 1729)
- `areButtonsVisible = showScrollToBottom || primaryButtonText || secondaryButtonText || isStreaming` (—Å—Ç—Ä–æ–∫–∞ 1738)
- `ChatView = forwardRef(ChatViewComponent)` (—Å—Ç—Ä–æ–∫–∞ 2002)

#### üìÑ ChatTextArea.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClickOutside()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler(event: M)` (—Å—Ç—Ä–æ–∫–∞ 123)
- `handleClickOutside(event: M)` (—Å—Ç—Ä–æ–∫–∞ 272)
- `isValidCommand(commandName: s): boolean` (—Å—Ç—Ä–æ–∫–∞ 718)
- `renderModeSelector()` (—Å—Ç—Ä–æ–∫–∞ 901)
- `renderNonEditModeControls()` (—Å—Ç—Ä–æ–∫–∞ 919)
- `renderTextAreaSection()` (—Å—Ç—Ä–æ–∫–∞ 989)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 36)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(` (—Å—Ç—Ä–æ–∫–∞ 56)
- `currentConfig = listApiConfigMeta?.find((config) => config.name === currentApiConfigName)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `handleClickOutside = () => {` (—Å—Ç—Ä–æ–∫–∞ 111)
- `messageHandler = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 123)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 124)
- `textarea = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 132)
- `textarea = textAreaRef.current` (—Å—Ç—Ä–æ–∫–∞ 152)
- `currentValue = inputValue` (—Å—Ç—Ä–æ–∫–∞ 153)
- `cursorPos = textarea.selectionStart || 0` (—Å—Ç—Ä–æ–∫–∞ 154)
- `textBefore = currentValue.slice(0, cursorPos)` (—Å—Ç—Ä–æ–∫–∞ 157)
- `needsSpaceBefore = textBefore.length > 0 && !textBefore.endsWith(" ")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `prefix = needsSpaceBefore ? " " : ""` (—Å—Ç—Ä–æ–∫–∞ 159)
- `newCursorPos = cursorPos + prefix.length + message.text.length + 1` (—Å—Ç—Ä–æ–∫–∞ 171)
- `commits = message.commits.map((commit: any) => ({` (—Å—Ç—Ä–æ–∫–∞ 180)
- `textAreaRef = useRef<HTMLTextAreaElement | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 206)
- `highlightLayerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 208)
- `contextMenuContainerRef = useRef<HTMLDivElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 213)
- `handleEnhancePrompt = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 237)
- `trimmedInput = inputValue.trim()` (—Å—Ç—Ä–æ–∫–∞ 238)
- `allModes = useMemo(() => getAllModes(customModes), [customModes])` (—Å—Ç—Ä–æ–∫–∞ 248)
- `queryItems = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 250)
- `handleClickOutside = (event: MouseEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `handleMentionSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 290)
- `commandMention = `/${value}`` (—Å—Ç—Ä–æ–∫–∞ 312)
- `isSlashCommand = type === ContextMenuOptionType.Mode || type === ContextMenuOptionType.Command` (—Å—Ç—Ä–æ–∫–∞ 360)
- `newCursorPosition = newValue.indexOf(" ", mentionIndex + insertValue.length) + 1` (—Å—Ç—Ä–æ–∫–∞ 370)
- `handleKeyDown = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 387)
- `direction = event.key === "ArrowUp" ? -1 : 1` (—Å—Ç—Ä–æ–∫–∞ 399)
- `options = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 400)
- `optionsLength = options.length` (—Å—Ç—Ä–æ–∫–∞ 408)
- `selectableOptions = options.filter(` (—Å—Ç—Ä–æ–∫–∞ 413)
- `currentSelectableIndex = selectableOptions.findIndex(` (—Å—Ç—Ä–æ–∫–∞ 423)
- `selectedOption = getContextMenuOptions(` (—Å—Ç—Ä–æ–∫–∞ 438)
- `isComposing = event.nativeEvent?.isComposing ?? false` (—Å—Ç—Ä–æ–∫–∞ 458)
- `charBeforeCursor = inputValue[cursorPosition - 1]` (—Å—Ç—Ä–æ–∫–∞ 474)
- `charAfterCursor = inputValue[cursorPosition + 1]` (—Å—Ç—Ä–æ–∫–∞ 475)
- `newCursorPosition = cursorPosition - 1` (—Å—Ç—Ä–æ–∫–∞ 489)
- `searchTimeoutRef = useRef<NodeJS.Timeout | null>(null)` (—Å—Ç—Ä–æ–∫–∞ 545)
- `handleInputChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 547)
- `newValue = e.target.value` (—Å—Ç—Ä–æ–∫–∞ 549)
- `newCursorPosition = e.target.selectionStart` (—Å—Ç—Ä–æ–∫–∞ 555)
- `showMenu = shouldShowContextMenu(newValue, newCursorPosition)` (—Å—Ç—Ä–æ–∫–∞ 558)
- `query = newValue` (—Å—Ç—Ä–æ–∫–∞ 564)
- `lastAtIndex = newValue.lastIndexOf("@", newCursorPosition - 1)` (—Å—Ç—Ä–æ–∫–∞ 572)
- `query = newValue.slice(lastAtIndex + 1, newCursorPosition)` (—Å—Ç—Ä–æ–∫–∞ 573)
- `reqId = Math.random().toString(36).substring(2, 9)` (—Å—Ç—Ä–æ–∫–∞ 591)
- `handleBlur = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 621)
- `handlePaste = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 630)
- `items = e.clipboardData.items` (—Å—Ç—Ä–æ–∫–∞ 632)
- `pastedText = e.clipboardData.getData("text")` (—Å—Ç—Ä–æ–∫–∞ 634)
- `urlRegex = /^\S+:\/\/\S+$/` (—Å—Ç—Ä–æ–∫–∞ 637)
- `trimmedUrl = pastedText.trim()` (—Å—Ç—Ä–æ–∫–∞ 640)
- `newCursorPosition = cursorPosition + trimmedUrl.length + 1` (—Å—Ç—Ä–æ–∫–∞ 644)
- `acceptedTypes = ["png", "jpeg", "webp"]` (—Å—Ç—Ä–æ–∫–∞ 660)
- `imageItems = Array.from(items).filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 662)
- `imagePromises = imageItems.map((item) => {` (—Å—Ç—Ä–æ–∫–∞ 670)
- `blob = item.getAsFile()` (—Å—Ç—Ä–æ–∫–∞ 672)
- `reader = new FileReader()` (—Å—Ç—Ä–æ–∫–∞ 679)
- `result = reader.result` (—Å—Ç—Ä–æ–∫–∞ 686)
- `imageDataArray = await Promise.all(imagePromises)` (—Å—Ç—Ä–æ–∫–∞ 695)
- `dataUrls = imageDataArray.filter((dataUrl): dataUrl is string => dataUrl !== null)` (—Å—Ç—Ä–æ–∫–∞ 696)
- `handleMenuMouseDown = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 708)
- `updateHighlights = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 712)
- `text = textAreaRef.current.value` (—Å—Ç—Ä–æ–∫–∞ 715)
- `isValidCommand = (commandName: string): boolean => {` (—Å—Ç—Ä–æ–∫–∞ 718)
- `startsWithSpace = match.startsWith(" ")` (—Å—Ç—Ä–æ–∫–∞ 733)
- `commandPart = `/${commandName}`` (—Å—Ç—Ä–æ–∫–∞ 734)
- `updateCursorPosition = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 757)
- `handleKeyUp = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 763)
- `handleDrop = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 772)
- `textFieldList = e.dataTransfer.getData("text")` (—Å—Ç—Ä–æ–∫–∞ 777)
- `textUriList = e.dataTransfer.getData("application/vnd.code.uri-list")` (—Å—Ç—Ä–æ–∫–∞ 778)
- `text = textFieldList || textUriList` (—Å—Ç—Ä–æ–∫–∞ 780)
- `lines = text.split(/\r?\n/).filter((line) => line.trim() !== "")` (—Å—Ç—Ä–æ–∫–∞ 783)
- `line = lines[i]` (—Å—Ç—Ä–æ–∫–∞ 792)
- `mentionText = convertToMentionPath(line, cwd)` (—Å—Ç—Ä–æ–∫–∞ 794)
- `newCursorPosition = cursorPosition + totalLength` (—Å—Ç—Ä–æ–∫–∞ 810)
- `files = Array.from(e.dataTransfer.files)` (—Å—Ç—Ä–æ–∫–∞ 818)
- `acceptedTypes = ["png", "jpeg", "webp"]` (—Å—Ç—Ä–æ–∫–∞ 821)
- `imageFiles = files.filter((file) => {` (—Å—Ç—Ä–æ–∫–∞ 823)
- `imagePromises = imageFiles.map((file) => {` (—Å—Ç—Ä–æ–∫–∞ 829)
- `reader = new FileReader()` (—Å—Ç—Ä–æ–∫–∞ 831)
- `result = reader.result` (—Å—Ç—Ä–æ–∫–∞ 838)
- `imageDataArray = await Promise.all(imagePromises)` (—Å—Ç—Ä–æ–∫–∞ 847)
- `dataUrls = imageDataArray.filter((dataUrl): dataUrl is string => dataUrl !== null)` (—Å—Ç—Ä–æ–∫–∞ 848)
- `placeholderBottomText = `\n(${t("chat:addContext")}${shouldDisableImages ? `, ${t("chat:dragFiles")}` : `, ${t("chat:dragFilesImages")}`})`` (—Å—Ç—Ä–æ–∫–∞ 889)
- `handleModeChange = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 892)
- `renderModeSelector = () => (` (—Å—Ç—Ä–æ–∫–∞ 901)
- `handleApiConfigChange = useCallback((value: string) => {` (—Å—Ç—Ä–æ–∫–∞ 914)
- `renderNonEditModeControls = () => (` (—Å—Ç—Ä–æ–∫–∞ 919)
- `renderTextAreaSection = () => (` (—Å—Ç—Ä–æ–∫–∞ 989)
- `rect = e.currentTarget.getBoundingClientRect()` (—Å—Ç—Ä–æ–∫–∞ 1184)

#### üìÑ ChatRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 129)
- `getIconSpan(iconName: s, color: s)` (—Å—Ç—Ä–æ–∫–∞ 265)
- `toolIcon(name: s)` (—Å—Ç—Ä–æ–∫–∞ 353)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ChatRowProps` (—Å—Ç—Ä–æ–∫–∞ 50)

- `interface ChatRowContentProps extends Omit<ChatRowProps, "onHeightChange">` (—Å—Ç—Ä–æ–∫–∞ 66)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `ChatRow = memo(` (—Å—Ç—Ä–æ–∫–∞ 68)
- `prevHeightRef = useRef(0)` (—Å—Ç—Ä–æ–∫–∞ 73)
- `isInitialRender = prevHeightRef.current === 0 // prevents scrolling when new element is added since we already scroll for that` (—Å—Ç—Ä–æ–∫–∞ 84)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 129)
- `msg = event.data` (—Å—Ç—Ä–æ–∫–∞ 130)
- `handleToggleExpand = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleEditClick = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 146)
- `handleCancelEdit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handleSaveEdit = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 164)
- `handleSelectImages = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 176)
- `info = safeJsonParse<ClineApiReqInfo>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 182)
- `isMcpServerResponding = isLast && lastModifiedMessage?.say === "mcp_server_request_started"` (—Å—Ç—Ä–æ–∫–∞ 200)
- `type = message.type === "ask" ? message.ask : message.say` (—Å—Ç—Ä–æ–∫–∞ 202)
- `normalColor = "var(--vscode-foreground)"` (—Å—Ç—Ä–æ–∫–∞ 204)
- `errorColor = "var(--vscode-errorForeground)"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `successColor = "var(--vscode-charts-green)"` (—Å—Ç—Ä–æ–∫–∞ 206)
- `cancelledColor = "var(--vscode-descriptionForeground)"` (—Å—Ç—Ä–æ–∫–∞ 207)
- `mcpServerUse = safeJsonParse<ClineAskUseMcpServer>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 237)
- `getIconSpan = (iconName: string, color: string) => (` (—Å—Ç—Ä–æ–∫–∞ 265)
- `tool = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 340)
- `followUpData = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 345)
- `toolIcon = (name: string) => (` (—Å—Ç—Ä–æ–∫–∞ 353)
- `todos = (tool as any).todos || []` (—Å—Ç—Ä–æ–∫–∞ 497)
- `isBatchRequest = message.type === "ask" && tool.batchFiles && Array.isArray(tool.batchFiles)` (—Å—Ç—Ä–æ–∫–∞ 542)
- `tool = safeJsonParse<ClineSayTool>(message.text)` (—Å—Ç—Ä–æ–∫–∞ 1121)
- `messageJson = safeJsonParse<any>(message.text, {})` (—Å—Ç—Ä–æ–∫–∞ 1245)
- `server = mcpServers.find((server) => server.name === useMcpServer.serverName)` (—Å—Ç—Ä–æ–∫–∞ 1260)

#### üìÑ BrowserSessionRow.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getBrowserActionText(action: B)` (—Å—Ç—Ä–æ–∫–∞ 512)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface BrowserSessionRowProps` (—Å—Ç—Ä–æ–∫–∞ 18)

- `interface BrowserSessionRowContentProps extends Omit<BrowserSessionRowProps, "messages">` (—Å—Ç—Ä–æ–∫–∞ 415)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `BrowserSessionRow = memo((props: BrowserSessionRowProps) => {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `prevHeightRef = useRef(0)` (—Å—Ç—Ä–æ–∫–∞ 31)
- `aspectRatio = ((viewportHeight / viewportWidth) * 100).toFixed(2)` (—Å—Ç—Ä–æ–∫–∞ 37)
- `defaultMousePosition = `${Math.round(viewportWidth / 2)},${Math.round(viewportHeight / 2)}`` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isLastApiReqInterrupted = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `lastApiReqStarted = [...messages].reverse().find((m) => m.say === "api_req_started")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `info = JSON.parse(lastApiReqStarted.text) as { cancelReason: string | null }` (—Å—Ç—Ä–æ–∫–∞ 44)
- `lastApiReqFailed = isLast && lastModifiedMessage?.ask === "api_req_failed"` (—Å—Ç—Ä–æ–∫–∞ 49)
- `isBrowsing = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `pages = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `resultData = JSON.parse(message.text || "{}") as BrowserActionResult` (—Å—Ç—Ä–æ–∫–∞ 89)
- `initialUrl = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 149)
- `launchMessage = messages.find((m) => m.ask === "browser_action_launch")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `latestState = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 155)
- `page = pages[i]` (—Å—Ç—Ä–æ–∫–∞ 157)
- `currentPage = pages[currentPageIndex]` (—Å—Ç—Ä–æ–∫–∞ 170)
- `isLastPage = currentPageIndex === pages.length - 1` (—Å—Ç—Ä–æ–∫–∞ 171)
- `displayState = isLastPage` (—Å—Ç—Ä–æ–∫–∞ 174)
- `latestClickPosition = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 215)
- `actions = currentPage?.nextAction?.messages || []` (—Å—Ç—Ä–æ–∫–∞ 219)
- `message = actions[i]` (—Å—Ç—Ä–æ–∫–∞ 221)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 223)
- `mousePosition = isBrowsing` (—Å—Ç—Ä–æ–∫–∞ 233)
- `isInitialRender = prevHeightRef.current === 0` (—Å—Ç—Ä–æ–∫–∞ 403)
- `BrowserSessionRowContent = ({` (—Å—Ç—Ä–æ–∫–∞ 421)
- `browserAction = JSON.parse(message.text || "{}") as ClineSayBrowserAction` (—Å—Ç—Ä–æ–∫–∞ 463)
- `BrowserActionBox = ({` (—Å—Ç—Ä–æ–∫–∞ 502)
- `getBrowserActionText = (action: BrowserAction, coordinate?: string, text?: string) => {` (—Å—Ç—Ä–æ–∫–∞ 512)

#### üìÑ BatchFilePermission.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FilePermissionItem` (—Å—Ç—Ä–æ–∫–∞ 7)

- `interface BatchFilePermissionProps` (—Å—Ç—Ä–æ–∫–∞ 15)

#### üìÑ BatchDiffApproval.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleToggleExpand(filePath: s)` (—Å—Ç—Ä–æ–∫–∞ 27)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface FileDiff` (—Å—Ç—Ä–æ–∫–∞ 4)

- `interface BatchDiffApprovalProps` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleToggleExpand = (filePath: string) => {` (—Å—Ç—Ä–æ–∫–∞ 27)
- `combinedDiff = file.diffs?.map((diff) => diff.content).join("\n\n") || file.content` (—Å—Ç—Ä–æ–∫–∞ 39)

#### üìÑ AutoApprovedRequestLimitWarning.tsx

**–¢–∏–ø—ã:**

- `type AutoApprovedRequestLimitWarningProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `isCostLimit = type === "cost"` (—Å—Ç—Ä–æ–∫–∞ 21)
- `titleKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 22)
- `descriptionKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 25)
- `buttonKey = isCostLimit` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ AutoApproveMenu.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `AutoApproveMenu()` (—Å—Ç—Ä–æ–∫–∞ 18)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AutoApproveMenuProps` (—Å—Ç—Ä–æ–∫–∞ 14)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `AutoApproveMenu = ({ style }: AutoApproveMenuProps) => {` (—Å—Ç—Ä–æ–∫–∞ 18)
- `baseToggles = useAutoApprovalToggles()` (—Å—Ç—Ä–æ–∫–∞ 43)
- `toggles = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 46)
- `onAutoApproveToggle = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 56)
- `updatedToggles = {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `willHaveEnabledOptions = Object.values(updatedToggles).some((v) => !!v)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `toggleExpanded = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `enabledActionsList = Object.entries(toggles)` (—Å—Ç—Ä–æ–∫–∞ 135)
- `displayText = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 141)
- `handleOpenSettings = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 148)
- `newValue = !(autoApprovalEnabled ?? false)` (—Å—Ç—Ä–æ–∫–∞ 187)

#### üìÑ ApiConfigSelector.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ApiConfigSelectorProps` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `portalContainer = useRooPortal("roo-portal")` (—Å—Ç—Ä–æ–∫–∞ 37)
- `searchableItems = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 40)
- `fzfInstance = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `filteredConfigs = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 55)
- `matchingItems = fzfInstance.find(searchValue).map((result) => result.item.original)` (—Å—Ç—Ä–æ–∫–∞ 58)
- `pinned = filteredConfigs.filter((config) => pinnedApiConfigs?.[config.id])` (—Å—Ç—Ä–æ–∫–∞ 64)
- `unpinned = filteredConfigs.filter((config) => !pinnedApiConfigs?.[config.id])` (—Å—Ç—Ä–æ–∫–∞ 65)
- `handleSelect = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 69)
- `handleEditClick = useCallback(() => {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `renderConfigItem = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 86)
- `isCurrentConfig = config.id === value` (—Å—Ç—Ä–æ–∫–∞ 88)
- `triggerContent = (` (—Å—Ç—Ä–æ–∫–∞ 134)

#### üìÑ Announcement.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `Announcement()` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DiscordLink()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `RedditLink()` (—Å—Ç—Ä–æ–∫–∞ 120)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AnnouncementProps` (—Å—Ç—Ä–æ–∫–∞ 10)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `Announcement = ({ hideAnnouncement }: AnnouncementProps) => {` (—Å—Ç—Ä–æ–∫–∞ 23)
- `DiscordLink = () => (` (—Å—Ç—Ä–æ–∫–∞ 106)
- `RedditLink = () => (` (—Å—Ç—Ä–æ–∫–∞ 120)

### üìÇ build-src/apps/web-roo-code/src/app

#### üìÑ shell.tsx

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ layout.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `inter = Inter({ subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ build-src/apps/web-roo-code/src/components

#### üìÑ animated-text.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AnimatedTextProps` (—Å—Ç—Ä–æ–∫–∞ 6)

### üìÇ build-src/apps/web-neira-coder/src/components

#### üìÑ animated-text.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface AnimatedTextProps` (—Å—Ç—Ä–æ–∫–∞ 6)

### üìÇ build-src/apps/web-neira-coder/src/app

#### üìÑ shell.tsx

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `downloads = await getVSCodeDownloads()` (—Å—Ç—Ä–æ–∫–∞ 20)

#### üìÑ layout.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `inter = Inter({ subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 12)

### üìÇ build-src/apps/web-evals/src/app

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runs = await getRuns()` (—Å—Ç—Ä–æ–∫–∞ 8)

#### üìÑ layout.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fontSans = Geist({ variable: "--font-sans", subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 10)
- `fontMono = Geist_Mono({ variable: "--font-mono", subsets: ["latin"] })` (—Å—Ç—Ä–æ–∫–∞ 11)

### üìÇ apps/web-neira-coder/src/components/enterprise

#### üìÑ contact-form.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleSubmit(e: R)` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContactFormProps` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contactFormSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `formRef = useRef<HTMLFormElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `formTitle = formType === "early-access" ? "Become an Early Access Partner" : "Request a Demo"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `BASIN_ENDPOINT = process.env.NEXT_PUBLIC_BASIN_ENDPOINT || ""` (—Å—Ç—Ä–æ–∫–∞ 50)
- `handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `form = e.currentTarget` (—Å—Ç—Ä–æ–∫–∞ 63)
- `formData = new FormData(form)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `data = {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `response = await fetch(BASIN_ENDPOINT, {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `responseData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `errorData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ apps/web-neira-coder/src/app/terms

#### üìÑ page.tsx

### üìÇ apps/web-neira-coder/src/app/privacy

#### üìÑ page.tsx

### üìÇ apps/web-neira-coder/src/app/evals

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runs = await getEvalRuns()` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ evals.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderQuadrant(props: a)` (—Å—Ç—Ä–æ–∫–∞ 215)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tableData = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `chartData = useMemo(() => tableData.filter(({ cost }) => cost < 100), [tableData])` (—Å—Ç—Ä–æ–∫–∞ 52)
- `chartConfig = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 54)
- `renderQuadrant = (props: any) => (` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ apps/web-neira-coder/src/app/enterprise

#### üìÑ page.tsx

### üìÇ apps/web-evals/src/components/layout

#### üìÑ logo.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `onAnimationEnd()` (—Å—Ç—Ä–æ–∫–∞ 44)

**–¢–∏–ø—ã:**

- `type LogoProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `ref = useRef<SVGSVGElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `logo = <Logo ref={ref} {...props} />` (—Å—Ç—Ä–æ–∫–∞ 34)
- `element = ref.current` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isHopping = element !== null && element.classList.contains("animate-hop")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `onAnimationEnd = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ header.tsx

### üìÇ apps/web-evals/src/components/home

#### üìÑ runs.tsx

**–¢–∏–ø—ã:**

- `type RunWithTaskMetrics` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ run.tsx

**–¢–∏–ø—ã:**

- `type RunProps` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `continueRef = useRef<HTMLButtonElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `onConfirmDelete = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 38)

### üìÇ webview-ui/src/components/settings/providers/__tests__

#### üìÑ Vertex.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `globalRegions = VERTEX_REGIONS.filter((r: { value: string` (—Å—Ç—Ä–æ–∫–∞ 12)
- `asiaEast1Regions = VERTEX_REGIONS.filter(` (—Å—Ç—Ä–æ–∫–∞ 55)

#### üìÑ OpenAICompatible.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockOrganizationAllowList = {` (—Å—Ç—Ä–æ–∫–∞ 90)
- `checkbox = screen.getByTestId("checkbox-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 207)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 246)
- `checkbox = screen.getByTestId("checkbox-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `parentDiv = checkbox.closest("div")` (—Å—Ç—Ä–æ–∫–∞ 307)
- `description = screen.getByText("settings:includeMaxOutputTokensDescription")` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ HuggingFace.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 116)
- `apiKeyInput = screen.getByDisplayValue("test-api-key")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `apiKeyButton = screen.getByTestId("vscode-button")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `mockModels = [` (—Å—Ç—Ä–æ–∫–∞ 249)
- `messageEvent = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `priceElements = screen.getAllByText("$0.00 / 1M tokens")` (—Å—Ç—Ä–æ–∫–∞ 292)

#### üìÑ Gemini.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 55)
- `apiConfiguration = { ...defaultApiConfiguration, enableUrlContext: true }` (—Å—Ç—Ä–æ–∫–∞ 60)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 65)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 66)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 80)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 98)
- `apiConfiguration = { ...defaultApiConfiguration, enableGrounding: true }` (—Å—Ç—Ä–æ–∫–∞ 103)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 109)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 122)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ Bedrock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 450)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 467)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 468)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 485)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 486)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 503)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 504)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 525)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 545)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 546)

### üìÇ webview-ui/src/components/marketplace/components/__tests__

#### üìÑ MarketplaceItemCard.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithProviders(ui: R)` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `renderWithProviders = (ui: React.ReactElement) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `setFilters = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `tagButton = screen.getByText("test")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 121)
- `authorLink = screen.getByText("by Test Author")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `authorText = screen.getByText(/by Test Author/) // Changed to regex` (—Å—Ç—Ä–æ–∫–∞ 141)
- `setFilters = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `installedProps = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `installedProps = {` (—Å—Ç—Ä–æ–∫–∞ 207)
- `installedBadges = screen.getAllByText("Installed")` (—Å—Ç—Ä–æ–∫–∞ 218)

#### üìÑ MarketplaceInstallModal.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockItem(): MarketplaceItem` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedVscode = vscode as any` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockOnClose = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `createMockItem = (hasNestedParams = false): MarketplaceItem => ({` (—Å—Ç—Ä–æ–∫–∞ 42)
- `item = createMockItem(false)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `methodSelect = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `dockerOption = screen.getByText("Docker Installation")` (—Å—Ç—Ä–æ–∫–∞ 138)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `installButton = screen.getByText("marketplace:install.button")` (—Å—Ç—Ä–æ–∫–∞ 160)
- `packageNameInput = screen.getByPlaceholderText("Enter package name")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `apiKeyInput = screen.getByPlaceholderText("Enter NPM API key")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `globalOptionalInput = screen.getByPlaceholderText("Optional setting")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `methodSelect = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 204)
- `dockerOption = screen.getByText("Docker Installation")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `preservedInput = screen.getByPlaceholderText("Optional setting")` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ MarketplaceInstallModal-optional-params.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMcpItemWithParams(parameters: a): MarketplaceItem` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vscode.postMessage as any` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockOnClose = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `createMcpItemWithParams = (parameters: any[]): MarketplaceItem => ({` (—Å—Ç—Ä–æ–∫–∞ 38)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 49)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 71)
- `apiKeyInput = screen.getByPlaceholderText("Enter API key")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `endpointInput = screen.getByPlaceholderText("Leave empty for default")` (—Å—Ç—Ä–æ–∫–∞ 90)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 98)
- `endpointInput = screen.getByPlaceholderText("Leave empty for default")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `installButton = screen.getByText("Install")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 133)
- `installButton = screen.getByText("Install")` (—Å—Ç—Ä–æ–∫–∞ 149)

### üìÇ build-src/webview-ui/src/components/welcome/__tests__

#### üìÑ RooTips.spec.tsx

### üìÇ build-src/webview-ui/src/components/ui/__tests__

#### üìÑ tooltip.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 9)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 25)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 46)
- `tooltips = screen.getAllByText(/This is a very long tooltip text/)` (—Å—Ç—Ä–æ–∫–∞ 51)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 60)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 87)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `tooltips = screen.getAllByText("Tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `tooltips = screen.getAllByText("Long tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 126)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 134)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 144)
- `tooltips = screen.getAllByText("Long tooltip text")` (—Å—Ç—Ä–æ–∫–∞ 149)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 150)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `trigger = screen.getByText("Hover me")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `tooltips = screen.getAllByText(longContent)` (—Å—Ç—Ä–æ–∫–∞ 175)
- `visibleTooltip = tooltips.find((el) => el.getAttribute("role") !== "tooltip")` (—Å—Ç—Ä–æ–∫–∞ 176)

#### üìÑ toggle-switch.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 11)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 36)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 56)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 59)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 75)
- `toggle = screen.getByTestId("custom-toggle")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 93)
- `toggle = screen.getByRole("switch")` (—Å—Ç—Ä–æ–∫–∞ 96)

#### üìÑ select-dropdown.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `postMessageMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 8)
- `options = [` (—Å—Ç—Ä–æ–∫–∞ 75)
- `onChangeMock = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `dropdown = screen.getByTestId("dropdown-root")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 141)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 148)
- `optionsWithTypedSeparator = [` (—Å—Ç—Ä–æ–∫–∞ 155)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 164)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `shortcutText = "Ctrl+K"` (—Å—Ç—Ä–æ–∫–∞ 179)
- `optionsWithShortcut = [` (—Å—Ç—Ä–æ–∫–∞ 180)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 199)
- `optionsWithAction = [` (—Å—Ç—Ä–æ–∫–∞ 208)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 216)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `optionsForTest = [` (—Å—Ç—Ä–æ–∫–∞ 234)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 261)
- `content = screen.getByTestId("dropdown-content")` (—Å—Ç—Ä–æ–∫–∞ 265)

### üìÇ build-src/webview-ui/src/components/mcp/__tests__

#### üìÑ McpToolRow.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTool = {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 81)
- `alwaysAllowedTool = {` (—Å—Ç—Ä–æ–∫–∞ 94)
- `checkbox = screen.getByRole("checkbox") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 101)
- `mockOnClick = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 106)
- `container = screen.getByTestId("tool-row-container")` (—Å—Ç—Ä–æ–∫–∞ 113)
- `toolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 120)
- `toggleSwitch = screen.getByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 150)
- `toggleSwitch = screen.queryByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 157)
- `disabledTool = { ...mockTool, enabledForPrompt: false }` (—Å—Ç—Ä–æ–∫–∞ 169)
- `toggleSwitch = screen.getByRole("switch", { name: "Toggle prompt inclusion" })` (—Å—Ç—Ä–æ–∫–∞ 179)
- `disabledTool = { ...mockTool, enabledForPrompt: false }` (—Å—Ç—Ä–æ–∫–∞ 192)
- `enabledTool = { ...mockTool, enabledForPrompt: true }` (—Å—Ç—Ä–æ–∫–∞ 199)
- `disabledToolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 206)
- `enabledToolWithSchema = {` (—Å—Ç—Ä–æ–∫–∞ 229)
- `disabledTool = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `toolName = screen.getByText("test-tool")` (—Å—Ç—Ä–æ–∫–∞ 259)
- `toolDescription = screen.getByText("A disabled tool")` (—Å—Ç—Ä–æ–∫–∞ 260)
- `enabledTool = {` (—Å—Ç—Ä–æ–∫–∞ 270)
- `toolName = screen.getByText("test-tool")` (—Å—Ç—Ä–æ–∫–∞ 277)
- `toolDescription = screen.getByText("An enabled tool")` (—Å—Ç—Ä–æ–∫–∞ 278)

### üìÇ build-src/webview-ui/src/components/modes/__tests__

#### üìÑ ModesView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderPromptsView()` (—Å—Ç—Ä–æ–∫–∞ 31)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 15)
- `renderPromptsView = (props = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockOnDone = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 49)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 64)
- `searchInput = screen.getByTestId("mode-search-input")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `codeOption = await waitFor(() => screen.getByTestId("mode-option-code"))` (—Å—Ç—Ä–æ–∫–∞ 82)
- `textarea = await waitFor(() => screen.getByTestId("code-prompt-textarea"))` (—Å—Ç—Ä–æ–∫–∞ 100)
- `changeEvent = new CustomEvent("change", {` (—Å—Ç—Ä–æ–∫–∞ 103)
- `customMode = {` (—Å—Ç—Ä–æ–∫–∞ 121)
- `resetButton = screen.getByTestId("role-definition-reset")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `customMode = {` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setCustomInstructions = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `textarea = screen.getByTestId("global-custom-instructions-textarea")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `changeEvent = new Event("change", { bubbles: true })` (—Å—Ç—Ä–æ–∫–∞ 224)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `selectTrigger = screen.getByTestId("mode-select-trigger")` (—Å—Ç—Ä–æ–∫–∞ 257)

### üìÇ build-src/webview-ui/src/components/marketplace/components

#### üìÑ MarketplaceItemCard.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 48)
- `handleInstallClick()` (—Å—Ç—Ä–æ–∫–∞ 80)
- `handleOpenAuthorUrl()` (—Å—Ç—Ä–æ–∫–∞ 260)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ItemInstalledMetadata` (—Å—Ç—Ä–æ–∫–∞ 24)

- `interface MarketplaceItemCardProps` (—Å—Ç—Ä–æ–∫–∞ 28)

- `interface AuthorInfoProps` (—Å—Ç—Ä–æ–∫–∞ 252)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 49)
- `typeLabel = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `isInstalledGlobally = !!installed.global` (—Å—Ç—Ä–æ–∫–∞ 76)
- `isInstalledInProject = !!installed.project` (—Å—Ç—Ä–æ–∫–∞ 77)
- `isInstalled = isInstalledGlobally || isInstalledInProject` (—Å—Ç—Ä–æ–∫–∞ 78)
- `handleInstallClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 80)
- `target = isInstalledInProject ? "project" : "global"` (—Å—Ç—Ä–æ–∫–∞ 128)
- `newTags = filters.tags.includes(tag)` (—Å—Ç—Ä–æ–∫–∞ 185)
- `handleOpenAuthorUrl = () => {` (—Å—Ç—Ä–æ–∫–∞ 260)

#### üìÑ MarketplaceInstallModal.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleMessage(event: M)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `handleInstall()` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handlePostInstallAction(tab: ")` (—Å—Ç—Ä–æ–∫–∞ 197)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarketplaceInstallModalProps` (—Å—Ç—Ä–æ–∫–∞ 17)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `hasMultipleMethods = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `methodNames = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 53)
- `effectiveParameters = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `globalParams = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 64)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 69)
- `paramMap = new Map<string, McpParameter>()` (—Å—Ç—Ä–æ–∫–∞ 74)
- `effectivePrerequisites = useMemo(() => {` (—Å—Ç—Ä–æ–∫–∞ 82)
- `globalPrereqs = item.prerequisites || []` (—Å—Ç—Ä–æ–∫–∞ 85)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 90)
- `allPrereqs = [...globalPrereqs, ...methodPrereqs]` (—Å—Ç—Ä–æ–∫–∞ 95)
- `globalParams = item.type === "mcp" ? item.parameters || [] : []` (—Å—Ç—Ä–æ–∫–∞ 103)
- `selectedMethod = item.content[selectedMethodIndex] as McpInstallationMethod` (—Å—Ç—Ä–æ–∫–∞ 107)
- `paramMap = new Map<string, McpParameter>()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `currentEffectiveParams = Array.from(paramMap.values())` (—Å—Ç—Ä–æ–∫–∞ 116)
- `handleMessage = (event: MessageEvent) => {` (—Å—Ç—Ä–æ–∫–∞ 132)
- `message = event.data` (—Å—Ç—Ä–æ–∫–∞ 133)
- `handleInstall = () => {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `handlePostInstallAction = (tab: "mcp" | "modes") => {` (—Å—Ç—Ä–æ–∫–∞ 197)

### üìÇ build-src/webview-ui/src/components/settings/__tests__

#### üìÑ TodoListSettingsControl.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 37)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 40)
- `label = screen.getByText("Enable todo list tool")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `description = screen.getByText(/When enabled, Roo can create and manage todo lists/)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 51)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 69)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 72)

#### üìÑ ThinkingBudget.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 32)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 84)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 109)
- `setApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `sliders = screen.getAllByTestId("slider")` (—Å—Ç—Ä–æ–∫–∞ 124)

#### üìÑ TemperatureControl.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 41)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 50)
- `input = screen.getByRole("slider")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `onChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 86)

#### üìÑ SettingsView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `handleClick()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `renderSettingsView()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `activateTab(tabId: s)` (—Å—Ç—Ä–æ–∫–∞ 247)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `handleClick = () => {` (—Å—Ç—Ä–æ–∫–∞ 89)
- `onValueChange = (window as any).__onValueChange` (—Å—Ç—Ä–æ–∫–∞ 92)
- `tabContent = document.querySelector(`[data-tab-content="${value}"]`)` (—Å—Ç—Ä–æ–∫–∞ 99)
- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `renderSettingsView = () => {` (—Å—Ç—Ä–æ–∫–∞ 231)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 232)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 233)
- `result = render(` (—Å—Ç—Ä–æ–∫–∞ 235)
- `activateTab = (tabId: string) => {` (—Å—Ç—Ä–æ–∫–∞ 247)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 288)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 302)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 309)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 327)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 334)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 353)
- `speedSlider = screen.getByTestId("tts-speed-slider")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 370)
- `volumeSlider = screen.getByTestId("sound-volume-slider")` (—Å—Ç—Ä–æ–∫–∞ 374)
- `ttsCheckbox = screen.getByTestId("tts-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 387)
- `speedSlider = screen.getByTestId("tts-speed-slider")` (—Å—Ç—Ä–æ–∫–∞ 391)
- `saveButton = screen.getByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 395)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 413)
- `volumeSlider = screen.getByTestId("sound-volume-slider")` (—Å—Ç—Ä–æ–∫–∞ 417)
- `saveButtons = screen.getAllByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 421)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 457)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 472)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 476)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 479)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 500)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 504)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 506)
- `removeButton = screen.getByTestId("remove-command-0")` (—Å—Ç—Ä–æ–∫–∞ 510)
- `tabList = screen.getByTestId("settings-tab-list")` (—Å—Ç—Ä–æ–∫–∞ 532)
- `soundCheckbox = screen.getByTestId("sound-enabled-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 547)
- `doneButton = screen.getByText("settings:common.done")` (—Å—Ç—Ä–æ–∫–∞ 551)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 590)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 594)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 595)
- `commands = screen.getAllByText("npm test")` (—Å—Ç—Ä–æ–∫–∞ 606)
- `executeCheckbox = screen.getByTestId("always-allow-execute-toggle")` (—Å—Ç—Ä–æ–∫–∞ 618)
- `input = screen.getByTestId("command-input")` (—Å—Ç—Ä–æ–∫–∞ 622)
- `addButton = screen.getByTestId("add-command-button")` (—Å—Ç—Ä–æ–∫–∞ 624)
- `saveButtons = screen.getAllByTestId("save-button")` (—Å—Ç—Ä–æ–∫–∞ 628)

#### üìÑ ModelPicker.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderModelPicker()` (—Å—Ç—Ä–æ–∫–∞ 52)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 19)
- `mockModels = {` (—Å—Ç—Ä–æ–∫–∞ 33)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 50)
- `renderModelPicker = () => {` (—Å—Ç—Ä–æ–∫–∞ 52)
- `button = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 76)
- `modelInput = screen.getByTestId("model-input")` (—Å—Ç—Ä–æ–∫–∞ 87)
- `modelItem = screen.getByTestId("model-option-model2")` (—Å—Ç—Ä–æ–∫–∞ 94)
- `button = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 112)
- `customModelId = "custom-model-id"` (—Å—Ç—Ä–æ–∫–∞ 121)
- `modelInput = screen.getByTestId("model-input")` (—Å—Ç—Ä–æ–∫–∞ 125)
- `customOption = screen.getByTestId("use-custom-model")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `errorMessage = "Model not available for your organization"` (—Å—Ç—Ä–æ–∫–∞ 152)
- `propsWithError = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `errorMessage = "Invalid model selected"` (—Å—Ç—Ä–æ–∫–∞ 179)
- `propsWithError = {` (—Å—Ç—Ä–æ–∫–∞ 180)
- `modelSelector = screen.getByTestId("model-picker-button")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `errorContainer = screen.getByTestId("api-error-message")` (—Å—Ç—Ä–æ–∫–∞ 195)
- `errorElement = screen.getByText(errorMessage)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `initialError = "Initial error"` (—Å—Ç—Ä–æ–∫–∞ 205)
- `updatedError = "Updated error"` (—Å—Ç—Ä–æ–∫–∞ 206)
- `errorMessage = "Temporary error"` (—Å—Ç—Ä–æ–∫–∞ 232)

#### üìÑ MaxRequestsInput.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnValueChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 82)

#### üìÑ MaxCostInput.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnValueChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 20)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 29)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 43)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 61)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 70)
- `input = screen.getByPlaceholderText("Unlimited")` (—Å—Ç—Ä–æ–∫–∞ 79)

#### üìÑ ContextManagementSettings.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `currentValue = value?.[0] ?? 0` (—Å—Ç—Ä–æ–∫–∞ 28)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 85)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 121)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 141)
- `checkbox = screen.getByTestId("include-diagnostic-messages-checkbox").querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 144)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 153)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 208)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 222)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 228)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 243)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 248)
- `largeNumber = 1000` (—Å—Ç—Ä–æ–∫–∞ 249)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 267)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 282)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 285)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 294)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 297)
- `setCachedStateField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 307)
- `slider = screen.getByTestId("max-diagnostic-messages-slider")` (—Å—Ç—Ä–æ–∫–∞ 310)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 321)
- `maxReadFileInput = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 328)
- `alwaysFullReadCheckbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 333)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 339)
- `input = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 345)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 352)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 358)
- `propsWithAutoCondense = {` (—Å—Ç—Ä–æ–∫–∞ 365)
- `autoCondenseCheckbox = screen.getByTestId("auto-condense-context-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 373)
- `slider = screen.getByTestId("condense-threshold-slider")` (—Å—Ç—Ä–æ–∫–∞ 377)
- `selects = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `autoCondenseProps = {` (—Å—Ç—Ä–æ–∫–∞ 386)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 397)
- `props = { ...autoCondenseProps, setCachedStateField: mockSetCachedStateField }` (—Å—Ç—Ä–æ–∫–∞ 398)
- `checkbox = screen.getByTestId("auto-condense-context-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 401)
- `input = checkbox.querySelector('input[type="checkbox"]')` (—Å—Ç—Ä–æ–∫–∞ 402)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 420)
- `props = { ...autoCondenseProps, setCachedStateField: mockSetCachedStateField }` (—Å—Ç—Ä–æ–∫–∞ 421)
- `slider = screen.getByTestId("condense-threshold-slider")` (—Å—Ç—Ä–æ–∫–∞ 425)
- `propsWithMaxReadFileLine = {` (—Å—Ç—Ä–æ–∫–∞ 441)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 447)
- `input = checkbox.querySelector('input[type="checkbox"]')` (—Å—Ç—Ä–æ–∫–∞ 448)
- `mockSetCachedStateField = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 453)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 454)
- `propsWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 468)
- `propsWithoutAutoCondense = {` (—Å—Ç—Ä–æ–∫–∞ 485)
- `propsWithoutMaxReadFile = {` (—Å—Ç—Ä–æ–∫–∞ 496)
- `input = screen.getByTestId("max-read-file-line-input")` (—Å—Ç—Ä–æ–∫–∞ 503)
- `checkbox = screen.getByTestId("max-read-file-always-full-checkbox")` (—Å—Ç—Ä–æ–∫–∞ 504)
- `propsWithMaxReadFile = {` (—Å—Ç—Ä–æ–∫–∞ 530)

#### üìÑ AutoApproveToggle.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = vi.importActual("@/i18n/TranslationContext")` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mockOnToggle = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 18)
- `initialProps = {` (—Å—Ç—Ä–æ–∫–∞ 19)
- `button = screen.getByTestId(config.testId)` (—Å—Ç—Ä–æ–∫–∞ 45)
- `writeToggleButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowWrite.testId)` (—Å—Ç—Ä–æ–∫–∞ 59)
- `readOnlyButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowReadOnly.testId)` (—Å—Ç—Ä–æ–∫–∞ 65)
- `writeToggleButton = screen.getByTestId(autoApproveSettingsConfig.alwaysAllowWrite.testId)` (—Å—Ç—Ä–æ–∫–∞ 78)
- `updatedProps = { ...initialProps, alwaysAllowWrite: true }` (—Å—Ç—Ä–æ–∫–∞ 81)

#### üìÑ ApiOptions.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderApiOptions(props: P)` (—Å—Ç—Ä–æ–∫–∞ 267)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `renderApiOptions = (props: Partial<ApiOptionsProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 267)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 268)
- `providerSelectContainer = screen.getByTestId("provider-select")` (—Å—Ç—Ä–æ–∫–∞ 353)
- `providerSelect = providerSelectContainer.querySelector("select") as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 357)
- `options = providerSelect.querySelectorAll("option")` (—Å—Ç—Ä–æ–∫–∞ 361)
- `optionTexts = Array.from(options).map((opt) => opt.textContent)` (—Å—Ç—Ä–æ–∫–∞ 365)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 375)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 376)
- `updateCall = mockSetApiConfigurationField.mock.calls.find(` (—Å—Ç—Ä–æ–∫–∞ 404)
- `updatedInfo = updateCall![1]` (—Å—Ç—Ä–æ–∫–∞ 410)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 418)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 419)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 437)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 438)
- `checkbox = screen.getByTestId("checkbox-input-settings:providers.setreasoninglevel")` (—Å—Ç—Ä–æ–∫–∞ 451)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 465)
- `initialConfig = {` (—Å—Ç—Ä–æ–∫–∞ 466)
- `selectContainer = screen.getByTestId("reasoning-effort")` (—Å—Ç—Ä–æ–∫–∞ 486)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 526)
- `baseUrlInput = screen.getByTestId("litellm-base-url")` (—Å—Ç—Ä–æ–∫–∞ 534)
- `apiKeyInput = screen.getByTestId("litellm-api-key")` (—Å—Ç—Ä–æ–∫–∞ 535)

#### üìÑ ApiConfigManager.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getRenameForm()` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 132)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnSelectConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `mockOnDeleteConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 111)
- `mockOnRenameConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 112)
- `mockOnUpsertConfig = vitest.fn()` (—Å—Ç—Ä–æ–∫–∞ 113)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 115)
- `getRenameForm = () => screen.getByTestId("rename-form")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `getDialogContent = () => screen.getByTestId("dialog-content")` (—Å—Ç—Ä–æ–∫–∞ 132)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 137)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 148)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 152)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `dialogContent = getDialogContent()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `errorMessage = within(dialogContent).getByTestId("error-message")` (—Å—Ç—Ä–æ–∫–∞ 179)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 188)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 192)
- `createButton = screen.getByText("settings:providers.createProfile")` (—Å—Ç—Ä–æ–∫–∞ 196)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 209)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 213)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 223)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 227)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 231)
- `renameForm = getRenameForm()` (—Å—Ç—Ä–æ–∫–∞ 235)
- `errorMessage = within(renameForm).getByTestId("error-message")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 249)
- `saveButton = screen.getByTestId("save-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 253)
- `selectElement = screen.getByTestId("select-component") as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 262)
- `deleteButton = screen.getByTestId("delete-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 273)
- `deleteButton = screen.getByTestId("delete-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 283)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 291)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 295)
- `cancelButton = screen.getByTestId("cancel-rename-button")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `addButton = screen.getByTestId("add-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 313)
- `input = screen.getByTestId("new-profile-input")` (—Å—Ç—Ä–æ–∫–∞ 316)
- `renameButton = screen.getByTestId("rename-profile-button")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `input = screen.getByDisplayValue("Default Config")` (—Å—Ç—Ä–æ–∫–∞ 335)

### üìÇ build-src/webview-ui/src/components/history/__tests__

#### üìÑ useTaskSearch.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseExtensionState = useExtensionState as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 17)
- `incompleteTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 225)

#### üìÑ TaskItemHeader.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 11)

#### üìÑ TaskItemFooter.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 11)
- `mockItemWithCache = {` (—Å—Ç—Ä–æ–∫–∞ 47)
- `mockItemWithoutCache = {` (—Å—Ç—Ä–æ–∫–∞ 62)

#### üìÑ TaskItem.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTask = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `onToggleSelection = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 44)
- `checkbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 55)
- `mockTaskWithCache = {` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockTaskWithoutCache = {` (—Å—Ç—Ä–æ–∫–∞ 101)

#### üìÑ HistoryView.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 16)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `onDone = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `doneButton = screen.getByText("history:done")` (—Å—Ç—Ä–æ–∫–∞ 60)

#### üìÑ HistoryPreview.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseTaskSearch = useTaskSearch as any` (—Å—Ç—Ä–æ–∫–∞ 22)
- `mockTaskItem = TaskItem as any` (—Å—Ç—Ä–æ–∫–∞ 23)
- `threeTasks = mockTasks.slice(0, 3)` (—Å—Ç—Ä–æ–∫–∞ 132)
- `oneTask = mockTasks.slice(0, 1)` (—Å—Ç—Ä–æ–∫–∞ 154)

#### üìÑ ExportButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `exportButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 23)

#### üìÑ DeleteTaskDialog.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseKeyPress = useKeyPress as any` (—Å—Ç—Ä–æ–∫–∞ 29)
- `mockTaskId = "test-task-id"` (—Å—Ç—Ä–æ–∫–∞ 32)
- `mockOnOpenChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 67)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `dialogContent = screen.getByRole("alertdialog")` (—Å—Ç—Ä–æ–∫–∞ 111)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `deleteButton = screen.getByText("Delete")` (—Å—Ç—Ä–æ–∫–∞ 121)

#### üìÑ DeleteButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `onDelete = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 13)
- `deleteButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 16)

#### üìÑ CopyButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockCopy = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 15)
- `copyButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 28)

#### üìÑ BatchDeleteTaskDialog.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockTaskIds = ["task-1", "task-2", "task-3"]` (—Å—Ç—Ä–æ–∫–∞ 25)
- `mockOnOpenChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 26)
- `deleteButton = screen.getByText("Delete 3 items")` (—Å—Ç—Ä–æ–∫–∞ 45)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 58)
- `deleteButton = screen.getByText("Delete 0 items")` (—Å—Ç—Ä–æ–∫–∞ 68)
- `singleTaskId = ["task-1"]` (—Å—Ç—Ä–æ–∫–∞ 76)
- `deleteButton = screen.getByText("Delete 3 items")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `trashIcon = deleteButton.querySelector(".codicon-trash")` (—Å—Ç—Ä–æ–∫–∞ 87)

### üìÇ build-src/webview-ui/src/components/common/__tests__

#### üìÑ MarkdownBlock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `markdown = "Check out this link: https://example.com."` (—Å—Ç—Ä–æ–∫–∞ 20)
- `nestedLinks = container.querySelectorAll("a a")` (—Å—Ç—Ä–æ–∫–∞ 27)
- `linkElement = screen.getByRole("link")` (—Å—Ç—Ä–æ–∫–∞ 31)
- `paragraph = container.querySelector("p")` (—Å—Ç—Ä–æ–∫–∞ 36)
- `markdown = `Here are some items:` (—Å—Ç—Ä–æ–∫–∞ 41)
- `ulElements = container.querySelectorAll("ul")` (—Å—Ç—Ä–æ–∫–∞ 53)
- `liElements = container.querySelectorAll("li")` (—Å—Ç—Ä–æ–∫–∞ 57)
- `markdown = `And a numbered list:` (—Å—Ç—Ä–æ–∫–∞ 68)
- `olElements = container.querySelectorAll("ol")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `liElements = container.querySelectorAll("li")` (—Å—Ç—Ä–æ–∫–∞ 83)
- `markdown = `Complex list:` (—Å—Ç—Ä–æ–∫–∞ 93)
- `olElements = container.querySelectorAll("ol")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `ulElements = container.querySelectorAll("ul")` (—Å—Ç—Ä–æ–∫–∞ 108)

#### üìÑ FormattedTextField.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 52)
- `input = screen.getByTestId("test-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 62)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = screen.getByTestId("test-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 109)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 152)
- `input = screen.getByTestId("decimal-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 162)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 174)
- `input = screen.getByTestId("decimal-input") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 184)
- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `input = screen.getByTestId("test-input")` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ CodeBlock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockHighlighter = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `theme = options.theme === "github-light" ? "light" : "dark"` (—Å—Ç—Ä–æ–∫–∞ 37)
- `theme = options.theme === "github-light" ? "light" : "dark"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `preNode = {` (—Å—Ç—Ä–æ–∫–∞ 44)
- `mockIntersectionObserver = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 95)
- `originalGetComputedStyle = window.getComputedStyle` (—Å—Ç—Ä–æ–∫–∞ 96)
- `scrollContainer = document.createElement("div")` (—Å—Ç—Ä–æ–∫–∞ 100)
- `scrollContainer = document.querySelector('[data-virtuoso-scroller="true"]')` (—Å—Ç—Ä–æ–∫–∞ 116)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 124)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 134)
- `code = "some code"` (—Å—Ç—Ä–æ–∫–∞ 155)
- `mockError = new Error("WASM load failed")` (—Å—Ç—Ä–æ–∫–∞ 165)
- `highlighterUtil = await import("../../../utils/highlighter")` (—Å—Ç—Ä–æ–∫–∞ 166)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 169)
- `consoleSpy = vi.spyOn(console, "error").mockImplementation(() => {})` (—Å—Ç—Ä–æ–∫–∞ 170)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 188)
- `highlighterUtil = await import("../../../utils/highlighter")` (—Å—Ç—Ä–æ–∫–∞ 189)
- `code = "const x = 1` (—Å—Ç—Ä–æ–∫–∞ 201)
- `codeBlock = container.querySelector("[data-partially-visible]")` (—Å—Ç—Ä–æ–∫–∞ 205)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 211)
- `copyButton = buttons.find((btn) => btn.querySelector("svg.lucide-copy"))` (—Å—Ç—Ä–æ–∫–∞ 212)

### üìÇ build-src/webview-ui/src/components/common/__mocks__

#### üìÑ MarkdownBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface MarkdownBlockProps` (—Å—Ç—Ä–æ–∫–∞ 3)

#### üìÑ CodeBlock.tsx

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface CodeBlockProps` (—Å—Ç—Ä–æ–∫–∞ 3)

### üìÇ build-src/webview-ui/src/components/account/__tests__

#### üìÑ AccountView.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUserInfo = {` (—Å—Ç—Ä–æ–∫–∞ 68)

### üìÇ build-src/webview-ui/src/components/chat/__tests__

#### üìÑ TaskHeader.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderTaskHeader(props: P)` (—Å—Ç—Ä–æ–∫–∞ 61)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 59)
- `renderTaskHeader = (props: Partial<TaskHeaderProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 61)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 98)
- `handleCondenseContext = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 104)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 108)
- `handleCondenseContext = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 115)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `condenseButton = buttons.find((button) => button.querySelector("svg.lucide-fold-vertical"))` (—Å—Ç—Ä–æ–∫–∞ 119)

#### üìÑ TaskActions.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vi.mocked(vscode.postMessage)` (—Å—Ç—Ä–æ–∫–∞ 26)
- `mockUseExtensionState = vi.mocked(useExtensionState)` (—Å—Ç—Ä–æ–∫–∞ 27)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 94)
- `buttons = screen.queryAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 102)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 103)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 117)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 127)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 128)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 140)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 141)
- `orgOption = screen.getByText("Share with Organization")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 159)
- `publicOption = screen.getByText("Share Publicly")` (—Å—Ç—Ä–æ–∫–∞ 163)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 184)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 185)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 206)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 207)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 221)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 233)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 234)
- `connectOption = screen.getByText("Connect")` (—Å—Ç—Ä–æ–∫–∞ 238)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 258)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 307)
- `connectButton = screen.getByText("Connect")` (—Å—Ç—Ä–æ–∫–∞ 312)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 341)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 348)
- `deleteButton = screen.getByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `itemWithoutSize = { ...mockItem, size: 0 }` (—Å—Ç—Ä–æ–∫–∞ 365)
- `deleteButton = screen.queryByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 368)
- `buttons = screen.getAllByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `shareButton = buttons.find((btn) => btn.querySelector(".codicon-link"))` (—Å—Ç—Ä–æ–∫–∞ 379)
- `exportButton = screen.getByLabelText("Export task history")` (—Å—Ç—Ä–æ–∫–∞ 380)
- `copyButton = buttons.find((btn) => btn.querySelector(".codicon-copy"))` (—Å—Ç—Ä–æ–∫–∞ 381)
- `deleteButton = screen.getByLabelText("Delete Task (Shift + Click to skip confirmation)")` (—Å—Ç—Ä–æ–∫–∞ 382)

#### üìÑ ShareButton.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockUseTranslation = vi.mocked(useTranslation)` (—Å—Ç—Ä–æ–∫–∞ 38)
- `mockVscode = vi.mocked(vscode)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `mockT = vi.fn((key: string) => key)` (—Å—Ç—Ä–æ–∫–∞ 42)
- `mockItem = {` (—Å—Ç—Ä–æ–∫–∞ 43)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 66)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 73)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 85)
- `orgButton = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 106)
- `publicButton = screen.getByText("chat:task.sharePublicly")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `mockRemoveEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 125)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 140)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 169)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 178)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 181)
- `publicEvent = {` (—Å—Ç—Ä–æ–∫–∞ 189)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 216)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 219)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 227)
- `mockAddEventListener = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 254)
- `messageListener = mockAddEventListener.mock.calls.find((call) => call[0] === "message")?.[1]` (—Å—Ç—Ä–æ–∫–∞ 263)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `orgButton = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 274)
- `mockEvent = {` (—Å—Ç—Ä–æ–∫–∞ 287)
- `orgButton2 = screen.getByText("chat:task.shareWithOrganization")` (—Å—Ç—Ä–æ–∫–∞ 314)

#### üìÑ ModeSelector.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `actual = await vi.importActual<typeof import("@roo/modes")>("@roo/modes")` (—Å—Ç—Ä–æ–∫–∞ 42)
- `customModePrompts = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `searchInput = screen.getByTestId("mode-search-input")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `modeItems = screen.getAllByTestId("mode-selector-item")` (—Å—Ç—Ä–æ–∫–∞ 147)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 175)
- `infoIcon = document.querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 199)

#### üìÑ IndexingStatusBadge.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderComponent()` (—Å—Ç—Ä–æ–∫–∞ 108)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `cleanKey = key.includes(":") ? key.split(":")[1] : key` (—Å—Ç—Ä–æ–∫–∞ 85)
- `renderComponent = (props = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 108)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 118)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `postMessageSpy = vi.spyOn(window, "postMessage")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 134)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 157)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 174)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `removeEventListenerSpy = vi.spyOn(window, "removeEventListener")` (—Å—Ç—Ä–æ–∫–∞ 233)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 244)
- `event = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 253)
- `button = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 270)

#### üìÑ FollowUpSuggest.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithTestProviders(component: R, extensionState: T)` (—Å—Ç—Ä–æ–∫–∞ 56)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface TestExtensionState` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestExtensionStateContext = createContext<TestExtensionState | undefined>(undefined)` (—Å—Ç—Ä–æ–∫–∞ 34)
- `context = useContext(TestExtensionStateContext)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `renderWithTestProviders = (component: React.ReactElement, extensionState: TestExtensionState) => {` (—Å—Ç—Ä–æ–∫–∞ 56)
- `mockSuggestions = [{ answer: "First suggestion" }, { answer: "Second suggestion" }]` (—Å—Ç—Ä–æ–∫–∞ 65)
- `mockOnSuggestionClick = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 67)
- `mockOnCancelAutoApproval = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 68)

#### üìÑ EditModeControls.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 71)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 80)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `cancelButton = screen.getByText("Cancel")` (—Å—Ç—Ä–æ–∫–∞ 98)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `imageButton = screen.getByLabelText("chat:addImages")` (—Å—Ç—Ä–æ–∫–∞ 115)
- `sendButton = screen.getByLabelText("chat:save.tooltip")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `modeSelector = screen.getByTitle("chat:selectMode")` (—Å—Ç—Ä–æ–∫–∞ 133)

#### üìÑ CommandPatternSelector.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `TestWrapper(children: R)` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `TestWrapper = ({ children }: { children: React.ReactNode }) => <TooltipProvider>{children}</TooltipProvider>` (—Å—Ç—Ä–æ–∫–∞ 25)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 62)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 99)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 103)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 119)
- `npmInstallPattern = screen.getByText("npm install").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `allowButton = npmInstallPattern?.querySelector('button[aria-label*="removeFromAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 126)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 131)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `gitPushPattern = screen.getByText("git push").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 147)
- `denyButton = gitPushPattern?.querySelector('button[aria-label*="removeFromDenied"]')` (—Å—Ç—Ä–æ–∫–∞ 150)
- `mockOnAllowPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 155)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 156)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 168)
- `fullCommandPattern = screen.getByText("npm install express").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 172)
- `allowButton = fullCommandPattern?.querySelector('button[aria-label*="addToAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 173)
- `mockOnDenyPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 181)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 182)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 194)
- `fullCommandPattern = screen.getByText("npm install express").closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 198)
- `denyButton = fullCommandPattern?.querySelector('button[aria-label*="addToDenied"]')` (—Å—Ç—Ä–æ–∫–∞ 199)
- `mockOnAllowPatternChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 207)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 208)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 220)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 228)
- `patternRow = input.closest(".ml-5")` (—Å—Ç—Ä–æ–∫–∞ 235)
- `allowButton = patternRow?.querySelector('button[aria-label*="addToAllowed"]')` (—Å—Ç—Ä–æ–∫–∞ 236)
- `expandButton = screen.getByRole("button")` (—Å—Ç—Ä–æ–∫–∞ 254)
- `fullCommandDiv = screen.getByText("npm install express").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 258)
- `input = screen.getByDisplayValue("npm install express") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 262)

#### üìÑ CommandExecution.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `ExtensionStateWrapper(children: R)` (—Å—Ç—Ä–æ–∫–∞ 43)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 35)
- `ExtensionStateWrapper = ({ children }: { children: React.ReactNode }) => (` (—Å—Ç—Ä–æ–∫–∞ 43)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `icon = <span data-testid="custom-icon">üì¶</span>` (—Å—Ç—Ä–æ–∫–∞ 74)
- `title = <span data-testid="custom-title">Installing Dependencies</span>` (—Å—Ç—Ä–æ–∫–∞ 75)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 96)
- `allowButton = screen.getByText("Allow git push")` (—Å—Ç—Ä–æ–∫–∞ 107)
- `denyButton = screen.getByText("Deny docker run")` (—Å—Ç—Ä–æ–∫–∞ 123)
- `stateWithNpmTest = {` (—Å—Ç—Ä–æ–∫–∞ 134)
- `allowButton = screen.getByText("Allow npm test")` (—Å—Ç—Ä–æ–∫–∞ 146)
- `stateWithRmRf = {` (—Å—Ç—Ä–æ–∫–∞ 158)
- `denyButton = screen.getByText("Deny rm -rf")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 181)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 191)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 196)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 207)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 211)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 224)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 236)
- `disabledState = {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `commandText = `npm install` (—Å—Ç—Ä–æ–∫–∞ 257)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 268)
- `stateWithUndefined = {` (—Å—Ç—Ä–æ–∫–∞ 274)
- `stateWithRmInDenied = {` (—Å—Ç—Ä–æ–∫–∞ 292)
- `allowButton = screen.getByText("Allow rm file.txt")` (—Å—Ç—Ä–æ–∫–∞ 304)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 322)
- `commandWithOutput = `npm install` (—Å—Ç—Ä–æ–∫–∞ 328)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 344)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 357)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 369)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 381)
- `commandWithMixedContent = `npm test` (—Å—Ç—Ä–æ–∫–∞ 387)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 404)
- `conflictState = {` (—Å—Ç—Ä–æ–∫–∞ 411)
- `allowButton = screen.getByText("Allow git push origin main")` (—Å—Ç—Ä–æ–∫–∞ 424)
- `commandWithQuotes = "echo 'test with unclosed quote"` (—Å—Ç—Ä–æ–∫–∞ 434)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 446)
- `outputOnly = `Some output without a command` (—Å—Ç—Ä–æ–∫–∞ 466)
- `codeBlock = screen.getByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 477)
- `plainCommand = "docker build ."` (—Å—Ç—Ä–æ–∫–∞ 485)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 497)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 502)
- `commandWithNumericOutput = `wc -l *.go *.java` (—Å—Ç—Ä–æ–∫–∞ 507)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 521)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 525)
- `commandWithZeroTotal = `wc -l *.go *.java` (—Å—Ç—Ä–æ–∫–∞ 537)
- `selector = screen.getByTestId("command-pattern-selector")` (—Å—Ç—Ä–æ–∫–∞ 548)
- `codeBlocks = screen.getAllByTestId("code-block")` (—Å—Ç—Ä–æ–∫–∞ 555)

#### üìÑ ChatView.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: P)` (—Å—Ç—Ä–æ–∫–∞ 252)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 280)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ClineMessage` (—Å—Ç—Ä–æ–∫–∞ 13)

- `interface ExtensionState` (—Å—Ç—Ä–æ–∫–∞ 22)

- `interface ChatTextAreaProps` (—Å—Ç—Ä–æ–∫–∞ 168)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPlayFunction = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 40)
- `mockVersionIndicator = vi.mocked(` (—Å—Ç—Ä–æ–∫–∞ 70)
- `React = require("react")` (—Å—Ç—Ä–æ–∫–∞ 78)
- `mockInputRef = React.createRef<HTMLInputElement>()` (—Å—Ç—Ä–æ–∫–∞ 177)
- `mockFocus = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 178)
- `mockReact = require("react")` (—Å—Ç—Ä–æ–∫–∞ 182)
- `mockPostMessage = (state: Partial<ExtensionState>) => {` (—Å—Ç—Ä–æ–∫–∞ 252)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 278)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 280)
- `testCases = [` (—Å—Ç—Ä–æ–∫–∞ 315)
- `chainedCommands = [` (—Å—Ç—Ä–æ–∫–∞ 691)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1178)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1206)
- `versionIndicator = getByTestId("version-indicator")` (—Å—Ç—Ä–æ–∫–∞ 1231)
- `chatTextArea = getByTestId("chat-textarea")` (—Å—Ç—Ä–æ–∫–∞ 1463)
- `input = chatTextArea.querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 1464)
- `chatTextArea = getByTestId("chat-textarea")` (—Å—Ç—Ä–æ–∫–∞ 1491)
- `input = chatTextArea.querySelector("input")!` (—Å—Ç—Ä–æ–∫–∞ 1492)

#### üìÑ ChatView.keyboard-fix.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 96)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 126)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 96)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 124)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 126)
- `callsAfterPeriod = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 169)
- `modeSwitchAfterPeriod = callsAfterPeriod.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `callsAfterV = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 189)
- `modeSwitchAfterV = callsAfterV.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `event = new KeyboardEvent("keydown", {` (—Å—Ç—Ä–æ–∫–∞ 204)
- `preventDefaultSpy = vi.spyOn(event, "preventDefault")` (—Å—Ç—Ä–æ–∫–∞ 214)
- `calls = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 251)
- `modeSwitch = calls.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `calls = (vscode.postMessage as any).mock.calls` (—Å—Ç—Ä–æ–∫–∞ 284)
- `modeSwitch = calls.some((call: any[]) => call[0]?.type === "mode")` (—Å—Ç—Ä–æ–∫–∞ 285)

#### üìÑ ChatView.auto-approve.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 91)

#### üìÑ ChatView.auto-approve-new.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockPostMessage(state: a)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `renderChatView(props: P)` (—Å—Ç—Ä–æ–∫–∞ 91)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = (state: any) => {` (—Å—Ç—Ä–æ–∫–∞ 64)
- `queryClient = new QueryClient()` (—Å—Ç—Ä–æ–∫–∞ 83)
- `renderChatView = (props: Partial<ChatViewProps> = {}) => {` (—Å—Ç—Ä–æ–∫–∞ 91)
- `toolRequests = [` (—Å—Ç—Ä–æ–∫–∞ 437)

#### üìÑ ChatTextArea.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 38)
- `getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1047)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `relativePath = path.substring(cwd.length)` (—Å—Ç—Ä–æ–∫–∞ 23)
- `mockPostMessage = vscode.postMessage as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 31)
- `mockConvertToMentionPath = pathMentions.convertToMentionPath as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 32)
- `getEnhancePromptButton = () => {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 48)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 88)
- `apiConfiguration = {` (—Å—Ç—Ä–æ–∫–∞ 95)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 135)
- `enhanceButton = getEnhancePromptButton()` (—Å—Ç—Ä–æ–∫–∞ 154)
- `animatingIcon = enhanceButton.querySelector(".animate-spin")` (—Å—Ç—Ä–æ–∫–∞ 158)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 188)
- `mockExecCommand = vi.fn().mockReturnValue(true)` (—Å—Ç—Ä–æ–∫–∞ 191)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 201)
- `mockSelect = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 204)
- `mockFocus = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 205)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 226)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 251)
- `mockCwd = "/Users/test/project"` (—Å—Ç—Ä–æ–∫–∞ 270)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 283)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 290)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 312)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 319)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `initialCursorPosition = 5` (—Å—Ç—Ä–æ–∫–∞ 339)
- `textArea = container.querySelector("textarea")` (—Å—Ç—Ä–æ–∫–∞ 346)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 353)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 369)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 378)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 399)
- `specialPath1 = "/Users/test/project/file with spaces.js"` (—Å—Ç—Ä–æ–∫–∞ 404)
- `specialPath2 = "/Users/test/project/file-with-dashes.js"` (—Å—Ç—Ä–æ–∫–∞ 405)
- `specialPath3 = "/Users/test/project/file_with_underscores.js"` (—Å—Ç—Ä–æ–∫–∞ 406)
- `specialPath4 = "/Users/test/project/file.with.dots.js"` (—Å—Ç—Ä–æ–∫–∞ 407)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 410)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 435)
- `outsidePath = "/Users/other/project/file.js"` (—Å—Ç—Ä–æ–∫–∞ 440)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 448)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 467)
- `dataTransfer = {` (—Å—Ç—Ä–æ–∫–∞ 474)
- `mockClineMessages = [` (—Å—Ç—Ä–æ–∫–∞ 493)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 513)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 518)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 530)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 535)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 550)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 555)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 568)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 573)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 587)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 592)
- `onSend = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 606)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 607)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 617)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 630)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 635)
- `mixedClineMessages = [` (—Å—Ç—Ä–æ–∫–∞ 647)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 664)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 669)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 692)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 697)
- `clineMessagesWithEmpty = [` (—Å—Ç—Ä–æ–∫–∞ 705)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 723)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 728)
- `mockTaskHistory = [` (—Å—Ç—Ä–æ–∫–∞ 740)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 757)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 762)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 774)
- `textarea = document.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 796)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 826)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 831)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 846)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 851)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 866)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 871)
- `setInputValue = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 886)
- `textarea = container.querySelector("textarea")!` (—Å—Ç—Ä–æ–∫–∞ 891)
- `mockCommands = [` (—Å—Ç—Ä–æ–∫–∞ 908)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 927)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 938)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 952)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 967)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 979)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 992)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 1007)
- `highlightLayer = getByTestId("highlight-layer")` (—Å—Ç—Ä–æ–∫–∞ 1034)
- `getApiConfigDropdown = () => {` (—Å—Ç—Ä–æ–∫–∞ 1047)
- `apiConfigDropdown = getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1052)
- `apiConfigDropdown = getApiConfigDropdown()` (—Å—Ç—Ä–æ–∫–∞ 1057)
- `cancelButton = screen.getByRole("button", { name: /cancel/i })` (—Å—Ç—Ä–æ–∫–∞ 1076)
- `saveButton = screen.getByRole("button", { name: /save/i })` (—Å—Ç—Ä–æ–∫–∞ 1080)
- `sendButton = screen.queryByRole("button", { name: /send.*message/i })` (—Å—Ç—Ä–æ–∫–∞ 1084)
- `cancelButton = screen.queryByRole("button", { name: /cancel/i })` (—Å—Ç—Ä–æ–∫–∞ 1099)
- `sendButton = screen.getByRole("button", { name: /send.*message/i })` (—Å—Ç—Ä–æ–∫–∞ 1103)
- `saveButton = screen.queryByRole("button", { name: /save/i })` (—Å—Ç—Ä–æ–∫–∞ 1107)

#### üìÑ BatchFilePermission.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockVscodePostMessage = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 7)
- `mockOnPermissionResponse = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 16)
- `mockFiles = [` (—Å—Ç—Ä–æ–∫–∞ 18)
- `filePathElement = screen.getByText(/Button\.tsx.*export const Button/)` (—Å—Ç—Ä–æ–∫–∞ 101)
- `headerElement = filePathElement.closest(".flex.items-center.select-none")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `filesWithDotPath = [` (—Å—Ç—Ä–æ–∫–∞ 116)
- `externalLinkIcons = screen.getAllByText((_content, element) => {` (—Å—Ç—Ä–æ–∫–∞ 173)

#### üìÑ AutoApproveMenu.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vscode.postMessage as ReturnType<typeof vi.fn>` (—Å—Ç—Ä–æ–∫–∞ 48)
- `defaultExtensionState = {` (—Å—Ç—Ä–æ–∫–∞ 51)
- `masterCheckbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 128)
- `masterCheckbox = screen.getByRole("checkbox")` (—Å—Ç—Ä–æ–∫–∞ 145)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 158)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 168)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 176)
- `mockSetAlwaysAllowWrite = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 186)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 196)
- `writeButton = screen.getByTestId("always-allow-write-toggle")` (—Å—Ç—Ä–æ–∫–∞ 203)
- `mockSetAutoApprovalEnabled = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 230)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 231)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 244)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 252)
- `mockSetAutoApprovalEnabled = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 269)
- `mockSetAlwaysAllowReadOnly = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 270)
- `menuContainer = screen.getByText("Auto-approve").parentElement` (—Å—Ç—Ä–æ–∫–∞ 283)
- `readOnlyButton = screen.getByTestId("always-allow-readonly-toggle")` (—Å—Ç—Ä–æ–∫–∞ 291)

#### üìÑ ApiConfigSelector.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockOnChange = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 46)
- `mockTogglePinnedApiConfig = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 47)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 49)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `icon = trigger.querySelector(".codicon-chevron-up")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 86)
- `customTitle = "Custom tooltip text"` (—Å—Ç—Ä–æ–∫–∞ 91)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `customClass = "custom-trigger-class"` (—Å—Ç—Ä–æ–∫–∞ 100)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 103)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 110)
- `popoverContent = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 119)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 136)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 143)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 153)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 167)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 183)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 197)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 209)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 223)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 226)
- `clearButton = screen.getByTestId("popover-content").querySelector(".cursor-pointer")` (—Å—Ç—Ä–æ–∫–∞ 232)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 245)
- `config2 = screen.getByText("Config 2")` (—Å—Ç—Ä–æ–∫–∞ 248)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 257)
- `config1Elements = screen.getAllByText("Config 1")` (—Å—Ç—Ä–æ–∫–∞ 262)
- `configInDropdown = config1Elements.find((el) => el.closest('[data-testid="popover-content"]'))` (—Å—Ç—Ä–æ–∫–∞ 264)
- `selectedConfigRow = configInDropdown?.closest("div")` (—Å—Ç—Ä–æ–∫–∞ 265)
- `checkIcon = selectedConfigRow?.querySelector(".codicon-check")` (—Å—Ç—Ä–æ–∫–∞ 266)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 271)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 278)
- `content = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 281)
- `configTexts = content.querySelectorAll(".truncate")` (—Å—Ç—Ä–æ–∫–∞ 282)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 294)
- `config2Row = screen.getByText("Config 2").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 298)
- `pinButton = config2Row?.querySelector("button")` (—Å—Ç—Ä–æ–∫–∞ 299)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 315)
- `popoverContent = screen.getByTestId("popover-content")` (—Å—Ç—Ä–æ–∫–∞ 319)
- `settingsButton = popoverContent.querySelector('[aria-label="chat:edit"]') as HTMLElement` (—Å—Ç—Ä–æ–∫–∞ 320)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 331)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 345)
- `infoIcon = screen.getByTestId("popover-content").querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 352)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 359)
- `infoIcon = screen.getByTestId("popover-content").querySelector(".codicon-info")` (—Å—Ç—Ä–æ–∫–∞ 366)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 371)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 378)
- `props = {` (—Å—Ç—Ä–æ–∫–∞ 388)
- `trigger = screen.getByTestId("dropdown-trigger")` (—Å—Ç—Ä–æ–∫–∞ 402)
- `searchInput = screen.getByPlaceholderText("common:ui.search_placeholder") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 405)
- `config2Row = screen.getByText("Config 2").closest("div")` (—Å—Ç—Ä–æ–∫–∞ 409)
- `pinButton = config2Row?.querySelector("button")` (—Å—Ç—Ä–æ–∫–∞ 410)

#### üìÑ Announcement.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockHideAnnouncement = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 33)
- `expectedVersion = Package.version` (—Å—Ç—Ä–æ–∫–∞ 34)

### üìÇ build-src/apps/web-roo-code/src/app/terms

#### üìÑ page.tsx

### üìÇ build-src/apps/web-roo-code/src/app/evals

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runs = await getEvalRuns()` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ evals.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderQuadrant(props: a)` (—Å—Ç—Ä–æ–∫–∞ 215)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tableData = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `chartData = useMemo(() => tableData.filter(({ cost }) => cost < 100), [tableData])` (—Å—Ç—Ä–æ–∫–∞ 52)
- `chartConfig = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 54)
- `renderQuadrant = (props: any) => (` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ build-src/apps/web-roo-code/src/app/privacy

#### üìÑ page.tsx

### üìÇ build-src/apps/web-roo-code/src/app/enterprise

#### üìÑ page.tsx

### üìÇ build-src/apps/web-roo-code/src/components/enterprise

#### üìÑ contact-form.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleSubmit(e: R)` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContactFormProps` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contactFormSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `formRef = useRef<HTMLFormElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `formTitle = formType === "early-access" ? "Become an Early Access Partner" : "Request a Demo"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `BASIN_ENDPOINT = process.env.NEXT_PUBLIC_BASIN_ENDPOINT || ""` (—Å—Ç—Ä–æ–∫–∞ 50)
- `handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `form = e.currentTarget` (—Å—Ç—Ä–æ–∫–∞ 63)
- `formData = new FormData(form)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `data = {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `response = await fetch(BASIN_ENDPOINT, {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `responseData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `errorData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ build-src/apps/web-neira-coder/src/components/enterprise

#### üìÑ contact-form.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `async handleSubmit(e: R)` (—Å—Ç—Ä–æ–∫–∞ 57)

**–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:**

- `interface ContactFormProps` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `contactFormSchema = z.object({` (—Å—Ç—Ä–æ–∫–∞ 18)
- `formRef = useRef<HTMLFormElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 39)
- `formTitle = formType === "early-access" ? "Become an Early Access Partner" : "Request a Demo"` (—Å—Ç—Ä–æ–∫–∞ 41)
- `BASIN_ENDPOINT = process.env.NEXT_PUBLIC_BASIN_ENDPOINT || ""` (—Å—Ç—Ä–æ–∫–∞ 50)
- `handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {` (—Å—Ç—Ä–æ–∫–∞ 57)
- `form = e.currentTarget` (—Å—Ç—Ä–æ–∫–∞ 63)
- `formData = new FormData(form)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `data = {` (—Å—Ç—Ä–æ–∫–∞ 67)
- `response = await fetch(BASIN_ENDPOINT, {` (—Å—Ç—Ä–æ–∫–∞ 84)
- `responseData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 97)
- `errorData = await response.json()` (—Å—Ç—Ä–æ–∫–∞ 121)

### üìÇ build-src/apps/web-neira-coder/src/app/terms

#### üìÑ page.tsx

### üìÇ build-src/apps/web-neira-coder/src/app/privacy

#### üìÑ page.tsx

### üìÇ build-src/apps/web-neira-coder/src/app/enterprise

#### üìÑ page.tsx

### üìÇ build-src/apps/web-neira-coder/src/app/evals

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runs = await getEvalRuns()` (—Å—Ç—Ä–æ–∫–∞ 26)

#### üìÑ evals.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderQuadrant(props: a)` (—Å—Ç—Ä–æ–∫–∞ 215)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `tableData = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 39)
- `chartData = useMemo(() => tableData.filter(({ cost }) => cost < 100), [tableData])` (—Å—Ç—Ä–æ–∫–∞ 52)
- `chartConfig = useMemo(` (—Å—Ç—Ä–æ–∫–∞ 54)
- `renderQuadrant = (props: any) => (` (—Å—Ç—Ä–æ–∫–∞ 215)

### üìÇ build-src/apps/web-evals/src/components/layout

#### üìÑ logo.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `onAnimationEnd()` (—Å—Ç—Ä–æ–∫–∞ 44)

**–¢–∏–ø—ã:**

- `type LogoProps` (—Å—Ç—Ä–æ–∫–∞ 9)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 12)
- `ref = useRef<SVGSVGElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 33)
- `logo = <Logo ref={ref} {...props} />` (—Å—Ç—Ä–æ–∫–∞ 34)
- `element = ref.current` (—Å—Ç—Ä–æ–∫–∞ 38)
- `isHopping = element !== null && element.classList.contains("animate-hop")` (—Å—Ç—Ä–æ–∫–∞ 39)
- `onAnimationEnd = () => {` (—Å—Ç—Ä–æ–∫–∞ 44)

#### üìÑ header.tsx

### üìÇ build-src/apps/web-evals/src/components/home

#### üìÑ runs.tsx

**–¢–∏–ø—ã:**

- `type RunWithTaskMetrics` (—Å—Ç—Ä–æ–∫–∞ 11)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 14)

#### üìÑ run.tsx

**–¢–∏–ø—ã:**

- `type RunProps` (—Å—Ç—Ä–æ–∫–∞ 28)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `continueRef = useRef<HTMLButtonElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 35)
- `onConfirmDelete = useCallback(async () => {` (—Å—Ç—Ä–æ–∫–∞ 38)

### üìÇ apps/web-evals/src/app/runs/new

#### üìÑ settings-diff.tsx

**–¢–∏–ø—ã:**

- `type SettingsDiffProps` (—Å—Ç—Ä–æ–∫–∞ 12)
- `type SettingDiffProps` (—Å—Ç—Ä–æ–∫–∞ 49)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaults = { ...defaultSettings, ...defaultExperiments }` (—Å—Ç—Ä–æ–∫–∞ 23)
- `custom = { ...customSettings, ...customExperiments }` (—Å—Ç—Ä–æ–∫–∞ 24)
- `defaultValue = defaults[key as keyof typeof defaults]` (—Å—Ç—Ä–æ–∫–∞ 32)
- `customValue = custom[key as keyof typeof custom]` (—Å—Ç—Ä–æ–∫–∞ 33)
- `isDefault = JSON.stringify(defaultValue) === JSON.stringify(customValue)` (—Å—Ç—Ä–æ–∫–∞ 34)

#### üìÑ page.tsx

#### üìÑ new-run.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `modelSearchResultsRef = useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 68)
- `modelSearchValueRef = useRef("")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `models = useOpenRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `exercises = useQuery({ queryKey: ["getExercises"], queryFn: () => getExercises() })` (—Å—Ç—Ä–æ–∫–∞ 72)
- `form = useForm<CreateRun>({` (—Å—Ç—Ä–æ–∫–∞ 74)
- `systemPromptRef = useRef<HTMLTextAreaElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `onSubmit = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 100)
- `onFilterModels = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `onSelectModel = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `onImportSettings = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 145)
- `file = event.target.files?.[0]` (—Å—Ç—Ä–æ–∫–∞ 147)
- `providerSettings = providerProfiles.apiConfigs[providerProfiles.currentApiConfigName] ?? {}` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ apps/web-evals/src/app/runs/[id]

#### üìÑ task-status.tsx

**–¢–∏–ø—ã:**

- `type TaskStatusProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ run.tsx

**–¢–∏–ø—ã:**

- `type TaskMetrics` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runStatus = useRunStatus(run)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `usage = tokenUsage.get(task.id)` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ run-status.tsx

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await findRun(Number(id))` (—Å—Ç—Ä–æ–∫–∞ 7)

### üìÇ build-src/webview-ui/src/components/marketplace/components/__tests__

#### üìÑ MarketplaceItemCard.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `renderWithProviders(ui: R)` (—Å—Ç—Ä–æ–∫–∞ 59)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `renderWithProviders = (ui: React.ReactElement) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `defaultProps = {` (—Å—Ç—Ä–æ–∫–∞ 75)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `setFilters = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 110)
- `tagButton = screen.getByText("test")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 121)
- `authorLink = screen.getByText("by Test Author")` (—Å—Ç—Ä–æ–∫–∞ 124)
- `authorText = screen.getByText(/by Test Author/) // Changed to regex` (—Å—Ç—Ä–æ–∫–∞ 141)
- `setFilters = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 147)
- `installedProps = {` (—Å—Ç—Ä–æ–∫–∞ 188)
- `installedProps = {` (—Å—Ç—Ä–æ–∫–∞ 207)
- `installedBadges = screen.getAllByText("Installed")` (—Å—Ç—Ä–æ–∫–∞ 218)

#### üìÑ MarketplaceInstallModal.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMockItem(): MarketplaceItem` (—Å—Ç—Ä–æ–∫–∞ 42)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockedVscode = vscode as any` (—Å—Ç—Ä–æ–∫–∞ 15)
- `mockOnClose = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 34)
- `createMockItem = (hasNestedParams = false): MarketplaceItem => ({` (—Å—Ç—Ä–æ–∫–∞ 42)
- `item = createMockItem(false)` (—Å—Ç—Ä–æ–∫–∞ 103)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 112)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 125)
- `methodSelect = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 133)
- `dockerOption = screen.getByText("Docker Installation")` (—Å—Ç—Ä–æ–∫–∞ 138)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 156)
- `installButton = screen.getByText("marketplace:install.button")` (—Å—Ç—Ä–æ–∫–∞ 160)
- `packageNameInput = screen.getByPlaceholderText("Enter package name")` (—Å—Ç—Ä–æ–∫–∞ 169)
- `apiKeyInput = screen.getByPlaceholderText("Enter NPM API key")` (—Å—Ç—Ä–æ–∫–∞ 170)
- `item = createMockItem(true)` (—Å—Ç—Ä–æ–∫–∞ 196)
- `globalOptionalInput = screen.getByPlaceholderText("Optional setting")` (—Å—Ç—Ä–æ–∫–∞ 200)
- `methodSelect = screen.getByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 204)
- `dockerOption = screen.getByText("Docker Installation")` (—Å—Ç—Ä–æ–∫–∞ 208)
- `preservedInput = screen.getByPlaceholderText("Optional setting")` (—Å—Ç—Ä–æ–∫–∞ 214)

#### üìÑ MarketplaceInstallModal-optional-params.spec.tsx

**–§—É–Ω–∫—Ü–∏–∏:**

- `createMcpItemWithParams(parameters: a): MarketplaceItem` (—Å—Ç—Ä–æ–∫–∞ 38)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vscode.postMessage as any` (—Å—Ç—Ä–æ–∫–∞ 14)
- `mockOnClose = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 32)
- `createMcpItemWithParams = (parameters: any[]): MarketplaceItem => ({` (—Å—Ç—Ä–æ–∫–∞ 38)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 49)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 71)
- `apiKeyInput = screen.getByPlaceholderText("Enter API key")` (—Å—Ç—Ä–æ–∫–∞ 89)
- `endpointInput = screen.getByPlaceholderText("Leave empty for default")` (—Å—Ç—Ä–æ–∫–∞ 90)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 98)
- `endpointInput = screen.getByPlaceholderText("Leave empty for default")` (—Å—Ç—Ä–æ–∫–∞ 116)
- `installButton = screen.getByText("Install")` (—Å—Ç—Ä–æ–∫–∞ 120)
- `item = createMcpItemWithParams([` (—Å—Ç—Ä–æ–∫–∞ 133)
- `installButton = screen.getByText("Install")` (—Å—Ç—Ä–æ–∫–∞ 149)

### üìÇ build-src/webview-ui/src/components/settings/providers/__tests__

#### üìÑ Vertex.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `globalRegions = VERTEX_REGIONS.filter((r: { value: string` (—Å—Ç—Ä–æ–∫–∞ 12)
- `asiaEast1Regions = VERTEX_REGIONS.filter(` (—Å—Ç—Ä–æ–∫–∞ 55)

#### üìÑ OpenAICompatible.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 89)
- `mockOrganizationAllowList = {` (—Å—Ç—Ä–æ–∫–∞ 90)
- `checkbox = screen.getByTestId("checkbox-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 114)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 156)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 173)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 190)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 207)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 226)
- `checkboxInput = screen.getByTestId("checkbox-input-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 246)
- `checkbox = screen.getByTestId("checkbox-settings:includemaxoutputtokens")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `parentDiv = checkbox.closest("div")` (—Å—Ç—Ä–æ–∫–∞ 307)
- `description = screen.getByText("settings:includeMaxOutputTokensDescription")` (—Å—Ç—Ä–æ–∫–∞ 311)

#### üìÑ HuggingFace.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockPostMessage = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 103)
- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 116)
- `apiKeyInput = screen.getByDisplayValue("test-api-key")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `apiKeyButton = screen.getByTestId("vscode-button")` (—Å—Ç—Ä–æ–∫–∞ 193)
- `mockModels = [` (—Å—Ç—Ä–æ–∫–∞ 249)
- `messageEvent = new MessageEvent("message", {` (—Å—Ç—Ä–æ–∫–∞ 272)
- `priceElements = screen.getAllByText("$0.00 / 1M tokens")` (—Å—Ç—Ä–æ–∫–∞ 292)

#### üìÑ Gemini.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 39)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 54)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 55)
- `apiConfiguration = { ...defaultApiConfiguration, enableUrlContext: true }` (—Å—Ç—Ä–æ–∫–∞ 60)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 65)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 66)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `urlContextCheckbox = screen.getByTestId("checkbox-url-context")` (—Å—Ç—Ä–æ–∫–∞ 79)
- `checkbox = urlContextCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 80)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 97)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 98)
- `apiConfiguration = { ...defaultApiConfiguration, enableGrounding: true }` (—Å—Ç—Ä–æ–∫–∞ 103)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 108)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 109)
- `user = userEvent.setup()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `groundingCheckbox = screen.getByTestId("checkbox-grounding-search")` (—Å—Ç—Ä–æ–∫–∞ 122)
- `checkbox = groundingCheckbox.querySelector("input[type='checkbox']") as HTMLInputElement` (—Å—Ç—Ä–æ–∫–∞ 123)

#### üìÑ Bedrock.spec.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockSetApiConfigurationField = vi.fn()` (—Å—Ç—Ä–æ–∫–∞ 82)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 157)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 185)
- `inputField = screen.getByTestId("vpc-endpoint-input")` (—Å—Ç—Ä–æ–∫–∞ 332)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 449)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 450)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 467)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 468)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 485)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 486)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 503)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 504)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 524)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 525)
- `selectInputs = screen.getAllByRole("combobox")` (—Å—Ç—Ä–æ–∫–∞ 545)
- `authSelect = selectInputs[0] as HTMLSelectElement` (—Å—Ç—Ä–æ–∫–∞ 546)

### üìÇ build-src/apps/web-evals/src/app/runs/new

#### üìÑ settings-diff.tsx

**–¢–∏–ø—ã:**

- `type SettingsDiffProps` (—Å—Ç—Ä–æ–∫–∞ 9)
- `type SettingDiffProps` (—Å—Ç—Ä–æ–∫–∞ 46)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `defaults = { ...defaultSettings, ...defaultExperiments }` (—Å—Ç—Ä–æ–∫–∞ 20)
- `custom = { ...customSettings, ...customExperiments }` (—Å—Ç—Ä–æ–∫–∞ 21)
- `defaultValue = defaults[key as keyof typeof defaults]` (—Å—Ç—Ä–æ–∫–∞ 29)
- `customValue = custom[key as keyof typeof custom]` (—Å—Ç—Ä–æ–∫–∞ 30)
- `isDefault = JSON.stringify(defaultValue) === JSON.stringify(customValue)` (—Å—Ç—Ä–æ–∫–∞ 31)

#### üìÑ page.tsx

#### üìÑ new-run.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `router = useRouter()` (—Å—Ç—Ä–æ–∫–∞ 62)
- `modelSearchResultsRef = useRef<Map<string, number>>(new Map())` (—Å—Ç—Ä–æ–∫–∞ 68)
- `modelSearchValueRef = useRef("")` (—Å—Ç—Ä–æ–∫–∞ 69)
- `models = useOpenRouterModels()` (—Å—Ç—Ä–æ–∫–∞ 71)
- `exercises = useQuery({ queryKey: ["getExercises"], queryFn: () => getExercises() })` (—Å—Ç—Ä–æ–∫–∞ 72)
- `form = useForm<CreateRun>({` (—Å—Ç—Ä–æ–∫–∞ 74)
- `systemPromptRef = useRef<HTMLTextAreaElement>(null)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `onSubmit = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 100)
- `onFilterModels = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 116)
- `onSelectModel = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 137)
- `onImportSettings = useCallback(` (—Å—Ç—Ä–æ–∫–∞ 145)
- `file = event.target.files?.[0]` (—Å—Ç—Ä–æ–∫–∞ 147)
- `providerSettings = providerProfiles.apiConfigs[providerProfiles.currentApiConfigName] ?? {}` (—Å—Ç—Ä–æ–∫–∞ 166)

### üìÇ build-src/apps/web-evals/src/app/runs/[id]

#### üìÑ task-status.tsx

**–¢–∏–ø—ã:**

- `type TaskStatusProps` (—Å—Ç—Ä–æ–∫–∞ 5)

#### üìÑ run.tsx

**–¢–∏–ø—ã:**

- `type TaskMetrics` (—Å—Ç—Ä–æ–∫–∞ 15)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `runStatus = useRunStatus(run)` (—Å—Ç—Ä–æ–∫–∞ 18)
- `usage = tokenUsage.get(task.id)` (—Å—Ç—Ä–æ–∫–∞ 25)

#### üìÑ run-status.tsx

#### üìÑ page.tsx

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `run = await findRun(Number(id))` (—Å—Ç—Ä–æ–∫–∞ 7)

### üìÇ scripts

#### üìÑ update-contributors.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseLinkHeader()` - Parses the GitHub API Link header to extract pagination URLs Based on RFC 5988 format for the Link header (—Å—Ç—Ä–æ–∫–∞ 46)
- `httpGet()` - Performs an HTTP GET request and returns the response (—Å—Ç—Ä–æ–∫–∞ 93)
- `async fetchContributorsPage()` - Fetches a single page of contributors from GitHub API (—Å—Ç—Ä–æ–∫–∞ 121)
- `async fetchContributors()` - Fetches all contributors data from GitHub API (handling pagination) (—Å—Ç—Ä–æ–∫–∞ 148)
- `async readReadme()` - Reads the README.md file (—Å—Ç—Ä–æ–∫–∞ 173)
- `formatContributorsSection()` (—Å—Ç—Ä–æ–∫–∞ 189)
- `createCell()` (—Å—Ç—Ä–æ–∫–∞ 203)
- `async updateReadme()` - Updates the README.md file with contributors section (—Å—Ç—Ä–æ–∫–∞ 253)
- `async writeReadme()` - Writes updated content to README.md (—Å—Ç—Ä–æ–∫–∞ 278)
- `async findLocalizedReadmes()` - Finds all localized README files in the locales directory (—Å—Ç—Ä–æ–∫–∞ 289)
- `async updateLocalizedReadme()` - Updates a localized README file with contributors section (—Å—Ç—Ä–æ–∫–∞ 321)
- `async main()` - Main function that orchestrates the update process (—Å—Ç—Ä–æ–∫–∞ 353)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `https = require("https")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `readFileAsync = promisify(fs.readFile)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `writeFileAsync = promisify(fs.writeFile)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `GITHUB_API_URL = "https://api.github.com/repos/RooCodeInc/Roo-Code/contributors?per_page=100"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `README_PATH = path.join(__dirname, "..", "README.md")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `LOCALES_DIR = path.join(__dirname, "..", "locales")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `START_MARKER = "<!-- START CONTRIBUTORS SECTION - AUTO-GENERATED, DO NOT EDIT MANUALLY -->"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `END_MARKER = "<!-- END CONTRIBUTORS SECTION -->"` (—Å—Ç—Ä–æ–∫–∞ 25)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `links = {}` (—Å—Ç—Ä–æ–∫–∞ 51)
- `entries = header.split(/,\s*/)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `segments = entry.split("` (—Å—Ç—Ä–æ–∫–∞ 60)
- `urlMatch = segments[0].match(/<(.+)>/)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `url = urlMatch[1]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `relMatch = segments[i].match(/\s*rel\s*=\s*"?([^"]+)"?/)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `response = await httpGet(url, options)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `linkHeader = response.headers.link` (—Å—Ç—Ä–æ–∫–∞ 132)
- `links = parseLinkHeader(linkHeader)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `contributors = JSON.parse(response.body)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `EXCLUDED_LOGIN_SUBSTRINGS = ['[bot]', 'R00-B0T']` - Creates HTML for the contributors section (—Å—Ç—Ä–æ–∫–∞ 186)
- `EXCLUDED_LOGIN_EXACTS = ['cursor', 'roomote']` (—Å—Ç—Ä–æ–∫–∞ 187)
- `filteredContributors = contributors.filter((c) =>` (—Å—Ç—Ä–æ–∫–∞ 191)
- `COLUMNS = 6` (—Å—Ç—Ä–æ–∫–∞ 200)
- `createCell = (contributor) => {` (—Å—Ç—Ä–æ–∫–∞ 203)
- `headerCells = filteredContributors.slice(0, COLUMNS).map(createCell)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `rowContributors = filteredContributors.slice(i, i + COLUMNS)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `cells = rowContributors.map(createCell)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `startPos = readmeContent.indexOf(START_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `endPos = readmeContent.indexOf(END_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `beforeSection = readmeContent.substring(0, startPos).trimEnd()` (—Å—Ç—Ä–æ–∫–∞ 265)
- `afterSection = readmeContent.substring(endPos + END_MARKER.length).trimStart()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `updatedContent = beforeSection + "\n\n" + contributorsSection.trim() + "\n\n" + afterSection` (—Å—Ç—Ä–æ–∫–∞ 268)
- `readmeFiles = []` (—Å—Ç—Ä–æ–∫–∞ 290)
- `languageDirs = fs` (—Å—Ç—Ä–æ–∫–∞ 299)
- `readmePath = path.join(LOCALES_DIR, langDir, "README.md")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `readmeContent = await readFileAsync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 324)
- `startPos = readmeContent.indexOf(START_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `endPos = readmeContent.indexOf(END_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `beforeSection = readmeContent.substring(0, startPos).trimEnd()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `afterSection = readmeContent.substring(endPos + END_MARKER.length).trimStart()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `updatedContent = beforeSection + "\n\n" + contributorsSection.trim() + "\n\n" + afterSection` (—Å—Ç—Ä–æ–∫–∞ 340)
- `contributors = await fetchContributors()` (—Å—Ç—Ä–æ–∫–∞ 356)
- `contributorsSection = formatContributorsSection(contributors)` (—Å—Ç—Ä–æ–∫–∞ 360)
- `readmeContent = await readReadme()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `localizedReadmes = await findLocalizedReadmes()` (—Å—Ç—Ä–æ–∫–∞ 368)

#### üìÑ install-vsix.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `askQuestion()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async main()` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `readline = require("readline")` (—Å—Ç—Ä–æ–∫–∞ 3)
- `autoYes = process.argv.includes("-y")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `editorArg = process.argv.find((arg) => arg.startsWith("--editor="))` (—Å—Ç—Ä–æ–∫–∞ 9)
- `defaultEditor = editorArg ? editorArg.split("=")[1] : "code"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `askQuestion = (question) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `packageJson = JSON.parse(fs.readFileSync("./src/package.json", "utf-8"))` (—Å—Ç—Ä–æ–∫–∞ 27)
- `name = packageJson.name` (—Å—Ç—Ä–æ–∫–∞ 28)
- `version = packageJson.version` (—Å—Ç—Ä–æ–∫–∞ 29)
- `vsixFileName = `./bin/${name}-${version}.vsix`` (—Å—Ç—Ä–æ–∫–∞ 30)
- `publisher = packageJson.publisher` (—Å—Ç—Ä–æ–∫–∞ 31)
- `extensionId = `${publisher}.${name}`` (—Å—Ç—Ä–æ–∫–∞ 32)
- `editorAnswer = await askQuestion(` (—Å—Ç—Ä–æ–∫–∞ 45)
- `answer = autoYes ? "y" : await askQuestion("\nDo you wish to continue? (y/n): ")` (—Å—Ç—Ä–æ–∫–∞ 54)

#### üìÑ find-missing-translations.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `findKeys()` (—Å—Ç—Ä–æ–∫–∞ 75)
- `getValueAtPath()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `checkAreaTranslations()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `outputResults()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `findMissingTranslations()` (—Å—Ç—Ä–æ–∫–∞ 248)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `args = process.argv.slice(2).reduce(` (—Å—Ç—Ä–æ–∫–∞ 18)
- `LOCALES_DIRS = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `areasToCheck = args.area === "both" ? ["core", "webview"] : [args.area]` (—Å—Ç—Ä–æ–∫–∞ 72)
- `currentKey = parentKey ? `${parentKey}.${key}` : key` (—Å—Ç—Ä–æ–∫–∞ 79)
- `parts = path.split(".")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `LOCALES_DIR = LOCALES_DIRS[area]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `allLocales = fs.readdirSync(LOCALES_DIR).filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stats = fs.statSync(path.join(LOCALES_DIR, item))` (—Å—Ç—Ä–æ–∫–∞ 114)
- `locales = args.locale ? allLocales.filter((locale) => locale === args.locale) : allLocales` (—Å—Ç—Ä–æ–∫–∞ 119)
- `englishDir = path.join(LOCALES_DIR, "en")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `missingTranslations = {}` (—Å—Ç—Ä–æ–∫–∞ 161)
- `localeFilePath = path.join(LOCALES_DIR, locale, name)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `englishKeys = findKeys(englishContent)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `missingKeys = []` (—Å—Ç—Ä–æ–∫–∞ 190)
- `englishValue = getValueAtPath(englishContent, key)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `localeValue = getValueAtPath(localeContent, key)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ find-missing-i18n-key.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `getLocaleDirs()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `getValueByPath()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `checkKeyInLocales()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `findMissingI18nKeys()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `walk()` (—Å—Ç—Ä–æ–∫–∞ 117)
- `main()` (—Å—Ç—Ä–æ–∫–∞ 164)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 1)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `args = process.argv.slice(2).reduce((acc, arg) => {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `DIRS = {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `i18nPatterns = [` (—Å—Ç—Ä–æ–∫–∞ 50)
- `allLocales = fs.readdirSync(localesDir).filter((file) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `stats = fs.statSync(path.join(localesDir, file))` (—Å—Ç—Ä–æ–∫–∞ 60)
- `parts = path.split(".")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `jsonPath = pathParts.join(".")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `missingLocales = []` (—Å—Ç—Ä–æ–∫–∞ 95)
- `filePath = path.join(localesDir, locale, `${file}.json`)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `json = JSON.parse(fs.readFileSync(filePath, "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 104)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 115)
- `files = fs.readdirSync(dir)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `filePath = path.join(dir, file)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `stat = fs.statSync(filePath)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `content = fs.readFileSync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `key = match[1]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `missingLocales = checkKeyInLocales(key, localeDirs, localesDir)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `localeDirs = getLocaleDirs(config.localesDir)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `localeExists = Object.values(DIRS).some((config) => {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `localeDirs = getLocaleDirs(config.localesDir)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `missingKeys = findMissingI18nKeys()` (—Å—Ç—Ä–æ–∫–∞ 179)

#### üìÑ clear-modes-cache.js

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require('fs')` (—Å—Ç—Ä–æ–∫–∞ 8)
- `path = require('path')` (—Å—Ç—Ä–æ–∫–∞ 9)
- `pathsToClear = [` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ src/__mocks__

#### üìÑ vscode.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockEventEmitter()` (—Å—Ç—Ä–æ–∫–∞ 2)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockEventEmitter = () => ({` (—Å—Ç—Ä–æ–∫–∞ 2)
- `mockDisposable = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mockUri = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockRange = class {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockPosition = class {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockSelection = class extends mockRange {` (—Å—Ç—Ä–æ–∫–∞ 31)

### üìÇ packages/config-eslint

#### üìÑ react.js

#### üìÑ next.js

#### üìÑ base.js

### üìÇ build-src/scripts

#### üìÑ update-contributors.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `parseLinkHeader()` - Parses the GitHub API Link header to extract pagination URLs Based on RFC 5988 format for the Link header (—Å—Ç—Ä–æ–∫–∞ 46)
- `httpGet()` - Performs an HTTP GET request and returns the response (—Å—Ç—Ä–æ–∫–∞ 93)
- `async fetchContributorsPage()` - Fetches a single page of contributors from GitHub API (—Å—Ç—Ä–æ–∫–∞ 121)
- `async fetchContributors()` - Fetches all contributors data from GitHub API (handling pagination) (—Å—Ç—Ä–æ–∫–∞ 148)
- `async readReadme()` - Reads the README.md file (—Å—Ç—Ä–æ–∫–∞ 173)
- `formatContributorsSection()` (—Å—Ç—Ä–æ–∫–∞ 189)
- `createCell()` (—Å—Ç—Ä–æ–∫–∞ 203)
- `async updateReadme()` - Updates the README.md file with contributors section (—Å—Ç—Ä–æ–∫–∞ 253)
- `async writeReadme()` - Writes updated content to README.md (—Å—Ç—Ä–æ–∫–∞ 278)
- `async findLocalizedReadmes()` - Finds all localized README files in the locales directory (—Å—Ç—Ä–æ–∫–∞ 289)
- `async updateLocalizedReadme()` - Updates a localized README file with contributors section (—Å—Ç—Ä–æ–∫–∞ 321)
- `async main()` - Main function that orchestrates the update process (—Å—Ç—Ä–æ–∫–∞ 353)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `https = require("https")` (—Å—Ç—Ä–æ–∫–∞ 9)
- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 10)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 12)
- `readFileAsync = promisify(fs.readFile)` (—Å—Ç—Ä–æ–∫–∞ 15)
- `writeFileAsync = promisify(fs.writeFile)` (—Å—Ç—Ä–æ–∫–∞ 16)
- `GITHUB_API_URL = "https://api.github.com/repos/RooCodeInc/Roo-Code/contributors?per_page=100"` (—Å—Ç—Ä–æ–∫–∞ 19)
- `README_PATH = path.join(__dirname, "..", "README.md")` (—Å—Ç—Ä–æ–∫–∞ 20)
- `LOCALES_DIR = path.join(__dirname, "..", "locales")` (—Å—Ç—Ä–æ–∫–∞ 21)
- `START_MARKER = "<!-- START CONTRIBUTORS SECTION - AUTO-GENERATED, DO NOT EDIT MANUALLY -->"` (—Å—Ç—Ä–æ–∫–∞ 24)
- `END_MARKER = "<!-- END CONTRIBUTORS SECTION -->"` (—Å—Ç—Ä–æ–∫–∞ 25)
- `options = {` (—Å—Ç—Ä–æ–∫–∞ 28)
- `links = {}` (—Å—Ç—Ä–æ–∫–∞ 51)
- `entries = header.split(/,\s*/)` (—Å—Ç—Ä–æ–∫–∞ 55)
- `segments = entry.split("` (—Å—Ç—Ä–æ–∫–∞ 60)
- `urlMatch = segments[0].match(/<(.+)>/)` (—Å—Ç—Ä–æ–∫–∞ 64)
- `url = urlMatch[1]` (—Å—Ç—Ä–æ–∫–∞ 66)
- `relMatch = segments[i].match(/\s*rel\s*=\s*"?([^"]+)"?/)` (—Å—Ç—Ä–æ–∫–∞ 71)
- `response = await httpGet(url, options)` (—Å—Ç—Ä–æ–∫–∞ 124)
- `linkHeader = response.headers.link` (—Å—Ç—Ä–æ–∫–∞ 132)
- `links = parseLinkHeader(linkHeader)` (—Å—Ç—Ä–æ–∫–∞ 133)
- `contributors = JSON.parse(response.body)` (—Å—Ç—Ä–æ–∫–∞ 136)
- `EXCLUDED_LOGIN_SUBSTRINGS = ['[bot]', 'R00-B0T']` - Creates HTML for the contributors section (—Å—Ç—Ä–æ–∫–∞ 186)
- `EXCLUDED_LOGIN_EXACTS = ['cursor', 'roomote']` (—Å—Ç—Ä–æ–∫–∞ 187)
- `filteredContributors = contributors.filter((c) =>` (—Å—Ç—Ä–æ–∫–∞ 191)
- `COLUMNS = 6` (—Å—Ç—Ä–æ–∫–∞ 200)
- `createCell = (contributor) => {` (—Å—Ç—Ä–æ–∫–∞ 203)
- `headerCells = filteredContributors.slice(0, COLUMNS).map(createCell)` (—Å—Ç—Ä–æ–∫–∞ 209)
- `rowContributors = filteredContributors.slice(i, i + COLUMNS)` (—Å—Ç—Ä–æ–∫–∞ 228)
- `cells = rowContributors.map(createCell)` (—Å—Ç—Ä–æ–∫–∞ 231)
- `startPos = readmeContent.indexOf(START_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 255)
- `endPos = readmeContent.indexOf(END_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 256)
- `beforeSection = readmeContent.substring(0, startPos).trimEnd()` (—Å—Ç—Ä–æ–∫–∞ 265)
- `afterSection = readmeContent.substring(endPos + END_MARKER.length).trimStart()` (—Å—Ç—Ä–æ–∫–∞ 266)
- `updatedContent = beforeSection + "\n\n" + contributorsSection.trim() + "\n\n" + afterSection` (—Å—Ç—Ä–æ–∫–∞ 268)
- `readmeFiles = []` (—Å—Ç—Ä–æ–∫–∞ 290)
- `languageDirs = fs` (—Å—Ç—Ä–æ–∫–∞ 299)
- `readmePath = path.join(LOCALES_DIR, langDir, "README.md")` (—Å—Ç—Ä–æ–∫–∞ 306)
- `readmeContent = await readFileAsync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 324)
- `startPos = readmeContent.indexOf(START_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 327)
- `endPos = readmeContent.indexOf(END_MARKER)` (—Å—Ç—Ä–æ–∫–∞ 328)
- `beforeSection = readmeContent.substring(0, startPos).trimEnd()` (—Å—Ç—Ä–æ–∫–∞ 337)
- `afterSection = readmeContent.substring(endPos + END_MARKER.length).trimStart()` (—Å—Ç—Ä–æ–∫–∞ 338)
- `updatedContent = beforeSection + "\n\n" + contributorsSection.trim() + "\n\n" + afterSection` (—Å—Ç—Ä–æ–∫–∞ 340)
- `contributors = await fetchContributors()` (—Å—Ç—Ä–æ–∫–∞ 356)
- `contributorsSection = formatContributorsSection(contributors)` (—Å—Ç—Ä–æ–∫–∞ 360)
- `readmeContent = await readReadme()` (—Å—Ç—Ä–æ–∫–∞ 363)
- `localizedReadmes = await findLocalizedReadmes()` (—Å—Ç—Ä–æ–∫–∞ 368)

#### üìÑ install-vsix.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `askQuestion()` (—Å—Ç—Ä–æ–∫–∞ 17)
- `async main()` (—Å—Ç—Ä–æ–∫–∞ 25)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `readline = require("readline")` (—Å—Ç—Ä–æ–∫–∞ 3)
- `autoYes = process.argv.includes("-y")` (—Å—Ç—Ä–æ–∫–∞ 6)
- `editorArg = process.argv.find((arg) => arg.startsWith("--editor="))` (—Å—Ç—Ä–æ–∫–∞ 9)
- `defaultEditor = editorArg ? editorArg.split("=")[1] : "code"` (—Å—Ç—Ä–æ–∫–∞ 10)
- `rl = readline.createInterface({` (—Å—Ç—Ä–æ–∫–∞ 12)
- `askQuestion = (question) => {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `packageJson = JSON.parse(fs.readFileSync("./src/package.json", "utf-8"))` (—Å—Ç—Ä–æ–∫–∞ 27)
- `name = packageJson.name` (—Å—Ç—Ä–æ–∫–∞ 28)
- `version = packageJson.version` (—Å—Ç—Ä–æ–∫–∞ 29)
- `vsixFileName = `./bin/${name}-${version}.vsix`` (—Å—Ç—Ä–æ–∫–∞ 30)
- `publisher = packageJson.publisher` (—Å—Ç—Ä–æ–∫–∞ 31)
- `extensionId = `${publisher}.${name}`` (—Å—Ç—Ä–æ–∫–∞ 32)
- `editorAnswer = await askQuestion(` (—Å—Ç—Ä–æ–∫–∞ 45)
- `answer = autoYes ? "y" : await askQuestion("\nDo you wish to continue? (y/n): ")` (—Å—Ç—Ä–æ–∫–∞ 54)

#### üìÑ find-missing-translations.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `findKeys()` (—Å—Ç—Ä–æ–∫–∞ 75)
- `getValueAtPath()` (—Å—Ç—Ä–æ–∫–∞ 94)
- `checkAreaTranslations()` (—Å—Ç—Ä–æ–∫–∞ 109)
- `outputResults()` (—Å—Ç—Ä–æ–∫–∞ 214)
- `findMissingTranslations()` (—Å—Ç—Ä–æ–∫–∞ 248)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 14)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 15)
- `args = process.argv.slice(2).reduce(` (—Å—Ç—Ä–æ–∫–∞ 18)
- `LOCALES_DIRS = {` (—Å—Ç—Ä–æ–∫–∞ 66)
- `areasToCheck = args.area === "both" ? ["core", "webview"] : [args.area]` (—Å—Ç—Ä–æ–∫–∞ 72)
- `currentKey = parentKey ? `${parentKey}.${key}` : key` (—Å—Ç—Ä–æ–∫–∞ 79)
- `parts = path.split(".")` (—Å—Ç—Ä–æ–∫–∞ 95)
- `LOCALES_DIR = LOCALES_DIRS[area]` (—Å—Ç—Ä–æ–∫–∞ 110)
- `allLocales = fs.readdirSync(LOCALES_DIR).filter((item) => {` (—Å—Ç—Ä–æ–∫–∞ 113)
- `stats = fs.statSync(path.join(LOCALES_DIR, item))` (—Å—Ç—Ä–æ–∫–∞ 114)
- `locales = args.locale ? allLocales.filter((locale) => locale === args.locale) : allLocales` (—Å—Ç—Ä–æ–∫–∞ 119)
- `englishDir = path.join(LOCALES_DIR, "en")` (—Å—Ç—Ä–æ–∫–∞ 131)
- `missingTranslations = {}` (—Å—Ç—Ä–æ–∫–∞ 161)
- `localeFilePath = path.join(LOCALES_DIR, locale, name)` (—Å—Ç—Ä–æ–∫–∞ 168)
- `englishKeys = findKeys(englishContent)` (—Å—Ç—Ä–æ–∫–∞ 187)
- `missingKeys = []` (—Å—Ç—Ä–æ–∫–∞ 190)
- `englishValue = getValueAtPath(englishContent, key)` (—Å—Ç—Ä–æ–∫–∞ 193)
- `localeValue = getValueAtPath(localeContent, key)` (—Å—Ç—Ä–æ–∫–∞ 194)

#### üìÑ find-missing-i18n-key.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `getLocaleDirs()` (—Å—Ç—Ä–æ–∫–∞ 57)
- `getValueByPath()` (—Å—Ç—Ä–æ–∫–∞ 76)
- `checkKeyInLocales()` (—Å—Ç—Ä–æ–∫–∞ 91)
- `findMissingI18nKeys()` (—Å—Ç—Ä–æ–∫–∞ 114)
- `walk()` (—Å—Ç—Ä–æ–∫–∞ 117)
- `main()` (—Å—Ç—Ä–æ–∫–∞ 164)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require("fs")` (—Å—Ç—Ä–æ–∫–∞ 1)
- `path = require("path")` (—Å—Ç—Ä–æ–∫–∞ 2)
- `args = process.argv.slice(2).reduce((acc, arg) => {` (—Å—Ç—Ä–æ–∫–∞ 5)
- `DIRS = {` (—Å—Ç—Ä–æ–∫–∞ 38)
- `i18nPatterns = [` (—Å—Ç—Ä–æ–∫–∞ 50)
- `allLocales = fs.readdirSync(localesDir).filter((file) => {` (—Å—Ç—Ä–æ–∫–∞ 59)
- `stats = fs.statSync(path.join(localesDir, file))` (—Å—Ç—Ä–æ–∫–∞ 60)
- `parts = path.split(".")` (—Å—Ç—Ä–æ–∫–∞ 77)
- `jsonPath = pathParts.join(".")` (—Å—Ç—Ä–æ–∫–∞ 93)
- `missingLocales = []` (—Å—Ç—Ä–æ–∫–∞ 95)
- `filePath = path.join(localesDir, locale, `${file}.json`)` (—Å—Ç—Ä–æ–∫–∞ 98)
- `json = JSON.parse(fs.readFileSync(filePath, "utf8"))` (—Å—Ç—Ä–æ–∫–∞ 104)
- `results = []` (—Å—Ç—Ä–æ–∫–∞ 115)
- `files = fs.readdirSync(dir)` (—Å—Ç—Ä–æ–∫–∞ 118)
- `filePath = path.join(dir, file)` (—Å—Ç—Ä–æ–∫–∞ 121)
- `stat = fs.statSync(filePath)` (—Å—Ç—Ä–æ–∫–∞ 122)
- `content = fs.readFileSync(filePath, "utf8")` (—Å—Ç—Ä–æ–∫–∞ 130)
- `key = match[1]` (—Å—Ç—Ä–æ–∫–∞ 136)
- `missingLocales = checkKeyInLocales(key, localeDirs, localesDir)` (—Å—Ç—Ä–æ–∫–∞ 137)
- `localeDirs = getLocaleDirs(config.localesDir)` (—Å—Ç—Ä–æ–∫–∞ 153)
- `localeExists = Object.values(DIRS).some((config) => {` (—Å—Ç—Ä–æ–∫–∞ 168)
- `localeDirs = getLocaleDirs(config.localesDir)` (—Å—Ç—Ä–æ–∫–∞ 169)
- `missingKeys = findMissingI18nKeys()` (—Å—Ç—Ä–æ–∫–∞ 179)

#### üìÑ clear-modes-cache.js

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `fs = require('fs')` (—Å—Ç—Ä–æ–∫–∞ 8)
- `path = require('path')` (—Å—Ç—Ä–æ–∫–∞ 9)
- `pathsToClear = [` (—Å—Ç—Ä–æ–∫–∞ 14)

### üìÇ build-src/src/__mocks__

#### üìÑ vscode.js

**–§—É–Ω–∫—Ü–∏–∏:**

- `mockEventEmitter()` (—Å—Ç—Ä–æ–∫–∞ 2)

**–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:**

- `mockEventEmitter = () => ({` (—Å—Ç—Ä–æ–∫–∞ 2)
- `mockDisposable = {` (—Å—Ç—Ä–æ–∫–∞ 8)
- `mockUri = {` (—Å—Ç—Ä–æ–∫–∞ 12)
- `mockRange = class {` (—Å—Ç—Ä–æ–∫–∞ 17)
- `mockPosition = class {` (—Å—Ç—Ä–æ–∫–∞ 24)
- `mockSelection = class extends mockRange {` (—Å—Ç—Ä–æ–∫–∞ 31)

### üìÇ build-src/packages/config-eslint

#### üìÑ react.js

#### üìÑ next.js

#### üìÑ base.js

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:** 2412
- **–§—É–Ω–∫—Ü–∏–π:** 1475 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–ö–ª–∞—Å—Å–æ–≤:** 26 (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 0)
- **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:** 338
- **–¢–∏–ø–æ–≤:** 311
- **–ö–æ–Ω—Å—Ç–∞–Ω—Ç:** 26222

## üîó –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã

---
*–ö–∞—Ä—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: 2025-08-07T01:04:58.412Z*
