import * as path from "path"
import * as vscode from "vscode"

import { GlobalFileNames } from "../../../shared/globalFileNames"

export async function createModeInstructions(context: vscode.ExtensionContext | undefined): Promise<string> {
	if (!context) throw new Error("Missing VSCode Extension Context")

	const settingsDir = path.join(context.globalStorageUri.fsPath, "settings")
	const customModesPath = path.join(settingsDir, GlobalFileNames.customModes)

	return `
Пользовательские режимы можно настроить двумя способами:
  1. Глобально через '${customModesPath}' (создается автоматически при запуске)
  2. Для рабочего пространства через '.researcherry/.researcherry-modes' в корневой директории рабочего пространства

Когда режимы с одинаковым slug существуют в обоих файлах, версия .researcherry-modes для рабочего пространства имеет приоритет. Это позволяет проектам переопределять глобальные режимы или определять режимы, специфичные для проекта.


Если вас просят создать режим проекта, создайте его в .researcherry/.researcherry-modes в корне рабочего пространства. Если вас просят создать глобальный режим, используйте глобальный файл пользовательских режимов.

- Следующие поля обязательны и не должны быть пустыми:
  * slug: Действительный slug (строчные буквы, цифры и дефисы). Должен быть уникальным, и чем короче, тем лучше.
  * name: Отображаемое имя для режима
  * roleDefinition: Подробное описание роли и возможностей режима
  * groups: Массив разрешенных групп инструментов (может быть пустым). Каждая группа может быть указана либо как строка (например, "edit" для разрешения редактирования любого файла), либо с ограничениями файлов (например, ["edit", { fileRegex: "\\.md$", description: "Только файлы Markdown" }] для разрешения редактирования только файлов markdown)

- Следующие поля необязательны, но настоятельно рекомендуются:
  * description: Краткое, понятное человеку описание того, что делает этот режим (5 слов)
  * whenToUse: Четкое описание того, когда следует выбирать этот режим и для каких типов задач он лучше всего подходит. Это помогает режиму Orchestrator принимать лучшие решения.
  * customInstructions: Дополнительные инструкции для того, как должен работать режим

- Для многострочного текста включайте символы новой строки в строку, как "Это первая строка.\\nЭто следующая строка.\\n\\nЭто двойной разрыв строки."

Оба файла должны следовать этой структуре (в формате YAML):

customModes:
  - slug: designer  # Обязательно: уникальный slug со строчными буквами, цифрами и дефисами
    name: Designer  # Обязательно: отображаемое имя режима
    description: Эксперт по системам дизайна UI/UX  # Необязательно, но рекомендуется: краткое описание (5 слов)
    roleDefinition: >-
      Вы - Roo, эксперт по UI/UX, специализирующийся на системах дизайна и фронтенд-разработке. Ваша экспертиза включает:
      - Создание и поддержка систем дизайна
      - Реализация адаптивных и доступных веб-интерфейсов
      - Работа с CSS, HTML и современными фронтенд-фреймворками
      - Обеспечение согласованного пользовательского опыта на всех платформах  # Обязательно: не пустое
    whenToUse: >-
      Используйте этот режим при создании или изменении UI компонентов, реализации систем дизайна,
      или обеспечении адаптивных веб-интерфейсов. Этот режим особенно эффективен с CSS,
      HTML и современными фронтенд-фреймворками.  # Необязательно, но рекомендуется
    groups:  # Обязательно: массив групп инструментов (может быть пустым)
      - read     # Группа чтения файлов (read_file, fetch_instructions, search_files, list_files, list_code_definition_names)
      - edit     # Группа редактирования файлов (apply_diff, write_to_file) - разрешает редактирование любого файла
      # Или с ограничениями файлов:
      # - - edit
      #   - fileRegex: \\.md$
      #     description: Только файлы Markdown  # Группа редактирования, которая разрешает редактирование только файлов markdown
      - browser  # Группа браузера (browser_action)
      - command  # Группа команд (execute_command)
      - mcp      # Группа MCP (use_mcp_tool, access_mcp_resource)
    customInstructions: Дополнительные инструкции для режима Designer  # Необязательно`
}
