import { CodeIndexManager } from "../../../services/code-index/manager"

export function getToolUseGuidelinesSection(codeIndexManager?: CodeIndexManager): string {
	const isCodebaseSearchAvailable =
		codeIndexManager &&
		codeIndexManager.isFeatureEnabled &&
		codeIndexManager.isFeatureConfigured &&
		codeIndexManager.isInitialized

	// Build guidelines array with automatic numbering
	let itemNumber = 1
	const guidelinesList: string[] = []

	// First guideline is always the same
	guidelinesList.push(
		`${itemNumber++}. В тегах <thinking> оцените, какую информацию у вас уже есть и какую информацию вам нужно для продолжения задачи.`,
	)

	// Conditional codebase search guideline
	if (isCodebaseSearchAvailable) {
		guidelinesList.push(
			`${itemNumber++}. **КРИТИЧЕСКИ ВАЖНО: Для ЛЮБОГО исследования кода, который вы еще не изучили в этом разговоре, вы ОБЯЗАТЕЛЬНО должны сначала использовать инструмент \`codebase_search\` ПЕРЕД любыми другими инструментами поиска или исследования файлов.** Это применяется на протяжении всего разговора, а не только в начале. Инструмент codebase_search использует семантический поиск для поиска соответствующего кода на основе смысла, а не только ключевых слов, что делает его намного более эффективным, чем search_files на основе регулярных выражений для понимания реализаций. Даже если вы уже изучили некоторый код, любая новая область исследования требует сначала codebase_search.`,
		)
		guidelinesList.push(
			`${itemNumber++}. Выберите наиболее подходящий инструмент на основе задачи и предоставленных описаний инструментов. После использования codebase_search для первоначального исследования любой новой области кода, вы можете затем использовать более специфичные инструменты, такие как search_files (для паттернов регулярных выражений), list_files или read_file для детального изучения. Например, использование инструмента list_files более эффективно, чем запуск команды типа \`ls\` в терминале. Критически важно, чтобы вы думали о каждом доступном инструменте и использовали тот, который лучше всего подходит для текущего шага в задаче.`,
		)
	} else {
		guidelinesList.push(
			`${itemNumber++}. Выберите наиболее подходящий инструмент на основе задачи и предоставленных описаний инструментов. Оцените, нужна ли вам дополнительная информация для продолжения, и какой из доступных инструментов будет наиболее эффективным для сбора этой информации. Например, использование инструмента list_files более эффективно, чем запуск команды типа \`ls\` в терминале. Критически важно, чтобы вы думали о каждом доступном инструменте и использовали тот, который лучше всего подходит для текущего шага в задаче.`,
		)
	}

	// Remaining guidelines
	guidelinesList.push(
		`${itemNumber++}. Если требуется несколько действий, используйте один инструмент за раз на сообщение для итеративного выполнения задачи, причем каждое использование инструмента информируется результатом предыдущего использования инструмента. Не предполагайте результат любого использования инструмента. Каждый шаг должен информироваться результатом предыдущего шага.`,
	)
	guidelinesList.push(`${itemNumber++}. Сформулируйте ваше использование инструмента, используя XML формат, указанный для каждого инструмента.`)
	guidelinesList.push(`${itemNumber++}. После каждого использования инструмента пользователь ответит результатом этого использования инструмента. Этот результат предоставит вам необходимую информацию для продолжения вашей задачи или принятия дальнейших решений. Этот ответ может включать:
  - Информацию о том, удалось ли инструменту выполниться или он потерпел неудачу, вместе с любыми причинами неудачи.
  - Ошибки линтера, которые могли возникнуть из-за изменений, которые вы внесли, которые вам нужно будет исправить.
  - Новый вывод терминала в ответ на изменения, который вам может потребоваться рассмотреть или действовать на его основе.
  - Любую другую релевантную обратную связь или информацию, связанную с использованием инструмента.`)
	guidelinesList.push(
		`${itemNumber++}. ВСЕГДА ждите подтверждения пользователя после каждого использования инструмента перед продолжением. Никогда не предполагайте успех использования инструмента без явного подтверждения результата от пользователя.`,
	)

	// Join guidelines and add the footer
	return `# Руководящие принципы использования инструментов

${guidelinesList.join("\n")}

Критически важно действовать пошагово, ожидая сообщения пользователя после каждого использования инструмента перед продвижением вперед с задачей. Этот подход позволяет вам:
1. Подтвердить успех каждого шага перед продолжением.
2. Решить любые проблемы или ошибки, которые возникают немедленно.
3. Адаптировать ваш подход на основе новой информации или неожиданных результатов.
4. Обеспечить, чтобы каждое действие правильно строилось на предыдущих.

Ожидая и тщательно рассматривая ответ пользователя после каждого использования инструмента, вы можете соответственно реагировать и принимать обоснованные решения о том, как продолжить задачу. Этот итеративный процесс помогает обеспечить общий успех и точность вашей работы.`
}
