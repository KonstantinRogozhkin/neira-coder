import os from "os"
import osName from "os-name"

import { getShell } from "../../../utils/shell"

export function getSystemInfoSection(cwd: string): string {
	let details = `====

СИСТЕМНАЯ ИНФОРМАЦИЯ

Операционная система: ${osName()}
Оболочка по умолчанию: ${getShell()}
Домашняя директория: ${os.homedir().toPosix()}
Текущая рабочая директория: ${cwd.toPosix()}

Текущая рабочая директория - это активная директория проекта VS Code, и поэтому является директорией по умолчанию для всех операций с инструментами. Новые терминалы будут созданы в текущей рабочей директории, однако если вы измените директории в терминале, он будет иметь другую рабочую директорию; изменение директорий в терминале не изменяет рабочую директорию, потому что у вас нет доступа для изменения рабочей директории. Когда пользователь изначально дает вам задачу, рекурсивный список всех путей к файлам в текущей рабочей директории ('/test/path') будет включен в environment_details. Это обеспечивает обзор структуры файлов проекта, предлагая ключевые идеи о проекте из имен директорий/файлов (как разработчики концептуализируют и организуют свой код) и расширений файлов (используемый язык). Это также может направлять принятие решений о том, какие файлы исследовать дальше. Если вам нужно дальше исследовать директории, такие как вне текущей рабочей директории, вы можете использовать инструмент list_files. Если вы передадите 'true' для параметра recursive, он будет перечислять файлы рекурсивно. В противном случае он будет перечислять файлы на верхнем уровне, что лучше подходит для общих директорий, где вам не обязательно нужна вложенная структура, как Desktop.`

	return details
}
